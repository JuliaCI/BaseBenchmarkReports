cset: moving following pidspec: 24894
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.264622776 seconds)
loading group "string"... done (took 0.639719227 seconds)
loading group "linalg"... done (took 8.270694664 seconds)
loading group "parallel"... done (took 0.16927169 seconds)
loading group "find"... done (took 1.337349357 seconds)
loading group "tuple"... done (took 1.989555716 seconds)
loading group "dates"... done (took 1.35615562 seconds)
loading group "micro"... done (took 0.204071115 seconds)
loading group "io"... done (took 0.948162382 seconds)
loading group "scalar"... done (took 40.267597345 seconds)
loading group "sparse"... done (took 11.947556549 seconds)
loading group "broadcast"... done (took 1.034495659 seconds)
loading group "union"... done (took 13.794414309 seconds)
loading group "simd"... done (took 4.761739173 seconds)
loading group "random"... done (took 9.311106126 seconds)
loading group "problem"... done (took 1.592140522 seconds)
loading group "array"... done (took 21.447348906 seconds)
loading group "misc"... done (took 1.67199732 seconds)
loading group "sort"... done (took 3.439328211 seconds)
loading group "collection"... done (took 18.231176299 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.54539624 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130224875 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140321438 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123843072 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.154191876 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119609236 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.129203273 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086564786 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.877127796 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.15546379 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116922531 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.443317962 seconds)
done (took 5.41100724 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174133495 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090649329 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081536649 seconds)
  done (took 1.218621858 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068259432 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128580961 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068875678 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069277169 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069240987 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068862476 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068980919 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068440638 seconds)
  done (took 1.588972785 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074119712 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071600748 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068550921 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070827351 seconds)
  done (took 1.332461309 seconds)
done (took 5.436926554 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.806972848 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.21449837 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191042704 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.408911227 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.138941414 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.184041251 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.656424431 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.313875759 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.205612514 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098556765 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.116021945 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.367990334 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127796138 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.649269495 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081767214 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.099966951 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.143951378 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.433475996 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.074034695 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.090461766 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.095466742 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133699341 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.093621077 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.080015417 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.152952895 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071119611 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.145314164 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.087073462 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069303183 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.227210788 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177767061 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.659855576 seconds)
  done (took 10.482512116 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102304488 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.101389494 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071474551 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.128784241 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099069465 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073240139 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078114473 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070411765 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093599604 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.130276065 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092200558 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109178716 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067279459 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072267111 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086167363 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.200684558 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080773956 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082696786 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069022555 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079760704 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.109781864 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080970449 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080180971 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080763998 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.13018669 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.173765061 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097306414 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098532326 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070093939 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.085062616 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117043745 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.135092204 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066671716 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068227913 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128955565 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096220885 seconds)
  done (took 4.592995851 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.116379895 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.158060694 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093496813 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144105896 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093251037 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067438872 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.115977566 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068540819 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085967095 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.243150751 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.403265267 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.097868956 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.642337345 seconds)
    (13/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.125559103 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12094159 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108278616 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073864826 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072311897 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070497205 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.279918945 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.101280887 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.115084608 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085536381 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077721667 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071409326 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066524324 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073585169 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065024982 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070245484 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.089641262 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077546991 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065166745 seconds)
    (32/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.332125679 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.128689463 seconds)
    (34/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070447885 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.841054481 seconds)
    (36/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.166766173 seconds)
    (37/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069539431 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108447009 seconds)
    (39/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16904234 seconds)
    (40/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.230217992 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.151271554 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072557923 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067831568 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.167453638 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067814478 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074515395 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069550673 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088370507 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112463791 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124758618 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067951706 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068885521 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.173964723 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06877 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084243797 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.262262097 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152702541 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068974277 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.302327562 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09771478 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075089358 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068010531 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.199374828 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.11827539 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071155434 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070090049 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071606801 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071149951 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.383467268 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06872739 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.915197188 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071494288 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07980847 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073102162 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074201562 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082131683 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081824203 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.095264188 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069670648 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076731958 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069286941 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068473166 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070312842 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.096442861 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.397208947 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068754208 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.076559846 seconds)
    (88/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065606877 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066296956 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095516358 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101214399 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069511483 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067948509 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.205353193 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074147279 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070275029 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071791924 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.124760036 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.074231193 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116351799 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070975774 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.07028156 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.102059914 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073724682 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104504257 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081157614 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074232988 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.472265559 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067544539 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.074974306 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069017736 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070941772 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069388183 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081803412 seconds)
  done (took 22.092673677 seconds)
done (took 39.331850225 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.246111671 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086590671 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085908439 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.087122146 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086442712 seconds)
  done (took 1.729047145 seconds)
done (took 2.848955026 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.129062679 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105477436 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066750076 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100874897 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066719006 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103737198 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106374018 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.086406715 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103160152 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066764373 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100439107 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067043067 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067598061 seconds)
  done (took 2.306195669 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083925578 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085501732 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07146001 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084799539 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06457517 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083786781 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08300652 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090677002 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083111836 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074531006 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064733162 seconds)
  done (took 1.98233577 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08337642 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086103289 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071529279 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083875733 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064878361 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084103419 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083456628 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.0876906 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083677325 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075890967 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064844632 seconds)
  done (took 1.978411216 seconds)
done (took 7.374385472 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079616956 seconds)
  done (took 1.180007622 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.541321195 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.595486956 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079830802 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.103122395 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.198490382 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.112178709 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.240685711 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085466963 seconds)
  done (took 8.23179649 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.109316943 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071235645 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071477851 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072140231 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072460528 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072357437 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071459224 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072844842 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073396803 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071495118 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071003682 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071414781 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072177834 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070877032 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071961729 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073125792 seconds)
  done (took 2.375385573 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099168516 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09860845 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076336034 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077225232 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07538938 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074463734 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076858551 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076424731 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073596381 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075070523 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078227671 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07608711 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075599293 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066310353 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076760115 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079158143 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07393517 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07638131 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077869833 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077971566 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077899009 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066124625 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075584865 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077118504 seconds)
  done (took 3.070542197 seconds)
done (took 15.968110776 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.118032409 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081159718 seconds)
  done (took 1.305322613 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080174943 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082397187 seconds)
  done (took 1.277892442 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.078676693 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064846249 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.086485327 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077245346 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065450822 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065292302 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086199737 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066287646 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065940447 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066539436 seconds)
  done (took 1.83935605 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065282061 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07616285 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071823649 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081845266 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072971349 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066533748 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072180573 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067970102 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076562644 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065348052 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071094899 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085475446 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070282285 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08752649 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071062515 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070525274 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072315089 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069004218 seconds)
  done (took 2.433214986 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06319921 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065671537 seconds)
  done (took 1.250801231 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066835282 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065409905 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068459748 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068574385 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065330134 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06461015 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065231434 seconds)
  done (took 1.582342596 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.405637145 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.126391313 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.329396955 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072645594 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083108892 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257112674 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066489556 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07196861 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071660759 seconds)
  done (took 2.647570926 seconds)
done (took 13.459406169 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081894533 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088808155 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100731104 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.42273107 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.096159339 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069974479 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115651793 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184680986 seconds)
done (took 2.292810678 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211074703 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.83627887 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.481652233 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.214727131 seconds)
  done (took 2.658687532 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.351323719 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.083652486 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.079463463 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06927599 seconds)
  done (took 1.717904238 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067654362 seconds)
    (2/2) benchmarking "read"...
    done (took 0.187244583 seconds)
  done (took 1.387714568 seconds)
done (took 7.108430888 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065117705 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.091750857 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066330932 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.0668176 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.067410123 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066274025 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.066540643 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066634505 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066370313 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066782404 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.066766809 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066418613 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066516028 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067184389 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066695493 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066308587 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066604719 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066709428 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066862507 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066781566 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066500235 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066682965 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066350467 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066853825 seconds)
  done (took 2.789031047 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081619179 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068483661 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071253078 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070886509 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071676889 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070528727 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071094711 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069130766 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071229556 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069008229 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071243862 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07157711 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068595057 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071210783 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068649431 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071572511 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071321841 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069176658 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068454172 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071692622 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070771911 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069613617 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070971471 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071560404 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071379807 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07112153 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068287574 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069519308 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070445197 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070954046 seconds)
  done (took 3.264517492 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065783435 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06219757 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063364223 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072574288 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062646458 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063843789 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062522553 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063647043 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063646712 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062682447 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06501217 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062897186 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062979545 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06376798 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063498804 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067279122 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081347551 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063695294 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06287961 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064085562 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067112857 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062870511 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063036527 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062848033 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063066184 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063057961 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06650977 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062623929 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063374712 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062861993 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066717044 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067152605 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062907755 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.067838168 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067715782 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062551242 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06694851 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062451658 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063535604 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062293558 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062715162 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062665028 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062765954 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072337476 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063131205 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064520222 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063152514 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063675038 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063496757 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064947625 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062456292 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062621959 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064833471 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063750238 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067891681 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062666423 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063572837 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062518043 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06412928 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062710191 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062909854 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062588305 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06594281 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063398503 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080690477 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071750007 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062925478 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064435345 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063714476 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065840957 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064527407 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078373922 seconds)
  done (took 5.819122811 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085505744 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090210615 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068536814 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068331279 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063733995 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06368594 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071982541 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063991693 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068817767 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083711172 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064434898 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068452685 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068665006 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068219072 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063867266 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068493023 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073258038 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063907266 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06381579 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068135724 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063991861 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072400288 seconds)
  done (took 2.692492111 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151429782 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069994563 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108536213 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075831508 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073152445 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075039364 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069812923 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069922311 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070279003 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070835497 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070542946 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070320972 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072230981 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070154125 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070071099 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070418542 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069798316 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070469505 seconds)
  done (took 2.544992291 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079182034 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069745412 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088881022 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069306306 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068839723 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068395957 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073266391 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074359434 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069100352 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069500197 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07408822 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06866678 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069233528 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069461177 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069149636 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069648756 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068908974 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069665263 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074464957 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073238919 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073255378 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074103281 seconds)
  done (took 2.732620848 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079175335 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06778151 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084384647 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071350088 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064383957 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06373861 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.07954817 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06849118 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.06966161 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069138758 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068513155 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063880382 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070954821 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068587237 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071320402 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068931168 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067713822 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068445726 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067880509 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064199498 seconds)
  done (took 2.548216593 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084481033 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066905672 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06724476 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074068705 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066477997 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066886795 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073403307 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067161372 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067161319 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088089903 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067530395 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067122739 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073673033 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071063378 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066692044 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073473609 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073861577 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073234547 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069906408 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066842043 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088213714 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066981553 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073654883 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066838698 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066843439 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066720516 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067142318 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070841357 seconds)
  done (took 3.143712403 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065707814 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065288092 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06717832 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067029021 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06616942 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066522832 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067137751 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066208082 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065951752 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066845826 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066281778 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066349356 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066159057 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066290441 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066756886 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066200403 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066400257 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066817623 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06651787 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066662726 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066131954 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066274805 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065936284 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066449881 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066659372 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.0661031 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066067834 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066442087 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065950759 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066829317 seconds)
  done (took 3.146352357 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07608792 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075445165 seconds)
  done (took 1.306024389 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06380742 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081694475 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063120126 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074170348 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072814144 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066835288 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073968469 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072801202 seconds)
  done (took 1.719089962 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08606562 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077753033 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066910824 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078692905 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077042725 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086476676 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129078971 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065886451 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076079728 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067087758 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08434449 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068380423 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075976535 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070933978 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076057071 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079823774 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063647746 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071492446 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.066694393 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063918771 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066732442 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079622138 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075566979 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063766212 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070918075 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094005306 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082288681 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065240461 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072654589 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078145681 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075776864 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062593053 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065239976 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065943651 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063691184 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076775254 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084578556 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072315627 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078481355 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066253582 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074429551 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063039102 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074447226 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076436057 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081041055 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065983123 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06633626 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063269547 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066431496 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072013307 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063311777 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070094478 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063092261 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077727345 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07327289 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081011017 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064394862 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071396787 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072192485 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072957821 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077019166 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071668265 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075200815 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064870792 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082109133 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075206797 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077874106 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063268195 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062576236 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063247913 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079906814 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094673754 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07508496 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065780471 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066698035 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063120682 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072752223 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0661159 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074979758 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076847456 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065126576 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070096355 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077856232 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069787329 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071666554 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07170587 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063562655 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068848855 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066540784 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086040174 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064098576 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06328964 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066321846 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080672377 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072262439 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067815723 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066201591 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077216307 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062258551 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065306195 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06579419 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071091388 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07806511 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068720114 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069077422 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077878845 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073528922 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069609566 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070744293 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062072165 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064514928 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066558016 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075554122 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061103548 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071137014 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068552737 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064341073 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076140297 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062505064 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063918691 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076781496 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076282088 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062821074 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061351059 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071459931 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064142176 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066462188 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.202540945 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065953314 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064560299 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.064917431 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075112387 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066209106 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074247745 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071048785 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073208739 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063301821 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064649559 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07065011 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078067857 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068783653 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072204898 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075848535 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071466492 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065338113 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.079925607 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07270916 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068014668 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075951839 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.07035676 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063587251 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068056601 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072398105 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06473193 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07303427 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06835763 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072110283 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065882357 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064626923 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072274365 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066002973 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06776803 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070773896 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06441132 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081134881 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072275576 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063631476 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063128621 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.073008804 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067069517 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065217338 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067708316 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072930514 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066133308 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063999683 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065463216 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071960402 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074306412 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068803778 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066572588 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075220135 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083827003 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06518672 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072728775 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065342274 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066942244 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065839584 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.08026691 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076279917 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069703542 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07242563 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062722537 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075180012 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077599678 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068079426 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063432769 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067854022 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069395169 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076985235 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069813565 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066006902 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063776655 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071464879 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067768219 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072525524 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06501927 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067579681 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071263554 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063862023 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071318098 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066071015 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079694857 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073166475 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063295883 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067654875 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06345133 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07697167 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063441255 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066422455 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067792165 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066372056 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064306639 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07186131 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062399016 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077428348 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078154928 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070417008 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067540932 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065110232 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077952304 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071103077 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073496142 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072729651 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075570875 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080604716 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067450024 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.07146873 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079251251 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064217808 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061679856 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076026263 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062965229 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063640208 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063355134 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062948768 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071476467 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07106246 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074175078 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061358522 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070791304 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062879435 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067083825 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062699199 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072729263 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071181782 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067999349 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076084604 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064787581 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.064567622 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07175312 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.191861783 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067294171 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067328855 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073994843 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066758953 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072582942 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068960485 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.072663665 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068238825 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063660917 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071787873 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066109194 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071060962 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074697777 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065215441 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071788877 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073132565 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066261149 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071763862 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06953603 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067484776 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07250189 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071363359 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070801821 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072397699 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063721659 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077249139 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065607869 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078389888 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071109741 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062624197 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07194424 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07232543 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070665214 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066362072 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066403941 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071394429 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064729981 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072684606 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078824003 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066817711 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081074015 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077560872 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071047541 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072195452 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070617656 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071156162 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068130309 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070205326 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066023479 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071131038 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06572151 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074176034 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072701993 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070950438 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07184862 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066172638 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070654353 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066890234 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063035628 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067509217 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068358408 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065270021 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079096911 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066021842 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06850651 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065385909 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066692286 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065221192 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062682173 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072580253 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073389376 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065759931 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076106318 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067852859 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071904364 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081520396 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062897163 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063899079 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063655114 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066790206 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078267694 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065680917 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079138768 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070560404 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067982603 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06275942 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06616522 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063967555 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063045541 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063398334 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073497591 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067847619 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064790741 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065476492 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071951545 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066364774 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078492606 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06498367 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069582638 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065823266 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063387362 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067834126 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067865056 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072350112 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066046946 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06621069 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062578704 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064876735 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069578621 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071229572 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064609565 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070249609 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076532199 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064167571 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071497334 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067062352 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062637981 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071804309 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064440354 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064409453 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066913171 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07204959 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071680944 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064723524 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078378551 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066492017 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069959386 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064520566 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062723126 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063910467 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06373643 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.064191242 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066539158 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065223815 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076938869 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.194430045 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072457931 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071761001 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070020674 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07674077 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06670265 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07286349 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072748287 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067585385 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072552213 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079271926 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069989518 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073496679 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066320261 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071246083 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075931675 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068432876 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.077600058 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071470999 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.0661484 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072044458 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066656327 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065482593 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065368693 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064825635 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075881428 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066287799 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068187989 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067859385 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065025079 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070596229 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068179797 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079121835 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072438778 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073059942 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06351372 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063175882 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067053702 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066844828 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.07168617 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073125437 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075983568 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072946993 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069613137 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06487714 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080502127 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075945804 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07370496 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067400822 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074103882 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066612726 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073167643 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.07004072 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070829217 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066641823 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073563282 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072298748 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068158306 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076816181 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073648891 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066553574 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.072630878 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071639105 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070661676 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063758266 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066532834 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072112427 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074747241 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072853241 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066385912 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08160494 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067366904 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070406259 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068020984 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065023343 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074752537 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064025804 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071899105 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066502574 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066138931 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064055583 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068228404 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.0671942 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072469226 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067907717 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063398897 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081876711 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080304631 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071714627 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064979507 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064699692 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063483606 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063648171 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068225859 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066481757 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072069008 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080998488 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068232105 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068014727 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063945773 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066084572 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072804897 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073671543 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063324956 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063448035 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067878906 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072069245 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077314307 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064500838 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065248949 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073064299 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.07187792 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063502171 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067327752 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062334346 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072044845 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08129447 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.065266904 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070494391 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074400278 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077230526 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064800502 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063150113 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065134601 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070784439 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070231822 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064663352 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064858652 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083439561 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071489772 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066939109 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.063243199 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070971842 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066963259 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078533153 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.196165905 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067836581 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075332276 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072784517 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07418987 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076883637 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078207981 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072122729 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073002437 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065609237 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071494452 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065198182 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068356271 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067123635 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.08347026 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070395193 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073000798 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068234266 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082339627 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080951296 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068311211 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062805842 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068286542 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068490554 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064557315 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065996013 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064436748 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064404096 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064606521 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06475245 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071941772 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075051085 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.07006739 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065752826 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065075516 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062378437 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.075469005 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072124876 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071548573 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062717079 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065927531 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065794032 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073894077 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06869168 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067464817 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072631092 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.07173383 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071461268 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064385457 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077670271 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065156351 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071745928 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068260353 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066217843 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066197868 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073348433 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070137211 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067278178 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072740558 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072577941 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06721545 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063089962 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063205078 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075398243 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063967933 seconds)
  done (took 43.416196877 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099659606 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064324416 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063705623 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063920797 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073987833 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0648728 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06382239 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064832226 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064818865 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066813995 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063730557 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06373411 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071618073 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079172925 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07450329 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068391444 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064058841 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064793867 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06387325 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065404384 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071536994 seconds)
  done (took 2.708572241 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.069904044 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.079414437 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076856259 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081679008 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072827917 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068727946 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07688376 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069038282 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077444235 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074211607 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077192665 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069494403 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074588502 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07470753 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074181553 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069262919 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077380675 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072942822 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.06927838 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076856585 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069234668 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07681891 seconds)
  done (took 2.874115946 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.063884659 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06452967 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071281866 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063334919 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064054165 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063003241 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067958519 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062654922 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.066769385 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066796263 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066930158 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067056517 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071214268 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063158883 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068103187 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062760687 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10930322 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067004374 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064747702 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065385759 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063375302 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072455602 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063148421 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063930892 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066677034 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067668547 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065019936 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063493192 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064769701 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067049375 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064700971 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062903262 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071681493 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070777526 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067224826 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067172317 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064515746 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064660583 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065809919 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063236359 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070871789 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063700237 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065069401 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071252014 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063421897 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062843885 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071554824 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064316483 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063238376 seconds)
  done (took 4.526039211 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074216745 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112899891 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070209976 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093187586 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07853673 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071379678 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069648298 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094162096 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065210252 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06618873 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079754821 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080690753 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067318701 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069407854 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071758016 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067466278 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068101594 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066127671 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070378613 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067160627 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.07044981 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071548436 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07900269 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079134524 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068230481 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066046617 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066823799 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068960309 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078572703 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071058503 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068707725 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069590192 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079537984 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072430966 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066274679 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066634987 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080267184 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067252467 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066817702 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065148798 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066498587 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068503094 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071688969 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080425258 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067908189 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072300934 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067010888 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064826517 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079418943 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066475022 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.0716093 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.08098531 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068738827 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067498823 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068983107 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079014807 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067167421 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06567719 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067431746 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078991966 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064915284 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067755079 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079790688 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066467909 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071132637 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080377142 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072482642 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068073161 seconds)
  done (took 6.306616647 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072859026 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096819433 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081560145 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082196419 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074830194 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07576994 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075471178 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075196203 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075044116 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079344662 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075701642 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11735972 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071056073 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077396328 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075837729 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075851629 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075433457 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075308488 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075191943 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07569679 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075299378 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081722137 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075934839 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081957723 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078198884 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070691633 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074788793 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075163567 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082035991 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075086199 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078359646 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075127786 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075440557 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081725901 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079011682 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074843965 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065462503 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075453602 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075178197 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075077913 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070589463 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081846129 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074870402 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071125213 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075267471 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074971915 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081281682 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078179304 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076997963 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078936011 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075328673 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081533944 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07501929 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075163239 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081414252 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084338241 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081948106 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082070895 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075181168 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081328726 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081781603 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084133066 seconds)
  done (took 6.109200355 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078048971 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072162181 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.084064596 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064273262 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06631166 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074006576 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063949168 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063526703 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072967565 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.072580318 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074974323 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074230736 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076854454 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074563415 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074198104 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076927476 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074686171 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07471752 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072245258 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074148743 seconds)
  done (took 2.736546166 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076320761 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083262715 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069854423 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074341876 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069299549 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073751401 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068344266 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070281681 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069869421 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069521906 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075548429 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075882279 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070118567 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074135351 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075464745 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07421953 seconds)
  done (took 2.436100133 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084043031 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072630798 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079665186 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065098575 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069438146 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064840931 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065257648 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063723411 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063997012 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078088562 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064647202 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076740502 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064935132 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064069394 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064381406 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07052747 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063931017 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065132518 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06480804 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078959653 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07215809 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066248734 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068804046 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065297681 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070481269 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072670746 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066786436 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068741548 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064920174 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065314531 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.07100848 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072075871 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064458611 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06601844 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063869034 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064735707 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064758171 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065846114 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070890324 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065144198 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063609076 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070714945 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06544947 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066119757 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064264691 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.083677088 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064089044 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070974743 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065428011 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070850322 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064990855 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067652953 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065541666 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072869091 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067709055 seconds)
  done (took 5.023964256 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078618384 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068880132 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063742008 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062905486 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068682328 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069636044 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069115525 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069060235 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07018336 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063445221 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069969617 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06896553 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07014379 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069485597 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07035068 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069527502 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063861951 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069591671 seconds)
  done (took 2.515197312 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073244849 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069327981 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073593464 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068503943 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06842278 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068041291 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06350479 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06361947 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064132611 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069070186 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068936634 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068838066 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064277729 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068566223 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068544591 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069096827 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068710321 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064284287 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068769734 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064449708 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068314901 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064506607 seconds)
  done (took 2.757847778 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096310939 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085465822 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.144037097 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081925171 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.09003191 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074133931 seconds)
  done (took 1.843150676 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092591019 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100596344 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069367942 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069428972 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074668714 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073024261 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072622652 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072762994 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077261063 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077889991 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072974485 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080260951 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07732961 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07992556 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074973467 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075154797 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072582605 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072404693 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068813399 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082356341 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073140341 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077210681 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072728718 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072739992 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072945954 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079420308 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077401915 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077694081 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072916491 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077337973 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07475775 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072551141 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077421916 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077711329 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068897909 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076873342 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072529338 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0822193 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074695022 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079191529 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068701429 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074958321 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076732446 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076187762 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076735989 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072582167 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076245704 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072322034 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072265487 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086951707 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074853102 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078409881 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074489825 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077456705 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076725478 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083631155 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077546751 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078951003 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0749321 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077269051 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079052632 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075084278 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078761965 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077340364 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074657784 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079240802 seconds)
  done (took 6.312900709 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104652864 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069813378 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073036573 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077796063 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079566661 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072897816 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072833502 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073450137 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072774499 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070557185 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10860943 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073383136 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080295071 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079889449 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073440039 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073277965 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073171784 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080149697 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06987921 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084028018 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072517875 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079157492 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079199909 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079496446 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078145472 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074957157 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073082871 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072734253 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073010982 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072591814 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07658213 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072713365 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079655644 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06987618 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079281192 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072903921 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073137284 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076758026 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072788917 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074985071 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079220926 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082170898 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072443392 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072283884 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077660704 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072398297 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072826718 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069376887 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07289292 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0696123 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077820533 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07719201 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077402644 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078835403 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072374853 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072726441 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072648465 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072743884 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072683753 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075294346 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079243183 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072760746 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083980004 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072953906 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072775775 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079350595 seconds)
  done (took 6.31259028 seconds)
done (took 128.718467136 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209967777 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.187163375 seconds)
  done (took 1.657287566 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073987995 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.106412642 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.085363794 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135976249 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071475097 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105112811 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104623825 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083295414 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.073059491 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.073199816 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073583539 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07580651 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139592191 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.072397817 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.072102775 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.076128459 seconds)
  done (took 2.699690576 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10449395 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.2196902 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111015491 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070709908 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106896697 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079689972 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071685572 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.087390401 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078469377 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073266158 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079683734 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078073205 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.073272231 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077801745 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.079188329 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079663599 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072685023 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079096401 seconds)
  done (took 2.903954766 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103117844 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.097889074 seconds)
  done (took 1.485654518 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.173482865 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133734632 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201473997 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.348446542 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.156534936 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.434432252 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.142792681 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.142339218 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117497431 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.134298584 seconds)
  done (took 3.263313052 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103833859 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.205507568 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.304767441 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.124199696 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078501405 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.114435901 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125544392 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084291183 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084007619 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083645714 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083321767 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080883032 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103257381 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.079559958 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07788019 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080922773 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106220508 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076804338 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077937028 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078661665 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106793474 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071944325 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079242191 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076603597 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080797412 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080969451 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.072863286 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071377967 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078417346 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077734578 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081757391 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.111307664 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080692813 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108585853 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076057088 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109038177 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081212632 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076460942 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077473325 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07692323 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079772483 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080214516 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080554689 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080668077 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072840599 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080622978 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072898277 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071242478 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082699408 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.073269123 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082882493 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081648885 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108355841 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073126696 seconds)
  done (took 6.259943104 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107998535 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107000841 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073767342 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11563492 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106944179 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072915888 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108342319 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102197995 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110562911 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073337034 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071492987 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07288736 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082408685 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084937928 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115530099 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108156285 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073371935 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072134047 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110542017 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110809409 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071717767 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104319919 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100492837 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.11090121 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068811246 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071072711 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070249717 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073285925 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078480202 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079826436 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072764389 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081826809 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088792846 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077451913 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070979447 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070945046 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071465375 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.08099602 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081113504 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080705162 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079296358 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070494391 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071120433 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072294662 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072391629 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070428097 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079360752 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081259529 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079673368 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071558922 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072507075 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070762959 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072232995 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080617728 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079172478 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082139043 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08132771 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07168392 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070824951 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074060349 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081583879 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081510969 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08009407 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072508199 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081331434 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071054847 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08567127 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085978235 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071347726 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072129311 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071162428 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071481833 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071663429 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078541465 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078288985 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072589127 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07106846 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071005298 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080819732 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079158636 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071084069 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078149556 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070208539 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07086105 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07208283 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072555728 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078557154 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080635589 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072511649 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07081924 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071087613 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071091287 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069835473 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078233692 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080198481 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079215902 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078227408 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071477731 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078696292 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078257462 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071703807 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078721087 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070769493 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071846831 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071130871 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078129714 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07696248 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079524503 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071017883 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070444229 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077672934 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079586463 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070470634 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.208459271 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080044844 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078913583 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070199929 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081136517 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071000059 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07929688 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070311876 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079538879 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069390499 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079477664 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07005003 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069335148 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070303068 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078973982 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070966476 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069874001 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071140927 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070656987 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080055747 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081180795 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071670054 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077936903 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078188821 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073449356 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08050487 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07212017 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080336186 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072408893 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072706695 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070852996 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082782518 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072336933 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071561806 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071950989 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082742448 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072453285 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082445013 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.0791892 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071238775 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085551817 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079468113 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076556076 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079323489 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071278277 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06981012 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069612813 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072295074 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079485601 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081169817 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07324527 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07142606 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079131024 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082165492 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071124486 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079691122 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080227063 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.08018798 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071757668 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072217155 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082723508 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08270395 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078941681 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080168623 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080337135 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072264112 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078989647 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080444174 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072248599 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085018281 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071698716 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083939005 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.08038497 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078804537 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080550101 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.08127996 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081808944 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.08209517 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.085153354 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071160109 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07103197 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.08011897 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072171881 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071785555 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079355518 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072568297 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072422574 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084980916 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069641234 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.081716026 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070949765 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080482877 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070685684 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072875849 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08420848 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072008582 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072297732 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079723682 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074080518 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078562941 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081188492 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076700335 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067861771 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069854024 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079118007 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.076471941 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069995504 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069739214 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071307454 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077136441 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077128348 seconds)
  done (took 18.875601882 seconds)
done (took 38.439736565 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.214846821 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.16090191 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.193961266 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118350288 seconds)
  done (took 2.07691634 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107805332 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101306913 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.090463798 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067405346 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.097117367 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067855368 seconds)
  done (took 1.853873864 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.296120092 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.20241243 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181014526 seconds)
  done (took 1.997673981 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.213661234 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.202734034 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.470727584 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.290850761 seconds)
  done (took 2.592535838 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143223431 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.0858142 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066345603 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084791396 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.127189516 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.151076275 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.094819116 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.121827999 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078017125 seconds)
  done (took 2.328458076 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.152320217 seconds)
done (took 12.35045122 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.101815237 seconds)
    (2/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.242163263 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.128996459 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.094523588 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.074718548 seconds)
    (6/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.204823042 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.149110189 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070691264 seconds)
    (9/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.213950146 seconds)
    (10/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.211362302 seconds)
    (11/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.235085902 seconds)
    (12/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.184893387 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.177341835 seconds)
    (14/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.080474794 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.078972381 seconds)
    (16/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077162073 seconds)
    (17/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.303684087 seconds)
    (18/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.203835795 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.102636485 seconds)
    (20/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.199667083 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076642069 seconds)
    (22/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.211999521 seconds)
    (23/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.234241662 seconds)
    (24/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.072105341 seconds)
    (25/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074910278 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076938621 seconds)
    (27/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.184451307 seconds)
    (28/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.0701883 seconds)
    (29/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.089694762 seconds)
    (30/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075616951 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.094722939 seconds)
    (32/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.087525668 seconds)
    (33/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.176148815 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.075299485 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.186143452 seconds)
    (36/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.179078276 seconds)
    (37/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.122403846 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069533048 seconds)
    (39/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076174606 seconds)
    (40/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.123056049 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.205643109 seconds)
    (42/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.078731772 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076135487 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094204748 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066479814 seconds)
    (46/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.181537015 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.108066058 seconds)
    (48/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.068598097 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.110186457 seconds)
    (50/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.13988409 seconds)
    (51/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.199734826 seconds)
    (52/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.077248668 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.103210539 seconds)
    (54/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.236509146 seconds)
    (55/309) benchmarking ("sort", Bool, false)...
    done (took 0.164123533 seconds)
    (56/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.178956269 seconds)
    (57/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.172397039 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067387666 seconds)
    (59/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.173629065 seconds)
    (60/309) benchmarking ("sort", Float32, false)...
    done (took 0.134287607 seconds)
    (61/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083111924 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 0.06834128 seconds)
    (63/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073914233 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085908203 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.13922403 seconds)
    (66/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.118306262 seconds)
    (67/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182149324 seconds)
    (68/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077330749 seconds)
    (69/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.177521626 seconds)
    (70/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.06671825 seconds)
    (71/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076095327 seconds)
    (72/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077840281 seconds)
    (73/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066403391 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.101372093 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067158401 seconds)
    (76/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.231477341 seconds)
    (77/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073502424 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068021327 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.120544477 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.101531117 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068163439 seconds)
    (82/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.234169983 seconds)
    (83/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.21883838 seconds)
    (84/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.219324036 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150763075 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.076781695 seconds)
    (87/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075955794 seconds)
    (88/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.080626131 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.069274621 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.131604525 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.092663277 seconds)
    (92/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.134656264 seconds)
    (93/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.071134584 seconds)
    (94/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078810831 seconds)
    (95/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.210805404 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.142502816 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.09375958 seconds)
    (98/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072108601 seconds)
    (99/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.205281614 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.117610084 seconds)
    (101/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.148888725 seconds)
    (102/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076847499 seconds)
    (103/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.069344981 seconds)
    (104/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.172693033 seconds)
    (105/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.075614631 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.091519208 seconds)
    (107/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074727872 seconds)
    (108/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07266398 seconds)
    (109/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.074648472 seconds)
    (110/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077433945 seconds)
    (111/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082140909 seconds)
    (112/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.171226107 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.13233141 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092402639 seconds)
    (115/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.080202334 seconds)
    (116/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.081185926 seconds)
    (117/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067770664 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.125318768 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068271751 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.091652133 seconds)
    (121/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.096816654 seconds)
    (122/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.068876059 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076642138 seconds)
    (124/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070801514 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076886784 seconds)
    (126/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.069311039 seconds)
    (127/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.07065356 seconds)
    (128/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.1759219 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068705665 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068657362 seconds)
    (131/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077912265 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077211091 seconds)
    (133/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.173464197 seconds)
    (134/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.141782037 seconds)
    (135/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.069364114 seconds)
    (136/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072320304 seconds)
    (137/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076628169 seconds)
    (138/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.08245491 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076144865 seconds)
    (140/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.223734873 seconds)
    (141/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069299632 seconds)
    (142/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.198226781 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.094105283 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075884537 seconds)
    (145/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.200145475 seconds)
    (146/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080826141 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173414543 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068181012 seconds)
    (149/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.069275611 seconds)
    (150/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068412825 seconds)
    (151/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.06823371 seconds)
    (152/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.078994366 seconds)
    (153/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066868737 seconds)
    (154/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.142898864 seconds)
    (155/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083468895 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093550123 seconds)
    (157/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.139842154 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067935736 seconds)
    (159/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079240502 seconds)
    (160/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.068360839 seconds)
    (161/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.068253604 seconds)
    (162/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072689475 seconds)
    (163/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070114216 seconds)
    (164/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.069200762 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.079980383 seconds)
    (166/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.200064499 seconds)
    (167/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067147711 seconds)
    (168/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.068082886 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067395341 seconds)
    (170/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067723767 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.105315683 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143318526 seconds)
    (173/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.068100547 seconds)
    (174/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074158675 seconds)
    (175/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.137648238 seconds)
    (176/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.067526232 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.139282737 seconds)
    (178/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.175342048 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14471976 seconds)
    (180/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.069200341 seconds)
    (181/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.068340237 seconds)
    (182/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075467483 seconds)
    (183/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081321226 seconds)
    (184/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066964883 seconds)
    (185/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068037311 seconds)
    (186/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178657683 seconds)
    (187/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.166120079 seconds)
    (188/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067457727 seconds)
    (189/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06859226 seconds)
    (190/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073677455 seconds)
    (191/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071444749 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067017984 seconds)
    (193/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.139825249 seconds)
    (194/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077206191 seconds)
    (195/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067110809 seconds)
    (196/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.230265425 seconds)
    (197/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.06732761 seconds)
    (198/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.071540251 seconds)
    (199/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.10021381 seconds)
    (200/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.078884467 seconds)
    (201/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.070180308 seconds)
    (202/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.078213249 seconds)
    (203/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.144492561 seconds)
    (204/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.07036736 seconds)
    (205/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.077196867 seconds)
    (206/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.069793026 seconds)
    (207/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.069305626 seconds)
    (208/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.072593674 seconds)
    (209/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068494319 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.076146658 seconds)
    (211/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071146702 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092132024 seconds)
    (213/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093545816 seconds)
    (214/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.076850936 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.133569227 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.139367733 seconds)
    (217/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068668004 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069388185 seconds)
    (219/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.070220321 seconds)
    (220/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.069402442 seconds)
    (221/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069326705 seconds)
    (222/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076537545 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.075668864 seconds)
    (224/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.068380651 seconds)
    (225/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.09155929 seconds)
    (226/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082049506 seconds)
    (227/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.070108437 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078966476 seconds)
    (229/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076960919 seconds)
    (230/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.185379579 seconds)
    (231/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069320635 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139521859 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076945524 seconds)
    (234/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068937952 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137191885 seconds)
    (236/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078634271 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068743345 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.070712568 seconds)
    (239/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067821122 seconds)
    (240/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06898928 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.128163904 seconds)
    (242/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.071861471 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.124256544 seconds)
    (244/309) benchmarking ("sort", Int8, false)...
    done (took 0.173581206 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089758987 seconds)
    (246/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.070399866 seconds)
    (247/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068074507 seconds)
    (248/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.069326599 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.068053549 seconds)
    (250/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.143725711 seconds)
    (251/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.069282935 seconds)
    (252/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.069183519 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.221170767 seconds)
    (254/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.068526276 seconds)
    (255/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06870038 seconds)
    (256/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.06914028 seconds)
    (257/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.069110039 seconds)
    (258/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.070195732 seconds)
    (259/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069609353 seconds)
    (260/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.068540744 seconds)
    (261/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067694954 seconds)
    (262/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.068315003 seconds)
    (263/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.070015869 seconds)
    (264/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069247855 seconds)
    (265/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176691818 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07771423 seconds)
    (267/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.068684342 seconds)
    (268/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068140772 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073995287 seconds)
    (270/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071148549 seconds)
    (271/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081531123 seconds)
    (272/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.068737663 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.115375221 seconds)
    (274/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.183139775 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.124152449 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067845657 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092958728 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172965752 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.069839519 seconds)
    (280/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.069174308 seconds)
    (281/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070298627 seconds)
    (282/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.068580584 seconds)
    (283/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075544361 seconds)
    (284/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.068783029 seconds)
    (285/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069847932 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092730268 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076646406 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.134260276 seconds)
    (289/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074174494 seconds)
    (290/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068664057 seconds)
    (291/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075846204 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.115164961 seconds)
    (293/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073945256 seconds)
    (294/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.068319087 seconds)
    (295/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.068148174 seconds)
    (296/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066667601 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088818012 seconds)
    (298/309) benchmarking ("sort", BigInt, false)...
    done (took 0.245080177 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075372843 seconds)
    (300/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.068675896 seconds)
    (301/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094267788 seconds)
    (302/309) benchmarking ("sort", Float64, false)...
    done (took 0.132950625 seconds)
    (303/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066631745 seconds)
    (304/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068692172 seconds)
    (305/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.06895535 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.066851088 seconds)
    (307/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067765391 seconds)
    (308/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.070949137 seconds)
    (309/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074543361 seconds)
  done (took 33.750422749 seconds)
done (took 35.084450619 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08795364 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102393623 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07625206 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.096707518 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083519629 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099863225 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076483176 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081517866 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084120173 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083090386 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081719543 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.074623537 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078008965 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077280693 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075686839 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100626133 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082682588 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076502049 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076456536 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067740357 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076400519 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068190939 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067551282 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07465847 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080121042 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075679009 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.077723427 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077339723 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068316259 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068432741 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072939011 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077361837 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067923406 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081064319 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.077205456 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076566273 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078349253 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080674836 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067879488 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068780991 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078180886 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068480796 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076791978 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074945448 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073850563 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074881961 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077075883 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080957822 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101066025 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07385234 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078665412 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079082349 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080512919 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.0745047 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073390541 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076630527 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074388726 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10069409 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076973477 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073739168 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077723521 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077861888 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074253235 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076134154 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076266347 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079290577 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080714409 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075045341 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078897178 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075861405 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067893002 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076301859 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072953681 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068632658 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.081547003 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080590572 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067302691 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071964315 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076344069 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076675145 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068216874 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073164649 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067657105 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073198201 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073445936 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.074353438 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073244102 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075449383 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068039251 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076199294 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075346688 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075609662 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067712488 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080783076 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067801321 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073978542 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068212212 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068268304 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067417374 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072749581 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067605593 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072961387 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076731093 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06692628 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072365785 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081620342 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067529739 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075498982 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067521449 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067876876 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079476819 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078031076 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068335455 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073298119 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067285239 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073312319 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067764759 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067416871 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067719927 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067977848 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072493094 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068020006 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073618629 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07293189 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080000564 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067863555 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072361451 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072569373 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067146055 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07349844 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067002924 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066804131 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066377955 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081248468 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072293376 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067037664 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072280491 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072249485 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074739842 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066456952 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075424508 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072771733 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071149384 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07296023 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066302986 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077854755 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071834678 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071346803 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066251572 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066754788 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.065833632 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067304982 seconds)
done (took 12.835544353 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071125066 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.120774618 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097816407 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097813422 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.087485102 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070820588 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.078455641 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.096135855 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071493445 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100549312 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091939756 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.092279395 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113767616 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068941468 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069241066 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070160697 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070918331 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081924851 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097678339 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.092740003 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.109979213 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069378687 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.08987325 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09096489 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086989209 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09182456 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070455787 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070416192 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072428554 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09321361 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.094986326 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072114349 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068422579 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.09341341 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.087582578 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083614126 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070197448 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.07904301 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070589678 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069530271 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071702355 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09168473 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078469083 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079092218 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070976231 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.077839845 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071104232 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086346771 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090925615 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078544506 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085680769 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.094518155 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.074207106 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.086927878 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069244651 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086916628 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080126545 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069887275 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070061 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.075053827 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070686118 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072312352 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082101371 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.079848179 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074964619 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.085592354 seconds)
  done (took 6.825378387 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085298514 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.100812201 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087578004 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087746166 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069036864 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069567569 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069524942 seconds)
  done (took 2.005762581 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068158225 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090323305 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.094272035 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093981424 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08708049 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.095072493 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077979035 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069411852 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.100490007 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06964179 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090404123 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101329978 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074141833 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.082683078 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.096454417 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069708749 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095030063 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070215358 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070696552 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094754258 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074890638 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097694884 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.081710492 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070545508 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082933067 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070081987 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103685889 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078055689 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071458229 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071369883 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071383485 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.09807534 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082889817 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.08210577 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071814609 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085349671 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083931149 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073746198 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08078475 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.081903011 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083217774 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070718526 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068662436 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.071582381 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072890324 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081676686 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068926636 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.0714614 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071233127 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089847404 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06879566 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082608691 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.074032018 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076811318 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.076255951 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075087547 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078472286 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.07139362 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090082513 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071511882 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088041975 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087066775 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083405406 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087128886 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070202057 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082429204 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084073036 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070736245 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071961719 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071432182 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086573773 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.073066668 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071958194 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.082121347 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069475941 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094309428 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094574086 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069998045 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083838917 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070395192 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071229413 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.081777849 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094622747 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075663742 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070641219 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074140528 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072252277 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072934628 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068534439 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073392671 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070707266 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074736901 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070712304 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073280764 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072739958 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086871578 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069294981 seconds)
  done (took 9.109532724 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070600964 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069129402 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072758881 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.0711197 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070765473 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.07229627 seconds)
  done (took 1.889290036 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092361544 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068896303 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082808095 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.069540088 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106723067 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086600083 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087179051 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081067618 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085088851 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083120204 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087419456 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.09028879 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092134598 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073678246 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08693799 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071685103 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086508641 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075735695 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082290805 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074248401 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.084766341 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073048437 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073357948 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.091422415 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07490548 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071889201 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080539613 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082081458 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082089199 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081223247 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073297419 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074826447 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.079367278 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080706754 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087424046 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.079085519 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073647062 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077327247 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.074127241 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074586979 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088986717 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073720935 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073052799 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077546084 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.08060913 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078501151 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077297023 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07938643 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086067813 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077482998 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.0771307 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071584467 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074535568 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077954027 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.079202671 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080518572 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077477017 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086521532 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072730082 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.079272324 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071342657 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074247418 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080503128 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.0745379 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078751545 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077101363 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.078928014 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073164865 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073668852 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070659196 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077316484 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070409688 seconds)
  done (took 7.140051528 seconds)
done (took 28.437386215 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.519928217 seconds)
  done (took 1.935340389 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.625349288 seconds)
  done (took 2.070815586 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.542774782 seconds)
  done (took 7.983477797 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.401794529 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.473946933 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.750713962 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.140927006 seconds)
  done (took 3.248535066 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.70895559 seconds)
  done (took 2.162482445 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237997514 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.233936528 seconds)
  done (took 1.936291053 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.349502614 seconds)
  done (took 1.789798508 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.067166714 seconds)
  done (took 2.509840885 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.240489133 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163543704 seconds)
  done (took 1.852020125 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.44647987 seconds)
  done (took 1.890741315 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.247942101 seconds)
  done (took 5.695260752 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.244379726 seconds)
  done (took 1.729027392 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235412291 seconds)
  done (took 1.685834633 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.741587368 seconds)
  done (took 3.189726928 seconds)
done (took 41.135993207 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083693593 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.087788266 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.088574066 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.08530478 seconds)
  done (took 1.774659731 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.074914172 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073490194 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077604093 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073494993 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077155096 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073175805 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075314104 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076239388 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072980512 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073245483 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07294712 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073117627 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076115266 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075002713 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072219342 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075959071 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077220524 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073433261 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076592953 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073146047 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071552147 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076187293 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075770929 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072206727 seconds)
  done (took 3.238365163 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079118442 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075655238 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07803909 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074981748 seconds)
  done (took 1.769081804 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077467998 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09130297 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089749329 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080470758 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09206024 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087590179 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069901281 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06961251 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070871615 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079723253 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068412117 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096391678 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089658283 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07959042 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081742934 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06615385 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068207822 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08823161 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080449496 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080473345 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070918428 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080272902 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06889604 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090352821 seconds)
  done (took 3.375165178 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.085083886 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06841304 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.087634516 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095263185 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09703333 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069037375 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.085640438 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096787328 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.142394979 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069031863 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074399846 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068815019 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.109463519 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068903288 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.086554194 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.1121902 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115405657 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.07235012 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102120206 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068996889 seconds)
  done (took 3.237303993 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083780169 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072400472 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072699079 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068339926 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079055413 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076552689 seconds)
  done (took 1.91933204 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069020887 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070364293 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070164827 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069856875 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074962823 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072813641 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068852124 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070611992 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.071088342 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070273945 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070036003 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069127499 seconds)
  done (took 2.308264497 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.209350101 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070635796 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071674199 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069214756 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075812405 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069092931 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085127566 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072374067 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.08939542 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069674752 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.0697645 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071949799 seconds)
  done (took 2.486258965 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192905222 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076638492 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226822953 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146593418 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105999784 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112864354 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112744344 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111289867 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.136468608 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100394164 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157353822 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1639577 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107103803 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129938207 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090530213 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.123879735 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147601686 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15657571 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103063162 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157508192 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13850023 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122630375 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143694435 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100182759 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104205416 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12001273 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07425639 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079660795 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16202476 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125849939 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138929134 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107791077 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092796566 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169196581 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160265952 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135197896 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142781362 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084151778 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.121685751 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.136484965 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194491916 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087355722 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14794923 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104499228 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079773527 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122738531 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112254356 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.258778436 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104769139 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091228837 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138053873 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177729071 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.132287655 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086889608 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119008926 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109233421 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113079222 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115818371 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174947829 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152441028 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122397741 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07207122 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107863422 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145675388 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128363528 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108146086 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.121853441 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093882119 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12869895 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150395033 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128532553 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134626451 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.113639428 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084566419 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114134938 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133779028 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124329435 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162927369 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117892684 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073351403 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118607363 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098412106 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080801648 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145897558 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075795843 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166974861 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098720029 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.123546895 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126415136 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107944867 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10800942 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15297682 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135700147 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102833997 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.085308614 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100637949 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.1163916 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136625066 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085605352 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104507551 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109107898 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.224520481 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130713132 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076046081 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117301724 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.096575764 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119556281 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123485944 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.08194941 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119124746 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103006008 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100671281 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126706264 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151772512 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088609206 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081933169 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160231414 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117372302 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103413258 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137438813 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152022612 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.120707419 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099846797 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141243402 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168092519 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090540507 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155231442 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103049132 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085222572 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.106854824 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117642871 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109531989 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122300532 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081490344 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115321161 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157219296 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075420678 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09687062 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126855427 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081347165 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080714585 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1042393 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103491797 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096985115 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100995576 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103810323 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133420832 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117858123 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103233417 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121206201 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0973698 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158838414 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087174138 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099813474 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10297934 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072556875 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.126031007 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145518023 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078463605 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299219686 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.118569019 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112418297 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11683036 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08473575 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134389932 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079879473 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07314695 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136038219 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111005312 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108074874 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.145487488 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111670074 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.122303765 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116690227 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128834258 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126366122 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.124739428 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106543295 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089058812 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111984971 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12768543 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073387815 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092438719 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083355454 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103178519 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095187541 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084467578 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136058144 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11961766 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108254222 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112311172 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097071016 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14436034 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079216334 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122402129 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117182406 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095067298 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148622863 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145484237 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126033277 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10012773 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132725283 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073865501 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075281943 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.08921951 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12066454 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08456576 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084288126 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111788708 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144081506 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122453124 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131052054 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118953613 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113727405 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149016786 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073047625 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118531806 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135792155 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113376254 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.250238899 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088733146 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098427952 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138002791 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103753853 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174224476 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111221918 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120188952 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149886595 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.09992124 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080316141 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103582027 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128866162 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10200725 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139373284 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09842445 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086708811 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107130938 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078335726 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098325479 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122959778 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116502762 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132940997 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111714433 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126871765 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077946633 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11207269 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119029193 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120264747 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.084460343 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116111993 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161522055 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097467062 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114702532 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145292377 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080397489 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.135968481 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166164626 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138933425 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084738317 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103856567 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116583939 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12332792 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115164627 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134438287 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104199869 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131504928 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107624756 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086856275 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085750605 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095026095 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100022813 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.11079506 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10208444 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.109266426 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09468131 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273739296 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103556071 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109733243 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114893571 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.101306048 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097059748 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097247369 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167411982 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114549273 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162702205 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099065056 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.139295897 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155493296 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076575986 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079785069 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081498949 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13462665 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085021654 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125291837 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109384145 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113824933 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118049197 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132484454 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09446165 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071997036 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106447074 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130559508 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120279068 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097550024 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103879984 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153717718 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.118335958 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079807901 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112169356 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113305482 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103860518 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1676096 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081856971 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107236174 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077262119 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080388337 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124289268 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145654037 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08644319 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103752942 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116109633 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109917084 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123624223 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097497974 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108595637 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126392998 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142493535 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123786491 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089698146 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108711637 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124698794 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144979794 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100667631 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098250445 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313511888 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142336833 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.151998813 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089409651 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111687468 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111539905 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106977381 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131624062 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084368126 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155165227 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081830687 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130131107 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100282676 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089778353 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126353951 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.110275451 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088037464 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139673144 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112298747 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083519292 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080614456 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111260226 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11465522 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102861648 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075599858 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135145817 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074340105 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129734773 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161726967 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080814283 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103655453 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095690218 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082589562 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102962459 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101348413 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086606066 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098895145 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164042174 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08874019 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142256939 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128645708 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109482697 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13301557 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102850294 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642364524 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080078473 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145167754 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113907498 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168170766 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097310127 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112782682 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105200521 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115687976 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28257227 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099387882 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177541304 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125584487 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114020666 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079885383 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10218061 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103224339 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089262575 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106097277 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11021056 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111984115 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09524911 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113605615 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120370296 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08338307 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096807335 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148152386 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114458855 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13856364 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134572319 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084700654 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11417371 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13155878 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080722245 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.117873767 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148971349 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10510927 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100678334 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083403096 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.10143467 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165004674 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074406753 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153870962 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115848004 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108450064 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111037438 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.110568684 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125270237 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103201156 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116584863 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093959334 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.10908705 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10967382 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084326194 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079408105 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10337541 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10960562 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09627215 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096586628 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.136626112 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143416561 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072493549 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097789525 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111859688 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138404734 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162230045 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.104363064 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082296254 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264081595 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113853297 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.107671825 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11259554 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079637589 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079099858 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.07974718 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098211577 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120712007 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106040804 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115386236 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108182781 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154607141 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.085336405 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226005005 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095918491 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103798879 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090423327 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081159675 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096614151 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096740608 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103673013 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108036857 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164595113 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093827255 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089366668 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092853812 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075150119 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083207915 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123820147 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10923469 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11352155 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103738694 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.083030373 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103742243 seconds)
  done (took 57.921496287 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.103403867 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.077226911 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096985558 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144758022 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120746753 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199404005 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150871242 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188586327 seconds)
  done (took 2.653713501 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068705057 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094954425 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102132045 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083124271 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066895567 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068564358 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.228355652 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081082522 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066716019 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091449267 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080256655 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071685657 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.455104186 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068525504 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069706709 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.07999157 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070205978 seconds)
  done (took 3.399540233 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.374377119 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.595564484 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.352706919 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075934362 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.855640232 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08881153 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.154206765 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136428085 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081794691 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.51955723 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.37071366 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.129797457 seconds)
  done (took 18.299633838 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.082800856 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.082369312 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094710456 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.094387196 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081723146 seconds)
  done (took 2.082601025 seconds)
done (took 105.931665393 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082543311 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.21525377 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071830815 seconds)
  done (took 1.880743372 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.09220679 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.093094322 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.093479151 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.091014469 seconds)
  done (took 1.942534063 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075952098 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078037292 seconds)
  done (took 1.7233015 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.240248831 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.180437662 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.099463217 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08393081 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080769847 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081580168 seconds)
  done (took 1.814367726 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073784437 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074023812 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.077260429 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080108438 seconds)
  done (took 1.867336818 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.071897526 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.068367923 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.071972353 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075702367 seconds)
  done (took 1.852419567 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085448969 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085852175 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082746706 seconds)
  done (took 1.818392389 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102843719 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.097731514 seconds)
  done (took 1.764875565 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082387368 seconds)
  done (took 1.652602436 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092990591 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103230337 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135030111 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.119128681 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.146513556 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.122790319 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088027963 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.091854182 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.081870006 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089288524 seconds)
  done (took 2.639288469 seconds)
done (took 21.122117848 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080034999 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.375588185 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363788924 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094374314 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.675219445 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361117547 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.996808514 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097402058 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112908498 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072755196 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091630799 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652913892 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.984507783 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.334531264 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.974602634 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.333187651 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656835902 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072693932 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072440941 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074433235 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.980494213 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07316967 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07395338 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073507556 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.658805205 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.380193586 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075002779 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.333993139 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073583775 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078227113 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.363953714 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075207092 seconds)
  done (took 16.269166525 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072617986 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126035846 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07766608 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089956429 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074604346 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073813916 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.076068912 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073188581 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12284587 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073460849 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091870899 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072412164 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077057815 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074746499 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094172513 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072355143 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076063458 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.0738728 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073321107 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074550058 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093578151 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073502839 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074314778 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074000725 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074869089 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087940699 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075971006 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073363878 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073802045 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078315386 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.079429702 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075534872 seconds)
  done (took 4.159905654 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118286962 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128128416 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077734211 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112611135 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123742417 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074841161 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.152237692 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098380074 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126660569 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073967326 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.092006906 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072766154 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.108704313 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074598507 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.096066824 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073965867 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076747008 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074098637 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0733057 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074896745 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094288616 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073401239 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074562025 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074195168 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075131012 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089379902 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07550868 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074000684 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074326975 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078718494 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07988797 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075614387 seconds)
  done (took 4.42794818 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072080392 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075616715 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.085214856 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08628166 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071833092 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07345726 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075120991 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071451514 seconds)
  done (took 2.199609515 seconds)
done (took 28.634358061 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079401924 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07088358 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075023765 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.091059128 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077665222 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082932781 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068303952 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078016032 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075793248 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07608303 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077369963 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073465904 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073519634 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068508459 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075762191 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070069086 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084889208 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074126993 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083915672 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.085100092 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073638817 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07637995 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.079646751 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.085051076 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.085298706 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08490641 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.08078774 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07650008 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071939221 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074321596 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.074696387 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083163204 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.084924557 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084573065 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070812419 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070818503 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07495082 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072431582 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.086448024 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079857612 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073246385 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080428985 seconds)
  done (took 4.825261081 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08539977 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089168889 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083700023 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080532965 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091341936 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083761819 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088200659 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081717886 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.081766404 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090454729 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.078151764 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.08535587 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.082374351 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.076398004 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.081128006 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.078411481 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.083661851 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077537199 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.080276435 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.080499492 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08757095 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073394152 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088372867 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080756346 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.076408458 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081193099 seconds)
  done (took 3.743509306 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075288774 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087679138 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.096351759 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.149258073 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.116610971 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084394431 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084795146 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096819003 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100828117 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.072000699 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076532815 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.097116987 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097172349 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078153156 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.116057372 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088571766 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087292754 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073323559 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078829834 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100817494 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091998623 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086312207 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095285292 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085357938 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068434898 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071269045 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073364697 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085921257 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073351449 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082428983 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07423047 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075671066 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071445452 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081820149 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074100436 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070997497 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.097583637 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08249192 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082425995 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070663626 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078758407 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070435847 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.095190941 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.130293338 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070348894 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075060048 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074692632 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08278625 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.07094254 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099555647 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083708501 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071436674 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07246504 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070763391 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070951192 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073799438 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.0728947 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074597599 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081920304 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078497166 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093726971 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076151767 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089456416 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070876101 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.08156512 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070579866 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07252901 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070086831 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.100247897 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072878865 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116594513 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071783794 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06877324 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.08268238 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081094655 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077615845 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.07091372 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089351236 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082381992 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075336 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079870002 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074994103 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075305411 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102574323 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071627025 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071087241 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069833447 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078263094 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075462418 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072334781 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084257479 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070808489 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075064799 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089748291 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071012312 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072208683 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075095062 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074508114 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070561264 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082668079 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075349395 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072547822 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081509756 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070525851 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075305803 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084135811 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077945222 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069823264 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071038681 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07214557 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069962672 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070148069 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072603506 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071164673 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075674903 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075735707 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074739179 seconds)
  done (took 11.059678942 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166330964 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156534328 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072000598 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149456432 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077638004 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081704156 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.155477528 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095900014 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070593083 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072917854 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070190706 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110555508 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105688001 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.12157682 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082048566 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07127776 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.0951487 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116566889 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.157268406 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148817382 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.0931115 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077772743 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072144693 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071609183 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07111785 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078664609 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.088401558 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078370113 seconds)
  done (took 4.439498627 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.07852457 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104653593 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075973533 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094981913 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092201468 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072660851 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073743569 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073486884 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.088175339 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081490561 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072358831 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077569447 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075479492 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075618327 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072382122 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078761472 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079203985 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071641266 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075535912 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077759862 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082210422 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097502184 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.077599672 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071858627 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07476315 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071701777 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.080622 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084557933 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072295465 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.10897631 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069573872 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077283119 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086763564 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072611564 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071348951 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072953257 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072058598 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071765378 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073099523 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070410984 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070602769 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.075704168 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070737818 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080349129 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.085136125 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.078927359 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074305246 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075070441 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075326667 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069579941 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075509802 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074628745 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075148955 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079225403 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07629569 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075087309 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072078233 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097669242 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077768596 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071588478 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070826507 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070495166 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074085446 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.082257869 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087620279 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074302956 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070632024 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072001514 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.085157835 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.085215598 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071390401 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076970594 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069442941 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073868623 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074365112 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074401383 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073533436 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070547844 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071646193 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072123466 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.0731096 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.07179867 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.071191387 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075280147 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070596014 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070803354 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072500021 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077375284 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084006273 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071211962 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075340073 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.073061467 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070948984 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075514048 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.077922227 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075116233 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08286968 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083434431 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072823238 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070579264 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086083148 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075231543 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071695 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077886671 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076852715 seconds)
  done (took 9.68321543 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092538684 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070292204 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089004318 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.096367387 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.082509423 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078439328 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082858912 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071709746 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089138485 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.077482981 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079484442 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070867016 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082797176 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081898818 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072394704 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082875371 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075605269 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089668017 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08701013 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.07064839 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080762788 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084910956 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08430209 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086131125 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085732005 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087431781 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.084340951 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082418482 seconds)
  done (took 3.94005331 seconds)
done (took 39.273873345 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.675365532 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.836671244 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.654038996 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.887222679 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.711829377 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.884174849 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.73981213 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.661883123 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.857297392 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.694971086 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.977613002 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.146917105 seconds)
done (took 64.460370309 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.667078958 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.802935471 seconds)
    (2/2) benchmarking "String"...
    done (took 1.900599988 seconds)
  done (took 5.293329666 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.014188722 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.322671295 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.882979114 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.649301285 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.655982103 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.904969866 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.420989153 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.096048048 seconds)
  done (took 29.525441461 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.83449019 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.874514733 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.345542033 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.38420244 seconds)
  done (took 15.075918328 seconds)
done (took 61.257258812 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.699096196 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.66340731 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.679894208 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.650470955 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.742550006 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.672244095 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.748758352 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.866485294 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.655838326 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.654979698 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.658438217 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.076946251 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.651171148 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.782450836 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.661211207 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.651694202 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.659044135 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.118381056 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.804109487 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.658726167 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.657240142 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.696964411 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.661655775 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.791114669 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.698327826 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.657974596 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.063216571 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.663064197 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.262096079 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.66369843 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.695140296 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.973789129 seconds)
  done (took 200.83205014 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.650330525 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.817051578 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.87770314 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.654300692 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.292734182 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.841549276 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.752074619 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.318656582 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.653848569 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.668955601 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.966788289 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.651020728 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.978609001 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.591025135 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.686648468 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.743977013 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.899452594 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.968809627 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.688663639 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.815434481 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.655909251 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.784465518 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.74226996 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.92081247 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.686141525 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.731112104 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.67625098 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.680483321 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.845189655 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.883593951 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.653256044 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.6758239 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.850893559 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.521102999 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.666681132 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.671717398 seconds)
  done (took 166.757272784 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.831855191 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.65247561 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.651662449 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.651305359 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.650285543 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.657921115 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.652426095 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.774531413 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.779524746 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.313037326 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.211079337 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.657421231 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.704693943 seconds)
    (13/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.65280069 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.408150433 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.653269133 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.717922893 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.664942372 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.653371853 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.668282876 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.6808249 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.652076566 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.659652023 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.7889402 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.665775884 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.653068209 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.660927568 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.653048211 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.658464886 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.039046239 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.652537529 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.652453804 seconds)
    (32/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.815635807 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.659475447 seconds)
    (34/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.660829945 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.894189992 seconds)
    (36/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.654836675 seconds)
    (37/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.654652381 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.500901545 seconds)
    (39/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.813942862 seconds)
    (40/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.738948998 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.655663206 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.65940769 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.654205672 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.870962521 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.655321639 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.661334528 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.655070349 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.655490826 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.764321524 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.658540603 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.776320115 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.657859307 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.131744056 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.655115372 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.654814001 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.171480919 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.491377382 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.658063253 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.656407829 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.654306142 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.661257751 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.666735032 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.031864879 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.734201607 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.657627006 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.656063056 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.661150594 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.654869938 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.746841431 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.655649376 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.995060584 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.668147455 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.782354024 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.777555664 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.665962663 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.720667172 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.746708987 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.655740971 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.655159335 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.655501765 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.655583482 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.736320972 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.655725754 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.777368689 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.665395986 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.657685971 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.712205914 seconds)
    (88/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.65745458 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.724038903 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.655206928 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.494852513 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.660685915 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.657493689 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.901582217 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.723453548 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.657491748 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.658456022 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.750682957 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.77863822 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.381525732 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.659178049 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.860291072 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.746521419 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.658738977 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.770837272 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.66073482 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.736118988 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.663478699 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.656900052 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.691412375 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.658077297 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.66857246 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.656590503 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.030155923 seconds)
  done (took 387.722641154 seconds)
done (took 758.793227382 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.229467315 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.200052344 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.305821421 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.22105281 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.193053802 seconds)
  done (took 12.74700754 seconds)
done (took 14.342805213 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.738989275 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.73986197 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.677757976 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.741573667 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.674746789 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.739107754 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.72356274 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.679286438 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.707133846 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.68255853 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.710426044 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.681245979 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.669731955 seconds)
  done (took 23.763056449 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.886080555 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.891563974 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.722096103 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.890185244 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.701101655 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.880357825 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.812510123 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.801970097 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.803105137 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.6688335 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.666199807 seconds)
  done (took 21.32363553 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.883404711 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.888995554 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.729758937 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.890030297 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.701453082 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.889419075 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.811791643 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.800793413 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.801230669 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.667980523 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.665738801 seconds)
  done (took 21.329682207 seconds)
done (took 68.013445692 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.66083366 seconds)
  done (took 3.259381609 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.679566957 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.838232105 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.660873324 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.661491568 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.662563439 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.662404236 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.662957573 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.662229497 seconds)
  done (took 15.089984766 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.660996532 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.66183983 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.660224476 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.661961106 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.661357245 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.66240653 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.661297471 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.66159374 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.661922808 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.661469082 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.662355231 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.661822436 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.6623587 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.661795569 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.661567665 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.660740197 seconds)
  done (took 28.186025665 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.663620321 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.663130631 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.661262754 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.66057672 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.66020129 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.661326968 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.662499905 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.661975117 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.659970017 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.660469427 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.660303605 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.660339528 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.660514694 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.660611931 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.661218899 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.66088822 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.661301112 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.661175729 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.665432658 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.661140555 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.660929743 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.660686422 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.659865008 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.660086076 seconds)
  done (took 41.472991707 seconds)
done (took 89.60711882 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.389426267 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.275811922 seconds)
  done (took 9.263680958 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.664161557 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.660754685 seconds)
  done (took 4.995590515 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.660226581 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.658621953 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.660660488 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.65928368 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.657639463 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.658566901 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.657554004 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.658766102 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.659537362 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.658932826 seconds)
  done (took 18.188713824 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.658532254 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.657400797 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.658362166 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.657711328 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.657106181 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.656145614 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.655532206 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.656133417 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.656376276 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.657132868 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.655332381 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.655845447 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.654480045 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.6556791 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.655185636 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.65548696 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.654140452 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.65471474 seconds)
  done (took 31.40840811 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.654091463 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.6554454 seconds)
  done (took 4.901667839 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.657153615 seconds)
    (2/7) benchmarking "second"...
    done (took 1.655077939 seconds)
    (3/7) benchmarking "month"...
    done (took 1.652274644 seconds)
    (4/7) benchmarking "year"...
    done (took 1.653798446 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.654538892 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.65485611 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.654260913 seconds)
  done (took 13.175805929 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.655319686 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.806748713 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.872833538 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.285143881 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.65509613 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.657049332 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.60465908 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.65724283 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.65848439 seconds)
  done (took 18.446057082 seconds)
done (took 101.978006529 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.556808256 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.655316771 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.939079768 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.776452213 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.674710634 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.947848583 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.695505209 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.92384122 seconds)
done (took 41.762241326 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.715541757 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.372754525 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.40952251 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.764658231 seconds)
  done (took 15.142525881 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.655253208 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.947918419 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.680571609 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.496037847 seconds)
  done (took 21.376555085 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.01616114 seconds)
    (2/2) benchmarking "read"...
    done (took 2.003701838 seconds)
  done (took 5.617457141 seconds)
done (took 50.446180113 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.653643783 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.654964737 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.653933371 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.655058295 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.654780503 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.655571635 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.654339328 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.654095829 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.654264722 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.65557057 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.655013327 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.655321384 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.653983651 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.654942677 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.654066177 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.655213623 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.653178422 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.653643926 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.653006829 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.653812819 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.654133979 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.652456642 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.649951527 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.64971166 seconds)
  done (took 41.28801672 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.648788174 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.648841519 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.651399011 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.648243492 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.648427562 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.647758166 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.64851607 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.648464271 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.64841998 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.64836948 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.647967801 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.647836564 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.649290144 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.649326701 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.649158522 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.647827104 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.647601698 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.648937238 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.64887935 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.647593806 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.649970092 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.648282776 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.647209256 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.648114525 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.647764998 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.6475001 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.64970118 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.647942718 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.647174744 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.647470601 seconds)
  done (took 51.040383942 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.648022558 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.64957011 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.648680901 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.650700941 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.64922224 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.648379121 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.649256083 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.650601959 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.647278492 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.648217615 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.647198724 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.64893576 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.647875063 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.649159883 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.648314908 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.648576815 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.648391502 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.647713009 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.647901762 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.649209474 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.648309807 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.649795096 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.650034311 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.649454178 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.648815224 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.648802333 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.648849103 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.649622219 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.648835371 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.648567699 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.648701136 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.649505043 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.649878861 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.648966902 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.64896471 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.6491385 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.648811695 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.648477586 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.650535545 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.649870256 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.652249093 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.648509315 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.650630593 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.649934735 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.651059296 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.6488933 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.647782366 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.648336926 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.648615784 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.648823748 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.650991692 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.649624167 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.647297875 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.647646783 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.648828637 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.648544399 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.651145401 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.649010794 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.650412894 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.64810225 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.64912519 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.648006859 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.651619168 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.6472623 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.64715009 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.646217661 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.646366837 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.646626518 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.648738895 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.647448782 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.64666466 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.646283222 seconds)
  done (took 120.30349941 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.646186829 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.649447776 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.644174753 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.645610151 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.646675436 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.646330328 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.645168 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.647329296 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.644906436 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.644709654 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.645492584 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.644778583 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.645567523 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.6464599 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.641891361 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.643147481 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.642512731 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.642318081 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.642675815 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.645427759 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.642867753 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.644065687 seconds)
  done (took 37.771839008 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.643355573 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.642801802 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.644355061 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.642054837 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.643465328 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.642453852 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.64359305 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.643743245 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.643473126 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.644821817 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.64249257 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.643078089 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.641556024 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.643350464 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.642913408 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.645030189 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.643213312 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.643789971 seconds)
  done (took 31.160944498 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.642329261 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.642557127 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.644204178 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.641912897 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.642085064 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.642350698 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.641137558 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.64274789 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.644493853 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.64249714 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.642389639 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.641417248 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.643385138 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.643413011 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.64277148 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.641797871 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.642373654 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.642600473 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.6428866 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.642406282 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.643982525 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.643085293 seconds)
  done (took 37.719527765 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.642535419 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.642038956 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.643064986 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.644371254 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.642274589 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.641639075 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.642058935 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.6423324 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.642481859 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.642983367 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.642494411 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.642850391 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.642600172 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.642754798 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.642254532 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.642567058 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.642162483 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.643288655 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.641714193 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.642412141 seconds)
  done (took 34.432118929 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.644775674 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.642198997 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.64187971 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.641971426 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.643067011 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.644699886 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.642939962 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.642949382 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.642421035 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.644054682 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.643001551 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.643899738 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.642371221 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.643570121 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.642231999 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.641654466 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.641865945 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.642340111 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.64147768 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.642886112 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.642860326 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.642270808 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.641572962 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.642562119 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.64288407 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.645201961 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.641657978 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.642611492 seconds)
  done (took 47.578021596 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.641550249 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.641728176 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.64213385 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.641755003 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.64164929 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.64089117 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.641232563 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.640914502 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.642780554 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.64162975 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.640467293 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.641625279 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.640458386 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.64040113 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.642207292 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.641169288 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.641194917 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.640833028 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.641519442 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.641081379 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.641600733 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.640983856 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.641148622 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.639872826 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.641745935 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.640576966 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.642645638 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.641163575 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.641134277 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.640270196 seconds)
  done (took 50.817172386 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.662378149 seconds)
    (2/2) benchmarking "in"...
    done (took 1.661787252 seconds)
  done (took 4.903272337 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.640675122 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.64193606 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.640359752 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.641365896 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.641087747 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.642843998 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.641228994 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.642295754 seconds)
  done (took 14.710296492 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.649748953 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.640788229 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.642140929 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.640425456 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.641818099 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.641529347 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.656178682 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.642191308 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.654652953 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.642611347 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.657232035 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.648866565 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.652220737 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.650420454 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.65141884 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.650865801 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.640921484 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.639809828 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.642011022 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.641226434 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.644876072 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.652420944 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.651273981 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.639866396 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.650338801 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.658079495 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.655377964 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.639924799 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.649550343 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.653052222 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.649833931 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.640158052 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.642738779 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.641675036 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.641439119 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.6415743 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.65683913 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.649823823 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.656795684 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.640585877 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.640188502 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.640619087 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.650383562 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.650023485 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.650700398 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.64092486 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.64035946 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.644065787 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.64192256 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.651863439 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.647244078 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.649452028 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.641286158 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.653458903 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.649645586 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.656696971 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.644005335 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.650478904 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.655938862 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.658372024 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.660170465 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.654489557 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.65263251 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.640879231 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.658406801 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.669888254 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.655566831 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.641913593 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.640785564 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.641008013 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.656122159 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.659815743 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.65766436 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.642158062 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.642061177 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.641912844 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.650732747 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.642030759 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.655634481 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.653626009 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.64125862 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.643355855 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.658218903 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.670742391 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.650231297 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.642186923 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.640884089 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.642370667 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.64379412 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.658960333 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.642242693 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.642617975 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.642885547 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.651492608 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.644187918 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.642398815 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.643756542 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.651783143 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.640706399 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.642882466 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.640128459 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.6532009 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.658243994 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.6424456 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.642377564 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.659056045 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.641950121 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.651733658 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.656428112 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.642357228 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.642974716 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.645561777 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.656435221 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.642937652 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.654321907 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.650590143 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.644360115 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.654803732 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.643330982 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.64290167 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.658200881 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.673319973 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.642489292 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.645461704 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.656350793 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.652697087 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.642904026 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.656474826 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.644156583 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.645295053 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.642877122 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.653832365 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.643392247 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.65400346 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.645095576 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.653781468 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.643199454 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.643951429 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.646288107 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.654505545 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.646905915 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.656063208 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.652968986 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.65409649 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.644077563 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.655895146 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.658699104 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.648138193 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.654724539 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.645593804 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.644264375 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.644256067 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.654695205 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.645729901 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.644828503 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.645099269 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.655606259 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.64461931 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.645085151 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.645951874 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.644708543 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.646190062 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.657002958 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.645399499 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.657749688 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.653503624 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.644243199 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.644966172 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.644435963 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.645683124 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.644965751 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.64587604 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.658029175 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.652539558 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.645917767 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.646576914 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.654545643 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.646201972 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.647449311 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.646842767 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.65774373 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.659671941 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.646020524 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.660529785 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.648319414 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.646246894 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.645652959 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.65466151 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.653193469 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.645852431 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.659367599 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.652463135 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.666636251 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.663269438 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.647803452 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.649048554 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.650074172 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.650151467 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.659541895 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.645886516 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.647366502 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.647468011 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.658788399 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.646756945 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.657208741 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.647067827 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.648078934 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.647748432 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.650469679 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.648309219 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.647834031 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.659414136 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.65803768 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.648240092 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.648803105 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.647652255 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.656349582 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.648309325 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.649411733 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.64878742 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.649275111 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.648130512 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.663216246 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.64833322 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.658182701 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.657914747 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.658813297 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.649771173 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.648224036 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.662131701 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.658318217 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.662290634 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.653395106 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.657668163 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.664532115 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.651369228 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.650624885 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.660911308 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.650598036 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.648710344 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.659192503 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.655459692 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.64987571 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.649338219 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.650503444 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.659112531 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.650033277 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.66626087 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.649824262 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.658476832 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.650015445 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.653262077 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.650412772 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.660166642 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.65803752 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.651596309 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.662029831 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.650732527 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.650367408 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.661011236 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.649968198 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.650999906 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.651122556 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.660271092 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.655224483 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.663652235 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.651345809 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.654250763 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.653630715 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.653190944 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.660281521 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.650347563 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.658738602 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.66859417 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.657144563 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.665147825 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.661774297 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.649712281 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.664147899 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.65179576 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.656083512 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.659320282 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.660398184 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.659987721 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.659916806 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.650852443 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.664767244 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.650109792 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.660753816 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.659918754 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.653903321 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.650900359 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.660035964 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.651837954 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.652716045 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.650927652 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.658448884 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.651159148 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.661957993 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.66620882 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.652561346 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.662097553 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.667133909 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.660190394 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.662260014 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.662513076 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.660850439 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.653880699 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.654061255 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.650989434 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.659454975 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.659573809 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.661690488 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.669838751 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.660307305 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.666720031 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.650832274 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.663826526 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.658475388 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.653510322 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.652123558 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.653965041 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.653609867 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.669020176 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.653406525 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.654069659 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.655508792 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.653000876 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.652223769 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.653619024 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.65352766 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.652764891 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.652487344 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.665742738 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.653472055 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.664841337 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.66437659 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.651180452 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.65839472 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.651628995 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.65339328 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.666121019 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.653791131 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.661914924 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.660945436 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.654119718 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.652727334 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.652397202 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.652327058 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.653130036 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.654681309 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.66859737 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.654650784 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.656656588 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.653309948 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.670999459 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.654126948 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.66943148 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.653986282 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.656632207 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.65593443 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.653150284 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.657441967 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.655571297 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.663485594 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.657084214 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.656658562 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.657241511 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.656796193 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.655615161 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.663082448 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.654895787 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.663809709 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.67314187 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.673437775 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.66683453 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.657402118 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.654604619 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.66299492 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.6572492 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.654896463 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.654727728 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.667692664 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.671230703 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.660603112 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.664751968 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.655151843 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.664505367 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.655938902 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.656068328 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.655686499 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.655209187 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.654476453 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.657455103 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.656548415 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.667562563 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.655476838 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.656994678 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.666094519 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.657045063 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.673025238 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.656511306 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.658198338 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.654867399 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.655126658 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.665365573 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.664762225 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.655923621 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.664622742 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.656104574 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.666494486 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.669761503 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.663294616 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.668996922 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.66483345 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.656374313 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.665435376 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.658828526 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.658081451 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.657303818 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.658377169 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.667379311 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.657369304 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.660742365 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.657340151 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.657498496 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.658823484 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.658113178 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.668143539 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.672513855 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.667579449 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.657529119 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.659501275 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.656993249 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.658316135 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.668596987 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.674015149 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.668553286 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.675539778 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.663900716 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.660662652 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.667185958 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.669505754 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.672288794 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.65803801 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.666393129 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.659888997 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.666962153 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.659384391 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.668460478 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.658546133 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.672268789 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.665826938 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.659399341 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.675386888 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.67120217 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.659667325 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.666609642 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.669934789 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.66773523 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.658382117 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.66013577 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.665219568 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.67546828 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.668772945 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.659522523 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.669933304 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.662273307 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.669381496 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.662791903 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.658909562 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.670322504 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.657053432 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.670554682 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.660617535 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.659162779 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.659645943 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.661450989 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.660891354 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.671479307 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.666113066 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.659637501 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.672585254 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.67025319 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.661722814 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.661323374 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.661527721 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.659369944 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.660368781 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.66161225 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.661707328 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.669824405 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.669534022 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.659934673 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.663682142 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.663444801 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.660597235 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.671998146 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.674372151 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.666255317 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.660993892 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.662759564 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.662823499 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.675915884 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.65970446 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.661629962 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.671206713 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.672592205 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.661221276 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.664955983 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.660735045 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.674513303 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.685002512 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.660996473 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.671329129 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.673160484 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.675453119 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.661582566 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.661818916 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.661328479 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.665100623 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.67626811 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.668191491 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.660530108 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.675703518 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.670594512 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.66412576 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.665506336 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.672572528 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.669610092 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.67186774 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.660983082 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.660795998 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.673978904 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.683574195 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.662515202 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.677356842 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.694838541 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.664524579 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.666947261 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.664419558 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.669031302 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.66199698 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.665024187 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.663951342 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.667535528 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.664236358 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.660828308 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.665029363 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.677777985 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.671686255 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.665469132 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.664692262 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.663972255 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.66550266 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.665376256 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.662978982 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.666473747 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.663234321 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.660553754 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.664837239 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.671678649 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.682094914 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.675767112 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.662663377 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.664183362 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.664077146 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.675969005 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.673605306 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.683494475 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.668045009 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.661188008 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.664763916 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.675269542 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.662868084 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.666527283 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.672442047 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.671666671 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.672737649 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.664113975 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.680988377 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.671089321 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.676607907 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.668211042 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.66515424 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.664135562 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.675062279 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.665587992 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.66541934 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.674907723 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.666977001 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.672813468 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.662957261 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.666117653 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.674575646 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.670539193 seconds)
  done (took 989.281622332 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.663734392 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.665833755 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.666699574 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.66709548 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.666241158 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.662871297 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.666212748 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.663879726 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.666006407 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.664360546 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.664959983 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.665983375 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.667520028 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.666482024 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.666201361 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.666600423 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.66604829 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.664687093 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.663559935 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.664340014 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.666659145 seconds)
  done (took 36.574547285 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.66650355 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.664869596 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.664367607 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.668185453 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.66589578 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.664301406 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.664876433 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.663802755 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.667798684 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.665445766 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.66774583 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.665762936 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.66608799 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.665690678 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.665280644 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.666518512 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.667918854 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.665539323 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.669177282 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.668264739 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.667825164 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.66735023 seconds)
  done (took 38.259526601 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.670466529 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.669869312 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.67331724 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.668152337 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.666122628 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.669819049 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.668995168 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.669189235 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.667923971 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.670914083 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.669640061 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.671631603 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.680778439 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.671117454 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.670257656 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.669802895 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.813617294 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.669828291 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.669184058 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.668087686 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.670800998 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.686139022 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.669131615 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.671740827 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.669260358 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.667862799 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.669644208 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.669818848 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.670025719 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.674012162 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.67341881 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.66886703 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.677443413 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.67869989 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.669855797 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.674366758 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.671791032 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.666973413 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.668185013 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.672058488 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.685062985 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.68890812 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.670653913 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.682435406 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.669399073 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.668562043 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.679026917 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.675033257 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.670210342 seconds)
  done (took 83.679371297 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.669092284 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.671017258 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.668953874 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.672332891 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.669594187 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.670412596 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.672384734 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.671550929 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.671754508 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.672393263 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.672875344 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.670710987 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.665592569 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.671673705 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.669896784 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.670398841 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.669046764 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.669681111 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.670299393 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.669128707 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.66777167 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.670633075 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.669068049 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.669633532 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.67116148 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.674355546 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.670350544 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.671553449 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.669854443 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.669445497 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.668394754 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.668938095 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.670202449 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.672486068 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.670450113 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.667312364 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.668951903 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.671092069 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.668457858 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.672383651 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.670253495 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.670906743 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.669119488 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.671275872 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.671454071 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.672123573 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.67059244 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.672122115 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.671604188 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.669810762 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.669211531 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.672294279 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.671934106 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.670875419 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.667663023 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.67210054 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.672469503 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.672388072 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.6715588 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.670772696 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.670899024 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.67154235 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.67204356 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.673073317 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.670164399 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.671756122 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.672196994 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.669826344 seconds)
  done (took 115.204624392 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.674507952 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.674970558 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.674619282 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.674580255 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.674901269 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.67250227 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.674237024 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.674674533 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.673726515 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.672923645 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.674526177 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.672184862 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.674607911 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.673247419 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.674740496 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.673215281 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.672545966 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.672686643 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.677261568 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.674205298 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.673936 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.676691233 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.672080525 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.673974087 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.67494755 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.673102124 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.676117651 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.672710832 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.677145268 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.673462037 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.676191088 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.674242604 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.673688089 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.675570372 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.675174236 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.676853316 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.674002035 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.672098961 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.675314671 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.673942411 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.676738556 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.675723502 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.675241609 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.675969145 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.676419114 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.673275072 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.676847901 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.674797878 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.674803884 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.673941379 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.67476862 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.674617477 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.676499968 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.674345503 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.674178286 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.67231268 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.674754891 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.673238575 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.675254172 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.67584199 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.674799957 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.676459199 seconds)
  done (took 105.428111528 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.67221851 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.676290103 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.674492856 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.674812047 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.672846402 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.67644737 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.677318817 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.675283553 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.67551292 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.675156242 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.673758569 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.673248488 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.675782214 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.673419144 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.675470884 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.676861552 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.67622615 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.677734708 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.67684977 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.678193313 seconds)
  done (took 35.112820123 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.677495134 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.677111397 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.674781678 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.676912969 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.676582094 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.67501348 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.676140943 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.676042211 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.675090869 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.676862088 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.674846316 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.676064898 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.674911885 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.675597962 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.676503411 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.67541897 seconds)
  done (took 28.424193511 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.678585197 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.678719083 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.676214866 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.6782616 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.676340936 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.676629179 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.675709462 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.677272497 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.676709517 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.678548307 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.677243029 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.676298507 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.676579426 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.676293103 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.677239594 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.677419792 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.674823042 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.676986724 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.678743487 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.676530724 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.676574863 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.675643166 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.675871459 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.677258728 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.675990746 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.676625194 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.673754635 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.676438275 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.676344382 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.678881269 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.677157381 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.676194858 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.676275383 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.674669311 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.678268669 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.679778498 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.67934891 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.67575331 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.676242419 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.677387501 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.677984693 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.676734656 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.672987196 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.672752078 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.676175343 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.677395778 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.680338485 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.679165181 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.673110945 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.675933221 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.669795752 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.674136937 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.673796089 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.671428454 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.680358738 seconds)
  done (took 93.81900728 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.671313881 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.67630968 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.671376039 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.67070172 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.676433329 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.672932394 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.672532686 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.671813749 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.676271658 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.674623391 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.672946641 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.676538987 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.679386389 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.672984791 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.672675866 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.675220114 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.680369438 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.676915481 seconds)
  done (took 31.74333246 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.676461709 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.678423723 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.677957935 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.680110567 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.681063624 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.676455889 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.674925586 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.675446961 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.681299592 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.682545712 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.671807202 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.676362642 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.67604743 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.677764392 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.679102084 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.679789588 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.681595011 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.680633132 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.67829305 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.67955878 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.67485934 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.681406809 seconds)
  done (took 38.528351612 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.676693014 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.675275895 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.697801011 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.695742434 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.701996625 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.706422286 seconds)
  done (took 11.76473931 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.682987919 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.679090207 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.68444193 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.684090904 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.681827879 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.682407063 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.683279304 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.680126316 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.680624113 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.687477391 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.684323301 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.683204938 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.682290083 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.679054578 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.682501061 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.684793033 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.679980198 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.681295672 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.678900609 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.683558236 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.682858905 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.686808058 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.683802105 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.683767177 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.68151021 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.678055218 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.681838841 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.681440952 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.686760875 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.682033894 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.681453893 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.68142678 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.683300826 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.688299814 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.684832015 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.67760753 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.681849613 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.686278493 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.680518263 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.683086315 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.680720434 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.686995892 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.685156385 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.687412518 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.683754835 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.683994109 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.678261616 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.683422062 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.683742762 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.683637756 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.684476463 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.685729471 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.682048372 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.680756078 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.683506276 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.687861835 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.686469046 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.688476146 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.680111006 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.684357251 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.682277167 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.683775456 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.683999559 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.683016046 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.685471661 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.686670263 seconds)
  done (took 112.7016589 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.681830196 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.681369344 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.680988399 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.681205815 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.679887763 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.681212202 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.680542862 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.683762018 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.67633623 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.685263553 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.681370516 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.681340777 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.681593476 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.682335657 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.68198977 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.677711401 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.679032521 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.686111876 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.684408917 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.682585206 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.680362518 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.682595811 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.680591037 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.682473576 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.682034299 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.6841169 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.67938908 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.682229812 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.681417435 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.684504896 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.682519681 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.688303294 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.683722404 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.685028994 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.681594249 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.685165499 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.685833584 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.683454642 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.680167684 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.679730782 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.683312453 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.684631958 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.683443655 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.681836956 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.68622683 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.684763537 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.683351085 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.682890602 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.685033967 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.684073791 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.684679723 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.685370341 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.68053046 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.680567481 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.684408036 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.685971848 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.689268651 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.686289969 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.686236278 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.68858217 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.683466091 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.685802503 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.683693867 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.684791166 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.685155278 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.685363966 seconds)
  done (took 112.704084747 seconds)
done (took 2306.54645318 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.789347882 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.711335448 seconds)
  done (took 15.117681378 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.853108722 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.805608942 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.690375495 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.695641368 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.688284788 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.714883094 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.698230475 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.685514816 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.690083009 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.690550109 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.691650731 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.871454643 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.744646066 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.687674215 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.691982652 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.779644328 seconds)
  done (took 49.305724416 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.692189798 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.694332024 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.701267625 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.693080526 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.693671924 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.704706653 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.726256092 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.694867834 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.72510851 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.706440729 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.758179434 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.69767564 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.691664967 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.742537115 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.703849666 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.705966464 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.784669213 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.761211134 seconds)
  done (took 32.497717412 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.766873074 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.702482336 seconds)
  done (took 10.096431158 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.714821966 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.740633576 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.691869673 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.692084889 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.711308598 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.697552786 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.698220513 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.692677371 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.714202839 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.694294462 seconds)
  done (took 68.673201108 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.696582746 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.698766485 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.693345568 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.692169977 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.690254432 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.69264947 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.694074905 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.689841181 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.334161293 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.723657275 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.697666478 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.698826666 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.694805178 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.69449436 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.691317609 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.716806284 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.806768901 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.689227228 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.689737822 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.698404677 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.692600199 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.74422023 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.705183725 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.693358465 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.72177698 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.334534579 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.696630939 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.701234107 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.800805671 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.688520498 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.69491253 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.880121346 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.694566775 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.159879757 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.966067194 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.697011982 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.705261108 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.701246473 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.689546714 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.809918146 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.694102648 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.699935078 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.645364079 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.948944278 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.793891238 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.734915406 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.986134329 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.705684942 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.696744267 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.720597869 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.696625106 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.694307604 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.706936408 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.201726644 seconds)
  done (took 123.012372578 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.691525886 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.043065331 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.858491508 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.697766657 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.973400971 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.896176004 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.692970589 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.735277157 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.692433989 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.919077937 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.943303917 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.792542085 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.694781031 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.694002371 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.695590591 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.688540936 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.847096226 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.75777619 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.695913103 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.690086535 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.71897367 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.927670286 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.814507188 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.692150213 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.715586163 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.902192111 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.813317373 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.790870562 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.40939853 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.690403953 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.749461875 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.691081601 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.694943857 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.693231739 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.851892322 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.78310373 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.772234295 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.693831518 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.689355637 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.690450067 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.43567377 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.891237792 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.791319537 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.821307087 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.939168342 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.8920544 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.472957403 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.692455965 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.427261795 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.854513424 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.918143368 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.920990635 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.813006577 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.694937792 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.218349972 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.692224452 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.692866445 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.938322118 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.918170592 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.786387774 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.697813182 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.693907651 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.693233994 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.979567298 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.695516611 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.784853646 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.700598104 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.69479917 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.788467123 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.790155957 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.924614197 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.901748496 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.727856382 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.036619969 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.204155386 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.94142579 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.757408606 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.94459718 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.697178007 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.695813318 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.771913279 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.540828324 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.948094768 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.973710368 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.940348441 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.730153943 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.411411008 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.690847999 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.915894519 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.911436128 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.951487039 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.935714007 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.927492769 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.008294789 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.693629176 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.695161015 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.004565713 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.81535526 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.692762537 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.034733203 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.919648792 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.216745878 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.723196406 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.996471986 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.824572738 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.698677116 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.321624893 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.695487727 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.922469889 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.73602817 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.697824309 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.696282741 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.910653766 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.679884777 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.695570736 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.343104253 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.753596934 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.703945724 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.920913411 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.699551512 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.959223633 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.697027192 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.928956682 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.146562038 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.722195946 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.927895817 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.939323096 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.695357042 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.932695366 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.939551608 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.808559347 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.910293529 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.331846476 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.696644187 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.982345911 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.695365306 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.697716947 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.865563984 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.697908691 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.836710484 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.697336093 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.985145869 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.716891326 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.926178134 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.69911253 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.947789238 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.728661073 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.748647234 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.702766515 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.825084454 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.698228966 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.939398407 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.855475793 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.700643231 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.697531703 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.52121957 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.69844608 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.841711152 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.921721285 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.717119319 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.767465426 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.354347034 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.698130339 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.774078671 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.722743609 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.082773012 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.698839913 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.948441935 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.698765845 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.699630958 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.702176241 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.987185398 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.885997135 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.70220329 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.6983593 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.604436824 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.700574256 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.700054029 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.883362941 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.050246507 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.698397127 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.901434907 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.701865177 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.825046696 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.702207426 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.769635969 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.036596471 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.699566697 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.699225198 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.699882476 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.702446161 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.702574191 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.958507637 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.72629232 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.198931026 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.834107261 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.973641899 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.009587019 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.940451529 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.745153911 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.704105187 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.952206392 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.703499084 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.759445363 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.703844085 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.71810862 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.923749606 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.707510813 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.906287201 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.972168356 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.553967417 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.748054102 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.704076325 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.69976541 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.700223406 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.84926612 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.780291569 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.703538121 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.703368319 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.811008121 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.819910852 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.904486286 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.7060652 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.829509359 seconds)
  done (took 864.461256796 seconds)
done (took 1164.781898709 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.702289196 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.701448768 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.703913245 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.700243801 seconds)
  done (took 28.440572329 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.710698636 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.703827067 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.704667369 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.703008213 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.708913919 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.709404086 seconds)
  done (took 11.872359614 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.702605033 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.702948097 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.709859694 seconds)
  done (took 20.750474064 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.777976755 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.085112433 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.841212179 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.121582026 seconds)
  done (took 9.465599055 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.712597031 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.711522599 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.710179412 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.708857954 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.719910187 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.717595278 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.711160181 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.711709855 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.71828663 seconds)
  done (took 17.064875002 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.748126054 seconds)
done (took 92.97369531 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.74990687 seconds)
    (2/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.055710161 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.772777755 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.039538132 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.78817565 seconds)
    (6/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.795997066 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.730400749 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.902811849 seconds)
    (9/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.528484235 seconds)
    (10/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.912217389 seconds)
    (11/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.179927521 seconds)
    (12/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.826156812 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.724883888 seconds)
    (14/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.850977605 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.735677506 seconds)
    (16/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.743100688 seconds)
    (17/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.721693545 seconds)
    (18/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.969041673 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.399810056 seconds)
    (20/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.042847361 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.886470583 seconds)
    (22/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.092344247 seconds)
    (23/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.09860278 seconds)
    (24/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.940683902 seconds)
    (25/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.798824355 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.741023137 seconds)
    (27/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.247803737 seconds)
    (28/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.035595891 seconds)
    (29/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.821697259 seconds)
    (30/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.853806796 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.719793157 seconds)
    (32/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.071865951 seconds)
    (33/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.723083348 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 3.157322934 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.722156665 seconds)
    (36/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.82281366 seconds)
    (37/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.654302079 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.723748479 seconds)
    (39/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.133057062 seconds)
    (40/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.552039815 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.52365266 seconds)
    (42/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.728476458 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 3.266053576 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.521848805 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.831198411 seconds)
    (46/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.721993668 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.861598339 seconds)
    (48/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.182752092 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.70678181 seconds)
    (50/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.807595584 seconds)
    (51/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.07391692 seconds)
    (52/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.86708759 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.858344098 seconds)
    (54/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.731099802 seconds)
    (55/309) benchmarking ("sort", Bool, false)...
    done (took 2.633199416 seconds)
    (56/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.169623503 seconds)
    (57/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.83388842 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.024366539 seconds)
    (59/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.965857454 seconds)
    (60/309) benchmarking ("sort", Float32, false)...
    done (took 5.454693909 seconds)
    (61/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.280513921 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 5.41397137 seconds)
    (63/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.103640505 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.973475275 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.755295594 seconds)
    (66/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.723928185 seconds)
    (67/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.989341089 seconds)
    (68/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.725463629 seconds)
    (69/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.803487727 seconds)
    (70/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.88920788 seconds)
    (71/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.747073668 seconds)
    (72/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.741175092 seconds)
    (73/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.809654779 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.110271337 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.063022737 seconds)
    (76/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.746018517 seconds)
    (77/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.046868807 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.724618173 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.928116855 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 4.152975028 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.73651558 seconds)
    (82/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.821190454 seconds)
    (83/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.895287678 seconds)
    (84/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.039282886 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.728626411 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.864870069 seconds)
    (87/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.734063131 seconds)
    (88/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.738894293 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.966597813 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.864077739 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.864080187 seconds)
    (92/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.729496613 seconds)
    (93/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.724500414 seconds)
    (94/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.401395761 seconds)
    (95/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.724038045 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.811541153 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.627943011 seconds)
    (98/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.792947972 seconds)
    (99/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.031019167 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.85613908 seconds)
    (101/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.753904784 seconds)
    (102/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.805547397 seconds)
    (103/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.814288022 seconds)
    (104/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.8454457 seconds)
    (105/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.819935768 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.119221215 seconds)
    (107/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.746433441 seconds)
    (108/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.852282767 seconds)
    (109/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.931461413 seconds)
    (110/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.752855966 seconds)
    (111/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.405815465 seconds)
    (112/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.965658175 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.828127233 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.625912573 seconds)
    (115/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.732334563 seconds)
    (116/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.991173353 seconds)
    (117/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.811765146 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.856702075 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.104321568 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.076607265 seconds)
    (121/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.754989074 seconds)
    (122/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.827278559 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.034296013 seconds)
    (124/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.727071368 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.404803445 seconds)
    (126/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.933919298 seconds)
    (127/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.733716081 seconds)
    (128/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.69762774 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.342067512 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.07882923 seconds)
    (131/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.764162612 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.97486309 seconds)
    (133/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.838831278 seconds)
    (134/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.179726085 seconds)
    (135/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.63204617 seconds)
    (136/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.791551525 seconds)
    (137/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.727641229 seconds)
    (138/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.960891547 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.980698958 seconds)
    (140/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.071325231 seconds)
    (141/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.098315985 seconds)
    (142/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.997105741 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.080011904 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.757603552 seconds)
    (145/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.048526972 seconds)
    (146/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.734969649 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.787543432 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.395099928 seconds)
    (149/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.886738674 seconds)
    (150/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.738468508 seconds)
    (151/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.158432835 seconds)
    (152/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.734682381 seconds)
    (153/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.741996823 seconds)
    (154/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.95497648 seconds)
    (155/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.571217325 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.348545808 seconds)
    (157/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.898639639 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.995358009 seconds)
    (159/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.731609582 seconds)
    (160/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.051357725 seconds)
    (161/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.045149191 seconds)
    (162/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.751337897 seconds)
    (163/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.865814716 seconds)
    (164/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.730992316 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.048769918 seconds)
    (166/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.042536144 seconds)
    (167/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.891523546 seconds)
    (168/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.91320331 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.021882085 seconds)
    (170/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.736545476 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.433244994 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.74029146 seconds)
    (173/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.066356649 seconds)
    (174/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.007653436 seconds)
    (175/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.8934465 seconds)
    (176/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.917315938 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.865807221 seconds)
    (178/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.887481982 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.735139066 seconds)
    (180/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.974717669 seconds)
    (181/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.73303333 seconds)
    (182/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.901536114 seconds)
    (183/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.212874582 seconds)
    (184/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.921523305 seconds)
    (185/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.521392251 seconds)
    (186/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.73558517 seconds)
    (187/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.918238887 seconds)
    (188/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.870514636 seconds)
    (189/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.12403763 seconds)
    (190/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.751980067 seconds)
    (191/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.81536482 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.063123178 seconds)
    (193/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.990550847 seconds)
    (194/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.748854393 seconds)
    (195/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.760957896 seconds)
    (196/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.222290204 seconds)
    (197/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.822596623 seconds)
    (198/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.049590292 seconds)
    (199/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.777328664 seconds)
    (200/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.755543616 seconds)
    (201/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.976495968 seconds)
    (202/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.761157583 seconds)
    (203/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.190949802 seconds)
    (204/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.917078084 seconds)
    (205/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.83454927 seconds)
    (206/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.085783919 seconds)
    (207/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.919755766 seconds)
    (208/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.052827784 seconds)
    (209/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.114132778 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.798464454 seconds)
    (211/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.752921909 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.935831129 seconds)
    (213/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.758385146 seconds)
    (214/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.729770047 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 3.337120062 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.784764882 seconds)
    (217/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.059509895 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.732326364 seconds)
    (219/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.829355554 seconds)
    (220/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.014416511 seconds)
    (221/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.736218591 seconds)
    (222/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 3.257209243 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.988719052 seconds)
    (224/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.883270941 seconds)
    (225/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.75027985 seconds)
    (226/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.39658916 seconds)
    (227/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.024777958 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.382269433 seconds)
    (229/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.048706179 seconds)
    (230/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.730174564 seconds)
    (231/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.976867981 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.735892643 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.764026315 seconds)
    (234/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.737497655 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 8.00785632 seconds)
    (236/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.746253667 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.124547073 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.037516459 seconds)
    (239/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.814140103 seconds)
    (240/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.996385859 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.863761539 seconds)
    (242/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.990531291 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.733193689 seconds)
    (244/309) benchmarking ("sort", Int8, false)...
    done (took 5.787913904 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.644308008 seconds)
    (246/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.057746118 seconds)
    (247/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.817435258 seconds)
    (248/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.814970933 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.838229087 seconds)
    (250/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.853831209 seconds)
    (251/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.816772656 seconds)
    (252/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.041391099 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.747581413 seconds)
    (254/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.071514943 seconds)
    (255/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.745585905 seconds)
    (256/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.170742963 seconds)
    (257/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.200094942 seconds)
    (258/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.738750168 seconds)
    (259/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.25090245 seconds)
    (260/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.838391667 seconds)
    (261/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.974756898 seconds)
    (262/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.842620156 seconds)
    (263/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.736503864 seconds)
    (264/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.488487096 seconds)
    (265/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.734116103 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.145961221 seconds)
    (267/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.976321605 seconds)
    (268/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.737387213 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 3.018875537 seconds)
    (270/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.821501326 seconds)
    (271/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.619616838 seconds)
    (272/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.850986 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.870578573 seconds)
    (274/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.94741409 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.737227878 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.072278734 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.409179362 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.902073351 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.738164058 seconds)
    (280/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.825911441 seconds)
    (281/309) benchmarking ("perf_sum", Float64, false)...
    done (took 3.170163465 seconds)
    (282/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.018364597 seconds)
    (283/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.764475409 seconds)
    (284/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.112636757 seconds)
    (285/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.740068098 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.634800998 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.582356757 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.860922069 seconds)
    (289/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.745881769 seconds)
    (290/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.049431341 seconds)
    (291/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.76437621 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.864135409 seconds)
    (293/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.737532311 seconds)
    (294/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.838081987 seconds)
    (295/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.852883726 seconds)
    (296/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.744393362 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.637651615 seconds)
    (298/309) benchmarking ("sort", BigInt, false)...
    done (took 6.740342129 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.772698957 seconds)
    (300/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.896027799 seconds)
    (301/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.741529568 seconds)
    (302/309) benchmarking ("sort", Float64, false)...
    done (took 5.60187535 seconds)
    (303/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.815850994 seconds)
    (304/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.976545921 seconds)
    (305/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.762732388 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.044314481 seconds)
    (307/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.740818002 seconds)
    (308/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.942400861 seconds)
    (309/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.753104369 seconds)
  done (took 962.769732563 seconds)
done (took 964.708372175 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.760493619 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.753336565 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.738195709 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.759746894 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.84944448 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.780526411 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.752615216 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.743014302 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.78718205 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.787838005 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.736219375 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.779440843 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.740768219 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.739733099 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.738590334 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.756218615 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.048804856 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.770844869 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.75611446 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.75189996 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.757038138 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.73724467 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.787979392 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.779586439 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.744566344 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.744281107 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.742371332 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.758012452 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.855065489 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.742366842 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.743389524 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.750335914 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.049148612 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.770997355 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.736956239 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.759616244 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.751383245 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.750877818 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.74396528 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.771262479 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.134428402 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.778140425 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.742242411 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.740116174 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.741009642 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.748816019 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.740394867 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.748713248 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.754680213 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.754898541 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.12920904 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.795812381 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.744257542 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.742339894 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.752931282 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.739776781 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.745275101 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.757329326 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.760075048 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.756866857 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.034140472 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.779531019 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.744829254 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.759284001 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.749131335 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.163401003 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.77849222 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.748655324 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.136609169 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.787576596 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.166006296 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.790037915 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.743656034 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.756450782 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.773802931 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.049914404 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.770455685 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.739350622 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.751255235 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.739708748 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.753806698 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.75624488 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.746217669 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.742910734 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.758634078 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.784286297 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.754457076 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.742604158 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.756333653 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.759901121 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.750909343 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.757601031 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.746489155 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.741861051 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.753484209 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.746922767 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.746651531 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.745326932 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.746333904 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.756029267 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.136059853 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.797615327 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.738483422 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.739048383 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.74130125 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.758180797 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.137679473 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.783757973 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.76595469 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.791465138 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.743967991 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.038963817 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.77954791 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.761099596 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.753419297 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.745129837 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.741127635 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.040177022 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.163923864 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.798143923 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.74328701 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.742800068 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.760020582 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.744518961 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.74046765 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.055569267 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.776323463 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.758666945 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.867596017 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.755210199 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.776694601 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.740997909 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.750710472 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.789727145 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.760892369 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.775922 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.748582613 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.762961657 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.76413581 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.742520765 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.755217006 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.75631893 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.742672616 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.75250404 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.741552567 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.78941235 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.758855164 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.758566117 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.765364163 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.866991639 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.741323612 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.041387221 seconds)
done (took 274.481643502 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.824592764 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.741783321 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.835321616 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.742365506 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.835364744 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.819262876 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.743184028 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.743619555 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.742883296 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.235877195 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.744081808 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.751878168 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.744732437 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.742533686 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.815490599 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.744224899 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.741028793 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.183020616 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.744134611 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.825341909 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.742740139 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.743138237 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.744164868 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.233650717 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.74316062 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.743239982 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.82504999 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.744519802 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.28877766 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.744847175 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.743642463 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.184957931 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.823552074 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.771274594 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.751799807 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.749869332 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.836315552 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.755607614 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.81341804 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.81447524 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.841027408 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.777992544 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.74484614 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.744146106 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.747472654 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.745812774 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.744780529 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.77536264 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.747328406 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.750181249 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.184738575 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.748664151 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.752382095 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.745847365 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.743976103 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.772437817 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.745989649 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.746041864 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.825742815 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.745573237 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.81351541 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.348210578 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.23602557 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.747539469 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.745368786 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.745462406 seconds)
  done (took 177.043663589 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.813788603 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.825097245 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.81347167 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.751514992 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.794119626 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.813365964 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.752071383 seconds)
  done (took 14.242293187 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.753085628 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.746277753 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.796871927 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.796910221 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.746385329 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.902480738 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.747153936 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.760194884 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.752019012 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.774260594 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.74760301 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.748045602 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.753082482 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.747655719 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.798031137 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.759247667 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.865846289 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.751496506 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.74826856 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.896231201 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.754304177 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.756099373 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.772960311 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.76063972 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.750645646 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.755804474 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.315414858 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.747890634 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.747638349 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.747640018 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.747157953 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.79080169 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.748269577 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.75112357 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.747881773 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.861801289 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.747511605 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.749320788 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.748104481 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.75063904 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.749810014 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.747844994 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.74819727 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.748955258 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.749909276 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.77338597 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.748315993 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.74823715 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.749792186 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.7483235 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.774791684 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.750908768 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.748133677 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.753862249 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.794695087 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.759112944 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.750596988 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.749927676 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.74879341 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.751959188 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.899865908 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.802791934 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.749933189 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.80052832 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.750384488 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.751632944 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.750565518 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.749041609 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.838914832 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.748738417 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.800404059 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.749569651 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.907578488 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.774555206 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.753112512 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.752967491 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.75390164 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.75024761 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.753437764 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.758931684 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.748358048 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.752839131 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.758451634 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.756245851 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.751800793 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.864102373 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.891926165 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.750538838 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.752395479 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.759701137 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.750970969 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.796069025 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.752879491 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.753774872 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.810205396 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.869278855 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.779478616 seconds)
  done (took 194.016646663 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.759920047 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.760404256 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.752979249 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.769477824 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.753873304 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.752604994 seconds)
  done (took 12.233672415 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.754250319 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.756338492 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.753049873 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.753092073 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.75372701 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.752758437 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.751084763 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.755185959 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.75423406 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.752345029 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.752725451 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.7545553 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.756071261 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.754193394 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.751690482 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.753418906 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.75301083 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.754459469 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.752513728 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.752644319 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.002565136 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.756788163 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.752427779 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.755571941 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.759088384 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.754762956 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.766726115 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.752159125 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.753260287 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.763282617 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.760139022 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.753919793 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.757941818 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.762460361 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.756609249 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.757963046 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.760514175 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.754712024 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.755454911 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.755159421 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.755616112 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.755317513 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.753627899 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.755487536 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.757259371 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.763626472 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.759725882 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.770515759 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.755791552 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.754105225 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.75645151 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.753862363 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.755476192 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.754484786 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.761627825 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.764098277 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.76204092 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.75636538 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.758848481 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.759696131 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.759501661 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.754262066 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.757004958 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.761713199 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.762457513 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.755740777 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.759440457 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.761486485 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.755819317 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.756235677 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.757566961 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.7563887 seconds)
  done (took 129.410764919 seconds)
done (took 528.641358831 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.012218079 seconds)
  done (took 8.700499547 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.912489621 seconds)
  done (took 8.660940917 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.238662516 seconds)
  done (took 9.928031938 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.825561849 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.766472786 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.768977666 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.761088324 seconds)
  done (took 28.836331447 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.026627986 seconds)
  done (took 8.71542149 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.782899722 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.759012241 seconds)
  done (took 15.306982494 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.840207553 seconds)
  done (took 8.531331752 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.057397817 seconds)
  done (took 8.758178849 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.771423914 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.766655585 seconds)
  done (took 15.243197873 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.759653762 seconds)
  done (took 8.443054854 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.024206428 seconds)
  done (took 9.811934418 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.777865015 seconds)
  done (took 8.5374701 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.77891739 seconds)
  done (took 8.464693444 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.824418072 seconds)
  done (took 8.50867949 seconds)
done (took 158.138050256 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.762824077 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.75514243 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.754946796 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.76056603 seconds)
  done (took 28.718070142 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.792197704 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.81045877 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.794904588 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.801716611 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.794029713 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.791758805 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.785893712 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.786176852 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.801658443 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.796381817 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.792433527 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.794075124 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.790236864 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.788018687 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.794648101 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.791730509 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.802111296 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.78858536 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.780426902 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.796268818 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.75743767 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.799236647 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.793572459 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.758512506 seconds)
  done (took 44.670190932 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.955646142 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.831760539 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.911721289 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.815263669 seconds)
  done (took 9.205625327 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.810291102 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.813158645 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.821113768 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.859225625 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.883626046 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.820319654 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.785074269 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.780003736 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.764520887 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.812504723 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.888562772 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.80317386 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.899368747 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.757895982 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.938591264 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.760287872 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.761012089 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.810264038 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.857883984 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.874954279 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.758174174 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.812433964 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.823464561 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.816430069 seconds)
  done (took 45.399355285 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.761843876 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.774356868 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.769288166 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.761897412 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.758968524 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.761613474 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.767662661 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.763695908 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.778551288 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.762460287 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.758880838 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.761885798 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.766270712 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.759745961 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.758144804 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.774079119 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.775426875 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.758292772 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.763299351 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.765273508 seconds)
  done (took 36.989200428 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.7575587 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.601834018 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.102346178 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.009513118 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.753989061 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.755289014 seconds)
  done (took 30.66415435 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.769525319 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.764487643 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.758086946 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.815278639 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.896916872 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.761704607 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.757958392 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.77087643 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.803584323 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.821138529 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.781080328 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.785717829 seconds)
  done (took 23.178847113 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.755603088 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.757370772 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.755970853 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.768788626 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.767131291 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.766574311 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.765346544 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.75449938 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.76807091 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.777350918 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.764849211 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.772824202 seconds)
  done (took 42.867247557 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835237103 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.633823883 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208250098 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.225721349 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.27911933 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.960587644 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.762003394 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.841354738 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.758245208 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.031797247 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.112171431 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960868118 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.997155224 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.509422626 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.758231895 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.233444679 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.048794805 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974027082 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.788371316 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385240895 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866206597 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.270417179 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.432379328 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.86734846 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.95807243 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.880947936 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.017345931 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.71056065 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.804654342 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.759434015 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.761037993 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.75803255 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.028862338 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878394607 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829554275 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.765058795 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.172038303 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.463106169 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.762826507 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.441628548 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.317438558 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.875662202 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.761156899 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.758692667 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.688293611 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.271115411 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.845655353 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.75962637 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.462438059 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.761568176 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.76648124 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835310605 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.762776314 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.566660955 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.443259746 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.027456601 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.760308632 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762468139 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.311743604 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758966496 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378068135 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.689325627 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.848380911 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.444077879 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214268708 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.915177662 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.759933606 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.760715109 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.688755474 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.444086779 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.879105784 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.895603392 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.773511029 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.403879639 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053660642 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.172065249 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.810943589 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03464054 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.623628139 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.691374002 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976198914 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.710270974 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.688294604 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.604999395 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.68515532 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975482833 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796595835 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.370134289 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.798401392 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.848210031 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.765042099 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775903036 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.763338461 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.973163347 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.653889081 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.76057479 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.051953396 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.011751229 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775757138 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.849940731 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.685409788 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.759823862 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002978621 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.963889362 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.01761441 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.231333024 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85133829 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.577305609 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.88366909 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.68219227 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.766080639 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.03002553 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823460586 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.756045408 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884091754 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.707561981 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009557472 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.624596606 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.967800572 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.109296991 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.997245442 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.103864222 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.011835028 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.82283515 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.766771688 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.760702101 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.444928824 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.369989203 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.973922422 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.77636535 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.254099922 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.764795221 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.762980384 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.697260054 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.410765532 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.116318147 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.84036954 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.976733739 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.712116799 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.035797663 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.689186377 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.899040601 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.768610779 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.975483925 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.405206819 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.846030882 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.013410256 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.879134501 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.014151641 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893993436 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775104298 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855005007 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779401132 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.067922743 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.125524673 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.763956073 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.766064344 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.453854432 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.820631236 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.761523245 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.766132329 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.291335102 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03435608 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.784376205 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.766417243 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.640197714 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.773285382 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829297965 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.76954425 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.76832391 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.286578656 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.271800004 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.771084623 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.41891152 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980819308 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.767886769 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.386755108 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940477199 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.778434906 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.033803169 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.831777175 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.687556426 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.464179069 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.46451198 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.764196811 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.69152429 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.764815155 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767279925 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.770122751 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.955429934 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.037723124 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.814848289 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.450254911 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.873730805 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.768220559 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.767135808 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.7658994 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.25997807 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.774618238 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.307811811 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.880471625 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894124225 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.779704699 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.692293412 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.767723379 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.767319632 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.768533468 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.71492383 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813910214 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.442663333 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.968323943 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.011820604 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.173069504 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.774574143 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.438606522 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.882305782 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.778991823 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.051917436 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294130573 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.86366777 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835467268 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.77374294 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.445510538 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.502038024 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.318826404 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070870628 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081653661 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113820181 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.142622512 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.089757457 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.850735808 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995100011 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.286966458 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.824668531 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.855943965 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.704991103 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.781615423 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.412591388 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.124372814 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.775195869 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983296817 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055339925 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.140468311 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.900433695 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.970391391 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795842616 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.575685001 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.794484319 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.305083485 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.78793862 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.220893422 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972283286 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848976545 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.052268078 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.854253411 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.76667815 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108806001 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817075548 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.467755185 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.119385784 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.161466242 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.220789469 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991015069 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.773365469 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.208893285 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116092121 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.961339628 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.889332106 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.698015979 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.776168258 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.776027525 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.783146278 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.744300592 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.596712943 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.016416937 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.774606131 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996166021 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.888276818 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133545491 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.675475657 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.771906079 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769281595 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021282464 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.444930126 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926960886 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.066111496 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.342549208 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.78344424 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.696740175 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701097962 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.47045628 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.781694496 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.738394074 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982810587 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.881438193 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.454623785 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.155735073 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080769229 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.014604454 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.782064996 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.037980925 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049167134 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.263341639 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793190849 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.871099654 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.059825602 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.51474368 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.985407595 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.997896688 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303467507 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.988240282 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226308722 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.748870393 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.770804313 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.977682112 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.98612146 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.131204626 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946876104 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.48278617 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.789326357 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152086574 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839862557 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.147689674 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.957087224 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.85748828 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.778837355 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853034097 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.773294242 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.779186552 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.775695774 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781109311 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.123328423 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.890573652 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.780498018 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853875155 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782030628 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.339696769 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.781763985 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.044649245 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136388378 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.10468326 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.836196217 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.772791795 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.782142877 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.703164063 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901638765 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.214289722 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.044283228 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.895305733 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.90883928 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79938103 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.084295664 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.02201375 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082376296 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.050316379 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.658901576 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414468269 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.895377188 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.992184377 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.784941656 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.980429797 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995143715 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084592631 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338160836 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.914359 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.96936407 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049931451 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.140793097 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.779327448 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261920913 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.787189909 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186480513 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.814943241 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.133044337 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035816458 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.780955613 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897025501 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.782857996 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.975218597 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.231761475 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.402231731 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.124626699 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.631563764 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.780977283 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047533829 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.104081815 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082972217 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855865308 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781984813 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.480844403 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909586681 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.632071955 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.993844554 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.777820409 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980524182 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.488405734 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.780924298 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.045082077 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080393693 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.77779579 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.645633371 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797994891 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.779651075 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.992736844 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993277107 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.024354211 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.783072049 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.778931741 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.585410701 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050064765 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.843654232 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.703487994 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.778024714 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825868076 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.007774304 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.796815334 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.292502006 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.47845517 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062095362 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.688749525 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793906042 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.182022336 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.156642985 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111594403 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.300821952 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000351574 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.335492372 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.626173992 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.155819205 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.782055872 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.18079074 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165161196 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.787152933 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.287490006 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893592848 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.049265862 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.109908492 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.80182773 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.483138492 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.810179897 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999402334 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.143675699 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716092059 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.791178444 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.837481746 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.784604585 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.786041382 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.791837018 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.685997598 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.218913427 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.625034296 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33987597 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.791105709 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.839716139 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.13111076 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.314316333 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885016714 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.797231312 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.778418206 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.4983808 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.066560437 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.023997958 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.277310498 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.873689911 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.7811147 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.785991251 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.703598779 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.961515049 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.968184415 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072047224 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.122353779 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.888939559 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.783989512 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.997705518 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98519224 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.132694288 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914348432 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.904341318 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894205587 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.719682062 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.48671441 seconds)
  done (took 1612.335547789 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.785213923 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.814206054 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.833183967 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.812473315 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.83248303 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.878237278 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.900906802 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.828473326 seconds)
  done (took 56.39774556 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.780965427 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.947537549 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.783351456 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.778094392 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.784214513 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.778854224 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.932960325 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.789456816 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.804955721 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.782903472 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.781603401 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.776111789 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.052190707 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.798770945 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.782759637 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.776703925 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.781771845 seconds)
  done (took 72.672534293 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.781247555 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.927843293 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.809342315 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.783391723 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.496940753 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.792041354 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.705943392 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.827268473 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.784254256 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.821626546 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.078468142 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.823927487 seconds)
  done (took 88.343667496 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.793459665 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.78328705 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.785958009 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.784300208 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.782350063 seconds)
  done (took 10.648412899 seconds)
done (took 2103.795954722 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.011019049 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.838532825 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.881718117 seconds)
  done (took 5.430606278 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.92764102 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.975009303 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.086861531 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.093570787 seconds)
  done (took 9.797758107 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.091567805 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.15043847 seconds)
  done (took 5.950639366 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.098882237 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.795679598 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.151131764 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.781627455 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.784091689 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.783513866 seconds)
  done (took 22.065164862 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.784302355 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.782055345 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.782191342 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.782697481 seconds)
  done (took 8.840674983 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.782499716 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.489984909 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.781346551 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.7956926 seconds)
  done (took 20.561417032 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.92987172 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.901075346 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.924278993 seconds)
  done (took 7.46750817 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.926440076 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.645803368 seconds)
  done (took 6.281001429 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.918956908 seconds)
  done (took 3.630080681 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.813175439 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.054165384 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.285028739 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.848050219 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.426463636 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.040675066 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.12666309 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.01028451 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.232874895 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.268546602 seconds)
  done (took 24.817150936 seconds)
done (took 129.608304118 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.358672259 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.811412337 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.989025388 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.155637882 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.025827438 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.986150668 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.008408961 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.141814084 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.831623402 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.824289445 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.165005915 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.023685668 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.953625254 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.80931003 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.958898623 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.807881208 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.025162163 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.191287933 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.880648005 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.070286281 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.01976856 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.797725785 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.981957227 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.806561339 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.028290984 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.938943263 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.338461879 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.807582375 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.972763347 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.348141057 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.939919838 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.229926011 seconds)
  done (took 165.943021996 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.789610605 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.784454421 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.788664956 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.785184895 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.336561869 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.788520194 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.794188458 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.788807148 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.228857045 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.211756311 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.782218086 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.320298597 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.784514681 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.779808955 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.780306156 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.779906456 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.397714931 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.779535365 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.775485437 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.773497521 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.770281756 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.150681542 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.769622893 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.158092613 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.395350529 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.765794877 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.766010469 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.764121511 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.768361341 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.768166793 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.765746051 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.757485191 seconds)
  done (took 206.568947908 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.762637409 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.757367525 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.755200224 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.755901109 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.754932023 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.752360753 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.755488922 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.754969402 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.533311043 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.530059583 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.758276761 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.757094101 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.757515213 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.754652521 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.756705782 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.755214302 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.755546116 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.750337437 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.759136671 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.758020525 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.75711374 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.344748406 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.757261843 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.35148163 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.756487207 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.759967225 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.755530622 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.754505549 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.754331893 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.757718328 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.756656127 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.756573632 seconds)
  done (took 216.628531173 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.000286292 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.760872669 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.759486519 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.752945455 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.758768332 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.761339171 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.747126339 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.014027102 seconds)
  done (took 18.2420399 seconds)
done (took 609.109308294 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.148722199 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.984985077 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.94178003 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.781549484 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.050257819 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.826293205 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.779876089 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.849925252 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.607875794 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.851555956 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.415376937 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.802736746 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.515254341 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.808515086 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.900123703 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.839638252 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.370641373 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.480359386 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.957148903 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.841645214 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.958387276 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.680059001 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.859276412 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.636801694 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.540355246 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.73976742 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.788862665 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.378723533 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.792781567 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.940626761 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.438458956 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.045986153 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.793817098 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.775990807 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.834978638 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.810520944 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.977500743 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.789652233 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.903374747 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.484627061 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.868311552 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.522336866 seconds)
  done (took 98.002995671 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.772433833 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.768508027 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.76991099 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.768530438 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.775888744 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.766945837 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.771393154 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.767381442 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.768965259 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.767773528 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.76654389 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.776547044 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.768962728 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.777846628 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.767918929 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.770465738 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.771296597 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.775687302 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.766260074 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.768082977 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.770268717 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.769464459 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.763071689 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.77003708 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.769471747 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.768600753 seconds)
  done (took 47.724071354 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.763168141 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.932554301 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.004232265 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.779332627 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.763520011 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.767178591 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.783812816 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.766411374 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.765858423 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.765991627 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.867554448 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.76399459 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.783040326 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.003368061 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.775969787 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.762050025 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.766164634 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.76379039 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.940136231 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.778561105 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.786705718 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.766123236 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.785893777 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.774241757 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.765832812 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.765126783 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.769860074 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.257879896 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.772497134 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.869111511 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.820275731 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.789350097 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.17603724 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.012256084 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.819459926 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.769189803 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.767238547 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.875526306 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.770087654 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.764584054 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.784610339 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.769750366 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.006999353 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.290242298 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.779941043 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.762847976 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.267046934 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.879163426 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.803602283 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.773422462 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.007684915 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.778697087 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.765083342 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.768318305 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.800692434 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.768306485 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.767169377 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.12580191 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.775882194 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.784680441 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.766408792 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.766056359 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.946567973 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.775027914 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.931023855 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.773299839 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.771640049 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.769065097 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.006635543 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.782016809 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.312002907 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.779401924 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.76597652 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.865336099 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.935441937 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.295228731 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.778659519 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.944743077 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.193856887 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.789210988 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.76999093 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.247040241 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.791396891 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.768127846 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.765263485 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.771437942 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.767444733 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.811665393 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.784691765 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.218984626 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.307620478 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.144373264 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.792490645 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.778680818 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.767661423 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.125811942 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.772881389 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.769046524 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.001247699 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.31447271 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.778439893 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.778971869 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.28791103 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.781900584 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.787448502 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.774528937 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.014787914 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.78131925 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.811509001 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.7687508 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.776344261 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.769711908 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.785412569 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.771469306 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.769240065 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.281279021 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.888231932 seconds)
  done (took 220.357636002 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.766847321 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.77121168 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.766879731 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.771376489 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.769829921 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.768905148 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.770002571 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.768537275 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.771425251 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.770448808 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.770357987 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.769733948 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.770861318 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.768992412 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.778573057 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.769407492 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.3751236 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.769833211 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.769611092 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.766370713 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.410865942 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.772908421 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.76697774 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.765178787 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.767959835 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.769718533 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.779947479 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.774122391 seconds)
  done (took 164.515522211 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.772887281 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.886062711 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.791144736 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.799336913 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.775460225 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.772332595 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.868346559 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.786768119 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.775019046 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.769436973 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.772388728 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.831464991 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.778914634 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.865887528 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.801367597 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.874113072 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.869374626 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.771370268 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.770419808 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.771116235 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.800097996 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.778294274 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.831538554 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.892187552 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.792650991 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.886368983 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.791407692 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.771799787 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.772649754 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.883310905 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.790747295 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.833159529 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.801620696 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.784717137 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.886257199 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.882780938 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.87311837 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.86988062 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.774702416 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.773290134 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.774784067 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.775209057 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.883457423 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.792216378 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.77301262 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.888578348 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.788382158 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.773702641 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.775923417 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.77410733 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.788283326 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.787523883 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.834155786 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.901358481 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.810129524 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.791621449 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.870844278 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.899695704 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.768975453 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.872453333 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.77384862 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.886540803 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.793886381 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.77567075 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.775350652 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.774696141 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.80597031 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.874728181 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.875263012 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.778252571 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.871032422 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.803933181 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.777381619 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.773370096 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.776908961 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.88758357 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.888008597 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.805464852 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.809050316 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.799084676 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.780388064 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.773610646 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.77735651 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.792791794 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.775139137 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.88355789 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.892023395 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.778413124 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.774194113 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.774277292 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.777091743 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.803834024 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.890437121 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.815064791 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.877159731 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.83691008 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.851678828 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.791253166 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.788684122 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.775847826 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.839262471 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.792496528 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.788229766 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.078681561 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.832939485 seconds)
  done (took 192.449331934 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.178337009 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.822105939 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.824792098 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.094405146 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.123837228 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.662743501 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.820565565 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.81897044 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.841617047 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.005099693 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.89918324 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.838944966 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.80881171 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.795467845 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.819307987 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.843406277 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.828988666 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.180227816 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.035476401 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.989677574 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.813108215 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.094355155 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.125994534 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.405949495 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.87237224 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.232532794 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.385785548 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.95206683 seconds)
  done (took 58.82853494 seconds)
done (took 783.570012586 seconds)
SAVING RESULT...
DONE!
