cset: moving following pidspec: 32518
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.244207082 seconds)
loading group "string"... done (took 0.630793468 seconds)
loading group "linalg"... done (took 8.170923846 seconds)
loading group "parallel"... done (took 0.169993765 seconds)
loading group "find"... done (took 1.258159147 seconds)
loading group "tuple"... done (took 2.001327259 seconds)
loading group "dates"... done (took 1.294611822 seconds)
loading group "micro"... done (took 0.197677633 seconds)
loading group "io"... done (took 0.958392418 seconds)
loading group "scalar"... done (took 39.491693711 seconds)
loading group "sparse"... done (took 11.87324255 seconds)
loading group "broadcast"... done (took 1.029010684 seconds)
loading group "union"... done (took 13.812670394 seconds)
loading group "simd"... done (took 4.772823453 seconds)
loading group "random"... done (took 9.323131816 seconds)
loading group "problem"... done (took 1.600588995 seconds)
loading group "array"... done (took 21.449067902 seconds)
loading group "misc"... done (took 1.624738916 seconds)
loading group "sort"... done (took 3.357984998 seconds)
loading group "collection"... done (took 17.992736849 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.53606638 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126983025 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.138343244 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121319633 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.155992782 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117837033 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125374149 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085122652 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.901959489 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.151111694 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115209672 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.438075711 seconds)
done (took 5.358228048 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172732294 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088147603 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081992315 seconds)
  done (took 1.199346057 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066516611 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128761742 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067558136 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068012537 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067585489 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067532998 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06801353 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067989206 seconds)
  done (took 1.565305116 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073267262 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069893177 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066962122 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069134651 seconds)
  done (took 1.307831169 seconds)
done (took 5.351216359 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.794155557 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.207303936 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190763809 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.408165443 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136732678 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.180791309 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.652609784 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.324817234 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.203784096 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095767961 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113555577 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.364194076 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125307002 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.649387907 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078684469 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.097879175 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139774164 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.465386011 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.073167655 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.0860244 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.096000057 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132622808 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.093367078 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078766546 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.152175995 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070978569 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144055296 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084008381 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069503746 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.22375206 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175981512 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.67570072 seconds)
  done (took 10.451627754 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103012906 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.101240087 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069875733 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.126459719 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099220253 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070634759 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.076246625 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068765853 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090535048 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129520635 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092058639 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109237701 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066971773 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070240564 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084419208 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.198225355 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081189243 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082356375 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069040815 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079707008 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108350257 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079596987 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080937101 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.083230392 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130171829 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170251773 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09756984 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098306736 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067966521 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082324813 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116215079 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130183834 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067607071 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070808231 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126136443 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095439578 seconds)
  done (took 4.543338038 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.107202426 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.091830038 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.152939237 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091559301 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.141763765 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065792249 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112271652 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066743668 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08338241 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.237468393 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.378170187 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.631199062 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.124193575 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117666551 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105220946 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071158466 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069909588 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069287432 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.262673734 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.098394316 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114869824 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083382612 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070412671 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069378697 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.06471448 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07147633 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063986057 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073333985 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087316603 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076276198 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.329615411 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125267605 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068703094 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.936534449 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.071240561 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.141232186 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068528398 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106445297 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094472092 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.278453151 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070832869 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066038531 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162968844 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065683276 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072690637 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067184983 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085580713 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110601309 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121243156 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066285658 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067195825 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.17076638 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065376586 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082849836 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.225028201 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153933871 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06941347 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.295756419 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.094547174 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072232954 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066256056 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.17782056 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.118918333 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069528438 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068732699 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069860663 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094174898 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069173824 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.36568587 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066609393 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.977264446 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070825401 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07740533 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070617121 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071892564 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079280602 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079446268 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092461533 seconds)
    (78/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065234142 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067626545 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075073054 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067608563 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066708775 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067558915 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.093374694 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.389196379 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067904671 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072454954 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067938912 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092958639 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.0981811 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066612375 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06549382 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101859829 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070056274 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.168327558 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069515408 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.120884927 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071375488 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11500276 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068159962 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.060310937 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098445236 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070167116 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10137275 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.077137186 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072183771 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.470226262 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066413092 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065181339 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067697357 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073045727 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06709443 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068448155 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079835538 seconds)
  done (took 21.718779326 seconds)
done (took 38.851175687 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.242704963 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083877127 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.084352255 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084514956 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084792917 seconds)
  done (took 1.699504883 seconds)
done (took 2.80149402 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.127195427 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099231117 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067777375 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098036319 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065120842 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101505896 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103547663 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083953482 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100373872 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065733435 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098108352 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065320084 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065062246 seconds)
  done (took 2.259780594 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082461123 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082843159 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069926649 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082969061 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062906833 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081873228 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08116618 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088273521 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081446421 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072507743 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063341067 seconds)
  done (took 1.945693968 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082565187 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083310149 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069702039 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08256903 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06358445 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081952873 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081845009 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085181773 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082160801 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073726236 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063174087 seconds)
  done (took 1.942055622 seconds)
done (took 7.23699626 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076836339 seconds)
  done (took 1.163601345 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.544552926 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.63606579 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079174928 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.102170962 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.19359404 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.109131804 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.235124665 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.082990439 seconds)
  done (took 8.241414109 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.107469474 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071011087 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07031407 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069668281 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070639321 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070244549 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069305413 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069883489 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070110035 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070459588 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071071324 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069528238 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071269558 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069328881 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070189343 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070900225 seconds)
  done (took 2.328328889 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097434851 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096261093 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074943151 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075836173 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073842868 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072861338 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074882048 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074798786 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071816253 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073306801 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076440485 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073996269 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073588158 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064695067 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07448523 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077168942 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07173229 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074704463 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075917241 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076761831 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075872526 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064475651 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073732761 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075322993 seconds)
  done (took 3.009657788 seconds)
done (took 15.838966185 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116617786 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079471788 seconds)
  done (took 1.287082643 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078758367 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081389463 seconds)
  done (took 1.258525715 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077964377 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062991563 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.084855802 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074378483 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063868287 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063551201 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.082934485 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.064018415 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064173914 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064591904 seconds)
  done (took 1.801279398 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065614732 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.073690324 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070067717 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079701055 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.071333523 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.0651016 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069398033 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06601627 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073983062 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064024754 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068921952 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084198389 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068544716 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085335098 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.06912192 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068309703 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07096307 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06750546 seconds)
  done (took 2.385306864 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063724974 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.063845415 seconds)
  done (took 1.232246516 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067226125 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063832927 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066425956 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06671878 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063809054 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063139154 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064043331 seconds)
  done (took 1.555630687 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.364044485 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122538808 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.322898982 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070933195 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080849647 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.252956101 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065100339 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070353028 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069851723 seconds)
  done (took 2.564164225 seconds)
done (took 13.191500903 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080822042 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087281905 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09854323 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.415744189 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093340294 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068461918 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114939367 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.182447509 seconds)
done (took 2.255326754 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.218386385 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.788030182 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.449107823 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.209134512 seconds)
  done (took 2.55487418 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.338690679 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.08670609 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077410901 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067183708 seconds)
  done (took 1.684871617 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068116508 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070831464 seconds)
  done (took 1.250263293 seconds)
done (took 6.822030244 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0656637 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06512808 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.066126456 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.179470032 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.065428909 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065459787 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065631658 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064781475 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090072138 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.064956352 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.065090083 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065817089 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06531622 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066253211 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065444079 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065539075 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065582197 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065527631 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065162918 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065342035 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065021182 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065596115 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065417939 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065567455 seconds)
  done (took 2.856095682 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082677882 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.0675519 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.069076288 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069673327 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069670504 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.069080133 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069782779 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068067944 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069250783 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067347616 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069225495 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069530531 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067187887 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069654607 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06698186 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069830444 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069437293 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067714151 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06757695 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069709753 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069449211 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067688967 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069396269 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06899827 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069428421 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06953538 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067148723 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067464583 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069088689 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069527063 seconds)
  done (took 3.196723975 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.066157821 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062052398 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062359804 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071089494 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061955564 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063151597 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061558192 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062135038 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063164585 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063010795 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064046156 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061885887 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061791754 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.062448317 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.062628834 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066086686 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079515967 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061962727 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061666039 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.062453795 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066449223 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06180117 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.061892061 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061459578 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.061807313 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061242812 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064572909 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062178403 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062608603 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061737813 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066325023 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06656392 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061618371 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070543124 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066016496 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061933875 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065122194 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061605865 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062329228 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061222018 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061848534 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061870686 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06161386 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070836732 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062018149 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063432541 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06158768 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062911055 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062332002 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064233937 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061555731 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061821256 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063690245 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062980842 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066833118 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061642207 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063033108 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061380286 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062577965 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061474932 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061525751 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061713304 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064759045 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062180041 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079017159 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07071511 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061576907 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063522265 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063307374 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064928584 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064002025 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077126195 seconds)
  done (took 5.72604064 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087514348 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088393939 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067553916 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067332632 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062423103 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063477306 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072594863 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06377448 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068693322 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083702908 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064399354 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068939219 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068050998 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067387327 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064348442 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067876219 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071205684 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063255101 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062890392 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066438101 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063113099 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070407949 seconds)
  done (took 2.658858674 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151874442 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068498411 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106107986 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072499806 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071103763 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073146195 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068475814 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068778539 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068958908 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069507445 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069439357 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068797157 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07134317 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068870668 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068801748 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069008904 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069861672 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070581953 seconds)
  done (took 2.502136886 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078942053 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068215567 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087661837 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067995549 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068016546 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067453721 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07193165 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072611233 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068168073 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068026693 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072417378 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068074974 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067455135 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067683521 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067288154 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067772671 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06781473 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068243206 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072449792 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071780063 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071683492 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072309961 seconds)
  done (took 2.683121396 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079234763 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06661204 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082694438 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069776763 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062905243 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062643333 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068924891 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067113446 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.06876604 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066582429 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077112194 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062210882 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069613087 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067267692 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069792665 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068218278 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066716705 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067563994 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066603149 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062701899 seconds)
  done (took 2.502045768 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084229511 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06607495 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065804003 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072332246 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065254515 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.0652613 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072491207 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065591239 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065781116 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086797929 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066144293 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066072916 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071832486 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069464525 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065985452 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072111415 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07197487 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071652623 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068197308 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065970075 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086092736 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066024339 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07223055 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065278152 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065389311 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065480508 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065321721 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069404475 seconds)
  done (took 3.083706645 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065326822 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065266079 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065449022 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065290358 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065233083 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065086405 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06567731 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065509526 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065282479 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065890881 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065169611 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065148861 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064828823 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065321007 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064924338 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064930633 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065473684 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065493345 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065280446 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065314339 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064943622 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06489173 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064900203 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065645549 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065172997 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065049287 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065269898 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065598665 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064841643 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065105499 seconds)
  done (took 3.092537209 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076393151 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074035701 seconds)
  done (took 1.284892849 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064625736 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079367654 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062739354 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072642216 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070882702 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065504069 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071858114 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071366712 seconds)
  done (took 1.689470001 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085709142 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075990302 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064787351 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077270106 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075398282 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086440304 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128925916 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064415073 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075609576 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065529579 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082966383 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066743137 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074796956 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069863919 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075253802 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078120063 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06210022 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.069523356 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065077986 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063246052 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065500257 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078252825 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074316634 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062619619 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069745932 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09201768 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080085865 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063775159 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071288384 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076845545 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074989706 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061553705 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064018144 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064529655 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062511846 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075187181 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08287648 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071081141 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077160545 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064601242 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072092472 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061895644 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073183801 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074929122 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080773706 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06446857 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06488204 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062116467 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064866276 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070119721 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062581002 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068506787 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061725476 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076160735 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071639459 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079306282 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062869098 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069706551 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070744965 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071302688 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075339807 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070350646 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073240367 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063707224 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079411849 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073705522 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075613318 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06196103 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061393525 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062175453 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078130777 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092347784 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073834264 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064478987 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065016554 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062273895 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071210139 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064988382 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073043871 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075524929 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063781318 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068372613 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075947155 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06851232 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070151241 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070654953 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062247171 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067435518 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064933239 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083835389 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062363757 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062031485 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064960336 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079437966 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070764464 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065989512 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064596371 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075046803 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060638556 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063401997 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.063897898 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068874662 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076529854 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06708192 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067045436 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076652441 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072213947 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06823526 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069739691 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060051943 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06325156 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064742719 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074279225 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060123504 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069442635 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066594487 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.063011033 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073714326 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.060913604 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.062340755 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074784224 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073887094 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.061408902 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.059894042 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069682102 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062730019 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064699349 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.199950004 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064088625 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063544184 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062944142 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072624215 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065136517 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.077123174 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068396459 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071967457 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061942628 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062305465 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.068756824 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07711572 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067860961 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070298167 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074396255 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070617161 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063606658 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07655692 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071481537 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066451184 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073966175 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068505649 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062958635 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066047974 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071652323 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064976113 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072195483 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06664071 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071054322 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06399484 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063167387 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069378596 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06579172 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06629114 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069377245 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062817884 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07926496 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070569759 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062410332 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061758835 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.071136093 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065569104 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063691626 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066797551 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070479515 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06421854 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062405782 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063854912 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070330985 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072130413 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067294341 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065103144 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073499972 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081511025 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064103921 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071133075 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06371447 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064828976 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064512547 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077978194 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074484798 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067851386 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070590714 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061685222 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073120073 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075751283 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066539217 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062237779 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066327279 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067765983 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075650617 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067569776 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064129468 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062540703 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069878542 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066352574 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070928563 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063330357 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066406106 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069279684 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062585517 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069664681 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064315752 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078049852 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071078526 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062020314 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066365493 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062543678 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074990606 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061979195 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064968014 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066334684 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064331659 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063046968 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07091813 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061326135 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076350857 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076390434 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069300539 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066300936 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063502687 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075718813 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069241338 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071745683 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070142205 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072869903 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078280874 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065347194 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069478249 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.077591412 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.062483553 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060303237 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074978539 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.061933382 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.061729434 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062147537 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062512637 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070187869 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069637552 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073063885 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060642202 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069531272 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.061244756 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065519358 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061029058 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071382553 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07015208 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067834725 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074792901 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0634052 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063079449 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.197126517 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064758899 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.065425471 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066166636 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072079654 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06597773 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071092444 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067665059 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070650046 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067171305 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062403946 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.07076437 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065051038 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070170375 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072978406 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063745129 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070419809 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07146319 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064723622 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070412883 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067961285 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066707638 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072069482 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070206582 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069360703 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070550873 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062239231 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076383499 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064200632 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076898507 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069097276 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061314006 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.0700017 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070740674 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.069258304 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064550655 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064554955 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069382433 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064252868 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070391391 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076883501 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065187318 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080009368 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075701739 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07026499 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070818188 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069153722 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070195859 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066370764 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068696671 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064899969 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070125709 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064252966 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073641792 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071180931 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069097985 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070536253 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064927941 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069427778 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066139118 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063462685 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068559452 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068695997 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064751794 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076946141 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064433031 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067016146 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063038978 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064899791 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063609456 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061359825 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070930222 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071850211 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064860046 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074993651 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06676388 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070499277 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079824497 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061469005 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06268303 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062481682 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065817761 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076976989 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064566254 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07752934 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069403903 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066892292 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061700528 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064393683 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06307866 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061744196 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062011483 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072289161 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066270749 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063487161 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064094744 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071141088 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064880129 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076851928 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063057504 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068249295 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064198693 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061620114 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066346003 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066401876 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070616273 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064634695 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065521079 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061905466 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063229231 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.0676859 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069632924 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063042864 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.0684361 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075265188 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062470964 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069630231 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065315437 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060939976 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069846594 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.062582861 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.062857252 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064770952 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070139101 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070034473 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.063466498 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077227586 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065938223 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068450992 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06287351 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.060956396 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.062659218 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.062900049 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.062323159 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065054039 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.063202949 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.206134787 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063219799 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071191042 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070345196 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068461499 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075473169 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.065455144 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070745709 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07038463 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065776737 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070608353 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077043584 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068230172 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072143231 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065094512 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070649243 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075068123 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066855271 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076158101 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070348926 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065123845 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070372995 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065646112 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064102037 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064239728 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063649191 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074557082 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064665191 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067004428 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066554507 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062401072 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069447791 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066337274 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077277526 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070687974 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071422758 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062444738 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062260995 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065027309 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066137157 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069862787 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070825971 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074226896 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071169554 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067747785 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063163968 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078322464 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074411584 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072539134 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065777026 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072355078 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065127684 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071502471 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069352477 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069710456 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065916714 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072103598 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070728663 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067042893 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075018186 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072920342 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064902999 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070196032 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070153886 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069132248 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062472318 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064500207 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070883863 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073724964 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071201794 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064456949 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079835222 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.0654256 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069572246 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0672469 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063738163 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072698033 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062829773 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070463833 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065166688 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064590666 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06256643 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066745185 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065905535 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070786671 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06647075 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062201317 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07975617 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077845086 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070188172 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063691592 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062748325 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062656799 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062439035 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066550909 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064965137 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070141469 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078793465 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066532664 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066824542 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062262323 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064129526 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071287719 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07186159 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061528757 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06203885 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066341427 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.06985759 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075602894 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063183437 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063751476 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07149964 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070329473 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.061661339 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065711584 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.060394753 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070558009 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079173444 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.063093808 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068936315 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072780469 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075658207 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06322226 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061110327 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.063188293 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069066714 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.0681466 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.063455647 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.063825037 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081576792 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070458311 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065551434 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062098206 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069560285 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065609552 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.206410752 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065658167 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069324759 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07388861 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072469556 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072283759 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075385121 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076178672 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069930816 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070832602 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063729092 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069475047 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063226821 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067509271 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065829502 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064838756 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069069021 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07160698 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066873877 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081070332 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080544209 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066843054 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061725095 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067118088 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067620586 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062828555 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065660167 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063544818 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.062932534 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063452268 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064243439 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.07117371 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073214825 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068255664 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064504969 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064609421 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062009137 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074328234 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070644704 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070861815 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061598884 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064349855 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.064978131 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073494906 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067340787 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066161276 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070723965 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.07032669 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070493293 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063425227 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076311378 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063764647 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070654763 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067171014 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064560875 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065350675 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07215019 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068831502 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06601431 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071260509 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071695234 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066404104 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06265853 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062157897 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073902442 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062940261 seconds)
  done (took 42.515596273 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101394894 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064402046 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062319641 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063043528 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072570253 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063701608 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062879133 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063736285 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064131708 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065461702 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062483905 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063387574 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070599936 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077840155 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073390964 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067337226 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063474743 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064563847 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062961139 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063786691 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070280354 seconds)
  done (took 2.655650337 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070331704 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078397076 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074758731 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080281891 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071958439 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067458518 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075564047 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06823193 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076137031 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072845262 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07527577 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067805285 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073013179 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073285196 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073083537 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067978324 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075649277 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071764168 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067920549 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075500026 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067486812 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075356055 seconds)
  done (took 2.815636302 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06543777 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063683609 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070202026 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062245899 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063611567 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062639626 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066970169 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06218093 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.065818482 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065651731 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066032215 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066068298 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070093202 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062216603 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067253064 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062190678 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108986979 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.066192468 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063851109 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.064901731 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062072059 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070756596 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062094041 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062479797 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066349278 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066197032 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.064277528 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062346002 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063753872 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065989402 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.063843575 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062086072 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070544599 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069739957 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066070059 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065765693 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.063625829 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063950762 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064838157 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062512979 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069759785 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062391405 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064675536 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070769312 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062109193 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062461895 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070665176 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063582665 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062038829 seconds)
  done (took 4.45349892 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075049354 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111447121 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06872909 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09190461 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.077031448 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.070367515 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068798122 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093185302 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064037449 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065186238 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.07859803 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078429007 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066440472 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067735393 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068559376 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06645595 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066806901 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065475176 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069414964 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065237674 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069641994 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069973568 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.077001393 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077589414 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067521957 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065005717 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065398538 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06753686 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077109156 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069934561 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067934529 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069072044 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078285002 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071238154 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065297733 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065418984 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.078940801 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06609815 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065817718 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063994136 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065317895 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067441267 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070197996 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.078420112 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066073934 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070785627 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066779895 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063589724 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077661576 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066012379 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070537086 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07845724 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067096624 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06705673 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068025269 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.077778969 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067023672 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064925851 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066512468 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077461449 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064140449 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067590919 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078593034 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.065892201 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.085506334 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078132179 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070418901 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066709648 seconds)
  done (took 6.207099742 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074054652 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094487904 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080313636 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079673472 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073678343 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073671381 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073703352 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073998178 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073939192 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077547276 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073874491 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115110837 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069676975 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07590973 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074210347 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073811451 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074312797 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073821573 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073533218 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07318371 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073904296 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079743557 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073707122 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08007486 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076493501 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069469436 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073589144 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073895918 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080040642 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073211076 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07686127 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074097617 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073861307 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080024682 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076758507 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073794313 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063263498 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073351161 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073670632 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073946493 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069471471 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079924529 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073406775 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069913004 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073681212 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073669467 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080355592 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077484331 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075452488 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077458103 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073717103 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079751161 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073281523 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073789012 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079755241 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082926053 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079656604 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080325271 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073768747 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079847529 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080132381 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082838218 seconds)
  done (took 5.998846692 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077964416 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071268306 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082500181 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06290563 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064761011 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072379581 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062386088 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062366265 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070921991 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.070812412 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073343072 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072727044 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075783209 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07251545 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072540536 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075224443 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072830132 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072518282 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070706859 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072505718 seconds)
  done (took 2.689925861 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076981299 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081739762 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068539657 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072547111 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068139756 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072199631 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067548271 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068119459 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068727106 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068030003 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074221804 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074024677 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068686774 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072909173 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073556688 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072400302 seconds)
  done (took 2.394607655 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084466176 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070892644 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077544824 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064334556 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067505173 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06309206 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063613583 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062200234 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063057656 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076584305 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063791777 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074998146 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063754292 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062641245 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063396903 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069267142 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062922128 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.0639875 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063673472 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077363054 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070769232 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064791212 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067838321 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063804916 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068870142 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071115452 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065178825 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067225962 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063584242 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06455651 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069363215 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070459453 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063238479 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064019701 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063060802 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063542018 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063529519 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064765983 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069604297 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063586494 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062188802 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068796311 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063842062 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064959931 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062914863 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064064956 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063098906 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069486837 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064015901 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086531515 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063912974 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066144117 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.064354225 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07135481 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066407975 seconds)
  done (took 4.930413269 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079573292 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068271388 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06237817 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06159167 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068213721 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068658484 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067978351 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068085013 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068505601 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061991517 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068647994 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067644188 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068803164 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068119724 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068314853 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068278995 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062347275 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068239691 seconds)
  done (took 2.476501796 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073581058 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067401636 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07256825 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067452687 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067334479 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067312445 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062019238 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062835451 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063116915 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067168083 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067488885 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06696232 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062873601 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067286531 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068089582 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068123507 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068846948 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064242586 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067841361 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063029678 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066809587 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063214675 seconds)
  done (took 2.717959661 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096417366 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083759421 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.141622737 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080427006 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088331497 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073065114 seconds)
  done (took 1.817492671 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093709389 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098572207 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068071714 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067530747 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073243065 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070416778 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070790403 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071208163 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075479973 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07626922 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070959997 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078971384 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075650933 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077670093 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073456814 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073745199 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071196416 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071132052 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067463806 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081196639 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071428186 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075651054 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071502505 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070823338 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070930531 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07761154 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075550592 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076125175 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070867127 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075683029 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073842443 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070823724 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075703265 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075649378 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067343114 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075319933 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070879607 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080274783 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073203285 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077374814 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067290903 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07319717 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075111603 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074879485 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075128958 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070792175 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074528659 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07093517 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070953875 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085407266 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073638774 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077267295 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073006654 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075798074 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075305189 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082205185 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075745434 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077126414 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073578511 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075977809 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077406491 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073516012 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077698425 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076311096 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073317039 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07745138 seconds)
  done (took 6.19336856 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104918755 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068188619 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071123227 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076305163 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077576656 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070842339 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071152897 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071370606 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071046027 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068368329 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106064319 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071838362 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078168142 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078208958 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071667057 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071314052 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071600177 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078007422 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068531222 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082778896 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071240647 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077497034 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077496867 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077582265 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076009239 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073888397 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071144897 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071910094 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072194211 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071379154 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07536668 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071348058 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077691989 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067849994 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077531197 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071616414 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071169395 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075097113 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071654003 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07354952 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078215887 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080522274 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071193495 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071129152 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075717846 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070821534 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071099244 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068323646 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070791423 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067871477 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075807686 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076311739 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076100163 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077023072 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070672634 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071087845 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070791719 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07094698 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071057428 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07307798 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077028595 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070605145 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082311512 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07098939 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070767057 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077413855 seconds)
  done (took 6.186749404 seconds)
done (took 126.44472064 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209427233 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185801185 seconds)
  done (took 1.638317011 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074611527 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.105075731 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083504286 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133916974 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.073735453 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105394173 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10471004 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.084275186 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071385494 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071671481 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071446063 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074034913 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136780829 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071462413 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071587432 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074327008 seconds)
  done (took 2.66980551 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10470641 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.2158342 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109660505 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069450118 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105308411 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077784054 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069673141 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.085274401 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07628696 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071501175 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077787595 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075762766 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071211003 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075567825 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076337439 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077842735 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071483878 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.078090497 seconds)
  done (took 2.853413281 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103757714 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095296519 seconds)
  done (took 1.466180641 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.173506974 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133514845 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202055386 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.347198749 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.15264679 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.423777905 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.1388845 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.138956119 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113108028 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135137261 seconds)
  done (took 3.221879708 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104010137 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.20128794 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.301161182 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120902421 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076303762 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.111707874 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122851633 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.08229842 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082290004 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081651209 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081415798 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07868358 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101085111 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077678472 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076458285 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078513918 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104150326 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075522566 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076205275 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076641342 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104285877 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070343838 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077208278 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075187291 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079177943 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079056423 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071538314 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069924782 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076735286 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076790572 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079830906 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.108943109 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079355284 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10621748 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074947184 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107525477 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07901567 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075162971 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076345588 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074673866 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078363911 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077865088 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.079056069 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078266215 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071371971 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07864377 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071529225 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069753044 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.0803854 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071550217 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080497089 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079401377 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106025482 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071848065 seconds)
  done (took 6.139999277 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109019512 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107725219 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072259139 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114146498 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105482946 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071462238 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106329832 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099828976 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108626028 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071285628 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069753478 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071667318 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079867805 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081933139 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116255554 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.109252175 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07374196 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071322405 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108636083 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10786917 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070865462 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102588142 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098489595 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107964717 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06949008 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071331689 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069870587 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071595317 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076784563 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078052363 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070283786 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080071463 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08476561 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077725586 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068948201 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069489726 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070150759 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079065903 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079238523 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079154099 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077452342 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069232419 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070075714 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070911611 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070623009 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069107828 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077547404 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078725584 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077789218 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069776692 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071043316 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069790557 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070625963 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079158364 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076645089 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079734925 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078800346 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06990062 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069937536 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072714569 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079440441 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078695131 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078468761 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070590004 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078771091 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069865398 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082886292 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083517053 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070084635 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070965421 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069573319 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069975348 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070333018 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076915928 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076941421 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071336654 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069478595 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069420036 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079061744 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07703132 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069406291 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076295636 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068426526 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069216776 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070611819 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070535211 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076620869 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078697512 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070570395 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069408725 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069766742 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069059123 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068336966 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076236302 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078118325 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077768592 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076548625 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069814461 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076924177 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075940037 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069676174 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076148141 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06808009 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070116374 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069663639 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07579514 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07546052 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077140358 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068840694 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068325685 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075632721 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078206994 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068613271 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.206330122 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081374047 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079873832 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070685645 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081508162 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07145264 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079887576 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071152165 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079856982 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070582963 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079283697 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070262215 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069791954 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07049952 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078374009 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071713962 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070256252 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071265669 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070425401 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078722149 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081688696 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071740262 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07888515 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077690083 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070912481 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079185515 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069858 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079007579 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070796471 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071193926 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069100405 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081525918 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070592452 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069590869 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070479784 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080194134 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070899243 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079260716 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076981822 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068984673 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08126425 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079453096 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077117979 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07960167 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071349909 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070126528 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070120955 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070333691 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07747694 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079128854 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072066175 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070002597 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077542219 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079535945 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068954004 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078032903 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078059992 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078179146 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070084022 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070222513 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080246871 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081187188 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077820766 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078081771 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077856782 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070402931 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077002804 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077693557 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070181408 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083423767 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069782556 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081676267 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078411562 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076483839 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078424925 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079779123 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079463969 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07975222 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082618487 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069530288 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069609018 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078989614 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069764348 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070564056 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077496196 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071251493 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071227968 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082001946 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07030515 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079330802 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069473873 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078411395 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06916035 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070902232 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082294317 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069659554 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070693561 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077773037 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071676188 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075843457 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078552318 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076004015 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068549109 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070032501 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077385528 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.076609979 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068467389 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068029522 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069560247 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.0751041 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07483507 seconds)
  done (took 18.530292107 seconds)
done (took 37.799312687 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.212238676 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157769746 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.187641114 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116115009 seconds)
  done (took 2.047006933 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.109778606 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098438664 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.088701874 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066128558 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.094660091 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066082782 seconds)
  done (took 1.830550153 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.2997099 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.205005332 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18298152 seconds)
  done (took 1.992250225 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210878436 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.197704069 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.463053577 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.285786768 seconds)
  done (took 2.555655227 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141433505 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.083335757 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065874794 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083103286 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.125136017 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.151532762 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.094098333 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.119526075 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076814937 seconds)
  done (took 2.296185118 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149783165 seconds)
done (took 12.206048859 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Float64, false)...
    done (took 0.157917775 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.126316123 seconds)
    (3/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088300159 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.073482698 seconds)
    (5/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075982962 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069689088 seconds)
    (7/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.082176537 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.107997442 seconds)
    (9/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.08558724 seconds)
    (10/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075493413 seconds)
    (11/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066057415 seconds)
    (12/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.221233099 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.104557894 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.102328556 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076801196 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.101499906 seconds)
    (17/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073980078 seconds)
    (18/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.183756191 seconds)
    (19/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.224552241 seconds)
    (20/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066566067 seconds)
    (21/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.245608933 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075794513 seconds)
    (23/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076100285 seconds)
    (24/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.420848085 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075352214 seconds)
    (26/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077090837 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.085674399 seconds)
    (28/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.078097187 seconds)
    (29/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075538447 seconds)
    (30/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.078697221 seconds)
    (31/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073516634 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.07354011 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.156802803 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088562594 seconds)
    (35/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.211598357 seconds)
    (36/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.085502822 seconds)
    (37/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066393753 seconds)
    (38/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067473057 seconds)
    (39/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086123054 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07574464 seconds)
    (41/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071211786 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.06661448 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.137993064 seconds)
    (44/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.195270743 seconds)
    (45/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.117102855 seconds)
    (46/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.176960392 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 0.150174386 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073942766 seconds)
    (49/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.221565521 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091783614 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 0.067122138 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.159973873 seconds)
    (53/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.158571571 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084198679 seconds)
    (55/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.162028673 seconds)
    (56/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081048858 seconds)
    (57/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.184661338 seconds)
    (58/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.172976016 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.066045657 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07552117 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065755705 seconds)
    (62/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.178838145 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.132875972 seconds)
    (64/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065278115 seconds)
    (65/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171565296 seconds)
    (66/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.192012249 seconds)
    (67/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076168471 seconds)
    (68/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.136398053 seconds)
    (69/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.139233385 seconds)
    (70/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178907011 seconds)
    (71/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066075629 seconds)
    (72/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076533952 seconds)
    (73/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076638174 seconds)
    (74/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.157032497 seconds)
    (75/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.162865528 seconds)
    (76/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.072349201 seconds)
    (77/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.157281695 seconds)
    (78/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067021011 seconds)
    (79/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.225910126 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089331769 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.102888376 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.175739974 seconds)
    (83/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.162608187 seconds)
    (84/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.064785944 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086403861 seconds)
    (86/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.134352118 seconds)
    (87/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.157605949 seconds)
    (88/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.315135732 seconds)
    (89/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.160296897 seconds)
    (90/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.140720878 seconds)
    (91/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068491507 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.126688991 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.079430016 seconds)
    (94/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068137195 seconds)
    (95/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067464717 seconds)
    (96/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081052382 seconds)
    (97/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.120381804 seconds)
    (98/309) benchmarking ("sort", Float32, false)...
    done (took 0.133457245 seconds)
    (99/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072621407 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.184198101 seconds)
    (101/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.21381584 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066941976 seconds)
    (103/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073710375 seconds)
    (104/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.137239204 seconds)
    (105/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.20797166 seconds)
    (106/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067259072 seconds)
    (107/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066258273 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.125179048 seconds)
    (109/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.066874681 seconds)
    (110/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.06750036 seconds)
    (111/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.140992567 seconds)
    (112/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.065581436 seconds)
    (113/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.067282075 seconds)
    (114/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075447709 seconds)
    (115/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075393591 seconds)
    (116/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.157119183 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143430611 seconds)
    (118/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.06737979 seconds)
    (119/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.165663593 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075414788 seconds)
    (121/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.17845503 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.120600942 seconds)
    (123/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074967703 seconds)
    (124/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074454106 seconds)
    (125/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07457938 seconds)
    (126/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075382452 seconds)
    (127/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.182435121 seconds)
    (128/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092036782 seconds)
    (129/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067870553 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138874861 seconds)
    (131/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.067147232 seconds)
    (132/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076922757 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.117883253 seconds)
    (134/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.230696719 seconds)
    (135/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076894026 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087131821 seconds)
    (137/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077708898 seconds)
    (138/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.065593351 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07500101 seconds)
    (140/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069547995 seconds)
    (141/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066517893 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090853718 seconds)
    (143/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074912069 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073990745 seconds)
    (145/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073825166 seconds)
    (146/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.184808763 seconds)
    (147/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.06755071 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.12402865 seconds)
    (149/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.065383203 seconds)
    (150/309) benchmarking ("sort", BigInt, false)...
    done (took 0.242090545 seconds)
    (151/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075092725 seconds)
    (152/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173421927 seconds)
    (153/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066582694 seconds)
    (154/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.204436535 seconds)
    (155/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074288921 seconds)
    (156/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.131729647 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065874041 seconds)
    (158/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.065735852 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.091167133 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091112915 seconds)
    (161/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.158026269 seconds)
    (162/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068278601 seconds)
    (163/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.065652637 seconds)
    (164/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074340015 seconds)
    (165/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065776286 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088021282 seconds)
    (167/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.066674023 seconds)
    (168/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078355533 seconds)
    (169/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.064931824 seconds)
    (170/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093983489 seconds)
    (171/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.201676695 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.065363638 seconds)
    (173/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.171835487 seconds)
    (174/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.137398881 seconds)
    (175/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066732496 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140506509 seconds)
    (177/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.066510298 seconds)
    (178/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.137161887 seconds)
    (179/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.064881437 seconds)
    (180/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.0665589 seconds)
    (181/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.065998592 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.112209707 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065344431 seconds)
    (184/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077716559 seconds)
    (185/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069264126 seconds)
    (186/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070109284 seconds)
    (187/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.135847714 seconds)
    (188/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073209961 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065535359 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.092302931 seconds)
    (191/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065891549 seconds)
    (192/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073638645 seconds)
    (193/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.065363308 seconds)
    (194/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.137342677 seconds)
    (195/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.065091381 seconds)
    (196/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.078293477 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.085998583 seconds)
    (198/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.064150588 seconds)
    (199/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.221942677 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092299734 seconds)
    (201/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.144908786 seconds)
    (202/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068049029 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.1337829 seconds)
    (204/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.065937706 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.090503387 seconds)
    (206/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079193508 seconds)
    (207/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.06571656 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.114791102 seconds)
    (209/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066509632 seconds)
    (210/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066069548 seconds)
    (211/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.067051834 seconds)
    (212/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067452014 seconds)
    (213/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073725204 seconds)
    (214/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.067812309 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074623653 seconds)
    (216/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066017526 seconds)
    (217/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067144549 seconds)
    (218/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076030779 seconds)
    (219/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066720571 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066557965 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.07335929 seconds)
    (222/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071310364 seconds)
    (223/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066389943 seconds)
    (224/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.065855516 seconds)
    (225/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066320262 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.087457923 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075471888 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130619965 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137504208 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122642559 seconds)
    (231/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075912611 seconds)
    (232/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075592759 seconds)
    (233/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082211704 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067283925 seconds)
    (235/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066700054 seconds)
    (236/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074057253 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.181850404 seconds)
    (238/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075733832 seconds)
    (239/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066068278 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092415863 seconds)
    (241/309) benchmarking ("sort", Int8, false)...
    done (took 0.169861187 seconds)
    (242/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066130657 seconds)
    (243/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.19789837 seconds)
    (244/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067161781 seconds)
    (245/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.065994713 seconds)
    (246/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.065629939 seconds)
    (247/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094157755 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066827454 seconds)
    (249/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089143378 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06667808 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.06582481 seconds)
    (252/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.065660008 seconds)
    (253/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067312502 seconds)
    (254/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069274703 seconds)
    (255/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072979845 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.08214984 seconds)
    (257/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069999155 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066677557 seconds)
    (259/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.219249025 seconds)
    (260/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.066165922 seconds)
    (261/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066075397 seconds)
    (262/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073444082 seconds)
    (263/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.066941215 seconds)
    (264/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075280759 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128533591 seconds)
    (266/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.066848192 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089752192 seconds)
    (268/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.06579656 seconds)
    (269/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.065810118 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076453642 seconds)
    (271/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066120626 seconds)
    (272/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068667344 seconds)
    (273/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067155558 seconds)
    (274/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.066810489 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066445004 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07249981 seconds)
    (277/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071306834 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067016453 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180699663 seconds)
    (280/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068113854 seconds)
    (281/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.065399186 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.11241255 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.137372328 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066561121 seconds)
    (285/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091150664 seconds)
    (286/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.06548781 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066970408 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066679834 seconds)
    (289/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.066325858 seconds)
    (290/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.065654856 seconds)
    (291/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069382064 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066765185 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074594273 seconds)
    (294/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066657554 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072840551 seconds)
    (296/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068382359 seconds)
    (297/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074304844 seconds)
    (298/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066872859 seconds)
    (299/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067273376 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087489111 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.121259845 seconds)
    (302/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.065469794 seconds)
    (303/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068405234 seconds)
    (304/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066401578 seconds)
    (305/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.066679429 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065697071 seconds)
    (307/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067072703 seconds)
    (308/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081140567 seconds)
    (309/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143589247 seconds)
  done (took 32.647621967 seconds)
done (took 33.96281872 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086902936 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101411048 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075466996 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095302201 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08229242 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096853518 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075752673 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.08080747 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083735441 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081874353 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.08050612 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.07339588 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076027795 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07636316 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.0749782 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098164933 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080592489 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074481797 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07504144 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066117532 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074844443 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066478728 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066109228 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07310614 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078215544 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074147915 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076498987 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075814845 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066695494 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067353079 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071433117 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075288198 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066423113 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079283655 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075782549 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074984483 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07666738 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079706977 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066601881 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066763727 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076902001 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066870497 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074627276 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073392671 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071711673 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073440405 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075186771 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079494987 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098277751 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071625292 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07667644 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077478806 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078317063 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072309334 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072054603 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075170139 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072744373 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098276293 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074785292 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071311027 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076419856 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076509883 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073129911 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074932354 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075052897 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077128334 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079000656 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073046469 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076957412 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073509997 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066779076 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074933452 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071144237 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066611002 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080443369 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07939277 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065637741 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070675996 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07480106 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074880015 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066601686 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070587399 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065835476 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071170302 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070856635 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072364231 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07129485 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074171612 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066605914 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07553709 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073317189 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074240419 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065702251 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078847246 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067062338 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072705273 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066761283 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067250639 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065991964 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071896733 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066055599 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070865694 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074820716 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065540484 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071013799 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080096576 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066363466 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074112329 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066305832 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065959164 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07763421 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076758224 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066550479 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070661908 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065906877 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071673194 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06598623 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066223671 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065843656 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06644029 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070364706 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066684884 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070492179 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071432294 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078352293 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065846951 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070693236 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070684364 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065606099 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072402654 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065670904 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06520673 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065042134 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078502657 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069657063 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064717863 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070395753 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069104787 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072458912 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064328363 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073185889 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071042682 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069230038 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070884511 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064468611 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.212384758 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07197303 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071716206 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066558804 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067071479 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.0657397 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066998203 seconds)
done (took 12.707706541 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067082091 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.117334838 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.092911228 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093004667 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082606342 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067560141 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074252119 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.092252723 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068726493 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096806622 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08823935 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088107966 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110285882 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06590081 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066736048 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068144507 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068778715 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078724473 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.09409346 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088975097 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.105956649 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06664827 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.085962119 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.087151641 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083519017 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.090803059 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068040859 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068316157 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070017361 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.087917325 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092035436 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06974042 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068090437 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.090653425 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.085152251 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.080067051 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067745868 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075453556 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06765462 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066937268 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068499875 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087922909 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075172421 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.078146096 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068723845 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.07489508 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068323891 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082926309 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.08518223 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075294538 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.082601054 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.091352416 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070810614 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083377136 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066170436 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082952461 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076403658 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067470181 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067766697 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072041991 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067739586 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069636461 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078227934 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075744939 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071760223 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081708363 seconds)
  done (took 6.5902396 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084758064 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097857337 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084038966 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084483713 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066202591 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067187299 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067045949 seconds)
  done (took 1.967454838 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067705671 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087822827 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090728855 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091054894 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08416443 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092278435 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074961177 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067998373 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096090236 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066670627 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087362215 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09781998 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070972114 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079077086 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092282063 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067147149 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092243464 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067377844 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068092309 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091440604 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071902242 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094791759 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078518221 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067550817 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080473126 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068227026 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119032457 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075695213 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068837155 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068632633 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068575291 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106829116 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079861336 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081462844 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06916075 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082532615 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08164167 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071116996 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078203324 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076937091 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080633756 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068558238 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066439366 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068889108 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.0704292 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079678779 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066594521 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069240835 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068605613 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08682449 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066591215 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080025249 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070862915 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073645815 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073670699 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072356325 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075586627 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069003444 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087012169 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068542169 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084302978 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08372415 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080626012 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084467047 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067781998 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080089606 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080842614 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068501251 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069282665 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069229582 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084064527 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070870077 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069278631 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078994524 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067414266 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091832909 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09134661 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067453307 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081248861 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068340793 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068851262 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.079671275 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091005115 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072636502 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068299912 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071704032 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069468979 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070082738 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067071411 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071119088 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068890935 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072626874 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068387634 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070984919 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069808961 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083478342 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066834027 seconds)
  done (took 8.858782445 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070211998 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06850494 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069844026 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069024828 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068245087 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069245304 seconds)
  done (took 1.858885125 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091744842 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.0685852 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081142093 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068625798 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103308837 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083606969 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083760574 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077777151 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081858832 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080628405 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083707735 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087129572 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087981058 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071007887 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08381199 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069717768 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08406844 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072407275 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079401632 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070898532 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081549017 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070348759 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070806763 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087936595 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071877746 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069893041 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077605385 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080119232 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079912383 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077932917 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070644324 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071824661 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07637419 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078170686 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.084200778 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076592027 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070926204 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.075079575 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071259306 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071898031 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086080536 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070529563 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.071257945 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074290947 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07751109 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076038078 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074464959 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076605623 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083523248 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074975076 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074385594 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069075378 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072120278 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074810973 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076393999 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077627787 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074836889 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083810911 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070372831 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076694242 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068433781 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072023933 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077368631 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071871919 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075915832 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074741605 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076289749 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070792631 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070770276 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068617478 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074221467 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068233113 seconds)
  done (took 6.922277598 seconds)
done (took 27.594794716 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.519521174 seconds)
  done (took 1.915406373 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.619426842 seconds)
  done (took 2.046563737 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.723351196 seconds)
  done (took 8.146041218 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.4158235 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.486997716 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.753220949 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136666775 seconds)
  done (took 3.259696971 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.707027251 seconds)
  done (took 2.145105797 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238892928 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.229208867 seconds)
  done (took 1.9156749 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.350252453 seconds)
  done (took 1.770464457 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.063601197 seconds)
  done (took 2.487332611 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.241863543 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162795057 seconds)
  done (took 1.833449579 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.441751533 seconds)
  done (took 1.867378998 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.257480277 seconds)
  done (took 5.6895288 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.243466122 seconds)
  done (took 1.706581467 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237589534 seconds)
  done (took 1.667515069 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.781167913 seconds)
  done (took 3.210778044 seconds)
done (took 41.098919213 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084357612 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086190041 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086075497 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082176362 seconds)
  done (took 1.746687067 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075493573 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071687504 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075514384 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071256835 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075674836 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071339864 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073600585 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075507157 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071100114 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071993716 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071644778 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070962256 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074164033 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073176672 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069733341 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074784409 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074981682 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071008467 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074426428 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071672088 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069475404 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074142731 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074005124 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070392911 seconds)
  done (took 3.176788295 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079187865 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073633228 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076651181 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072531558 seconds)
  done (took 1.737702703 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078102768 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.089122188 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087485315 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078071922 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.089580095 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084533876 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068049372 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067814655 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.068914973 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077532539 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066784479 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094064058 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087433543 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077564637 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.07993051 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064324853 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066611543 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085897869 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078656924 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.0780782 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068821388 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077591346 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066705916 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087821189 seconds)
  done (took 3.301228995 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.085108522 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066540815 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083943219 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092643067 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095097503 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066401624 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.082227143 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094808665 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.138534283 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067008813 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072499542 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066749541 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.10540727 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06735984 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.083749607 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110964637 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113225189 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.07036929 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099819393 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066997453 seconds)
  done (took 3.17258352 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.085036864 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070464932 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071035909 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065943744 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077061628 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073484489 seconds)
  done (took 1.888746966 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068897493 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069141068 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06904603 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067456764 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072726333 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070439351 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067468978 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068638721 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069203798 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068093859 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067994848 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067709974 seconds)
  done (took 2.268122195 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.162416277 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070791476 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.072107755 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067590176 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073107424 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067292192 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083283284 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069567311 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.085899995 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068087815 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067712845 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069586582 seconds)
  done (took 2.399331371 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193338763 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074653142 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223640065 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144277585 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103023344 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109860653 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109587949 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108661156 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.134548533 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097879652 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154476976 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160516045 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104134316 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127261587 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087905684 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120800658 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145494051 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153858118 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099713815 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154202638 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135633025 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12002389 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140956413 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097499961 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10199823 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116683115 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071861614 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077452373 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159731743 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123986857 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13675927 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104991998 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089852253 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166565912 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157176123 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132609942 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140069522 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082261559 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.123071619 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.127452115 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190068176 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086370898 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148689743 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101604155 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076956909 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120456628 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249009669 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117706242 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10356566 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089081049 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135164513 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174779393 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.128303881 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083737003 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115470168 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106642145 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.109973197 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112358941 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170813471 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149573095 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118998482 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069770955 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105160969 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143443836 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12603504 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105234737 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.119255839 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090530669 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125834055 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148368926 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125242265 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134153414 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.112802141 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084908417 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113627086 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13115448 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12092555 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160113707 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115601507 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.070979752 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116229655 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095259433 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078207861 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142419021 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073941586 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163504611 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095906046 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.120922879 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123352985 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105460733 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105384155 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150595082 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132866721 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1001512 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083036101 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098308211 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.113325252 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133938409 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082834084 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101467675 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106703066 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.221540691 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130928984 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074695989 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114398725 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.094716055 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11715695 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120084147 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078737619 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117258246 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0999985 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099181196 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123776841 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150992151 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086393753 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078545269 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157137419 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114423298 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101024724 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135502462 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148808018 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117593245 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097232394 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139287164 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165506805 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087633966 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152915401 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099860808 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081981701 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.102730209 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115475819 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107028442 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.118734439 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078989975 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.112764435 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155053937 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07278709 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094235196 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124480226 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079425366 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078428678 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101240736 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100085331 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093846115 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098503686 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100900922 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13057156 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114892662 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100497461 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118743928 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094639523 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155310948 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084488706 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.097300318 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099929697 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070278 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.125352789 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142225142 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075273442 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.295518073 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.118649701 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110712604 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11358685 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082026984 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132093866 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0774806 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071333337 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134106128 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107474833 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106218906 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.142745714 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108207603 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.119083993 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.114271956 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126744422 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124841396 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.121912108 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103707891 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086980771 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109164549 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124532156 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071921651 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090019474 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.08057039 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10065636 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092024975 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082231322 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13381703 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116859718 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10512298 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109647109 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094150251 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141355565 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076627364 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119280062 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.115849007 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092905885 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.144643069 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142905612 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123192721 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097776235 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129451596 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071577752 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072804217 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086631794 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118613996 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081852896 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081408399 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109137719 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140887223 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119425699 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128141879 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115977072 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110563051 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146296962 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070644565 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115578846 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133139709 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257415744 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101900953 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088892947 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095132488 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133760553 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099990197 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171319864 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10892686 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116771202 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147549162 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097504427 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076991979 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101246735 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126334247 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098553471 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136302628 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096855042 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084442795 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104156168 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076387672 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094802298 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121127014 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113295736 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130934282 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.108714983 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124011787 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076323353 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108510679 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115839204 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117121726 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081771085 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113016562 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15953838 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094333314 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112295639 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142920115 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077239873 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.1327525 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162865694 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136303597 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08244227 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101060289 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113571569 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120103175 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112899202 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131393227 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100450784 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128396223 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105074335 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084310414 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083759714 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092122443 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098753455 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.10777466 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.099659282 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.106076134 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09187425 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27091824 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100729031 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107405463 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112893507 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098443861 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.094618256 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094543789 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163576132 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111078539 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160496558 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096685336 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.1370103 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153254824 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073714696 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077883612 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079340831 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131968014 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082536828 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122252009 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.106256489 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110149518 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115788876 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131315079 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09407069 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070181565 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104711301 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127575882 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116286955 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094007406 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101147697 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150791157 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114529636 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076792475 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108801319 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110469667 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10093339 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165590731 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080324346 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104286428 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0753351 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078365208 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120804002 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143406142 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084577154 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100752589 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11344289 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10674452 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120839256 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094671577 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105191209 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122836627 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139213077 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119718172 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.086723013 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105790981 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121502526 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141697001 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097494316 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.244375986 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165518841 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142958762 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.151835927 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086252044 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109132566 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108938747 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105003211 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127932831 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082800214 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152065287 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079988423 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127705651 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097799476 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087684786 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122862776 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.10663153 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08539533 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137480446 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109974768 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080946737 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07867797 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108031343 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111785255 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099802777 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073180933 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132285477 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07257704 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127308168 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1597178 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079312859 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100841296 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093168423 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080649792 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100099043 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098689605 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08392202 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096595028 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161377024 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085212345 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140456765 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126663651 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106507417 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130793844 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1002357 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640027369 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07781455 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141838263 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111128168 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165525057 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094844858 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110543906 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103829388 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112934735 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280448436 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09974649 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176482114 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12521128 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.110673923 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077414716 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099406236 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099819363 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086204444 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103496161 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108003753 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109223662 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092186347 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.111217631 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117978573 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080830538 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094644534 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144756423 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111530619 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137317342 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132042901 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082530899 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111706813 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128645342 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078139515 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.114474027 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146762033 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102713954 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098019328 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081351338 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098074377 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162182141 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071932798 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151604081 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112929277 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105681951 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108040223 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.107301045 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122584561 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100108004 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113861176 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090476577 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.105912678 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107094173 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081508502 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077239622 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100814112 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106712099 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094097064 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094361225 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097134924 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141518062 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070475841 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130201296 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107225457 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136143601 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157279164 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.248143245 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08202367 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114818995 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114204299 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.108594523 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114985143 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079342255 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079148043 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079485055 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.097646786 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120215163 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10708824 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112040978 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105273345 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153046614 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082992968 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.220015413 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093589698 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100336888 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087391673 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078375106 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093539133 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094310548 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099612836 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105305244 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161799649 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091683833 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087573955 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089836807 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072945904 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081014615 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120952422 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106548108 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110729489 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101708306 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.08016135 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100825479 seconds)
  done (took 56.671921033 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.103643295 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.077203805 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09775734 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145752456 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121691746 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200620957 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150007311 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188921323 seconds)
  done (took 2.633367394 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068696873 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.0942351 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10194444 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082618375 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067284145 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06901316 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.227805782 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081379416 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066887007 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09089362 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077288109 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069153784 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.422665126 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066757281 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068172621 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.076019597 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067728701 seconds)
  done (took 3.327061018 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.376129541 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.599723943 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.355185093 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076122272 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.8464102 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091325775 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.149072497 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140646037 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081912574 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.518392567 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.367998465 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130284978 seconds)
  done (took 18.278865506 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.081882899 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078606441 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.090149889 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090058763 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.078092623 seconds)
  done (took 1.966085374 seconds)
done (took 104.014396784 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08171234 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.196507397 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.068820774 seconds)
  done (took 1.841144708 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.090601918 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089543319 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089657033 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086294535 seconds)
  done (took 1.904494489 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074990667 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076585725 seconds)
  done (took 1.698928716 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.232934729 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.175029392 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.094561847 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083168291 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080200358 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080855355 seconds)
  done (took 1.789925252 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073143921 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07294989 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074242092 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077943787 seconds)
  done (took 1.840127834 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.071013625 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067300934 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069233239 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072522408 seconds)
  done (took 1.825127674 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084556304 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.08478775 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079746532 seconds)
  done (took 1.794838021 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101863098 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094908452 seconds)
  done (took 1.740035474 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081484985 seconds)
  done (took 1.626616564 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091493188 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101447938 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131694981 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114179022 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141420726 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.117480259 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.083958931 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088483537 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078190317 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086040277 seconds)
  done (took 2.579526428 seconds)
done (took 20.772164075 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078912164 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.374119684 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360127224 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091180034 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671228417 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356487005 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.992116485 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093212224 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108614011 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06925332 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087102934 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649920527 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.981119594 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32638588 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.970324823 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.330896848 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651405998 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069153278 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068509194 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069865557 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.976569582 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069665635 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069774599 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070337055 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65193982 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374802084 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070822761 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.331061681 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069336838 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07405734 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359444022 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070423302 seconds)
  done (took 16.116303071 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07109095 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121938172 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073349462 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085605131 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071055843 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070573833 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072516678 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069582134 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118098501 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069799509 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087104491 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069117194 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073131607 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070315091 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08948703 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069379472 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07161537 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069871242 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069314851 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071190979 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088623769 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069974845 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070686063 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070569368 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070537145 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083170217 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071500831 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069893836 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070805191 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074241722 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075025698 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071609398 seconds)
  done (took 4.007723122 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117264866 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12612252 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074460174 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106971629 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118143649 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.0708046 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146875011 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093802974 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12131134 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069834241 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087433649 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069701741 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104204294 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070870601 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090801869 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070082101 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072867254 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07016694 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070024114 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071093942 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089501723 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069438596 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070685847 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070778426 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070637493 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084864289 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071528677 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069891421 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069617321 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074130689 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07604859 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071247078 seconds)
  done (took 4.268148332 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070770289 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07387884 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.080851735 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08203412 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068509484 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070675879 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071832203 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068255427 seconds)
  done (took 2.147503049 seconds)
done (took 28.095707508 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078645332 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068541234 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072244832 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087767073 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074488327 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079747814 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065262263 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075073767 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072655911 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072489386 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073854254 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070591522 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070447286 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065595267 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073561523 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067052214 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081753322 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07087832 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081262937 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081310474 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069939238 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072993467 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075417478 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081211568 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081368226 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08115777 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077328305 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073684109 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068344321 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070665631 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.070532672 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.078780128 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.081251894 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081488257 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067894142 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067893352 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072230253 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069359218 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082176075 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077386728 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069434736 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076929143 seconds)
  done (took 4.66458413 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084149505 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.088791438 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.081186251 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079976984 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098193109 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083095637 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.085742919 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077890533 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077624838 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.085971201 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073838197 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080766579 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078824649 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073065814 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077636513 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074704606 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079508733 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074023358 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077737613 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077881747 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086873895 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073206925 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087859211 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079708186 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074824009 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.08030931 seconds)
  done (took 3.659585798 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074103786 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085542642 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092965935 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143187748 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111440036 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.086255194 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081522001 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091843269 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096288283 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068615179 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073142967 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092806071 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092675479 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074351305 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.111111344 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084668261 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083813716 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070610374 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075022999 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09677585 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089092876 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085450964 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093959004 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084592579 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06806666 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070910687 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072645152 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083839931 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070574626 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079547769 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071039688 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072823867 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069382871 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078578124 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071136019 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067615686 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092039027 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079961017 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081097113 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.106203273 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07799152 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069811445 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09327686 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12731477 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067599518 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072264919 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072372876 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079618003 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068213624 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095623494 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080199976 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067934721 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069101547 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067857584 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067672038 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.070905249 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070193995 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07073122 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.0788092 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075607103 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089954683 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073601203 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085194168 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06775469 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078570159 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067662424 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069554507 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.0674024 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09710519 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070277175 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111876268 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068923036 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067319499 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079099404 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078479387 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074307079 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068548658 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086036582 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07954613 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072793052 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076746403 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071569485 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071793428 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098097668 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068479278 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067622245 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066653931 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074214245 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071557358 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069087858 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080010541 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067536589 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071919373 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085602431 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068110717 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068994633 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071923035 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070706989 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067856324 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078343754 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072190496 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069899489 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07865291 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068644114 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071869026 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081520903 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07520309 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066987833 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070889106 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072268639 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.0694586 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069573279 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07164695 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070836629 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074859847 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074824709 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073884267 seconds)
  done (took 10.741275967 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163285387 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156079133 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070957 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148560143 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076970638 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080724416 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.15110212 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095392714 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068851012 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070683869 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070785105 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109428834 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104951705 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115464953 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081472874 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069017677 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.094640864 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114057193 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152485559 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147196593 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091581286 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076826785 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071419681 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070225068 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070534117 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077864226 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08541038 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077341589 seconds)
  done (took 4.367566889 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.07842319 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104000512 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072920591 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090725652 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089096968 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070447151 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071207143 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070587459 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.084912309 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078270554 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068996383 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074094447 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072573267 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072534755 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070223586 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075226531 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075727757 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068114719 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072348996 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073963458 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079507939 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093628745 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074364565 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068819827 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071066352 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068664187 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.07723274 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.080876249 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068855838 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.104543921 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066475042 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073903204 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083064048 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06943113 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068517089 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068873176 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069234103 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.0690271 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070335307 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06739671 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06761693 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072464786 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068217701 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.076862752 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081631893 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.07532585 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.070883147 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071405441 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072171051 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066243221 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071831079 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071451583 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072394744 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075770342 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073001678 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071737514 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069878405 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.094842255 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074515242 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068212124 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067671921 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067587463 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07094711 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078490242 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084229118 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071047965 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067349295 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068852433 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082086415 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081388537 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068521937 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073459207 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066595843 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070621304 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071075254 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071430924 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069571272 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067630305 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068310775 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068703057 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.069818555 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068771643 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068149273 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071622256 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067407776 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067392577 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069300614 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070603933 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080461037 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068058954 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072390287 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.074276836 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068372941 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074640831 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074222855 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071842139 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080254159 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.079593296 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069389606 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067529434 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082058156 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071802176 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068862566 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.074615135 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073434167 seconds)
  done (took 9.326841964 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091491271 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069181612 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084531687 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092484628 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.07946589 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074377627 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078288771 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069438123 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08457479 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073331344 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076370228 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06732178 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079189526 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078720806 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068990676 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07942163 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071885286 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088324471 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084758449 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067984062 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07730349 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080584518 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080549988 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083047995 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082772133 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083430244 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.080615564 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078271331 seconds)
  done (took 3.818584717 seconds)
done (took 38.131281148 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.643551587 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.890145151 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.632970292 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.857239269 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.686100467 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.859545417 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.718114314 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.627305459 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.063762836 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.676384627 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.857888156 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.089820727 seconds)
done (took 64.291413714 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.650778011 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.772326673 seconds)
    (2/2) benchmarking "String"...
    done (took 1.866678245 seconds)
  done (took 5.202302015 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.832279881 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.27849058 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.881923397 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.618442492 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.625356655 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.045408865 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.397208848 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.074743548 seconds)
  done (took 29.481147558 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.788027838 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.84270709 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.320817823 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.356724946 seconds)
  done (took 14.915486261 seconds)
done (took 60.74182442 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.647065342 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.637138793 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.631504645 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.618574592 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.713278702 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.632152077 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.715327019 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.645039372 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.615105482 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.618246531 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.62210549 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.036953675 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.634830668 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.780613099 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.617414238 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.617533885 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.669884435 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.108728256 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.770800379 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.626870283 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.63692232 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.651726042 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.612618924 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.610036555 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.639789878 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.608204654 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 5.999550017 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.619739037 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.436868856 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.614300275 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.656110468 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.962762551 seconds)
  done (took 198.567975171 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.608689849 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.395645609 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.542841616 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.611096199 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.826334031 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.784436265 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.705384346 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.949593453 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.606471219 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.631540846 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.734298985 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.609919282 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.751834262 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.552393698 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.642935733 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.609743069 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.764401861 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.779913075 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.648188377 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.75241837 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.606572886 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.598854642 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.526311669 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.719065267 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.633681678 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.699277069 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.628824954 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.622472437 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.784729588 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.717377682 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.647756141 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.61919176 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.801408492 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.467279186 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.602228551 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.610764345 seconds)
  done (took 162.341991677 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.784784056 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.599462355 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.599135035 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.598501193 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.597244349 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.60334749 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.599047409 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.723217836 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.724079017 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.25418753 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.002524152 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.655954797 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.598013296 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.363192075 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.599026247 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.663340045 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.609543147 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.597858678 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.612006747 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.623587735 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.597096142 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.597128139 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.719668784 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.612092977 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.597410019 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.606772422 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.597996786 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.60202387 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.982668323 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.597996069 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.692396336 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.600860307 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.602851357 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.24616191 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.83687562 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.597408722 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.598458105 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.42917678 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.678117121 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.598798051 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.603451377 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.596115174 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.813592601 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.598648105 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.596392728 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.596291983 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.597983635 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.716076075 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.597392898 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.719429881 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.600411493 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.073695204 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.595618768 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.59664591 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.160929918 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.191922184 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.598346639 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.596138432 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.594213578 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.595084118 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.600612716 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.094929651 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.665094585 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.595697513 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.596078288 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.601279423 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.594409485 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.595664077 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.613480647 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.596627354 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.860820536 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.609801705 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.714402793 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.714476222 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.598197766 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.657307848 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.687117951 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.59475419 seconds)
    (78/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.595844318 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.593071013 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.596113667 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.594311067 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.675914757 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.593572405 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.6747928 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.606983427 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.593844701 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.649736001 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.663714223 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.593576829 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.418839442 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.59657927 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.592881805 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.839628222 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.658997196 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.592791223 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.595767759 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.674795302 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.71564843 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.327393266 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.595379728 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.901719955 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.672677261 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.596058778 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.71666239 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.59858818 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.675169616 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.603318267 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.595211429 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.594211723 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.593426264 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.629670625 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.596030444 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.60574928 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.966676556 seconds)
  done (took 379.989298775 seconds)
done (took 744.307556218 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.200037391 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.169091124 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.252089458 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.182992165 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.163816717 seconds)
  done (took 12.500309198 seconds)
done (took 14.037387812 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.669104347 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.677243524 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.610415374 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.673922994 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.609463646 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.673127756 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.65662253 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.617395939 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.643232629 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.613154537 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.645261284 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.614076635 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.601347059 seconds)
  done (took 22.837580592 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.821249975 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.822364139 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.662379984 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.847588523 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.639935796 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.824308145 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.751619589 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.73949893 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.737696072 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.608106364 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.604360427 seconds)
  done (took 20.593822003 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.825441438 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.830770573 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.668215185 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.827284766 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.639643641 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.823588356 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.754879521 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.746711368 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.740974268 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.604975915 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.605764743 seconds)
  done (took 20.605607071 seconds)
done (took 65.573266659 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.598200062 seconds)
  done (took 3.133676768 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.619328467 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.771283181 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.598345775 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.598936307 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.597949634 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.600795364 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.598860274 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.5982323 seconds)
  done (took 14.519928184 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.599626665 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.596046752 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.599374832 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.597274803 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.599083483 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.597704596 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.596719757 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.596170362 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.59763904 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.601692464 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.59790502 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.597737573 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.596803247 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.599732725 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.598808858 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.598583975 seconds)
  done (took 27.110484514 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.600811789 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.598063777 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.599374878 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.598996357 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.600649836 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.599636392 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.602127714 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.599244732 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.597374368 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.600749787 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.600447553 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.601331247 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.601223381 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.599995726 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.599380067 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.601076296 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.600597389 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.600274288 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.599994139 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.600432427 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.600875212 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.599924464 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.597294988 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.595126801 seconds)
  done (took 39.935258838 seconds)
done (took 86.236665273 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.325383527 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.505884041 seconds)
  done (took 9.367049496 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.611476752 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.610392481 seconds)
  done (took 4.851055155 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.606289143 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.60946863 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.608374768 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.609611334 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.607743837 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.608645902 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.609456345 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.606531631 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.609399156 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.608746903 seconds)
  done (took 17.631208884 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.608808439 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.607750063 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.607589422 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.608256161 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.608468599 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.609770908 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.609507125 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.608851129 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.60836958 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.60833769 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.609698899 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.608355404 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.611081068 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.609577421 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.608557108 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.609649059 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.610547469 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.608970692 seconds)
  done (took 30.507333859 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.607297417 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.609257713 seconds)
  done (took 4.764012316 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.609479416 seconds)
    (2/7) benchmarking "second"...
    done (took 1.609339729 seconds)
    (3/7) benchmarking "month"...
    done (took 1.610000166 seconds)
    (4/7) benchmarking "year"...
    done (took 1.609818532 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.608168741 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.610036624 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.610005252 seconds)
  done (took 12.814717214 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.607442519 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.761229329 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.826101914 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.229161106 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.611678537 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.613627338 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.540805764 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.613866442 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.614504655 seconds)
  done (took 17.964703431 seconds)
done (took 99.435031493 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.527970613 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.611223683 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.894972053 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.73712303 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.631504814 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.904061035 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.636592186 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.881867482 seconds)
done (took 41.374234906 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.652068481 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.33121297 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.365784964 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.643834345 seconds)
  done (took 14.88896081 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.610189172 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.918079037 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.63331567 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.428962311 seconds)
  done (took 21.14266168 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.986502119 seconds)
    (2/2) benchmarking "read"...
    done (took 1.963784889 seconds)
  done (took 5.502652275 seconds)
done (took 49.736752412 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.610412563 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.611856293 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.611691321 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.609729404 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.612133748 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.611939561 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.611126427 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.610421949 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.611666562 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.611057446 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.611352335 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.611263409 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.612074326 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.611772157 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.61097911 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.612355046 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.609959772 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.610772035 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.612636806 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.611637559 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.611563152 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.611596527 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.610686846 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.612275584 seconds)
  done (took 40.223567184 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.614021219 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.613631651 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.613389656 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.611023607 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.61236991 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.612956365 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.612181791 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.611108262 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.61473644 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.611462672 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.612630892 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.611433497 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.612065258 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.613043292 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.613733511 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.612100417 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.613373593 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.611798138 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.613601971 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.614226476 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.615952149 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.612832574 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.612787944 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.611539236 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.614884229 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.614123948 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.613069926 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.614379985 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.613967968 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.614634055 seconds)
  done (took 49.942826414 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.612869989 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.612582032 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.611771741 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.613787295 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.614565773 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.613049605 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.612646492 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.613073259 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.613361314 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.612806798 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.614240236 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.615063689 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.615109292 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.614210169 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.614091168 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.616337022 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.615041494 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.614170765 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.614568191 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.615732173 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.614159263 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.614809173 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.613890355 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.614593433 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.615171422 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.61356796 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.613314774 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.616683318 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.613475909 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.616108781 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.613930123 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.614758635 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.613834048 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.615818626 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.614187789 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.615497307 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.616191573 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.61590934 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.613161219 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.617634825 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.612711374 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.615454929 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.613103843 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.616186701 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.615184628 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.614349178 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.617974435 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.615253408 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.615693622 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.616977332 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.617712892 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.617422216 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.615004461 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.615862291 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.615056863 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.615185572 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.615853593 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.615372354 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.615249923 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.617260434 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.615682571 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.614822227 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.615465699 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.616957654 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.616824246 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.615304928 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.617045678 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.61739767 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.61721691 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.61656351 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.618209848 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.613313403 seconds)
  done (took 117.835766545 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.616595317 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.617521955 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.616719506 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.616671496 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.616797423 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.617261588 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.616606198 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.614345047 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.612823706 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.61640039 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.618277824 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.617718614 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.616282519 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.617474346 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.617003793 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.616159155 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.619214122 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.617594256 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.616067558 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.617530252 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.618405829 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.618228425 seconds)
  done (took 37.126750634 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.616397992 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.618571132 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.616964019 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.618245869 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.617934262 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.622638489 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.615754983 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.618581341 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.617744291 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.617150524 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.618182244 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.616490697 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.620280081 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.617018224 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.61874475 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.619267391 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.618761003 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.61955966 seconds)
  done (took 30.683595258 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.617740663 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.619804074 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.620761459 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.6191296 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.617706534 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.620005712 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.618022059 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.620186044 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.616817843 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.619343788 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.617200623 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.620169696 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.620149488 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.617501851 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.619818784 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.617906377 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.618197452 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.619079443 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.617994181 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.620481347 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.619104044 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.618480358 seconds)
  done (took 37.171002627 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.618807913 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.621919122 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.619040488 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.618556836 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.619488734 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.618979406 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.619409382 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.620369781 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.619038619 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.619006987 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.618120816 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.619506927 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.618129547 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.62148769 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.619759588 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.617675246 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.618785146 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.618935709 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.619686617 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.620888519 seconds)
  done (took 33.944159106 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.622053158 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.620192412 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.620120911 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.620926259 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.622514517 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.624341078 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.621279638 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.619582957 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.620433269 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.621625197 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.621508019 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.621019798 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.621759534 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.620082829 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.618910151 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.62313191 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.623061568 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.623261914 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.620820469 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.622378089 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.6208464 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.621400657 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.62278311 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.62422605 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.622494819 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.621540302 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.622248128 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.62230396 seconds)
  done (took 46.965449012 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.621073272 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.620771538 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.618132902 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.618539642 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.621735846 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.62043538 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.621701214 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.621676451 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.619578594 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.621901694 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.620311182 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.622003719 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.620077985 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.620697078 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.622901108 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.620132282 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.620158138 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.622935994 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.621242254 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.618771475 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.61959883 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.621999349 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.621348931 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.621365996 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.621828795 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.622463159 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.621805196 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.622136703 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.620526037 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.620172256 seconds)
  done (took 50.184992196 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.64114413 seconds)
    (2/2) benchmarking "in"...
    done (took 1.640267174 seconds)
  done (took 4.838559613 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.619459198 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.621175634 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.622871677 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.6235424 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.620733957 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.623017582 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.620824055 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.621701806 seconds)
  done (took 14.530734591 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.625027154 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.621067559 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.623087923 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.62119534 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.6230909 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.62407455 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.632476332 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.621648691 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.626923072 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.623055341 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.630642921 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.633728056 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.627376089 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.625879923 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.626150841 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.623910081 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.624177806 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.624752552 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.623246489 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.623922931 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.623117177 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.627843652 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.628550976 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.622678742 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.625097957 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.636011091 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.631037225 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.624538619 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.625922714 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.629330404 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.624242305 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.624150428 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.623786877 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.623186556 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.6213807 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.622434377 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.634511785 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.629147114 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.632608248 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.626071469 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.623153496 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.621475073 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.62714076 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.626398702 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.626344352 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.624671735 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.622766072 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.623845006 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.624216097 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.628085565 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.633134636 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.625918614 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.624420363 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.630985388 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.627892795 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.633363576 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.626663345 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.630187665 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.636598274 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.637223475 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.637257736 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.634720057 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.628653173 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.625525797 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.636921363 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.653020865 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.632627425 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.62412987 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.62631514 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.622980273 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.634504772 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.637161543 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.636116248 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.625736701 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.627634487 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.625537199 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.627350614 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.62532441 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.634657444 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.631287809 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.629739434 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.627163941 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.635896519 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.654330469 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.630620295 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.625510588 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.625652334 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.62589735 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.626719153 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.638611553 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.626310342 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.62558883 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.628694091 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.62721179 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.629004059 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.626643405 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.627050669 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.629603892 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.62832951 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.626607031 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.628419346 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.632022576 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.63927821 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.626957699 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.62778949 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.635919471 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.627518604 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.628497686 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.635709729 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.626827501 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.627362575 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.629451387 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.636788379 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.627887479 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.633233518 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.639541531 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.628258317 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.634693621 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.628020507 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.631153311 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.640503968 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.656749354 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.628058028 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.627694666 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.634447753 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.640314398 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.627129402 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.633525832 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.627966917 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.630411162 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.628527401 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.63085094 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.627946319 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.629182937 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.629513277 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.632021212 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.627460919 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.62824242 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.63105777 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.632404148 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.63319667 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.63332297 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.632065629 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.634736528 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.628845624 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.63024661 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.637977088 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.633834977 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.63413572 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.631421024 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.630933542 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.63001476 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.63458453 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.630614846 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.635405893 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.629500575 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.633411519 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.630564017 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.629091886 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.629653194 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.631269952 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.632278894 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.636056509 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.631789217 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.637185236 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.634900056 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.636082238 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.631318365 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.632503782 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.632842792 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.630643936 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.631876443 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.634953632 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.640451215 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.632234528 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.632869029 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.635359997 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.632584356 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.636032763 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.632708566 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.637323377 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.644411198 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.633525245 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.63897255 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.632949363 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.632942788 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.633213796 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.634068336 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.634706503 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.633945083 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.640233767 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.641324419 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.645848643 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.642382603 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.634799456 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.637202561 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.633671496 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.638699378 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.639168218 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.634368378 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.633384353 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.633751717 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.635994435 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.633169506 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.636427228 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.634926085 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.634497105 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.634923922 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.634236907 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.635059373 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.6347472 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.637416115 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.637302533 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.635006108 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.635161258 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.634461439 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.634857444 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.633800094 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.633843374 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.63533763 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.634197799 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.634410262 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.643239066 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.634035326 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.637413089 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.638020474 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.63520188 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.63639921 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.635186521 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.637846255 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.637637047 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.64349706 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.639140747 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.640403932 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.644210059 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.637844136 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.636246366 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.639244604 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.634422135 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.63653529 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.640501622 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.642570928 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.633425238 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.635014573 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.6358568 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.635726529 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.635489111 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.643865528 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.636039665 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.637925411 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.637830031 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.637853334 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.636081151 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.640182506 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.639958211 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.638716727 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.639846884 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.635749549 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.633769932 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.63748359 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.637119885 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.636634144 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.634991183 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.640306081 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.644107059 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.642079434 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.637604044 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.638900542 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.637486014 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.639065944 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.639160876 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.634650944 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.639020775 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.650049422 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.647568812 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.646865413 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.642337112 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.635886297 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.645116333 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.640479804 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.644602466 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.639076634 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.641682029 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.639953342 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.639202188 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.637387318 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.64373951 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.636360398 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.641413706 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.641002288 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.641112768 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.637794768 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.63837806 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.636806779 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.637766159 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.640052105 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.63874868 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.638025341 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.642172987 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.640573351 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.640329657 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.639617381 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.646823191 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.641766684 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.641479255 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.640918312 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.638770484 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.63789981 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.641464741 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.637937445 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.643983331 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.646254688 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.641816414 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.651359495 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.642174822 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.651029415 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.639398743 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.644092512 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.647669182 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.639771282 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.640336297 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.638625109 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.640292196 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.647158401 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.638705773 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.641456932 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.642346047 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.638923221 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.641922875 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.641745449 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.640954606 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.64176815 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.641794076 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.651316493 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.645429344 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.646653171 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.646206986 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.640592606 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.641388761 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.63951029 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.641397197 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.646234721 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.640765711 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.643305773 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.641928012 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.640645982 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.638008144 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.641518299 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.640353295 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.638961072 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.638083181 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.651006641 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.644041164 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.646199973 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.640164945 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.652384169 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.640254036 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.650581099 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.639803433 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.643744482 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.639969127 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.641379166 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.643978534 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.641997507 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.643189226 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.639035427 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.643954063 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.644202579 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.641553088 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.645569297 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.641813091 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.640611125 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.643889326 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.653458788 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.667854412 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.642479981 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.644022453 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.644363763 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.644094616 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.646501433 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.642079278 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.644194964 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.647650402 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.655019463 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.65182043 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.644576076 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.642571445 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.643731526 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.641629802 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.642862209 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.642310874 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.64059142 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.643606874 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.643316545 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.643083524 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.647055939 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.641532428 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.645563129 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.646504855 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.643033267 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.653393141 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.643022329 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.646989262 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.643028287 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.644271093 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.645037046 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.646246528 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.643859139 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.646972978 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.642146691 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.64636245 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.652388484 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.654261552 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.648607821 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.647678637 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.643963942 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.645418685 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.64536685 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.644029878 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.643127983 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.645766415 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.647766153 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.645694689 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.645370646 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.644697254 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.643011329 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.645851494 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.642273313 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.65035148 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.654471425 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.648084055 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.645674097 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.645704411 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.645320237 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.6441816 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.647753657 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.655672178 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.646763851 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.657873211 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.656592 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.651041939 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.647989614 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.650918756 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.654948181 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.647049239 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.647853858 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.646144504 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.650041104 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.64642505 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.652761205 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.645564855 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.655403832 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.648429601 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.647998191 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.654536001 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.649150723 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.647135664 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.648332493 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.652684229 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.647387844 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.645606094 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.64841019 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.648031204 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.656044719 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.65196596 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.646224014 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.651491308 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.645772116 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.64956906 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.651368695 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.647629337 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.648494933 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.646612442 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.64766516 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.645973742 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.647178517 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.645922049 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.648157102 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.648782154 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.650609999 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.656015066 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.646462616 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.650775556 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.649683882 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.649093289 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.647353846 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.647580172 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.648582539 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.647620536 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.649161257 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.64709985 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.649279645 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.651060466 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.648183735 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.649169782 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.651971174 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.648298981 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.65197604 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.659659419 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.655619521 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.64864333 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.648800155 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.650464352 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.651180467 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.648459537 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.648489975 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.650814086 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.652702377 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.648357104 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.649996995 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.647816602 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.653638106 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.66918666 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.65049191 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.651315162 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.653106149 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.654150051 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.648391211 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.647250642 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.650395426 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.653231665 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.652927737 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.657681804 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.648980263 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.655575252 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.65012266 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.650065172 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.652338341 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.65369259 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.658126884 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.653552694 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.648527937 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.647566664 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.654724179 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.667097538 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.648651797 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.660080232 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.681612315 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.650819469 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.649096538 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.648352233 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.651231185 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.649669356 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.653975155 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.647659343 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.650651301 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.64851092 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.650993385 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.651076162 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.658460986 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.653056771 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.650896955 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.649729659 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.651616925 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.653261733 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.651373495 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.65138719 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.650152411 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.652351881 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.65097657 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.651073306 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.652872239 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.663359383 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.663703405 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.649875692 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.653374143 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.651554356 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.657569052 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.654944014 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.663731832 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.66043477 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.650536505 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.652181103 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.65463884 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.650347876 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.651880561 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.655259356 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.654608161 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.655757805 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.652679442 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.662489109 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.658985813 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.659909386 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.652716087 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.65331997 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.652665069 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.655567192 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.650955236 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.653507646 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.655357754 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.652656026 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.656268525 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.650499026 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.651559435 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.65875832 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.660427272 seconds)
  done (took 979.471482989 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.653527707 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.652869813 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.653452313 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.652980046 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.652707252 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.652743749 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.654386891 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.655437682 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.650439858 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.6521479 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.652060859 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.652958857 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.652828333 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.655328176 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.653291167 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.653744521 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.654112488 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.655940163 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.651910367 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.653634061 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.653041014 seconds)
  done (took 36.308921898 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.654653761 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.654910847 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.653973013 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.655239269 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.653978257 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.652823687 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.653681844 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.653781379 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.655358313 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.656862384 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.655444666 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.655256067 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.652908033 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.656058665 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.655473662 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.654945157 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.653752815 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.654955978 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.657205697 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.657022173 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.655768715 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.65543587 seconds)
  done (took 37.996900674 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.658797287 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.656525621 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.659476833 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.656797557 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.657408773 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.657543936 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.655897434 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.653612462 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.653997165 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.65621651 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.656905533 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.656793946 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.662539216 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.662746352 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.659152928 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.65477607 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.800798852 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.655805054 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.656253654 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.659041739 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.656782711 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.663793844 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.657148151 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.656785361 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.656300938 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.655205698 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.65858352 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.65707875 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.657016284 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.657765179 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.661812843 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.656499768 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.659044916 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.660386436 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.656183389 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.65774111 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.660928098 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.658350515 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.658138564 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.655824068 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.667444423 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.680739189 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.656716934 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.665258461 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.657306828 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.65629257 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.661805878 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.6658554 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.65597347 seconds)
  done (took 83.010918286 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.657098697 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.655737116 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.65853053 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.656681763 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.657222487 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.657666161 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.659006097 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.657163949 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.65872216 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.656462993 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.657436216 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.657976347 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.658995766 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.65975538 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.658384227 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.658623053 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.658740182 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.65694992 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.656985755 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.657276015 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.658967475 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.660491221 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.659361097 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.658844462 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.658134016 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.65700631 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.657424847 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.657504243 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.659580227 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.657865909 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.658678806 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.658216334 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.65681394 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.657767637 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.657953775 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.658571693 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.659022623 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.658947197 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.660133806 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.658371587 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.658320309 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.658702346 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.660071239 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.658802899 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.662527862 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.6575803 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.659899196 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.659073119 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.657379294 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.660433872 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.659762805 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.659767153 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.659289836 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.658178777 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.658696918 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.659976821 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.661284372 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.657448679 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.660512145 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.661716062 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.658758547 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.660681233 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.661234604 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.659644441 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.660225829 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.659554144 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.660430802 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.6580401 seconds)
  done (took 114.385822725 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.660743579 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.662664847 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.661083849 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.659593647 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.661835943 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.661444564 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.661766195 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.662435366 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.660197162 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.660303798 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.660557102 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.659145772 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.660806052 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.660803575 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.659149939 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.6608134 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.661275263 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.6616145 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.661949862 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.660358436 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.661353927 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.661163998 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.661238434 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.66216449 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.660079427 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.662103367 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.660611535 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.66091341 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.659554987 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.66216297 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.663080158 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.6597013 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.662225341 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.663368111 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.661377822 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.660543634 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.661558517 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.661971409 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.663281376 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.662350036 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.663286993 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.663178669 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.663601135 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.662145901 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.663145777 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.660935933 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.66301815 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.664118976 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.663022589 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.663895342 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.661766223 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.660784776 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.663388859 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.663791022 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.664959684 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.664588885 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.662969642 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.663608499 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.664534677 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.66366229 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.664893424 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.663912612 seconds)
  done (took 104.637883169 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.664046119 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.664396022 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.662157264 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.664543854 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.664950472 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.664179033 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.662628086 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.665591616 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.662963481 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.663258565 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.66432508 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.663562702 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.665149453 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.665549687 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.662278795 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.66498273 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.664816863 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.663419217 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.66449104 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.664464151 seconds)
  done (took 34.877862916 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.663929002 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.665319953 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.664511127 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.664850695 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.664160776 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.663797812 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.664096941 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.664365546 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.665447659 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.664967949 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.665304196 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.66481313 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.664569857 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.663341479 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.663798943 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.663713177 seconds)
  done (took 28.228825704 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.664731213 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.665137119 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.665953931 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.665337539 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.664183982 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.665726046 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.665611407 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.663886952 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.665127318 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.665873578 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.666096991 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.664584353 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.666794364 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.668360115 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.667129649 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.667803625 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.666422408 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.664618983 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.666661436 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.666351812 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.664292335 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.665085257 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.666023235 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.665085054 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.666160441 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.66772802 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.667183758 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.665564617 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.665032057 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.667404646 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.667280732 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.668717427 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.665885684 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.665494467 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.665312006 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.665772341 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.666640459 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.667762192 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.667951332 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.665047375 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.666669533 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.666160519 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.667233289 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.667446268 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.666583145 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.666594332 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.666359193 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.668496034 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.667189802 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.668444271 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.669033535 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.669672956 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.669299972 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.668144358 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.668753513 seconds)
  done (took 93.258506845 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.668099899 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.667662472 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.666257943 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.666818397 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.666569684 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.670128713 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.66586766 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.66792959 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.666445916 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.667950818 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.666278772 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.667627388 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.666328837 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.669549458 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.668263185 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.667459615 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.668111119 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.668749757 seconds)
  done (took 31.619304337 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.667655172 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.669443314 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.668315209 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.668795155 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.670281555 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.66948798 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.66756194 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.667472895 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.667728568 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.666786898 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.671265756 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.66844962 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.669051874 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.667424358 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.666593936 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.667253994 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.668772053 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.670282436 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.669626716 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.667844334 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.667795266 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.66802674 seconds)
  done (took 38.310124354 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.669070991 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.668445118 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.684361775 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.694750162 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.687508076 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.708209952 seconds)
  done (took 11.714880236 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.66892721 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.66910025 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.666606945 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.667946864 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.668436517 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.666257661 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.668042765 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.668935474 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.668670332 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.669095547 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.669364399 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.66983084 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.670565268 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.668110192 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.668766633 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.668999922 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.668628105 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.670104165 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.670326441 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.669969886 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.670540072 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.669942547 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.670180454 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.667329267 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.670973593 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.670039291 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.668430837 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.669357781 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.674245625 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.668464076 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.667416345 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.669753988 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.669828545 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.669883896 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.673552228 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.670305658 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.672163945 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.671862619 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.67147975 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.67023188 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.670326231 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.671075346 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.672248962 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.672866797 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.671046805 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.671284591 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.671747767 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.670478315 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.671649688 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.673093873 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.67244013 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.670615841 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.668897655 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.672073049 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.67216901 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.672995402 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.672031239 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.671717724 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.671769214 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.673593553 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.672037787 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.673097475 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.672947439 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.673640506 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.672476118 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.6747457 seconds)
  done (took 111.859890039 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.671845419 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.673472543 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.671763462 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.672381359 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.67368973 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.673056782 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.672397655 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.67448592 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.670602677 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.673108265 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.674152068 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.671878982 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.672224897 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.675040918 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.671933647 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.673852035 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.675768041 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.672320983 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.673129067 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.672685628 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.674105081 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.674156574 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.673532145 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.672020927 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.673575356 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.67310328 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.672260813 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.674454815 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.67549683 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.674832492 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.674487837 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.67525198 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.673187829 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.672629918 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.674494483 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.67484325 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.675891045 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.674838682 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.675664344 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.674818964 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.672091175 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.674800793 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.674852303 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.674477435 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.676210708 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.672248859 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.67325363 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.675096423 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.674565736 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.672764186 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.673859738 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.672420557 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.673925661 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.676115878 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.673524812 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.672358257 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.674461228 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.67516322 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.673968344 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.676527874 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.674799642 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.67506309 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.675800745 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.676473806 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.675377104 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.675024962 seconds)
  done (took 112.086831703 seconds)
done (took 2282.768342876 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.76428019 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.713455207 seconds)
  done (took 15.087748555 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.841668322 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.794579842 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.678671341 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.732159089 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.677536559 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.709502585 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.70192762 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.678581933 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.679579618 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.67908063 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.679660848 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.864987011 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.682373146 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.677604298 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.682257327 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.770650127 seconds)
  done (took 49.146057661 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.683238875 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.682163629 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.690095901 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.683773448 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.681515556 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.694203964 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.711262587 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.688616039 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.712921671 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.693017674 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.750761926 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.690819371 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.680888865 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.729887438 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.695845788 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.697438769 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.777322669 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.75512531 seconds)
  done (took 32.309260002 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.759412561 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.687551975 seconds)
  done (took 10.066666573 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.683169619 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.718039686 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.721804511 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.702817485 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.674654426 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.706892436 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.676581409 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.702012801 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.707443282 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.697113227 seconds)
  done (took 68.607602314 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.685470364 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.684687699 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.681533079 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.67840117 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.678196728 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.678584809 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.679060909 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.676693637 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.329750272 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.710134399 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.684484424 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.685053669 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.679370829 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.68067744 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.676678604 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.701507914 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.812725783 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.677428989 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.676766199 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.686102555 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.680322138 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.734499503 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.691491612 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.680533256 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.712108029 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.334310326 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.685752868 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.686110876 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.785582282 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.67804593 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.681074506 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.869301011 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.68473699 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.144017072 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.940642958 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.686423516 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.690536692 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.68693313 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.677091213 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.797554714 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.681606269 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.686131947 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.604677327 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.922614538 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.776945458 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.720990986 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.992337176 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.696307409 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.6800262 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.709228737 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.682455467 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.682544182 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.694335874 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.189171475 seconds)
  done (took 122.299608646 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.679096689 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.023807274 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.847636796 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.681259836 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.960921973 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.884758983 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.679142499 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.725313904 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.68114632 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.906260893 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.9290827 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.7839207 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.682572483 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.679209214 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.680202628 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.680341807 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.832586034 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.751423164 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.683076318 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.676974311 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.705943133 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.920986342 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.800093088 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.68244231 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.706531171 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.892156237 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.79995418 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.781994432 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.460754399 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.679274849 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.740136582 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.681460853 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.679974446 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.679203676 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.836377281 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.773690195 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.763901519 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.6816952 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.680819168 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.680993398 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.429182881 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.876803064 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.772926648 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.808384921 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.930595142 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.88554914 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.459140214 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.680816338 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.418099477 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.843989746 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.905916771 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.908784112 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.79936207 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.685615655 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.935198026 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.681981501 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.682837038 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.929535257 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.910903321 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.779055443 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.684274636 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.684696182 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.679119443 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.970356574 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.685222272 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.776298626 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.683509917 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.683367483 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.779669048 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.777942922 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.912790656 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.891775927 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.709978034 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.009786835 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.195279058 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.929984619 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.745156124 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.929839882 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.686737872 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.681356062 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.758409744 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.525100405 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.935320495 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.96503333 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.925010209 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.7135527 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.396200854 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.683566145 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.908766051 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.900979069 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.940943447 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.926419154 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.9191186 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.007042555 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.683644891 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.682745413 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.950475098 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.805036702 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.685955226 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.029651279 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.9090122 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.207093834 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.709444758 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.982753144 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.811562347 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.687581697 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.320043123 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.683561747 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.912344392 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.721619506 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.681751888 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.684030924 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.901301061 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.66570883 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.683898627 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.58436537 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.742144874 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.687019502 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.914018424 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.685553631 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.949932623 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.684730408 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.917118864 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.673034106 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.715707779 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.852569639 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.927449781 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.688371968 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.92364398 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.923845148 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.797839542 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.957224944 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.58462264 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.684750257 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.974131759 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.686436233 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.685475001 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.851840084 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.686000639 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.825351694 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.693074989 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.974133556 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.707065013 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.927019614 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.689955307 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.94019969 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.717454646 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.73164004 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.688123517 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.817664488 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.687286633 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.603642773 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.842724652 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.686517903 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.686195234 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.23163559 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 7.130032342 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.835290014 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.910970422 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.710303056 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.754457394 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.348547273 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.690563682 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.76619915 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.707766365 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.078782559 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.688213902 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.941497611 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.691922296 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.688207264 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.689572434 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.976470483 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.922337066 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.688400207 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.68540131 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.594001067 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.688172404 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.686426754 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.870679019 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.065573641 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.687611047 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.889254074 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.693220889 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.81293609 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.692717334 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.765776944 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.019726242 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.687578046 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.690844387 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.688193805 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.690755825 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.689826488 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.898208198 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.71423846 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.182336425 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.826355744 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.958216001 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.99849229 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.932688613 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.73470756 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.687650825 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.946236071 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.694956013 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.749260425 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.692912982 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.711630309 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.913912299 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.694274379 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.897896072 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.962446315 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.562664001 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.736061605 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.695832588 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.692007116 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.688792405 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.836992024 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.779414006 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.696247645 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.691629897 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.806332664 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.813226062 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.899950772 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.691776291 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.755967274 seconds)
  done (took 862.615791551 seconds)
done (took 1161.743563291 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.690613936 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.688569752 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.691449085 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.691430276 seconds)
  done (took 28.384811708 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.696499743 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.693950332 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.692458297 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.692368223 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.693497088 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.692199046 seconds)
  done (took 11.784891016 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.690913383 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.689302936 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.68984027 seconds)
  done (took 20.693854686 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.771552159 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.074280125 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.824538509 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.13573168 seconds)
  done (took 9.430935169 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.694568236 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.694537039 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.693041832 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.693474544 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.697829944 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.69674795 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.694964717 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.695156895 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.696156234 seconds)
  done (took 16.882884437 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.798544323 seconds)
done (took 92.600523568 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Float64, false)...
    done (took 5.47157547 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.590025827 seconds)
    (3/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.784522476 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.756745826 seconds)
    (5/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.842784719 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.785925066 seconds)
    (7/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.694923 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.700714943 seconds)
    (9/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.77948056 seconds)
    (10/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.720263692 seconds)
    (11/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.844914139 seconds)
    (12/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.874461467 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.028714231 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.693599491 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.720358437 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.01071646 seconds)
    (17/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.875722674 seconds)
    (18/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.579989223 seconds)
    (19/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.092006247 seconds)
    (20/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.846523135 seconds)
    (21/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.472776188 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.851652462 seconds)
    (23/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.691364324 seconds)
    (24/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 3.080420105 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.721333767 seconds)
    (26/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.703126259 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.91529756 seconds)
    (28/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.706418931 seconds)
    (29/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.036731446 seconds)
    (30/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.716272591 seconds)
    (31/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.77189946 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.77797092 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.798615022 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.656131648 seconds)
    (35/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.00610776 seconds)
    (36/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.074877443 seconds)
    (37/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.89818809 seconds)
    (38/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.081740376 seconds)
    (39/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.015527582 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.866865606 seconds)
    (41/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.780105383 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.793878305 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.718472704 seconds)
    (44/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.12068356 seconds)
    (45/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.179152577 seconds)
    (46/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.69623493 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 3.230241093 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.954299513 seconds)
    (49/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.697335506 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.422976682 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 5.34552604 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.695793141 seconds)
    (53/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.87476451 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.951063936 seconds)
    (55/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.923730184 seconds)
    (56/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.242782085 seconds)
    (57/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.43763299 seconds)
    (58/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.790239839 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.851059889 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.713922952 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.078620365 seconds)
    (62/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.781220854 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.696942174 seconds)
    (64/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.782964319 seconds)
    (65/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.691470152 seconds)
    (66/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.062441609 seconds)
    (67/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.826904165 seconds)
    (68/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.148432489 seconds)
    (69/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.79942818 seconds)
    (70/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.695603277 seconds)
    (71/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.988426292 seconds)
    (72/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.713498286 seconds)
    (73/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.695553826 seconds)
    (74/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.234134964 seconds)
    (75/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.871018 seconds)
    (76/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.776994567 seconds)
    (77/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.596209117 seconds)
    (78/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.742512119 seconds)
    (79/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.178383397 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.670388896 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.314920241 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.701109882 seconds)
    (83/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.937499213 seconds)
    (84/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.133947602 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.987111366 seconds)
    (86/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.151124851 seconds)
    (87/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.861405169 seconds)
    (88/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.781740978 seconds)
    (89/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.803295363 seconds)
    (90/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.961419062 seconds)
    (91/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.959203848 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.700548327 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.041265481 seconds)
    (94/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.024468013 seconds)
    (95/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.073510123 seconds)
    (96/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.187178595 seconds)
    (97/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.741259684 seconds)
    (98/309) benchmarking ("sort", Float32, false)...
    done (took 5.388975572 seconds)
    (99/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.718829009 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.698960022 seconds)
    (101/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.183130007 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.006005807 seconds)
    (103/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.717479259 seconds)
    (104/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.777068407 seconds)
    (105/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.033524261 seconds)
    (106/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.630734455 seconds)
    (107/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.833134873 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.829571992 seconds)
    (109/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.934135139 seconds)
    (110/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.82081507 seconds)
    (111/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.791187698 seconds)
    (112/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.812368508 seconds)
    (113/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.901978265 seconds)
    (114/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.833474987 seconds)
    (115/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.776174412 seconds)
    (116/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.885951035 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.703540593 seconds)
    (118/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.699634888 seconds)
    (119/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.975576328 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.003194605 seconds)
    (121/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.70055833 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.343809593 seconds)
    (123/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.998563346 seconds)
    (124/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.723871919 seconds)
    (125/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 3.158828202 seconds)
    (126/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.72775978 seconds)
    (127/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.997933615 seconds)
    (128/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.717352047 seconds)
    (129/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.698352881 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.738448386 seconds)
    (131/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.860601261 seconds)
    (132/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.70496434 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.78557229 seconds)
    (134/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.119111887 seconds)
    (135/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.735503447 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.603064368 seconds)
    (137/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.705595282 seconds)
    (138/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.084685803 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.955054137 seconds)
    (140/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.702806859 seconds)
    (141/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.967663272 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.451352161 seconds)
    (143/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.739635043 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.950479883 seconds)
    (145/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.795845539 seconds)
    (146/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.070226901 seconds)
    (147/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.977368328 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.826075376 seconds)
    (149/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.137017413 seconds)
    (150/309) benchmarking ("sort", BigInt, false)...
    done (took 6.706296752 seconds)
    (151/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.706055032 seconds)
    (152/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.698535127 seconds)
    (153/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.015003158 seconds)
    (154/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.707379035 seconds)
    (155/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.765909041 seconds)
    (156/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.701889785 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.957453586 seconds)
    (158/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.565893586 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.378400625 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.035603178 seconds)
    (161/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.816674351 seconds)
    (162/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.703736965 seconds)
    (163/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.902968592 seconds)
    (164/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.733119877 seconds)
    (165/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.715610221 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.839155254 seconds)
    (167/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.864937247 seconds)
    (168/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.373914589 seconds)
    (169/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.94924409 seconds)
    (170/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.706306849 seconds)
    (171/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.797113085 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.801509585 seconds)
    (173/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.870621952 seconds)
    (174/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.78634192 seconds)
    (175/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.702635221 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.70690059 seconds)
    (177/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.50255376 seconds)
    (178/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.783274133 seconds)
    (179/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.892376892 seconds)
    (180/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.033583642 seconds)
    (181/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.705620917 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.46926637 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.046178271 seconds)
    (184/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.391167466 seconds)
    (185/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.766508863 seconds)
    (186/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.762432528 seconds)
    (187/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.807068881 seconds)
    (188/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.78622666 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.052027484 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.70626778 seconds)
    (191/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.784562416 seconds)
    (192/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.815807855 seconds)
    (193/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.719529814 seconds)
    (194/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.968767396 seconds)
    (195/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.019481907 seconds)
    (196/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.595655173 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.842149482 seconds)
    (198/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.954613192 seconds)
    (199/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.705081536 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.117502424 seconds)
    (201/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.886955677 seconds)
    (202/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.834186724 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.828671723 seconds)
    (204/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.047372222 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.037945783 seconds)
    (206/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.835686949 seconds)
    (207/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.871425309 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.841486625 seconds)
    (209/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.949848968 seconds)
    (210/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.087997921 seconds)
    (211/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.217896077 seconds)
    (212/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.706819423 seconds)
    (213/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 3.215198027 seconds)
    (214/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.992881213 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.771949644 seconds)
    (216/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.952513631 seconds)
    (217/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.710538007 seconds)
    (218/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.813935034 seconds)
    (219/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.080570801 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.381206151 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.934045209 seconds)
    (222/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.835623057 seconds)
    (223/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.707500675 seconds)
    (224/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.914254721 seconds)
    (225/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.080641818 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.356375296 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.004766924 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.74062015 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.703060524 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.707941446 seconds)
    (231/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.853608253 seconds)
    (232/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.732744347 seconds)
    (233/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.986468728 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.016608501 seconds)
    (235/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.845433562 seconds)
    (236/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.733612738 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.705399321 seconds)
    (238/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.708532046 seconds)
    (239/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.075321836 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.506199536 seconds)
    (241/309) benchmarking ("sort", Int8, false)...
    done (took 4.608658118 seconds)
    (242/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.04147378 seconds)
    (243/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.020019055 seconds)
    (244/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.708450957 seconds)
    (245/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 3.084954988 seconds)
    (246/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.791764258 seconds)
    (247/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.738761541 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.093220569 seconds)
    (249/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.71908651 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.02151621 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.808564347 seconds)
    (252/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.815900783 seconds)
    (253/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.951717845 seconds)
    (254/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.8469166 seconds)
    (255/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.70867272 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.705208158 seconds)
    (257/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.943179601 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.100750612 seconds)
    (259/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.709593915 seconds)
    (260/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.881707223 seconds)
    (261/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.81790929 seconds)
    (262/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.727898262 seconds)
    (263/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.969804114 seconds)
    (264/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.73738572 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.836871844 seconds)
    (266/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.707159667 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.716287795 seconds)
    (268/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.846745396 seconds)
    (269/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.01141365 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.132141392 seconds)
    (271/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.786118041 seconds)
    (272/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.707646666 seconds)
    (273/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.885285717 seconds)
    (274/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.707945696 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.410011905 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.726526573 seconds)
    (277/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.786672566 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.708624598 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.78972823 seconds)
    (280/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.707261484 seconds)
    (281/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.978496546 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.838417715 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.842319668 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.106374449 seconds)
    (285/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.708800026 seconds)
    (286/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.839562668 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.817055341 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.815663501 seconds)
    (289/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.079497751 seconds)
    (290/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.97190427 seconds)
    (291/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.770560783 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.708980092 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.658467865 seconds)
    (294/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.993311285 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.738746255 seconds)
    (296/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.709961047 seconds)
    (297/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.33749483 seconds)
    (298/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.948539738 seconds)
    (299/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.023166944 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.687565967 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.846585389 seconds)
    (302/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.855727704 seconds)
    (303/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.845336397 seconds)
    (304/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.878611487 seconds)
    (305/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.865194317 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.92602339 seconds)
    (307/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.957107004 seconds)
    (308/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.571355629 seconds)
    (309/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.715454094 seconds)
  done (took 952.939025878 seconds)
done (took 954.625467386 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.741747095 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.730804987 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.715331584 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.734572198 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.826616521 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.758145402 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.727468579 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.717688853 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.764222866 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.765741044 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.713445128 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.755069693 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.716050083 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.715735097 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.715151692 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.731060915 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.025464897 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.745642701 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.733581496 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.726875339 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.731831915 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.713457483 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.766011149 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.756709662 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.723040928 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.722011611 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.719966938 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.737676356 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.829877338 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.720112381 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.721296211 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.727963982 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.026947406 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.744070172 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.71377209 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.734618779 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.727661635 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.727564367 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.718781313 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.747841133 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.113332941 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.755454961 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.714642493 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.717254578 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.715756811 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.72299005 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.716583731 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.725865272 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.730873739 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.733566533 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.107578477 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.773358356 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.720823963 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.716254231 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.729174783 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.716845239 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.71877914 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.734123901 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.736026969 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.733460998 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.013342555 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.754592292 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.719109163 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.734139452 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.726585968 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.148100518 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.757374471 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.723304816 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.114799185 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.764610715 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.148386911 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.767595735 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.719498392 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.732644901 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.749362742 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.030954912 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.747128107 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.715936536 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.725913478 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.716129332 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.73015596 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.73419077 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.723809801 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.718466937 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.733886127 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.761980182 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.730455384 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.718232656 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.730538329 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.737710235 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.728322816 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.731420228 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.721630098 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.717495551 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.73005952 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.723029967 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.720804695 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.72292873 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.725448016 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.729945804 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.114937316 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.777932506 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.717304203 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.717753779 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.721955715 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.735510995 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.117141195 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.760287702 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.742517268 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.76868073 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.722608198 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.016996316 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.753379604 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.736624367 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.730626514 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.724450065 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.71713772 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.016580484 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.139738882 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.776431939 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.723100246 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.71672433 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.737190668 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.722960823 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.717498203 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.031423724 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.752485404 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.736621814 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.843331447 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.734485888 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.752202114 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.720283232 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.726872346 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.768537999 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.738929092 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.750763746 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.723641747 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.737797438 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.739656328 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.719978588 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.733586701 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.735598521 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.721571539 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.731132037 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.718472434 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.766543749 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.737688565 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.737935437 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.744462397 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.844815164 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.718930723 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.019045802 seconds)
done (took 270.948442794 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.8008678 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.718631395 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.814038175 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.718234402 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.817337025 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.791055118 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.718626142 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.720348976 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.718543656 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.230139281 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.717984674 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.726846389 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.719062886 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.719605581 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.796723421 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.720080633 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.716499415 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.170081421 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.721521393 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.810983356 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.717282805 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.721322145 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.720799693 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.217429112 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.720742628 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.719645317 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.806078707 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.719690803 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.172010838 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.71757244 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.720377555 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.173301037 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.79887449 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.748259741 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.728266138 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.724643439 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.813056174 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.729188861 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.792002707 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.794017349 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.81448767 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.752206295 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.720260251 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.717301938 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.721380344 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.72246012 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.71995276 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.7533793 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.721887036 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.72705378 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.175652327 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.730277404 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.729085952 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.721297555 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.72231786 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.75006547 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.723415152 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.726162522 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.807425344 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.721504958 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.796766812 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.221722657 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.232127188 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.720669277 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.721550474 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.724968616 seconds)
  done (took 175.364605338 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.788103908 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.805067937 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.787819661 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.72956045 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.773801728 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.788474565 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.728198656 seconds)
  done (took 14.052752095 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.730256265 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.726409456 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.771732373 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.769926909 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.719552442 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.876893208 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.723297666 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.735674781 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.726433695 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.74902272 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.722243958 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.723088185 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.728394218 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.723831892 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.77069745 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.734885237 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.838275262 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.72315339 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.720948036 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.87171299 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.725120178 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.727921754 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.748882365 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.734521691 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.722814141 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.728180595 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.291294676 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.720944926 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.721854716 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.720597279 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.722528267 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.76285745 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.721285573 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.723648485 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.722727537 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.836984872 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.723523978 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.723963516 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.724345069 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.725333765 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.723537668 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.723773085 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.7230426 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.723835651 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.726047094 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.748216296 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.724132376 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.72477553 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.725417023 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.723697047 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.749997222 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.723399555 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.724683546 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.728379797 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.765727817 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.734627632 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.725792203 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.725237839 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.725405992 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.725599649 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.875354705 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.773792541 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.72535699 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.772606181 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.726481083 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.724606178 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.723606043 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.724162164 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.812456888 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.725188941 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.772312603 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.727279171 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.885166316 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.746624076 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.725047299 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.728358214 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.729404206 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.725320191 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.72683846 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.731461216 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.725058218 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.72860402 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.734171079 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.730718542 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.726868541 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.838366457 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.863682778 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.725900841 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.728920415 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.733088519 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.724592543 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.770715533 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.726847197 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.725528998 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.783333637 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.842612312 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.753442336 seconds)
  done (took 191.509899903 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.733266074 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.734464225 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.726690791 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.742989731 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.726012147 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.728807589 seconds)
  done (took 12.047471779 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.730021979 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.731031314 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.727461076 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.726384007 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.727202411 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.725920468 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.726571179 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.727582105 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.73118136 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.725801454 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.726873936 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.729519423 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.730003967 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.727506 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.727278294 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.727757654 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.727408394 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.725197081 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.72779236 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.72709877 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.98007401 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.727687928 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.727488263 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.733497469 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.733576043 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.727309836 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.739549767 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.729188899 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.725847894 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.734951061 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.731254144 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.727772675 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.734802642 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.734695952 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.732763251 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.733809836 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.733176915 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.729450557 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.728027593 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.728892552 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.730267242 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.729194029 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.729309998 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.730093312 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.73389495 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.738439957 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.735770284 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.741785447 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.731576679 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.730557954 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.732280102 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.73039062 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.7313092 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.731633995 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.736249241 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.735114197 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.736165177 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.730367705 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.729743468 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.735008804 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.732563934 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.72955302 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.731066805 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.733761196 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.736458855 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.732519127 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.734233332 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.731774398 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.73035812 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.72952461 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.731048882 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.729769543 seconds)
  done (took 127.530430518 seconds)
done (took 522.174207635 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.025933353 seconds)
  done (took 8.684105994 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.8053681 seconds)
  done (took 8.524975731 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.375817229 seconds)
  done (took 10.039562771 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.755118531 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.756889396 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.737913549 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.729323668 seconds)
  done (took 28.665116866 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.953297357 seconds)
  done (took 8.613497679 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.753939437 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.725215602 seconds)
  done (took 15.209475278 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.898033755 seconds)
  done (took 8.557210872 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.084829334 seconds)
  done (took 8.751761243 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.754324575 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.755327166 seconds)
  done (took 15.190832152 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.731474047 seconds)
  done (took 8.389193204 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.970545546 seconds)
  done (took 9.725588734 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.748733547 seconds)
  done (took 8.479158341 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.747631235 seconds)
  done (took 8.407321572 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.84787378 seconds)
  done (took 8.50760972 seconds)
done (took 157.404691962 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.732257843 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.730996266 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.726512422 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.730252019 seconds)
  done (took 28.577717043 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.781037788 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.762277662 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.76402993 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.772132039 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.76445479 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.761419266 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.755018883 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.75348683 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.773360161 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.764593639 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.765603668 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.765157693 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.761850804 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.756362114 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.764435239 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.765635797 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.773266285 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.765996532 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.756030655 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.766765825 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.731732502 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.77392849 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.768262885 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.729065107 seconds)
  done (took 43.956632728 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.919340528 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.801752855 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.883404117 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.783630925 seconds)
  done (took 9.047819824 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.781838916 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.784331244 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.796870389 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.835487731 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.859090573 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.794324413 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.75646882 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.753043 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.739884815 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.784531267 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.858669034 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.780062967 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.873391767 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.732086043 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.912523639 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.732107391 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.73192085 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.784843594 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.837208065 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.849079629 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.73182297 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.784102013 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.785976448 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.780451973 seconds)
  done (took 44.72039516 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.732931119 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.741585819 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.741280721 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.734542329 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.736081016 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.733896434 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.74070782 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.736064096 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.755475581 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.73773063 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.734553357 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.734813113 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.74286491 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.736202752 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.733136774 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.748581349 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.748136704 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.734875839 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.739209063 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.742901647 seconds)
  done (took 36.44612689 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.731888716 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.578968955 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.077429183 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.984786804 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.733896573 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.731050082 seconds)
  done (took 30.500149697 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.745730148 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.740106144 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.73571376 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.793996229 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.875561558 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.73927766 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.735585741 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.746561648 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.781538632 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.797271812 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.75613032 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.76435704 seconds)
  done (took 22.877009737 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.736086929 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.734674657 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.733464876 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.744016376 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.743697469 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.74295551 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.741746018 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.735496591 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.747252963 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.753999913 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.743644089 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.745505669 seconds)
  done (took 42.569931464 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.812797512 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.60773251 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177121482 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.199963677 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.257559019 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.935843097 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.734890191 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.817802655 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.735123026 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.005633814 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.054835147 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926887803 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.976908103 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.537623531 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.73671445 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.204748636 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.01774408 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947920318 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.762802597 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314630824 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830892086 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.313478862 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.38376291 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.833524662 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.935860617 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.855643683 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.992510074 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.687007955 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.783201498 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.737138713 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.739881713 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.736770513 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.00652072 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856746272 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.805716795 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.739310495 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.149353874 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.443556701 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.747945786 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.402268128 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.240275649 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.841251082 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.739278691 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.738685343 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.663679669 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.30812547 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823117256 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.739484907 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.437457942 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.737257008 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.742090923 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.809565263 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.739501422 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.542528163 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.421753096 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.001278167 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.736859296 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.739992772 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.29382982 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.715450247 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400629212 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.668328599 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.823673336 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.382617504 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174427599 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.887977767 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.738619884 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.738560186 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.664970453 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.383520621 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.840695086 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.882091712 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.751334223 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3778956 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020184785 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.111720976 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.777107976 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012652888 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.646188429 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.667786207 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954200546 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.685971438 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.666653281 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.586386549 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.664948193 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949151583 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772408524 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.33313656 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.76998543 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.819957541 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.742500835 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.753568571 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.740259593 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.951993622 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.632359084 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.736642704 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 3.98436146 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.977086864 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.751210733 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.825903291 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.6644878 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.737800856 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983074615 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.943319008 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.053891187 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.212530044 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.819319918 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.737804149 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.748235434 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.735147831 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.744483324 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.001223418 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.796266897 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.716401049 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851133597 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.690724571 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99751205 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.76614943 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.833853239 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.05892832 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.965126043 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.076107549 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.983219634 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.801358582 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.741972167 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.739981948 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.398079489 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.337677648 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.955794083 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.752971466 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338623184 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.746076883 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.74141723 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.673645921 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.36022289 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.072555783 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.811427565 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.953386469 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.757466071 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.009416509 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.666745477 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.875275749 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.731600985 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.952083439 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.378513825 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.804795913 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987857594 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.050626299 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.033949895 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.7463329 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.754822437 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83369132 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.756914673 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.247879868 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.985928009 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.741978764 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.740281514 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.388058796 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.783946225 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.743275431 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.744935235 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.271607551 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006390277 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.756407992 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.748888468 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.61702459 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.75306105 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.804691189 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.744286876 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.743796389 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.261615566 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.245100799 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.747784388 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.38898493 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961500369 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.74391718 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.374321222 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913621932 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.753316026 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.002053694 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.803669073 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.667898217 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.441500082 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.443329691 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.742211749 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.669344918 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.744355749 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.745724453 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.747598024 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.932863987 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.009320701 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.785670786 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.337684439 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.83608854 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.745784167 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.744128823 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.742760367 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.260666891 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.719049977 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402842784 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.7462685 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870750353 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.755098697 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.669391213 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.743690423 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.743440545 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.744314982 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.691134795 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790291499 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.342682496 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938695424 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989750608 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.150222266 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.750212887 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.335949378 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.847806367 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.758326409 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.004670481 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312256728 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.848020685 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826283144 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.750288462 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.336070749 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.462599008 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.297923905 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027016629 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0468414 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07579305 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.177412692 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.0747844 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.829558185 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971737571 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.266983169 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.801587737 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.832129104 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.680138705 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.754685489 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.379120956 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.079495959 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.75212893 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.962664163 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022533065 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.04913941 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.866800495 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.948052211 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775286258 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.605139424 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.778334115 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.277252545 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.76350387 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.133797431 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936836983 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824223955 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.001885381 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.81289105 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.744840117 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081654727 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783520042 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.446012293 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.098321542 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.220009104 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.175135724 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964207175 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.752732157 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.185656694 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086472098 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.97698913 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.871645619 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.671632775 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.752258004 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.749029494 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.758255844 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.723636569 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.579600487 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.989693429 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.750092709 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973335455 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.914806864 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110099153 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.730615659 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.747337005 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.744510485 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988650733 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.463985112 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908710254 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.111057736 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.329685797 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.75624152 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.672222974 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.672200367 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.4477375 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.755864184 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.71192977 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951828737 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.851236911 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.424026791 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.16422894 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062015121 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.989752669 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.759262261 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.008219975 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.016863487 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.237995695 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767711693 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.844020752 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.99766573 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.420793318 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.961866829 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.974655782 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.27935696 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.961915379 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188670913 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.716273397 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.747713223 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.952650716 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.961501659 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.057444087 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909067517 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.457996674 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.756926523 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106784997 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803061998 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.0810152 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.922293223 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.841207584 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.752968397 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.823201249 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.754263373 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.753357439 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.755303145 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.758185538 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.074122177 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.849970842 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.760462619 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.82489352 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.733687775 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.313153082 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.754903458 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011453859 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079118336 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.066166263 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.807485917 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.74899532 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.752928319 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.676409344 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875860272 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.190391313 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.020594173 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.872369583 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.884394541 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.770479695 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.017366557 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.039385052 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066486189 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.023414183 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.634745969 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418105835 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.877383272 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.967243216 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.756734564 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.954994029 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963994576 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050415264 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309028012 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.92937801 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.950598178 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.022967483 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.111974225 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.751535366 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332403348 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.75960923 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.159643294 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.784311044 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.066761397 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995747973 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.753552137 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872409474 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.7550819 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.95102903 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.203617306 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.345338636 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.08535728 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.601440892 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.753933036 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.014910991 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.065839763 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05032999 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829019035 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.758172415 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.444337496 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884366094 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.626249044 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.986245621 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.752480428 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956437913 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.463675146 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.756247096 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020118824 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050633485 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.75346152 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.659361505 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776123504 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.755934286 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.968068076 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964568424 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.000363443 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.755954303 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.761146955 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.560556246 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.020973874 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.807614593 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.67860827 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.75188268 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797823593 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.979110145 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.772033173 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.266246638 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.45478604 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028679295 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.661364063 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.770772644 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.197965868 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.129121684 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06849796 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.274875724 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975074559 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.30677452 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.643530698 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.136903552 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.757441874 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.197850339 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.139818247 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.756180368 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.306979231 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872685413 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.015630204 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.07391142 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.771183025 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.421054441 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.773338263 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.968255165 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.111008428 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.68542713 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.754231571 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.804578751 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.758323499 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.745320338 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.760898281 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.692447896 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266933374 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.600641695 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31150469 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.755269079 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.761323132 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.053637629 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.318554229 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869088211 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.773433297 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.761114278 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.455674197 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.04701142 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.99950735 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.302149722 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.856008743 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.755835069 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.756732573 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.675881485 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.941972701 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.945576374 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035377174 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.152371076 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.869843882 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.756223335 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.962524222 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959391296 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.083370515 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874292933 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.929797548 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.874673783 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.692503976 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.463231444 seconds)
  done (took 1600.5982454 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.762763504 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.789273388 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.787022081 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.837312319 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.804741438 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.776116883 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.838794705 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.799063868 seconds)
  done (took 56.080804032 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.758049943 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.909250203 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.760254667 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.759472649 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.801821443 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.75913658 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.909358208 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.767900325 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.760401439 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.763144838 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.760712587 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.757048143 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.032579694 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.776677761 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.758841281 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.758981493 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.761686522 seconds)
  done (took 72.308599461 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.7618469 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.929234662 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.790017456 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.759485734 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.487910205 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.771622615 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.74282378 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.772664814 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.7623929 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.228027095 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.054939449 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.797748352 seconds)
  done (took 88.547828193 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.77325611 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.76342839 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.761551712 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.760620298 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.760766962 seconds)
  done (took 10.516301469 seconds)
done (took 2088.42857654 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.991961897 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.817347785 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.856293826 seconds)
  done (took 5.361468754 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.906821554 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.95321868 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.065600487 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.073629309 seconds)
  done (took 9.694775458 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.071197253 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.139307597 seconds)
  done (took 5.899326183 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.082818377 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.77689731 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.142048064 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.763936156 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.760106725 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.763644966 seconds)
  done (took 21.981873217 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.763095864 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.762370142 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.761485161 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.761238545 seconds)
  done (took 8.737079352 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.760404258 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.46271627 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.761118521 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.77240787 seconds)
  done (took 20.445571994 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.909259063 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.887727326 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.902782173 seconds)
  done (took 7.38990103 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.981574533 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.868854342 seconds)
  done (took 6.539779853 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.899461557 seconds)
  done (took 3.589363883 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.789238662 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.031835479 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.24963123 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.300459043 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.344399294 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.634453467 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.053387193 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.983206917 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.212364033 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.200416383 seconds)
  done (took 23.490717345 seconds)
done (took 127.810723329 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.096806837 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.782462345 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.960949719 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.10412119 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.048745508 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.959701513 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.979140365 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.09334115 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.783599032 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.77162779 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.112675568 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.987020203 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.920967599 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.779047867 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.92913246 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.777923458 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.984477916 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.119407807 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.79594338 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.011529852 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.98638439 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.760000278 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.951048443 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.774670372 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.989324639 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.912651851 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.302617422 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.781630599 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.941067553 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.316016958 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.917912665 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.157540907 seconds)
  done (took 164.479437144 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.764267507 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.762945888 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.76266682 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.761430703 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.279140128 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.76303815 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.760887067 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.761232004 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.162997193 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.155523894 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.762525457 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.267327998 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.762529863 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.761339215 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.764769756 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.760124295 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.315569723 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.763569292 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.762406779 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.76113205 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.762032314 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.10206745 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.763057351 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.11671115 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.310952448 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.763239492 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.762715711 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.764609121 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.761904735 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.762566968 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.76379421 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.763592897 seconds)
  done (took 205.707933046 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.763364874 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.763348786 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.762834196 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.764346536 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.764675491 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.763687671 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.762196484 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.7605416 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.424135109 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.413169172 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.765543912 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.764350468 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.76993465 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.763293285 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.7602075 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.76315432 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.765839988 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.763272982 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.764800418 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.765152585 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.76487471 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.492400503 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.764884824 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.508725329 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.767930514 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.773321861 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.763238468 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.764949638 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.764257037 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.766708065 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.765228711 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.766797064 seconds)
  done (took 216.947459403 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.008391448 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.766102321 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.767026456 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.670597906 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.769657181 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.766836178 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.758565372 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.011711445 seconds)
  done (took 18.219016718 seconds)
done (took 607.053834902 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.144689545 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.976411379 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.947059545 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.789370876 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.052528009 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.831175183 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.787320711 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.850207345 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.609541769 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.861267866 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.448617481 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.807631404 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.542659281 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.810307829 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.91300458 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.845272021 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.361077452 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.463687373 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.959389466 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.866162295 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.971427896 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.682998635 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.869893947 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.645225733 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.562296667 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.734419219 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.800972303 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.368587198 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.799581589 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.943460894 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.475960357 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.028998909 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.8002029 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.783811719 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.8425809 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.821337045 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.984059388 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.797482758 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.912395621 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.484228877 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.883890673 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.517202977 seconds)
  done (took 98.272702826 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.777858005 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.774215196 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.773743038 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.773462205 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.785082037 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.774494089 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.774567504 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.773871972 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.773173041 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.774210128 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.77538425 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.78001192 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.775359163 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.783426856 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.776480407 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.775954369 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.775562379 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.782194183 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.774683817 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.774422578 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.773710449 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.77494376 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.770760341 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.773682463 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.775961387 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.775364427 seconds)
  done (took 47.882115394 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.767778674 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.92615405 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.012117299 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.787743793 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.772453583 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.775729275 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.7867209 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.776563031 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.772128245 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.773299968 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.876798922 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.779932885 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.787575567 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.013732609 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.786666407 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.768681118 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.770298826 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.770379381 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.934117868 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.78586039 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.792352614 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.777143225 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.791493912 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.78556107 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.775237927 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.770322457 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.777847558 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.26983323 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.781740389 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.87667012 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.817331442 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.794471343 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.218127726 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.023900385 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.823702203 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.783470395 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.773842119 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.879276869 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.777763564 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.771686407 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.790149179 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.780062983 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.020975519 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.2990755 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.785013994 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.772242073 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.278266454 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.890916946 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.816672385 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.782200009 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.025847998 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.789990469 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.775781081 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.777002211 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.811414547 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.775569937 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.772106132 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.132394105 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.783833173 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.789190814 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.780671937 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.775416214 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.938750216 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.78466921 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.930812519 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.781664151 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.780068738 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.77710385 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.02232839 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.790082075 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.31671169 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.788467557 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.775486237 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.877520594 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.933984081 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.306604175 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.787770556 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.940651091 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.233907336 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.796744889 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.78188918 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.256107596 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.802469642 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.781802165 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.774249488 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.774130942 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.776769334 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.819186849 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.792258505 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.225809545 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.310317184 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.146717404 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.800918797 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.791812476 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.776701869 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.130696169 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.78214503 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.777152446 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.011581076 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.323260973 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.787130079 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.778995566 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.292196936 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.791753495 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.793651619 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.783183596 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.022780192 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.789394896 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.819144421 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.778854037 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.78383101 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.780119812 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.793816339 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.783980105 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.774969144 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.283910541 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.898545958 seconds)
  done (took 221.329359741 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.774925563 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.777312365 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.774234351 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.781064776 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.773875124 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.777159543 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.773749934 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.779492013 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.779702088 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.778028505 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.775876733 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.783711156 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.775289733 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.784252987 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.327619448 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.777197257 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.384384332 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.780500786 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.778833038 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.776569706 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.459364995 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.781662927 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.776645479 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.775782619 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.776642919 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.780796365 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.798251302 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.782611313 seconds)
  done (took 165.352696747 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.784882261 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.96711699 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.799485037 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.820267245 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.78981208 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.779999401 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.921114989 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.802794494 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.788871509 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.781554085 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.782704396 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.84163742 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.789809715 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.882454798 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.811697609 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.885756315 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.884936578 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.785255369 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.782949553 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.783773865 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.810683488 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.790181633 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.843500949 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.904686516 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.797660547 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.896240144 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.796550454 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.782866525 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.784071143 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.895064656 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.797016823 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.842638653 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.8105081 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.797771381 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.898433747 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.896711788 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.883505107 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.88725701 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.788664282 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.78343357 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.780966019 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.783764328 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.89757944 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.798004578 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.78640193 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.898252239 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.801401259 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.787738473 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.780523307 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.779090362 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.793466115 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.79606138 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.854553954 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.909239317 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.816771419 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.804248994 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.881160127 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.903447667 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.781630167 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.878706746 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.785714127 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.894254875 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.798128637 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.784141579 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.78218736 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.784374624 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.808399591 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.884058637 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.882947654 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.787573098 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.878134316 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.814937919 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.78636455 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.779183923 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.780827723 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.895420357 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.895813517 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.814600355 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.816677104 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.80899618 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.790777218 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.78378425 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.784128189 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.798539969 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.784676419 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.898751415 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.897300651 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.787424946 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.779974527 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.780538852 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.780523029 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.805972625 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.900890509 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.813996154 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.88695913 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.846942697 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.852217828 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.793829618 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.796124859 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.788667257 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.846153854 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.793161843 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.793080801 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.068914258 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.840676828 seconds)
  done (took 193.539452038 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.18323344 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.825177577 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.838054792 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.086665778 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.131046287 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.764022488 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.825271902 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.828739457 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.855382479 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.013016905 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.900745605 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.846474174 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.815862176 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.803174784 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.829958113 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.852430811 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.836797646 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.179484677 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.03472026 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.971419971 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.81931957 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.1046762 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.131294248 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.407622341 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.87811206 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.245760113 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.382924494 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.959202634 seconds)
  done (took 59.069177771 seconds)
done (took 787.142114737 seconds)
SAVING RESULT...
DONE!
