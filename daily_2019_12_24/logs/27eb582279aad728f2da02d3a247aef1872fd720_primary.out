cset: moving following pidspec: 10114
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.385255459 seconds)
loading group "string"... done (took 0.563905785 seconds)
loading group "linalg"... done (took 7.179345375 seconds)
loading group "parallel"... done (took 0.156869444 seconds)
loading group "find"... done (took 1.137425312 seconds)
loading group "tuple"... done (took 1.792002888 seconds)
loading group "dates"... done (took 1.298852267 seconds)
loading group "micro"... done (took 0.21670611 seconds)
loading group "io"... done (took 0.94918739 seconds)
loading group "scalar"... done (took 37.342494516 seconds)
loading group "sparse"... done (took 11.814034866 seconds)
loading group "broadcast"... done (took 0.943235431 seconds)
loading group "union"... done (took 12.112174269 seconds)
loading group "simd"... done (took 4.466484606 seconds)
loading group "random"... done (took 9.019856411 seconds)
loading group "problem"... done (took 1.83015888 seconds)
loading group "array"... done (took 20.773096251 seconds)
loading group "misc"... done (took 1.673792351 seconds)
loading group "sort"... done (took 3.31008734 seconds)
loading group "collection"... done (took 17.208833357 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.519050164 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12490177 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117982633 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119984937 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146601053 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112838598 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124503236 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085724551 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.817140091 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147622886 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116668537 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.427254565 seconds)
done (took 5.163954178 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176667079 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082565582 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084151275 seconds)
  done (took 1.29878927 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065206568 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122579646 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066889015 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067060425 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067171996 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066213442 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066455775 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066232749 seconds)
  done (took 1.655823181 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072763731 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068664442 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066334579 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068159041 seconds)
  done (took 1.410532366 seconds)
done (took 5.748947419 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.786823406 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.203545335 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187789465 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.410161402 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130341925 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.159020134 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.641276661 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.34088561 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.192262507 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080473228 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.109220945 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.328539054 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111098499 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.649274008 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076600574 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090056109 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137634265 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.412422448 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066837656 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081958674 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088586933 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128289264 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087237373 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073682825 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145913918 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067473109 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.13566204 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080273907 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066000621 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.212371035 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172207558 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.661189842 seconds)
  done (took 10.287105191 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096080903 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097017364 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069098857 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123199582 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098359912 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069850403 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07024357 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066961924 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086604224 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126933248 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089489408 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101652299 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066207409 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068649437 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084518936 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203901827 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080362459 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081701093 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07054484 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075346853 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105046789 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078381833 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076439993 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076438361 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128799706 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180782712 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097538339 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098018679 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067741657 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078846097 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115464681 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126005273 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066924721 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066158093 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124162803 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095872846 seconds)
  done (took 4.579008555 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.997304821 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143135712 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089988952 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134647716 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064870213 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108779551 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064928953 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081031052 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.20818322 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.466939417 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.590216887 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111291961 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103314948 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067379417 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068611677 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066623988 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.501243081 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.095900464 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108026035 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083333572 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069971446 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069652037 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.354118043 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068995835 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064233832 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0687372 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057618565 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125434153 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068369173 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.945002236 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126914948 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066564033 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100688525 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.164599087 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090757964 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142012473 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067353939 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.195755291 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.154503805 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070764216 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067674222 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084648311 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104291735 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113101552 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065568004 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067159824 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162502006 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067347075 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079307032 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.650032138 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15479965 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096568605 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065247176 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.2517255 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.089556853 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069314793 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065783903 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.182494082 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129637953 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06803712 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066680515 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069325026 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07013201 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.359840199 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06587599 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.165262556 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.06929464 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076738043 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069990147 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069858921 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065570323 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073798593 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072696003 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.092581469 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.088370481 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066745297 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074760651 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066128285 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066201248 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067164427 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083404308 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.380057073 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067304865 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068321257 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064779387 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064320937 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089988615 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097453647 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068714068 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065620904 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100544483 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068367924 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066759293 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107067791 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066742369 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083572776 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069445853 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113455302 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068234229 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063733952 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.191013063 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066784626 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097114476 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070504988 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099300925 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.082046582 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067686984 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.426338367 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066009866 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065350812 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068609974 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066128745 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067738008 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066782571 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080398554 seconds)
  done (took 21.434901754 seconds)
done (took 38.43099557 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.235602159 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07826174 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074101685 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076579011 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073777507 seconds)
  done (took 1.764219623 seconds)
done (took 2.968796378 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122314807 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100381234 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064501535 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097943463 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064202385 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102022321 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101100439 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081946644 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100469891 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064173002 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097303183 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064504111 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064982572 seconds)
  done (took 2.353759574 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083242612 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084110797 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069887447 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08369785 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064184635 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08332648 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08188191 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089804799 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082037883 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073155761 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063939015 seconds)
  done (took 2.060359325 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083731749 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084116753 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0695942 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082594589 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06380641 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082722449 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082553041 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086027448 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082172945 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074360735 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063365434 seconds)
  done (took 2.052162042 seconds)
done (took 7.661153548 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078111825 seconds)
  done (took 1.267411562 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.592115812 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.149670342 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081467838 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110931242 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189704354 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118474114 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.270423365 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086689095 seconds)
  done (took 8.971417692 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103182111 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072512403 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068919962 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071847825 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069557133 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.06941395 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070985104 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071680703 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.0688689 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068953662 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071275232 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069571945 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072150992 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069458265 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071562072 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068319379 seconds)
  done (took 2.418399676 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091937925 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091163011 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073477976 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075002329 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072308023 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071625528 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074360596 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074316294 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070986674 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072055749 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074619257 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073532538 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071817225 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064336964 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073834349 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07574072 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071224756 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074340139 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07486798 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075795518 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075164155 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063999175 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071610888 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073762808 seconds)
  done (took 3.077944908 seconds)
done (took 16.932058986 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114490019 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071042094 seconds)
  done (took 1.380732046 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081261696 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083506966 seconds)
  done (took 1.367894298 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082853457 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066047288 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090001212 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077716098 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066174978 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065688657 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087703848 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066265373 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065562615 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066354094 seconds)
  done (took 1.938402422 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067965868 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077604519 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07072713 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081096794 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073484056 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064283513 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07206173 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067648504 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077049885 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062934684 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071038884 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082281332 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07114195 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084566425 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071443352 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068615786 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070654284 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066810708 seconds)
  done (took 2.507413702 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06620529 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066781809 seconds)
  done (took 1.343513326 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067774035 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06388087 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067309449 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066069926 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063148713 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062250517 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063041371 seconds)
  done (took 1.660704357 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.383973869 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113443788 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.310754705 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071302079 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081764836 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.2564162 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065288999 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070329763 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070613796 seconds)
  done (took 2.676016048 seconds)
done (took 14.082993231 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079899817 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087153636 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096772658 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.375249 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09141268 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065836144 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114061318 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188378988 seconds)
done (took 2.316380977 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213532564 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.635639998 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.402844749 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204761428 seconds)
  done (took 2.454814607 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.345356387 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.08830795 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059366979 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066486281 seconds)
  done (took 1.777437198 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066711233 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069839816 seconds)
  done (took 1.352320938 seconds)
done (took 7.014097765 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066842236 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086317819 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066093879 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066614863 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.064088266 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066759709 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064467947 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063284107 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06383347 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065788149 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068632476 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066243101 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065988566 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066340514 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063929633 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063309586 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065670376 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064242163 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06371288 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064004671 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064033783 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066060158 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063159482 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063542778 seconds)
  done (took 2.833914993 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084976675 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065747838 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071424114 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071486306 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069375824 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07128932 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070948752 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065824932 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070811096 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067677885 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068753581 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069541013 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06807664 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06906276 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068485382 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069718417 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071347053 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066333282 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068253086 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.06921361 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070748765 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06594269 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069261244 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071133226 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069493819 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070330594 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067879949 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066064649 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071159847 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068884671 seconds)
  done (took 3.31431335 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069686877 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063305272 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06418309 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071018648 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063367256 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064359184 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063383882 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06383102 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064072162 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062917454 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064341937 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063031323 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063630685 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064259359 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063981002 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067142911 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079813002 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063763122 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063638915 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064148133 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066713568 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063686428 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064768799 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063717092 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063311769 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063775518 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064545657 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063678359 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065549709 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063521288 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067004138 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066931176 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063459328 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070183471 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067419057 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06442213 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067926006 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063482386 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064548149 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063589828 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063534188 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063446486 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063424065 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070472151 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064626511 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065241819 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06374383 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06467116 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063942061 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.179307787 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062854941 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063687969 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065202724 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065527678 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067398095 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063496144 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064322446 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062794768 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064190802 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063036238 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063042715 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063324219 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06601013 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063890109 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077675667 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.0698779 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063293228 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064366804 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063568351 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065367678 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064996763 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076565582 seconds)
  done (took 6.043871116 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089938625 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087046636 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065275454 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064977494 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061451469 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06417808 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069648069 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06410681 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064974273 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08144132 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064121027 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064576801 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065569174 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067344569 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063799291 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065177719 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071686135 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061500475 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06336152 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066975088 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064004009 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069545027 seconds)
  done (took 2.739152237 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155504599 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070013236 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105011752 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074700617 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069643535 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074844649 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069392687 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069484818 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069681784 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067518626 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067187173 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069344142 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069751416 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06725827 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067139891 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067172929 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070203992 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067254332 seconds)
  done (took 2.601664978 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077320629 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065927065 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086642271 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066533746 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065946765 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068891601 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070518981 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073502021 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068881623 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065865757 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073762518 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068147495 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068118274 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065858848 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068438051 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065468924 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068443481 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065420759 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073256951 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069858498 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069897152 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073196783 seconds)
  done (took 2.770859414 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080206309 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067854163 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081565651 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067483864 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061449559 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064287667 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069473306 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065260347 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069355542 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067555627 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065195602 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063983446 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068023253 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06550561 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068342071 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06598534 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067211258 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066011506 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067268563 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061282681 seconds)
  done (took 2.590489161 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086486626 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067999156 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068088717 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075137248 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067656049 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06786454 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074760332 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067621602 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067232904 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088235581 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068143722 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067056714 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075365757 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071724333 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067788927 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074775055 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074247575 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074499425 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066961112 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067058994 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089200165 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068021054 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074990405 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067171225 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067581479 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067377161 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067420025 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072547744 seconds)
  done (took 3.251204204 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06713609 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065207228 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063491394 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063027228 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063769785 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063798847 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.0635464 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063634597 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066234143 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063441592 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066003355 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06633753 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065910018 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065623398 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065850936 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065601725 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065798864 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063378887 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063528754 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063429961 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065749401 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065574171 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065534284 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063188663 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063630369 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065978027 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062941381 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063380271 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065703127 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064199477 seconds)
  done (took 3.181959152 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074646236 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073635321 seconds)
  done (took 1.390692072 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062497255 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079876843 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063313819 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070323836 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069693848 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066877486 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072648359 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069263877 seconds)
  done (took 1.793818328 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082299064 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077627201 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067102346 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079657225 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07622682 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083427353 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134134757 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066840482 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073288745 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064856342 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079978415 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065804146 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072830281 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067123238 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072381596 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072975511 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063999268 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071583696 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068519794 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064649786 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067237379 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07536039 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068560294 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061745321 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068078376 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088209989 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077245739 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065543912 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069830369 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074173995 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072011081 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059723609 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065963796 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066117526 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063717794 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07558629 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080510402 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068917767 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07486841 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066594887 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075913659 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061376309 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071419302 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072774893 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076321257 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065994527 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066167286 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06115226 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06399839 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068752359 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061266942 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068871136 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060938921 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073611931 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069644559 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076888818 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065140247 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067477934 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069382153 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069201524 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073439548 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068057572 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068635396 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065877084 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075567729 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070532511 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074258972 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060951025 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059832286 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063674117 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075462501 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08874424 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071977841 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066377385 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066677178 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063382228 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069785441 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066477692 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072001953 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07246384 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066723677 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071865953 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07314844 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066395237 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068681489 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073765983 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06470604 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.0695619 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063950429 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082025386 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064882708 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064631793 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064015647 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076844165 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069435471 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066471405 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063943406 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07392338 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060524955 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066497633 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066989983 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066955998 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076151638 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070842449 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070136577 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07406974 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073587888 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066523897 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068302269 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062051323 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066538876 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065179817 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072912409 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059968419 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068798168 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066916668 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066066966 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073968307 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063576642 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065779876 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072881444 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071093561 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.19087859 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065144893 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070825591 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06658444 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070562855 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076209771 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06554111 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06269948 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061702786 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071009133 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066358997 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071313097 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071139566 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070156199 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060696393 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064647696 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072063555 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076963943 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068080771 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068049794 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072754926 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067937563 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066376777 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073371524 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070091521 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066561798 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072665941 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067733382 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061918358 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069251977 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070043451 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065832484 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069741729 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069499036 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068952484 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067702281 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065500105 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074159735 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066987195 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066541612 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067443367 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066352089 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078019232 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069165656 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061189789 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063461641 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075135126 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064867261 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066284597 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066539149 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068943 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067364026 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064759628 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066228307 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068067258 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076808915 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071127813 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067735839 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071358839 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078047601 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065691489 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069035604 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067265095 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067504816 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06749214 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075238637 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073287563 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071534447 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069776698 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063119516 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071811482 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073462856 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065886524 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063651858 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065486656 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069910459 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071429438 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070160903 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06703075 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063909616 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066947612 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068884604 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068662397 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065454691 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065101817 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072596679 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064272014 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07308603 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067421743 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076717882 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069863453 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062252573 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069670428 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064970905 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072799427 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061426078 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064513066 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066118176 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067594776 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065229068 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068571709 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060332954 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073086274 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073812381 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066882461 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065417912 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066274229 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072457206 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067439739 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069177343 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068103244 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070799645 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075108016 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064475102 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068200175 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074978827 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065258261 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.05941537 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07084622 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063540258 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063618229 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063895192 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063239126 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068002772 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072036553 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071327838 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.188629596 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069774013 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066042626 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066469345 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062455758 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072239752 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070319623 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067848876 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073770522 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067887898 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06626941 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070716944 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066311678 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067175909 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067606871 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070503796 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067577967 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068939949 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066808848 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070018025 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06587125 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064264461 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068823969 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066632522 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06784182 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071708277 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066519823 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066851953 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.06872553 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067079313 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067313042 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067189795 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06726914 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069661669 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066785753 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066925986 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.06902066 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062094037 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073524785 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065820586 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075895154 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067512283 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063601812 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073799802 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068349999 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071861403 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066540427 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066593503 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067649279 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065819793 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069349619 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073231673 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064374914 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077747308 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074198466 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067556108 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070042824 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067532547 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068085917 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065989047 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067797823 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066819408 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067127406 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065879499 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072357371 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069729119 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067412242 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068287427 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068598788 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066603228 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068647066 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061892997 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066206731 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067059807 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066878834 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076178905 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067219535 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065852797 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065731743 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067458891 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066007249 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062818759 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074079883 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074369973 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066904525 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073404288 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065567993 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068085203 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076957306 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060474135 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064580569 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064522695 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064892691 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074008663 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066816275 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075594385 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066791699 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065877734 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063821584 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067065796 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065205116 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060655031 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064097156 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070030448 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065916936 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065917759 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066577427 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068704827 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067311522 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075578421 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065644862 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067248141 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065927623 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062690476 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064998657 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064468833 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.06782086 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065621957 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063658597 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062706329 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06493053 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065728221 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066903747 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067420486 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067155174 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071725881 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064992265 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068361465 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067460796 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060281958 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.201000064 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067393584 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066337741 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066395205 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071218014 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070605734 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06770679 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075890824 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066413741 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067163198 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067535798 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064157706 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06751339 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06634191 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067561753 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06578276 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06786841 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074942901 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064032851 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070207245 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067877295 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067484717 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073636154 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067876525 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070356465 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072521008 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067209366 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069336483 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074881162 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070534842 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070614312 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067798973 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068673283 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072870098 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065668031 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073645594 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067402883 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06748019 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069416488 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065440924 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067050599 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066294628 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066784298 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073151776 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067985215 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065636521 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065532886 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064533676 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068477218 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069866709 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074667073 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068967591 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070159329 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061290294 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063475341 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067501048 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064738777 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068891136 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069551292 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072893637 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069037716 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066801608 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066352499 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075862709 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072097734 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071274643 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065270071 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070608862 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067311265 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069117615 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068041674 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067520995 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068312112 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070702925 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067859231 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066036817 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072901715 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069231415 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067353239 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067626972 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067154469 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066516 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061070763 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066234987 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068278407 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070932715 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068341912 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066013219 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076227649 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064132871 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066454331 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069825653 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065561118 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070830426 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061101236 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067952707 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06672204 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06632764 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061285869 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065496065 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065253816 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068987041 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066113276 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061515358 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076976789 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076289909 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069721398 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065817716 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065276912 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061583127 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061144676 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066304023 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067755669 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067936674 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076698732 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065542365 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065278443 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060985552 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065672311 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068971538 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069067519 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063107655 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060432623 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064790868 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068486648 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070853931 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06437096 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065467718 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068119168 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067673069 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.195204379 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070217677 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064007035 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.0709615 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079987194 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067423858 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068265943 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073918662 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074037227 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067210199 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061912083 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068072287 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069926605 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067936877 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06854676 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068370757 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08144101 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070243681 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066422703 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065508015 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07041451 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066570354 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075619682 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067959391 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066995004 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071304781 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068973412 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076322775 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070049813 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074705366 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070382621 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070284318 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065794775 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067490874 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064842616 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066421103 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067345335 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067599239 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071055274 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074712282 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066166936 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077115416 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076274221 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069081135 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063596804 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066783932 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066534961 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061826341 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067492061 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065059421 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065187695 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065146933 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06546039 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067518243 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07342823 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067835185 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066877606 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066637284 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060196969 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069162086 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069002806 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068128459 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06400208 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066307851 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067827222 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070999423 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06973037 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064161646 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068601009 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067918717 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067718266 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062068644 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073402709 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06534968 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067943491 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065329543 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06667369 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066595233 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069713889 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071512397 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067379424 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.06894021 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070390101 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069183239 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06411675 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064063941 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071808678 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064568264 seconds)
  done (took 42.600837728 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100555981 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063809001 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061756648 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06245473 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073030723 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063037712 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062319664 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063414271 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063232408 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.0648306 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061746685 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062087777 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071227073 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077716547 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073330587 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066904255 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06219046 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062882963 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062123485 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063099701 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070447625 seconds)
  done (took 2.755377301 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074456362 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077945181 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075211644 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08179121 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070786102 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07019428 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075309298 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070523269 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078473684 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073065448 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078622092 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070707949 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07228633 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072161984 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072663824 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070759436 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078600869 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070881929 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070472462 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075394311 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070608189 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075334815 seconds)
  done (took 2.942391751 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067615999 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066344489 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068547585 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06097812 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065941073 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061455015 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069787268 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064252568 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069385629 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066154077 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06574499 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066503034 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068377895 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061154289 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066690138 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064089309 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108013703 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070499546 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065795453 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067280692 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061531067 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068316726 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061115087 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061841562 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065766883 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070113861 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066625281 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064210068 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06569432 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065096592 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06604122 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064290997 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067261004 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066458942 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065213844 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065118967 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065426022 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065997241 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061029194 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063858927 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066615372 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061327729 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06648931 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067647814 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064325138 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063593589 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067917807 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066407692 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061142925 seconds)
  done (took 4.570821335 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079885008 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110256654 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068318282 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091775873 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079345059 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072737927 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070856794 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089925758 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063608936 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064170761 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081950939 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078841635 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066597639 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070262343 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072508186 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066080322 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066098213 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065208569 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069380201 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064809172 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069132714 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072267611 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079303419 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078403881 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069599252 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064810716 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064590783 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069998884 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076712946 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069539988 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070131247 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070688425 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080197373 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070796856 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064568562 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068551569 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081246888 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065943489 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069352385 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063357107 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06807231 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070357101 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072108998 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081327666 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06555346 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070377279 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065470467 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062911549 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077170753 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067798741 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072791229 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078620069 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068695009 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065823192 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069892402 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079798813 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065390397 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06339008 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068012644 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076879033 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062903829 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069116825 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078200475 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067215648 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07222014 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078267957 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070143978 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069084576 seconds)
  done (took 6.34893016 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077024738 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095545545 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083949309 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083421552 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075778227 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076077221 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075609592 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075790422 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074929856 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080797869 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075703623 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115627026 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.07119224 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07823653 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075747849 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075395992 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075473869 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075250601 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075708883 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075291522 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07562754 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082858215 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076033053 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082852574 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079366152 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07117905 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075822649 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075353089 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083481045 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076114532 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088208078 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076201254 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075109804 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082634063 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079557206 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075051984 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065267348 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075180262 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075208288 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075166308 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071197578 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082571238 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075734812 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070945147 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075204418 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075103277 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082343267 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079685404 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077704582 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080573821 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074989588 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082093745 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075113068 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07530625 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082764294 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084601962 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082409734 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082829442 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075492565 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081984256 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082850936 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084746885 seconds)
  done (took 6.215761103 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082334676 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074396918 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081576164 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061495361 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06475524 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071787578 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064085859 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064005768 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073554852 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074408604 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076778189 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071959918 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074282106 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075859119 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072276609 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074150102 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07166496 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071618628 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073712719 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07168828 seconds)
  done (took 2.787655572 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074122579 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083331909 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067401846 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072105696 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068788124 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071751109 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068997488 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069474 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066982088 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069868923 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075942387 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075774517 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067149095 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071498888 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075593227 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071479152 seconds)
  done (took 2.484183712 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083210816 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073486236 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081408168 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066853842 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066801948 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063107187 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066313814 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061954741 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062383025 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077648179 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06613171 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076875661 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065343144 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06514713 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063178596 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.0710284 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062037961 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062666996 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065265211 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078435863 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069080843 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063992164 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068594562 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065691521 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068152296 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069837251 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064570996 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065357528 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062617381 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066005017 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069016582 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069153258 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062695689 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063020855 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063933979 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062947717 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065042481 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066233204 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071166929 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065473735 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063638106 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067481182 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065451989 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06657362 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061708058 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065961349 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061888162 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067581482 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063394646 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068700209 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06571145 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067887504 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066382317 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071950373 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068149012 seconds)
  done (took 5.028465046 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079831261 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070057129 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061933636 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064784573 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068974183 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067046227 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068764458 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067336128 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067110718 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064090722 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067556373 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069858093 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067109077 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069345703 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067080363 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069740396 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061665556 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067363452 seconds)
  done (took 2.563875676 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07097225 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066111635 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073347659 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06639053 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066537441 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068043578 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062024398 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064538047 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065054406 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065829665 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066229901 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068751301 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06444567 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068019071 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065990922 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065767451 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068265713 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064651182 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065838952 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062076851 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068233473 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064199587 seconds)
  done (took 2.800893825 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094291724 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082751067 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139883144 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079093427 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084400354 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071722048 seconds)
  done (took 1.892972757 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090288735 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100499049 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066385401 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069723264 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075309254 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069639542 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069917688 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069541976 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077581945 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076035774 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07016736 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078254664 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077755588 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076575218 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075882421 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075578262 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069377843 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069821554 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065916142 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082648539 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070075556 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07752601 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070546082 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068957633 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069838968 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077128532 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077978108 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075250601 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069213518 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077863111 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075267807 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069607878 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07818425 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076112316 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068926114 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078362672 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070205003 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083519457 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075922303 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077675367 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069454226 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075254227 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07885404 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074428034 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078094026 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069811823 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07450242 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070091645 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069669117 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085264906 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075863124 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077126729 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077405848 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07818406 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077891936 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085651682 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075900682 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076963946 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075428457 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076038474 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076901876 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075368973 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07717943 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075687239 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07566126 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077278936 seconds)
  done (took 6.318845121 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103313272 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066585825 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070215371 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075836982 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077203622 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069526526 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069690009 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070125411 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069701982 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066747235 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107435547 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070198384 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077695183 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077720659 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070505905 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069872287 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070121317 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076936543 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066961425 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085484862 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069745019 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077163835 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07746793 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076851201 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076461782 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075976363 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07019841 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069673747 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069643873 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071031511 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07456696 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070198772 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077257938 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066925785 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077307974 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070281546 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0697085 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074562479 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069899652 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075388331 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076942887 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083093724 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070255243 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069647746 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075999552 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07009452 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069851985 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06658024 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070276781 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066980586 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075527827 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07612535 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076209136 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077238811 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070155819 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070510037 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070175775 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06999349 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070651923 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076181414 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077383303 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070718742 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085986133 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070602649 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069946574 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077640608 seconds)
  done (took 6.241117996 seconds)
done (took 129.277394999 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.191873663 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.16566484 seconds)
  done (took 1.697816688 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068377055 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09878253 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076632641 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12956992 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066387036 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100947688 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099286436 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07844005 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066784823 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065966018 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066273729 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068209233 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130924027 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066257414 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066439574 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069416735 seconds)
  done (took 2.669584718 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099591998 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.163416915 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10273936 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065113363 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099672065 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072508106 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06495885 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075468882 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071414381 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065471647 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073047279 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070643728 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065821314 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071147114 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071429965 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073070753 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06583521 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072495399 seconds)
  done (took 2.79753961 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099897138 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091068861 seconds)
  done (took 1.545327348 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.160423741 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106610947 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148155 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.350909476 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.163505596 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.148824849 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.146021628 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.144936916 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.119918988 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140001733 seconds)
  done (took 2.979940998 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100732055 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154915989 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.267174438 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117231822 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072505034 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093800315 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118214367 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078606355 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080171615 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080499101 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080082001 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076070897 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099595266 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073755267 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074189753 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076074647 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103293439 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073170849 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074323469 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075494142 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100268645 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066435632 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073054035 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073082271 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076606044 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076862081 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065715121 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065656034 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075164317 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074692481 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076282614 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091906376 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077016069 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10531803 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070563139 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105901376 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076531573 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072845946 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074688907 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073356955 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077840326 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077428398 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072763683 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076742991 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065449922 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076317429 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066044777 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06538431 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076826671 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067180756 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077014534 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075838302 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104936624 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066701054 seconds)
  done (took 5.966440813 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103629513 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106128602 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07150067 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113367088 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103126912 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071860591 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102582857 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095389948 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103451145 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070492761 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068156353 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070304603 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082086347 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082457223 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114375203 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106977609 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074054721 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071466824 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107973963 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104375248 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068955279 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097834771 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091435142 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103424953 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067768745 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070745457 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068177517 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07042696 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076461661 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078445323 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070170424 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080313849 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085058462 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078126434 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067175281 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068046877 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068747486 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079109917 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078961291 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079280979 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077368291 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06815429 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068769571 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069888053 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069696445 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068188822 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078033773 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080058712 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078455302 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069681713 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070353654 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068039249 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069259322 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07983113 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077790948 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080740789 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079927578 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069140942 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068645479 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072503048 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080603589 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079097297 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079284916 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070017803 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079058385 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06879679 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079851416 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084467847 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068477521 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070132201 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068417416 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06937111 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070152093 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078205454 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077271864 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069751658 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070069506 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069080543 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079914405 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078080649 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068550416 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077544676 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067159555 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068849785 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069417934 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069929413 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077297272 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079228923 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069737358 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068457956 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069609641 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068839226 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067486312 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076765822 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07997005 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079204479 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077386741 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06866322 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077376307 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077095365 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069321284 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077866927 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067791917 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068979707 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068804236 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076049228 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075146005 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077342733 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.199135283 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070340571 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079436114 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081914753 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070046235 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078668395 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080871194 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079376844 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069299261 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081602031 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070092609 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080675203 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0701927 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080320288 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069673309 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079752861 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069055154 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069113308 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069542403 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080211254 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074745439 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069574422 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070452385 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071083669 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080568885 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08204081 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07115128 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079454297 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079110915 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070519786 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079597752 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070071314 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080046915 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070503135 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070179032 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067536719 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082336522 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068748734 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069129051 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070138972 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080673388 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069148553 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080036376 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079247602 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068039544 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082230199 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080972599 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078070777 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08068537 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071130947 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069007415 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067894034 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070539054 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078607827 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080089999 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071605269 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069339456 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07801378 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079413909 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068115251 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078812033 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078260355 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078963568 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068770159 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070048118 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080840561 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081008802 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07805553 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077677097 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07859821 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068753856 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077593595 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078150966 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068695557 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084689226 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06796613 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082298611 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078965276 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076223997 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078472791 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079964306 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079643567 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079629679 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082794449 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067881937 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068054643 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079128378 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067914214 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06914445 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077703527 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069570787 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070066793 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082825998 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069111045 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079626669 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067862925 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079367984 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06712015 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06973397 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082120906 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067641613 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068612964 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077407425 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06871207 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07545354 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078448336 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.075776523 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06670235 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068868993 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209235292 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079965172 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070029887 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068810098 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070731468 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078509814 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078361812 seconds)
  done (took 18.681031854 seconds)
done (took 37.701737826 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208973425 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153014091 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182355233 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119005328 seconds)
  done (took 2.124638729 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.116319317 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101544865 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092937324 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065001919 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098502374 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065367841 seconds)
  done (took 1.936082778 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.310506921 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21033778 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.188115793 seconds)
  done (took 2.101020526 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200461584 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189104105 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.416734995 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.261133906 seconds)
  done (took 2.571300451 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143925097 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088867378 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066936936 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083832359 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.132814594 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159452394 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099828435 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12468587 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078858086 seconds)
  done (took 2.42547039 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14851062 seconds)
done (took 12.701380729 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.17513768 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.133375475 seconds)
    (3/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.246507372 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.124495658 seconds)
    (5/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.174863904 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.177534366 seconds)
    (7/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.111917577 seconds)
    (8/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.152821508 seconds)
    (9/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.109546295 seconds)
    (10/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069114098 seconds)
    (11/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.215557734 seconds)
    (12/309) benchmarking ("sort", Float64, false)...
    done (took 0.130614313 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083189295 seconds)
    (14/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081754394 seconds)
    (15/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.175743333 seconds)
    (16/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073068851 seconds)
    (17/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.203666904 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077999319 seconds)
    (19/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.216648279 seconds)
    (20/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079734865 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074139712 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.149514073 seconds)
    (23/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.161975201 seconds)
    (24/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076388656 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.100843686 seconds)
    (26/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075658689 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090438911 seconds)
    (28/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07374718 seconds)
    (29/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.173147253 seconds)
    (30/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.143212601 seconds)
    (31/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076603881 seconds)
    (32/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076781236 seconds)
    (33/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080189956 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.184231614 seconds)
    (35/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.179700918 seconds)
    (36/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.062788657 seconds)
    (37/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074365699 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089829503 seconds)
    (39/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.115654201 seconds)
    (40/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061442515 seconds)
    (41/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.189737954 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071440672 seconds)
    (43/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.171104124 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090698501 seconds)
    (45/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.107517436 seconds)
    (46/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072457441 seconds)
    (47/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075983388 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.100328723 seconds)
    (49/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079206512 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08855155 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146814942 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073537154 seconds)
    (53/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051672383 seconds)
    (54/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075137339 seconds)
    (55/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.112143339 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072058948 seconds)
    (57/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.173242089 seconds)
    (58/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075606809 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066636098 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092280251 seconds)
    (61/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.187618656 seconds)
    (62/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.081487727 seconds)
    (63/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073243313 seconds)
    (64/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.204926079 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067458379 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.141442742 seconds)
    (67/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.192596312 seconds)
    (68/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.154222096 seconds)
    (69/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080476113 seconds)
    (70/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.203695002 seconds)
    (71/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.237553136 seconds)
    (72/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.188694451 seconds)
    (73/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.174364347 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.142289277 seconds)
    (75/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065642445 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.091734376 seconds)
    (77/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.108669055 seconds)
    (78/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.191893231 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138179682 seconds)
    (80/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050771367 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092201952 seconds)
    (82/309) benchmarking ("sort", Float32, false)...
    done (took 0.131048253 seconds)
    (83/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.160357899 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 0.210822293 seconds)
    (85/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.183486743 seconds)
    (86/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.156036913 seconds)
    (87/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070466702 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089870722 seconds)
    (89/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051716442 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065991534 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096986943 seconds)
    (92/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.10028087 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.125360571 seconds)
    (94/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184067107 seconds)
    (95/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.157627855 seconds)
    (96/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.155603419 seconds)
    (97/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064182339 seconds)
    (98/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.156506988 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072212395 seconds)
    (100/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071617016 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.102843105 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090062136 seconds)
    (103/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051724676 seconds)
    (104/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.155053419 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.110571323 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088941648 seconds)
    (107/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073316892 seconds)
    (108/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078029827 seconds)
    (109/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052200681 seconds)
    (110/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.201644312 seconds)
    (111/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.185160287 seconds)
    (112/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073987265 seconds)
    (113/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051272844 seconds)
    (114/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069337124 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073083233 seconds)
    (116/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052254539 seconds)
    (117/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072128854 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138951556 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089983436 seconds)
    (120/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05130369 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065523366 seconds)
    (122/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.155194823 seconds)
    (123/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066418753 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145615866 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065050655 seconds)
    (126/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077721649 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.114888423 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091217872 seconds)
    (129/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091083598 seconds)
    (130/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066618063 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072492579 seconds)
    (132/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061146374 seconds)
    (133/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052053403 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088563051 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 0.135311683 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073068557 seconds)
    (137/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066977072 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065825345 seconds)
    (139/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076014951 seconds)
    (140/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051921608 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072932185 seconds)
    (142/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072110519 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066441787 seconds)
    (144/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07399522 seconds)
    (145/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.113015689 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072544668 seconds)
    (147/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.155734675 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072784082 seconds)
    (149/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050837243 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065083645 seconds)
    (151/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051566442 seconds)
    (152/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07552354 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072230352 seconds)
    (154/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051707232 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064862729 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072858216 seconds)
    (157/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08349729 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140894259 seconds)
    (159/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069474437 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073925659 seconds)
    (161/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065191419 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064833953 seconds)
    (163/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.431160572 seconds)
    (164/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052518386 seconds)
    (165/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071361556 seconds)
    (166/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.05148918 seconds)
    (167/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.154648686 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095612397 seconds)
    (169/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.194460566 seconds)
    (170/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066328564 seconds)
    (171/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069172165 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.126879963 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.108435802 seconds)
    (174/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051034724 seconds)
    (175/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072897262 seconds)
    (176/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066765871 seconds)
    (177/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.107166528 seconds)
    (178/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066267197 seconds)
    (179/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053279629 seconds)
    (180/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080609386 seconds)
    (181/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050988665 seconds)
    (182/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.109346859 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065025844 seconds)
    (184/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.160241169 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071834693 seconds)
    (186/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051799288 seconds)
    (187/309) benchmarking ("sort", Int8, false)...
    done (took 0.140161906 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089798591 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073919133 seconds)
    (190/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086206682 seconds)
    (191/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.05076337 seconds)
    (192/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051353311 seconds)
    (193/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050639295 seconds)
    (194/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052002088 seconds)
    (195/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067750305 seconds)
    (196/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067211593 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070316729 seconds)
    (198/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053311693 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088410443 seconds)
    (200/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.0715253 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.265339025 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064502879 seconds)
    (203/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073460912 seconds)
    (204/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08393432 seconds)
    (205/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074058429 seconds)
    (206/309) benchmarking ("sort", BigInt, false)...
    done (took 0.186246876 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.06823506 seconds)
    (208/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076012629 seconds)
    (209/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052585953 seconds)
    (210/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06552282 seconds)
    (211/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051368685 seconds)
    (212/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052131505 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071195641 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074687766 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073328945 seconds)
    (216/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066236049 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08926408 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129469322 seconds)
    (219/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088997254 seconds)
    (220/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066693176 seconds)
    (221/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051440387 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.094212048 seconds)
    (223/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.118126301 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.171925814 seconds)
    (225/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051318066 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07138406 seconds)
    (227/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051273927 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.111668868 seconds)
    (229/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076509314 seconds)
    (230/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052970113 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064047977 seconds)
    (232/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072586064 seconds)
    (233/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051986125 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066126464 seconds)
    (235/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072468032 seconds)
    (236/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.107703539 seconds)
    (237/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054333759 seconds)
    (238/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.06715653 seconds)
    (239/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051251281 seconds)
    (240/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.111262191 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140225372 seconds)
    (242/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.05160598 seconds)
    (243/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.102001197 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.170456091 seconds)
    (245/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072330696 seconds)
    (246/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070487575 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093759628 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087116802 seconds)
    (249/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052457511 seconds)
    (250/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062062898 seconds)
    (251/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051526587 seconds)
    (252/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064890749 seconds)
    (253/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067603825 seconds)
    (254/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067371755 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06539339 seconds)
    (256/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072434526 seconds)
    (257/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051476091 seconds)
    (258/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053154464 seconds)
    (259/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.053034765 seconds)
    (260/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075166805 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072224569 seconds)
    (262/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051690412 seconds)
    (263/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.05267 seconds)
    (264/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079779164 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.086691433 seconds)
    (266/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066382472 seconds)
    (267/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051398224 seconds)
    (268/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.0510226 seconds)
    (269/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120204455 seconds)
    (270/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.0508318 seconds)
    (271/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050842507 seconds)
    (272/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069039513 seconds)
    (273/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051507637 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.079079693 seconds)
    (275/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073457418 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065231024 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065076416 seconds)
    (278/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064819368 seconds)
    (279/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064145133 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065966566 seconds)
    (281/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061560674 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073137436 seconds)
    (283/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051091447 seconds)
    (284/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071843408 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064331203 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063644511 seconds)
    (287/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050939772 seconds)
    (288/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073938155 seconds)
    (289/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051531088 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072743857 seconds)
    (291/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052200657 seconds)
    (292/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088398977 seconds)
    (293/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050782994 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071509332 seconds)
    (295/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064686033 seconds)
    (296/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088058341 seconds)
    (297/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052182302 seconds)
    (298/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067385144 seconds)
    (299/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050689338 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065175681 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065567855 seconds)
    (302/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063313999 seconds)
    (303/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052145991 seconds)
    (304/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051923031 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090428122 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071279421 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067073042 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.134029774 seconds)
    (309/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176194197 seconds)
  done (took 30.924097503 seconds)
done (took 32.327179049 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084894725 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093787956 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075685138 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093448702 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081134171 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076769637 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073124639 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078661865 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079961951 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082064311 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078458537 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054178332 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074909136 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075096386 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075253216 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091481374 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078342155 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073854637 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073314373 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065018685 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072968181 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065519395 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067533981 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053938726 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078303669 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071776486 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072278501 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074333483 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06546119 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066129576 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069169266 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073569326 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065333565 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078242364 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071850204 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073091513 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074566132 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076945415 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067444742 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065560147 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074863579 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065332227 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073000643 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073933865 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071856577 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.0714933 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072995842 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077639011 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091558322 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067641745 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075025007 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075899998 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076994552 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073081451 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069544958 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072849714 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070911401 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091112231 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073590704 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067636776 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074846786 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07412692 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071427722 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072932956 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073274163 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075181811 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075647845 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071406666 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074728511 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071514331 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065475666 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072649582 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069377779 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065415563 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076060755 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077338371 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064613492 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071948343 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072943371 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070831396 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064156971 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067802319 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06722221 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071955521 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067512671 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05400756 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069475564 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.0719612 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064339717 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073066175 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072366446 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072683744 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066848368 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075661438 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06569816 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070117079 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065437533 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065336676 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066695468 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06913189 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06518613 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067295192 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074687882 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066313976 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071528438 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078940049 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064968606 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071924937 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063984419 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064762923 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079329619 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07478921 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065237611 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067858234 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064312877 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072701196 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064868784 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064921344 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065017109 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065023823 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071016714 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064970044 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066834191 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07235469 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078106625 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064700509 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068307092 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065588027 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06390702 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070209278 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064389796 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064814337 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065444301 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061082568 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06570339 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06480175 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071760222 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065743973 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.207063449 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068107118 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073717379 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071846276 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071932286 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071497949 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064173116 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058648877 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067685463 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06710537 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067503733 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065229016 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067832855 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065074373 seconds)
done (took 12.450275295 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066375838 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.138288117 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09734962 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095260885 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086102601 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066606413 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075732002 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100798227 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067464631 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101388434 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08749174 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085855656 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113655652 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064804706 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065892195 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069760221 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067447914 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082488607 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101749897 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086981689 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115372254 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065351024 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092344969 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089606953 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087808924 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102751546 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069464458 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069385926 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070131636 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093350971 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087956331 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070295168 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066006092 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097676922 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093547073 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083127966 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066317473 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08327964 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065833696 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06549201 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067318745 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099001031 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080805446 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080662187 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069903582 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070147238 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066816249 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083656346 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090798174 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07930937 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086281095 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101825607 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068871809 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065745038 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064408654 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086617714 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065209477 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069154755 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066078854 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068747681 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065455466 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069401443 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080987493 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080809315 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.06952885 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079381886 seconds)
  done (took 6.802806264 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084394651 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090367242 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083241603 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083928201 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065143207 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065954891 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066127564 seconds)
  done (took 2.039181249 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066580063 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088233988 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089437103 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08911621 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081575971 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087459453 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075544389 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06653439 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.087791072 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067448737 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087537673 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100890385 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069367715 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074055258 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090914102 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066001142 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090952827 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066926363 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06982086 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090567299 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068920002 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095093624 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069868054 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06727437 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080701866 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066577457 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113320982 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070957564 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067704388 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069612176 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064424987 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106921034 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080107973 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074405694 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066383773 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08170449 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081162999 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064958503 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082751419 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075027442 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080094193 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067080397 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067628429 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063934554 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070688855 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077031579 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067443824 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067774053 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.06980828 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086286863 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066759733 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079881526 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068988679 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072105768 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067853277 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073182741 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076638504 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06737347 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086673667 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067952633 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082874496 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082417243 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079957691 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082589327 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069231115 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080505161 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08058179 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06874107 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068692259 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069733283 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082255861 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064919733 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067796193 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076927202 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06867946 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089693191 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090362183 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069090679 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080215536 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066844195 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066828376 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066478555 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090043691 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072541138 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066621695 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070659086 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0697746 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065044405 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066085797 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070287398 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06447304 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068750267 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069640315 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069947227 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069024385 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08283204 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069154694 seconds)
  done (took 8.810250024 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069461455 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067286085 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069412478 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.0675037 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06848945 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067940723 seconds)
  done (took 1.932006146 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092374496 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068852706 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08023847 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.0720959 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104879739 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087586151 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087605646 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078006605 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083394302 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07809735 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087411844 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08832679 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092129365 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072858316 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08624952 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071894097 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087458735 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074646322 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078520551 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072732108 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086014079 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072020743 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073100163 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081348924 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076708552 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071467996 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066887182 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078091887 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077599772 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077994902 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071903869 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075844768 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070894667 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078010166 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086648849 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07062813 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071534081 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07676538 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072089068 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075685833 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087770988 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072976435 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074067053 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07666624 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077427438 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070658388 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076830379 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075043259 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086080582 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076720125 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076496129 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071000921 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075432389 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076568375 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07045636 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077311837 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076878952 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086352392 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071767696 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070874588 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06847257 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075217763 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076988323 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.076027086 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078665882 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077305587 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070149194 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072131427 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072882084 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071627741 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07733614 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068626651 seconds)
  done (took 7.070125469 seconds)
done (took 28.141097647 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.531477878 seconds)
  done (took 2.022615522 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.611901568 seconds)
  done (took 2.128720402 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.304907594 seconds)
  done (took 7.812843461 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.39701256 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.52039235 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.716999085 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131215211 seconds)
  done (took 3.308656283 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.698100281 seconds)
  done (took 2.217145386 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.213021069 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201078377 seconds)
  done (took 1.944603441 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.37416846 seconds)
  done (took 1.884299949 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.123315624 seconds)
  done (took 2.635961753 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.254533675 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174550776 seconds)
  done (took 1.948074884 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.472305526 seconds)
  done (took 1.987937022 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.844424134 seconds)
  done (took 6.362052032 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.207815658 seconds)
  done (took 1.772134849 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238721491 seconds)
  done (took 1.760516955 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.693313308 seconds)
  done (took 3.215247163 seconds)
done (took 42.518414048 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080135127 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08163502 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08135161 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078484633 seconds)
  done (took 1.830810147 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077314598 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073783096 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077779092 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073745716 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07751592 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072719837 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074394531 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076179806 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073279371 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073561126 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073548822 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073158108 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075098801 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074228805 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071332896 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075449753 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07623683 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073177122 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075841804 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073520276 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071254064 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075518081 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075361361 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072438263 seconds)
  done (took 3.309703213 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078126247 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074188503 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07476944 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07204805 seconds)
  done (took 1.828697593 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078549939 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095665999 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090422411 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079148859 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092890487 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087272945 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069301854 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069841983 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070842457 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07843074 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068982361 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096272786 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088992749 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078050721 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080008199 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066324416 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068280903 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088212661 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077829764 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078568627 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070979768 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078439444 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068317059 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089172922 seconds)
  done (took 3.436715536 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086142448 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105725459 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081734945 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089013492 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090980697 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065494912 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087846541 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091267152 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127739837 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065974791 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070704088 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065795422 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073514335 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065618455 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081004314 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108584795 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112546377 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069290574 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097579428 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.0662406 seconds)
  done (took 3.237214532 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073386245 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069730842 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066125933 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069579086 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07769159 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073165909 seconds)
  done (took 1.966282197 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068456745 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068020581 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067617074 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066957742 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072300531 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06725078 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066458753 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068229168 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068168319 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067230426 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067062392 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066343766 seconds)
  done (took 2.34609376 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.202030562 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069943629 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069602739 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066011843 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071156572 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06724276 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080989198 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068193242 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092420558 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067010803 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066993261 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068729488 seconds)
  done (took 2.523503341 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205526639 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076103791 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239017891 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15046017 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111088716 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115764811 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111782189 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114241605 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141379707 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100939718 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167917756 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166682258 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107701441 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137273659 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088977843 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100869597 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153851096 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163011208 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105543466 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167726145 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145555617 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125932527 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148604951 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107471608 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106275259 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122056495 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071311138 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080594819 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169874529 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13321477 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1440237 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110658211 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092145319 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176462068 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17197185 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140795425 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147299581 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085351683 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10557184 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134432954 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198988157 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088256659 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1630744 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108865227 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080061266 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130091752 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116569933 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.116863946 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.100876165 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087467055 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139853312 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175871462 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.131829473 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085367903 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120503251 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109812162 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110371084 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110198505 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171290456 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151453417 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121175913 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070128324 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103299368 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144418683 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126628006 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.103000965 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117396354 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086670234 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126893827 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147236546 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11373289 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136226919 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.111011181 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084992717 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114275026 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132561868 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118915434 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150261841 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118415224 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.070173834 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117005118 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095828954 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077617605 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141764338 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072814101 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165994171 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095377042 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10469076 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119449592 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104651035 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105117301 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149527351 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135687257 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099769654 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064471647 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.354265266 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.125117917 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150036124 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090188893 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11297627 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120727425 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080623076 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14097924 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07843613 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125633091 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078804522 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13055046 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133076121 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078412759 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124395891 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105567378 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.103158016 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134206803 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16357678 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090214631 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083235137 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17260971 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12488137 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10543479 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145766473 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158533173 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102743241 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101710931 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150913539 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18006826 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089607089 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164987639 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106827987 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083756322 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088291217 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123764371 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112724599 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123882417 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08223817 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118232296 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169368388 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075147778 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096398516 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133941688 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079435934 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081664756 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105444694 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105453338 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096061905 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099787831 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102669623 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135132932 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123406855 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10643101 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124109466 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098360973 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317867893 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089401661 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103218378 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105202694 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070956328 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135576124 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158952906 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080299694 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16472183 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123434324 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116761246 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121609188 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084130264 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141802511 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080808402 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070586723 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144292748 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111659958 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110323051 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152191997 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117070246 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125203825 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118378555 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132635439 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131335571 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131236996 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106076208 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089352562 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112841281 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126957098 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073602956 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091097964 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080279932 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105171991 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096195766 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083338608 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141108906 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124124836 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109741703 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11271563 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09675233 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148555874 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07628708 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12835167 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119627003 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096014746 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153649938 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153391232 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131621499 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099284579 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137259754 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070315209 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074087862 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088157735 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122612488 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082989369 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082876148 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26418713 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149280644 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131532173 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136627371 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125114586 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120720508 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157093561 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071165612 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119323969 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14820885 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122437223 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105173711 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090437186 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09919978 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143926457 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10896198 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183064345 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116964689 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12390277 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153558865 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101980985 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080140184 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103583097 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135923298 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104261318 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144201362 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100024672 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088874553 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110249889 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074624558 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098660511 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127140215 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118247058 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135363804 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115967092 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132569814 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077812581 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115544329 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122013817 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121786922 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064425195 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120913166 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16242717 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094958532 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119576561 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152443604 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079476919 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134203792 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174679171 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144369084 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08497285 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25476076 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120482783 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12943804 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121282719 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141835543 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107865071 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138511359 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110566801 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086887879 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088179305 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098085492 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10500911 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095817534 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107016552 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113312373 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096398767 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131906293 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105740855 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110542694 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119771076 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09955485 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091040864 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097125571 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176345602 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119070155 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170391453 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100211236 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144504182 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163377139 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075593907 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07939515 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078521144 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140316886 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084994606 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130447652 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107479374 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117660331 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124048604 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143254506 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096023623 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068701183 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109475685 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132818904 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125147493 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098726658 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103931032 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164179924 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101850098 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079735062 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11446511 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116549201 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102650397 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1723816 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061958873 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105934683 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076707649 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080776197 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128304037 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296475731 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080729191 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104791786 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121898426 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11250389 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12857229 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103894488 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10986557 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127088829 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151329251 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129021229 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090427719 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112500016 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129357643 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15746951 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105943797 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097436625 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172713658 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153995019 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160773075 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087829057 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114756106 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114925275 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109606864 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138487383 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083622418 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163472309 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083400184 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136954886 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103430183 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089068666 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129211935 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108180736 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089075657 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148704282 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117668154 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082895528 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077946117 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118031338 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120050422 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10664585 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075562122 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139292475 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074283241 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13266457 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160450801 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081090358 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107485319 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096552486 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079282494 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105824272 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101527096 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087265914 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.24194012 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174910454 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088420892 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150527366 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133776895 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11428269 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138288114 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103570459 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640648709 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077587397 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15415477 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115980559 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175365155 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101384524 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118259371 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111527445 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124175584 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144938852 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104254148 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180872973 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131787738 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115693038 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08092276 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102239697 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103380651 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088109051 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107869399 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114426861 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115052606 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092779247 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116401604 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124123866 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082545992 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096195333 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156453524 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116846338 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144481977 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140861047 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086215637 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118162362 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13776203 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08059817 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.12052548 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152626841 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105829506 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099225256 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080910675 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.09990102 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158308774 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073360416 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158013338 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119328284 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.255322456 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114217402 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11281299 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13243803 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107925387 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122133774 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093272838 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110259072 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114604491 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082261656 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077394871 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106454833 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112220396 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099010276 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098322254 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100287867 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1525201 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072504159 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100021115 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115736657 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143743841 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173786952 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089723963 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082937885 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118442463 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114160879 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112435673 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121033146 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078975442 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082278683 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080946299 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078990885 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109290003 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113552767 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114924528 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111144604 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163647564 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.0836581 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.232206046 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095631092 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105596756 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07013693 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078302775 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09684668 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098741387 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108106817 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109966188 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159157113 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096397414 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090347495 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091871301 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074704381 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083887991 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129513399 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110093503 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119176826 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098624317 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06247572 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107399924 seconds)
  done (took 58.856494016 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110666695 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082443368 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095799361 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145471037 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123418311 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203337167 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154801655 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189181896 seconds)
  done (took 2.801463966 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068831749 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096177739 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104506698 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083313871 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068085078 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068965981 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.233040859 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082014861 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067063705 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099877406 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079253455 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069177854 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.428497514 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066560053 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06815598 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062252377 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067631038 seconds)
  done (took 3.48408707 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.388138957 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.611038363 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.352541638 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072952822 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.459566797 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087910211 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.136766811 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.130473455 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073145265 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538234656 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.398449968 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124150256 seconds)
  done (took 18.050934902 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075620725 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070555587 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085152688 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083949309 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073440592 seconds)
  done (took 2.068298519 seconds)
done (took 107.311457435 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081750104 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.610465632 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053713185 seconds)
  done (took 2.371929768 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084011586 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085861763 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086057272 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084311117 seconds)
  done (took 2.027115512 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074631839 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077971766 seconds)
  done (took 1.833373131 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233006818 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.164414033 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096024307 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083073735 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080596531 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080412366 seconds)
  done (took 1.932516462 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073514509 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075425732 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073950159 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077386248 seconds)
  done (took 1.983885151 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077723162 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052272057 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054655568 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057839708 seconds)
  done (took 1.926427604 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087070323 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080220089 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079655276 seconds)
  done (took 1.932167686 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102249433 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086366689 seconds)
  done (took 1.873236275 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083265531 seconds)
  done (took 1.768949881 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101079481 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102540032 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132241754 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111961079 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140200467 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110543609 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085207374 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08693896 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077294213 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087251408 seconds)
  done (took 2.721789762 seconds)
done (took 22.623306286 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079608639 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.464788994 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360873267 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090902482 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670681942 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357486572 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.019744199 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094512153 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115976889 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068071313 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085262559 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650935272 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.01125303 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.419778049 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.995443315 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32414377 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651110265 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06851069 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068053164 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068517321 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.003273973 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068571824 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068086523 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069582938 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650174056 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37313151 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068722324 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319075983 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068585485 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070343818 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355517297 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068488387 seconds)
  done (took 16.524059838 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071157019 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120583021 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074273657 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085150444 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071744178 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069784804 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071910899 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069276439 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121020764 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068859776 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086162404 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068178149 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07232676 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.087129253 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088704966 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069208204 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069197001 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06912047 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068797906 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069168953 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087604059 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068831271 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069676044 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069714236 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069484619 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081122709 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069148937 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068626927 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069151321 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070785696 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071212689 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069777284 seconds)
  done (took 4.133673282 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117599354 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125912296 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075814346 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105133658 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112197332 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070776438 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144268433 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09421502 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128362161 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06870889 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085834308 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068571498 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103187424 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069143408 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088666391 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069271449 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069283391 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068735045 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069128513 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068768783 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088980077 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069163817 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068646402 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069152022 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069073254 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082242943 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06933321 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068741015 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068553385 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070457369 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071878654 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069038181 seconds)
  done (took 4.366795875 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073107322 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075736729 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.085084141 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085726449 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070692702 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072685661 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073447075 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070176038 seconds)
  done (took 2.307757683 seconds)
done (took 29.024011711 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079676522 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069718155 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073802147 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083477559 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073881206 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079915404 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067607552 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076410903 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073589308 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074776906 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075715147 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067951992 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071907858 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067627926 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074649032 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068248481 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079935806 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072238601 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.07978456 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080069098 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070695941 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07374385 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075199102 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.07958695 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080137005 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079697845 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07814094 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074399791 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069600549 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071032102 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078152543 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084849987 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068825215 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079769562 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068035393 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067946245 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.073226126 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069119321 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080448877 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07737037 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069997304 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077019041 seconds)
  done (took 4.82007832 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088207026 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093695774 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086526506 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062521735 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067351054 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066870454 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089955604 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060320413 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060029212 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088957121 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056115016 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060439472 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066691107 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054232341 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061103666 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057817121 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062838469 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056136238 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.06121737 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060428085 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090152248 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053804452 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079010343 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064148311 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056797388 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062018476 seconds)
  done (took 3.478118299 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075567236 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086957025 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091813363 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1325769 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106938809 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08016861 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080225273 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096959603 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.089643246 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067259275 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071705417 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093530293 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091597408 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075102162 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068117518 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087324602 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084421483 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069904704 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074067053 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095417222 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087780608 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087246576 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097569413 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085128806 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067775761 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070993561 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071988638 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083281844 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073733802 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078310009 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073014231 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072562737 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.08177594 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080046323 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072393005 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070185103 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093478017 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079013226 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080332783 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069014998 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077538095 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06998765 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094769647 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.1290657 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068711294 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075068121 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072482504 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079180838 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069532496 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090261522 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080744225 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06877903 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071840375 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06788031 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068642991 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083393956 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071477319 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071104165 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078834254 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074274332 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.095091458 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073962878 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084277373 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068085393 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076605372 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068557459 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069523192 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067414263 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097032031 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070599925 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112523171 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070134399 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06964669 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078716705 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076592907 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075636786 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069329503 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084320161 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079827529 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071931733 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078084659 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072249626 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.0714178 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.093341714 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071192326 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071767624 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069308988 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074664423 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071734928 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070255573 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082151385 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068075489 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071254349 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086016438 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068586908 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069994789 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074620119 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073190007 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068138492 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079546476 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073789592 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069470291 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079026242 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068574554 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071596807 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081436319 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07523279 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067678606 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07253672 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074078946 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069481481 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070144355 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071189523 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070721152 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077743722 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074880856 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073582412 seconds)
  done (took 10.858655718 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164685139 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.161100372 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071499008 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150173233 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077678065 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079910605 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152079784 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096843413 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068550775 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069255677 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069783689 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112272962 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107181628 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117802335 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079942634 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069197357 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.085755714 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116136192 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.1548748 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148365089 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08618764 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078462058 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07052077 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070300215 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072006986 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079757199 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086849455 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077273663 seconds)
  done (took 4.514182677 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081255651 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.10622465 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075096421 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092038348 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091716947 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068401653 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07131442 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070533382 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082450361 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078618228 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068479638 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074555374 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075321298 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072300139 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069487793 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075938337 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07621922 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069874439 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071743401 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073729291 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07900609 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092411974 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072100063 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06828244 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073542555 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067878593 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063819312 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084699073 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06894834 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09660055 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06607066 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073259612 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083707354 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069580699 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068673077 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068723098 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06805574 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06801782 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07012774 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066990277 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067175941 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058187359 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067371174 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079441303 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075632237 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057101957 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07292937 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073518231 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073579743 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066120485 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071685032 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07109662 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071792815 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076152799 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072670187 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073941435 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069768896 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.075441272 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078259941 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068847765 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06617982 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067242258 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073516503 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06632852 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077221565 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07312785 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067111858 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068261723 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071145556 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.075911873 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068676122 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073102174 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066691889 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070644223 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07351051 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070615819 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069933534 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066951317 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068504426 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068979903 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055916757 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068619546 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054461889 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072053246 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067396963 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067264603 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068237081 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073651445 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080717433 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070041679 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074355229 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.0694235 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067403309 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071735051 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060842747 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07134302 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084225893 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083347636 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068458048 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066372449 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082205857 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073301909 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067217303 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057036669 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073375647 seconds)
  done (took 9.323560347 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092524861 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070881247 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085512003 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092210394 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088307595 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076626314 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07849638 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070111429 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.0842256 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074695542 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078278771 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068492689 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079485377 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07847024 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071027237 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078774438 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073011435 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086088071 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084683343 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068587564 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077550555 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081779398 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091882869 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083438507 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082126105 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083057272 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.092119443 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078522455 seconds)
  done (took 3.999144202 seconds)
done (took 38.688784444 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.789457583 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.951937995 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.7781045 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.139070628 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.860464845 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.00474166 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.976510223 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.772155255 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.041701283 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.809383754 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.983986081 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.957314778 seconds)
done (took 65.777181366 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.832794334 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.914844597 seconds)
    (2/2) benchmarking "String"...
    done (took 2.010936005 seconds)
  done (took 5.638526908 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.003935188 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.335536568 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.02640329 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.773426143 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.779420292 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.116695485 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.576944483 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.277080782 seconds)
  done (took 30.601063492 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.844500027 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.004515429 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.440674424 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.466315112 seconds)
  done (took 15.515555264 seconds)
done (took 63.3824065 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.787309812 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.81569614 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.79547874 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.758321157 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.832740668 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.791753469 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.299275033 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.807120586 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.775626584 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.764041466 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.775959717 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.21295359 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.777768036 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.312580703 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.775044359 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.782317249 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.791236572 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.319579067 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.93274576 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.79130557 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.781044088 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.827523933 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.777007429 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.784579233 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.7854715 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.775240965 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.21815654 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.787503551 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.402266204 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.778991395 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.803967284 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.794778478 seconds)
  done (took 204.130503966 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.774573505 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.679573495 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.766171959 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.791551428 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.193551297 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.957644695 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.892268337 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.25090938 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.780092745 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.805205419 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.972482749 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.776884969 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.993202955 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.727621926 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.804797344 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.780111382 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.965511566 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.996975129 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.809330648 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.898801038 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.804039605 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.776957522 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.731845711 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.948396006 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.80376287 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.798134976 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.805345798 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.931597572 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.963745848 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.948116747 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.821250434 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.795228317 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.99859733 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.650684255 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.799023982 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.788977955 seconds)
  done (took 169.698874592 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.160378453 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.778035921 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.775760885 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.777903469 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.789381351 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.7759127 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.89842964 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.905269468 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.380611069 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.520827933 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.831120355 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.629602586 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.779494625 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.844871548 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.79088986 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.781087484 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.792892631 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.804242402 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.779875067 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.778317147 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.901873595 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.790878266 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.8194846 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.7881989 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.778267154 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.785011361 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.151785389 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.779142599 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.784608506 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.039869142 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.779061707 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.779405945 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.689021236 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.476468657 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.869443504 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.781074165 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.784319316 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.779246435 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.999195899 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.779502266 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.780041972 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.782127147 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.970448543 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.779554069 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.903642605 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.778841619 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.310903191 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.780680899 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.779096657 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.627878997 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.517832824 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.781854465 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.779942925 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.781983619 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.780097369 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.780028953 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.785581168 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.404112826 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.851750732 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.782070929 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.786742671 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.788790453 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.783113501 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.867018728 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.781302741 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.79989485 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.83526095 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.016609923 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.901595558 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.781883743 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.78094279 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.847728104 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.874673598 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.78049361 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.781829743 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.779533729 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.780668892 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.780889377 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.861181699 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.780806994 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.902596424 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.788889276 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.782473782 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.832609693 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.850502385 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.781058081 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.782163985 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.687429216 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.783433536 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.781529785 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.136295492 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.850745076 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.781233913 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.782524628 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.781474139 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.912853755 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.906879944 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.594829067 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.783283888 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.782288672 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.390810982 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.783019136 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.930361028 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.781993492 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.98426908 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.783790022 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.864485844 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.787908093 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.784553186 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.782241873 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.815279457 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.783170643 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.840595538 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.785373581 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.157055026 seconds)
  done (took 403.150798771 seconds)
done (took 780.907444841 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.437932606 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.394810457 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.508577312 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.413406275 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.392334023 seconds)
  done (took 13.871384034 seconds)
done (took 15.595897174 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.872811674 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.877158696 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.807892849 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.875857319 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.804584217 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.874966061 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.856646237 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.809288768 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.84164475 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.810682632 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.845845888 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.812058128 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.798445018 seconds)
  done (took 25.611538545 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.018676224 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.033115568 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.858648474 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.01395016 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.829346122 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.030262195 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.943067385 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.93554646 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.936519724 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.801229901 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.798518457 seconds)
  done (took 22.926275951 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.018027294 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.024271785 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.861164179 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.045817063 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.834306829 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.016609321 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.948864174 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.938179245 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.939403905 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.799775793 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.798374984 seconds)
  done (took 22.949967473 seconds)
done (took 73.2081003 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.79447402 seconds)
  done (took 3.519715762 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.820406573 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.973805076 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.801044604 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.797729752 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.794071506 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.794731268 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.797461912 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.79453382 seconds)
  done (took 16.2999579 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.794134618 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.793031235 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.791517077 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.794035253 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.790629577 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.791576763 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.793309007 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.793785975 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.791804904 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.790093355 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.793414161 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.791800778 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.794561137 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.79084054 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.794564285 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.79174567 seconds)
  done (took 30.406783296 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.79329721 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.791382894 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.791688575 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.791327345 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.792515429 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.792341003 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.793305198 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.79084925 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.79308906 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.791238673 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.791902122 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.790820286 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.792484649 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.791843871 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.792242279 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.793125029 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.793090436 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.792256635 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.797094162 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.792740649 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.793516867 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.792663247 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.794016333 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.792929886 seconds)
  done (took 44.751398169 seconds)
done (took 96.700891493 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.669777942 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.166903512 seconds)
  done (took 8.564350204 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.796934211 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.795087989 seconds)
  done (took 5.352021393 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.795736702 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.795337056 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.795824381 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.796365481 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.796014692 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.796132192 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.795954689 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.795553509 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.797134181 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.796154157 seconds)
  done (took 19.688626084 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.796075581 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.795484292 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.793244076 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.795626438 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.79670578 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.793252787 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.796005098 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.796967019 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.796178037 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.793155966 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.795910559 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.793904331 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.796726388 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.794055993 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.796548236 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.793456634 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.794908198 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.793848495 seconds)
  done (took 34.041797076 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.79646571 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.796844505 seconds)
  done (took 5.322267246 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.794546717 seconds)
    (2/7) benchmarking "second"...
    done (took 1.793941151 seconds)
    (3/7) benchmarking "month"...
    done (took 1.795132314 seconds)
    (4/7) benchmarking "year"...
    done (took 1.794333616 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.794898671 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.794578689 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.79564622 seconds)
  done (took 14.292252583 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.798327048 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.958025878 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.027820977 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.455873634 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.798653288 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.801871573 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.718223987 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.80163357 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.803438376 seconds)
  done (took 19.894182608 seconds)
done (took 108.882173913 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.612068578 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.792907039 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.142455207 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.881110712 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.811467609 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.138748275 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.810357797 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.101405667 seconds)
done (took 43.019684543 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.88370232 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.345299133 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.379612547 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.241089738 seconds)
  done (took 12.696554449 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.778121778 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.313550403 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.823054693 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.374486252 seconds)
  done (took 20.039776492 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.165415701 seconds)
    (2/2) benchmarking "read"...
    done (took 2.135485357 seconds)
  done (took 6.036690108 seconds)
done (took 47.387906357 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.79928634 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.799374427 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.7998409 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.799059521 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.795785273 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.800103976 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.796455282 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.796814552 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.796572414 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.799469316 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.799474021 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.799510754 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.799752149 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.800753892 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.797444082 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796487598 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800096701 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.79659915 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79615918 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.796716225 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.797254329 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.799947893 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.797899688 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.796915737 seconds)
  done (took 44.890380169 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.799938777 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.798973708 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.79999992 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.800449506 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.79795531 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.800749913 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.800076149 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.796814195 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.800862415 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.799166013 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.797104871 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.797180279 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.800020732 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.798029011 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801233346 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.797800715 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.800878084 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797603889 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80110928 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.798215754 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.801189393 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798481243 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.79796231 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.800414873 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.797744944 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.800211471 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.802478418 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.799571747 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.801374772 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.799105511 seconds)
  done (took 55.715869692 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.806001821 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.81010516 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.801843634 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.801190191 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.802701247 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.802321494 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.80192569 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.802091139 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.802367999 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.801061989 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.803091505 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.800872988 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.801797855 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.80208965 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.801875366 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.802750295 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.8032933 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.80224671 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.802448841 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.802444695 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.801940805 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.802140495 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.803398069 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.802729654 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.802836582 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.802875364 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.80280157 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.802619312 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.803598247 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.802777346 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.802468827 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.802651308 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.802755665 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.804429408 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.804337197 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.803203007 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.807987301 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.81103056 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.803361593 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.802611024 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.803909902 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.803871628 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.803228161 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.803969415 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.803946385 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.803675589 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.804373984 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.803518044 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.804648837 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.804539386 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.803894007 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.804465916 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.803793537 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.803983367 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.805158807 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.803998649 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.804743232 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.804557121 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.804332655 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.804721307 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.805137441 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.804741634 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.8048903 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.805531234 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.804169249 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.804832955 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.806384664 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.80554017 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.805273272 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.805557965 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.804577099 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.804904055 seconds)
  done (took 131.608453223 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.804139062 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.803648484 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.802148288 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.802412784 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.802437896 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.805373727 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.803917215 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.804515188 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802351158 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.805674519 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806239797 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.8034217 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.803300021 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.805880683 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.805252282 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.803061833 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.806425086 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.803917519 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.805556514 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.806787557 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.805751056 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.804165334 seconds)
  done (took 41.434463887 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.806348062 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.806320644 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.802943567 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.806231963 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.804339729 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.806648878 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.805883865 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.806193654 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806687394 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.804688641 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.804221165 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80709076 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.805513304 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80432304 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.805367665 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.80474985 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.808279017 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.804842115 seconds)
  done (took 34.239442345 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.805410854 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.806550302 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.809412917 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.806716736 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.8055312 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.808641218 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.806557357 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.808387241 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.808279572 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.806459776 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.809448123 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80822083 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.808304398 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.805493971 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808006474 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.806388344 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.809691324 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805702552 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.808890045 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.805968435 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.805910483 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.808100047 seconds)
  done (took 41.502152134 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.809010884 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.808378171 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.80638159 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.807589795 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.806779368 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.811111667 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.810427771 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.806887576 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.808944757 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.809714196 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.806722403 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.808725258 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.806908125 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.807436858 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.807866183 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.806477857 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.809804501 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.807593967 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.810139614 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.807068734 seconds)
  done (took 37.905010358 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.810758824 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.810388085 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.810825834 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.811459023 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.811531642 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.810727805 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.81175471 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.811653419 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.811451854 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.812122074 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.812119688 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.81074587 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.811720798 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.811464445 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.812708041 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.815107968 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.814397277 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.813551044 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.810089919 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.811793308 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.811999031 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.812934715 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.813279467 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.812826822 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.811913393 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.813492136 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813097553 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.813591598 seconds)
  done (took 52.48154643 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.812423557 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.813365883 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.81094791 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.808739193 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.811799233 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.809472772 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.811297442 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.81082465 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.812800911 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.810356749 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.812154608 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.814737869 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.815558518 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.814810743 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.8137244 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.815339452 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.815363733 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.811159534 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.811987285 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.812000768 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.81472904 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.815317566 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.815857254 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.811515184 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.810690849 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.812728954 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.81022193 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.809592379 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.813575246 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.8104891 seconds)
  done (took 56.118103934 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.832624604 seconds)
    (2/2) benchmarking "in"...
    done (took 1.832031472 seconds)
  done (took 5.409970599 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.809889977 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.813276407 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.814220942 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.811034781 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.811990677 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.813290458 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.812923923 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.80998872 seconds)
  done (took 16.241877163 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.813385465 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.814572458 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.814885249 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.814354423 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.814435541 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.814649456 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.819777204 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.813290346 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.815554781 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.815076979 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.821347271 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.822716765 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.816867911 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.813775179 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.814078636 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.817084842 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.814355597 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.817040999 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.814867492 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.814341602 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.814905155 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.816164219 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.817981915 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.8131725 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.816564189 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.82648935 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.819652751 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.81415609 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.814750437 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.819225723 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.81467918 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.813462356 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.815161677 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.814489855 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.815564675 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.816172683 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.824265539 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.816493164 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.821782119 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.815636545 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.816826662 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.813038815 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.817788943 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.817067063 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.817279524 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.816910047 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.816298725 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.813267156 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.81625736 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.819165736 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.82219348 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.81563445 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.814082935 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.820296153 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.817833178 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.823641485 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.817908655 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.820281618 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.82578382 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.827017277 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.829666936 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.825281774 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.817152628 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.816556258 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.826773108 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.840520819 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.822596757 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.814479238 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.814650791 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.816523264 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.824868501 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.830442407 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.827268564 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.818005995 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.817754022 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.816862713 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.818708432 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.817163939 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.824657832 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.821089341 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.819376949 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.818342158 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.828394525 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.841302696 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.817422224 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.819003692 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.818418027 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.81822939 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.81972733 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.830897094 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.81980359 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.819623877 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.818833184 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.818814714 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.82060163 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.820992432 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.819253307 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.820789435 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.817767324 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.819569826 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.819732179 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.822730992 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.827644805 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.820523983 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.819563591 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.826560831 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.818902542 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.819318409 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.828332955 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.820167396 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.819824778 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.820845292 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.825518292 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.816561177 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.823914528 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.82939766 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.819499822 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.820727088 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.819207188 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.81980131 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.828858508 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.847769696 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.820938591 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.819894707 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.8253873 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.833043261 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.820787688 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.824373837 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.820034643 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.817374425 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.817201018 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.82236711 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.820817863 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.821847409 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.820627256 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.823122828 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.817355103 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.820897894 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.821424278 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.821956556 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.821901891 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.821344594 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.823545316 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.825042274 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.823683834 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.824890485 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.831567094 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.822188236 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.822842239 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.82372835 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.819214634 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.822446845 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.823411468 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.822323182 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.823102326 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.822991471 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.82199228 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.824048173 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.822760949 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.823297891 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.82316725 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.825099225 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.827221814 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.823705109 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.827289325 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.82200492 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.820124023 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.823906747 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.822256823 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.823591702 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.823087801 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.822274837 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.826321972 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.831481312 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.823486339 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.823643124 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.826285934 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.823968479 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.823012941 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.822912596 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.826343693 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.831582531 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.825383595 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.830333275 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.823874427 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.824259997 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.823594499 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.822483582 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.823467985 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.82432405 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.826629463 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.832221774 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.836995856 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.833043646 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.825281083 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.828482426 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.825131793 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.827844235 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.827690176 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.824503259 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.824787714 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.825213297 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.824540094 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.824625675 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.826478344 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.824724408 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.824292612 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.824483721 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.824170767 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.824730409 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.825302613 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.826635363 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.826182851 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.823297694 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.824228064 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.824365201 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.824570082 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.8228061 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.823904187 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.82441515 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.825261627 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.826495734 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.833340032 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.82191603 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.825307371 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.827107399 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.826313637 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.824217489 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.825905299 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.827383617 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.826465991 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.830893688 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.826529628 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.82622168 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.832932322 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.825245757 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.82545963 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.829255617 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.826305443 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.823365867 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.830128678 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.833958219 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.826480395 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.827171232 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.826550271 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.825837272 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.826757949 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.830902845 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.823880981 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.825562289 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.827012423 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.828194339 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.82434929 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.827995894 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.827293693 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.828260428 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.829078396 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.827825086 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.827949446 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.828706536 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.82797643 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.828013756 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.827710789 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.830378169 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.835457 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.832074339 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.82813778 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.830845052 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.829096052 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.831789429 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.82875422 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.828894059 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.82796734 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.841744621 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.8370402 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.835091442 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.83084003 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.828828974 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.833656681 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.830884958 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.833065927 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.828054307 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.829012332 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.83001941 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.827449782 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.827011591 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.830911737 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.829223271 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.829815561 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.830389347 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.832585267 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.8292525 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.828457959 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.830155149 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.829477764 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.828881861 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.828353131 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.830141415 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.831579212 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.83167762 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.829712046 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.828972845 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.835361428 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.829158807 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.83164693 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.829870336 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.829222063 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.828779233 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.831939631 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.830802028 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.832424684 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.838707128 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.834218978 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.843042423 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.832355545 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.839721457 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.831776362 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.833149307 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.839195028 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.827405832 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.829075737 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.831320367 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.831352066 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.838092485 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.831628025 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.832431226 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.836649912 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.83236082 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.832040202 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.831898559 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.832149759 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.830456769 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.836499832 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.84062208 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.834143767 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.836377654 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.834144166 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.828099274 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.831731066 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.830578307 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.82966946 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.835484959 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.832072054 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.832054978 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.831439791 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.832342474 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.83194152 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.833194186 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.833543339 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.829775173 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.831976612 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.838722135 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.833595313 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.837358404 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.83119479 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.841460919 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.832882887 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.839965693 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.833029638 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.832917755 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.832463322 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.833110598 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.833665119 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.832245747 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.834216399 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.833809342 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.834255651 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.836193403 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.833202896 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.835507066 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.833966167 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.835048334 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.833778839 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.843808046 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.857222942 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.834677386 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.838739918 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.830425647 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.835906321 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.839241221 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.834474225 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.833896132 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.83728042 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.845523355 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.843594231 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.835091029 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.834987195 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.835554184 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.83582921 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.835647089 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.836741084 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.835171893 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.835200068 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.835323022 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.8373186 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.83908364 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.833961279 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.836421476 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.83699275 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.835564781 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.845734765 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.8357856 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.837745357 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.836253036 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.834860129 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.835573588 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.835042484 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.836611217 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.836142811 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.835034785 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.837550367 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.842198068 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.842635789 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.838569661 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.836421894 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.836169639 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.836286191 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.837339096 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.836524065 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.836172988 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.836193613 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.837700552 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.837883875 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.837267564 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.836346721 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.837223406 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.838033267 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.836678258 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.839973353 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.844783768 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.83868884 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.834776921 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.837285716 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.838333836 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.836645023 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.83711721 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.84477498 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.840279443 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.849583096 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.847215369 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.844250359 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.83792293 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.841092621 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.846496388 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.83765295 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.839741433 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.837966561 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.838833136 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.838899008 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.841793393 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.839318855 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.846095065 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.83802731 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.837971737 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.846271604 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.840186461 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.838820727 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.840051355 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.842501056 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.838819601 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.835578387 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.839088211 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.838287764 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.846822685 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.840867613 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.839547771 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.840913636 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.83685219 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.84015819 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.844045611 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.83940261 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.841074189 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.837520326 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.838689017 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.840131095 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.838865035 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.836749762 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.840324622 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.838662733 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.842790719 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.846503696 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.837124214 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.842225189 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.840246723 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.842103899 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.841740801 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.840260003 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.837629817 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.837602016 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.839575831 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.841172541 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.841093465 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.843595211 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.842964826 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.84479962 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.842328083 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.84200923 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.844274071 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.851639593 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.848674441 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.83795846 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.83932652 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.841719718 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.843759719 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.842479988 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.841757468 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.841984585 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.842280568 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.840776427 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.842282552 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.841937591 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.848431949 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.863544076 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.843327672 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.841828942 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.841979502 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.845591237 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.841318849 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.837900973 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.840320527 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.843230029 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.84453243 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.850844483 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.842300102 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.849137469 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.841477195 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.842919805 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.846640293 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.84520184 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.850483792 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.845539928 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.8423908 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.842654943 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.848092125 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.859464258 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.842039473 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.853458534 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.872982207 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.843359676 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.845209354 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.847583215 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.844462711 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.843829338 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.844560118 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.844363039 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.844136243 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.842748755 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.844827134 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.843979012 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.849960206 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.845780083 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.843563332 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.843400351 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.843860511 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.844822556 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.840795977 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.844540459 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.843362502 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.845039618 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.844646403 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.846745375 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.850903177 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.861023919 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.85441297 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.844925511 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.844590096 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.841362798 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.846277199 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.847008083 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.854814242 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.851641484 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.845139977 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.844975034 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.848258924 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.844988722 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.842351515 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.844683845 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.845255824 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.84421628 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.842312405 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.858772168 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.855186303 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.85187177 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.8487752 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.848187647 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.845937684 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.846658934 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.846513868 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.845731735 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.846557609 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.846318439 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.849634003 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.845295816 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.846041918 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.850658254 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.855244444 seconds)
  done (took 1093.542547501 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.844433302 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.843674019 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.844328671 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.842934609 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.844587702 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.842652505 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.842831854 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.843009467 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.843959427 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.844111795 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.844227222 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.843084396 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.843353951 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.845079356 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.844314851 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.844765996 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.844016876 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.844586825 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.843638168 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.843816043 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.844317376 seconds)
  done (took 40.498858254 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.847161993 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.844555475 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.84477893 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.847677249 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.844432171 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.848233877 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.845071375 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.847787642 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.848240528 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844798774 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.847818862 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847303699 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.845583529 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.844880803 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844358468 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.848088379 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.847720105 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.845640891 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.847835634 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.844988774 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.848004298 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.845701035 seconds)
  done (took 42.398708464 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.84906334 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.851034787 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.847996033 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.846112434 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.84892252 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.845843671 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.848498673 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.847788649 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.848351271 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.85008602 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.848892858 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.85128195 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.857174703 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.856066034 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.851999361 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.849406578 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.993751887 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.850158032 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.850156621 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.850119892 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.846820885 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.85414444 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.847693326 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.847472268 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.848049846 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.85102459 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.848787113 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.850137347 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.850558218 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.851981184 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.854530273 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.850114744 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.848516431 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.852810002 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.850391416 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.85184355 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.85471584 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.851085142 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.847568281 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.850523376 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.860479502 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.871704459 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.851815105 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.858087718 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.851089738 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.850082281 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.856272669 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.859075449 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.847986742 seconds)
  done (took 92.638698564 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.851468742 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.852138754 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.84840037 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.850551032 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.850640453 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.850185218 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.850625605 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.851006178 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.849502891 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.848842292 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.851175672 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.848724975 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.849262986 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.852326 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.851740112 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.847540672 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.848453158 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.849456485 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.849086446 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.849388242 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.85069858 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.852465164 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.852209387 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.849432806 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.852291772 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.849634809 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.850460349 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.851991492 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.84973448 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.849039019 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.852280098 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.851465072 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.852748148 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.84889188 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.849226884 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.852004198 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.852343994 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.84989729 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.852628625 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.849820909 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.851894388 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.851670774 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.852540301 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.852787638 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.849532729 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.851385636 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.849780015 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.849750079 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.850257799 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.852939244 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.853546441 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.850597581 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.8532567 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.85114823 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.853478744 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.853642394 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.850050061 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.850013436 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.853993856 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.850122251 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.851783597 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.854582003 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.851323697 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.85475939 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.854507183 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.852242089 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.851026453 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.853365191 seconds)
  done (took 127.66035342 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.853991158 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.854938205 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.854626854 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.855163731 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.855189736 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.854578018 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.855366443 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.854679653 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.85595933 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.856146125 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.855653225 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.855862432 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.855682232 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.854406574 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.854722602 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.855506075 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.855773514 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.855640521 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.855099114 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.85595006 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.856276429 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.856605739 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.854627293 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.85691129 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.855671208 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.855346941 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.856486646 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.855745549 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.85635455 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.855869739 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.856591161 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.855884438 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.855993924 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.856179112 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.855321453 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.856640708 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.856130142 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.856107686 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.856965341 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.856625688 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.856013648 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.856514049 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.855676347 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.856640079 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.857644543 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.857255462 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.856378798 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.857951994 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.855829879 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.857735029 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.857855473 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.856720921 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.857634241 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.8582147 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.857546048 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.857161163 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.857557925 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.858386989 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.858910278 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.856658596 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.857885174 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.858402014 seconds)
  done (took 116.875721183 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.856892337 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.858312752 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.855399104 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.854988477 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.857220801 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.85526084 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.85645456 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.856990412 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.857160675 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.856997432 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.857797479 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.85531712 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.856955357 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.858258904 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.856259958 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.856321166 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.855091833 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.855197471 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.857069416 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.856026651 seconds)
  done (took 38.917548063 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.854151323 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.858392286 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.855538988 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.856131278 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.859342221 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.854725124 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.85793982 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.858247148 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.855725278 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.858735571 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.858783452 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.857940817 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.856199031 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.855127175 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.858346701 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.856219247 seconds)
  done (took 31.500357178 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.85673103 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.860420089 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.85891148 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.859625081 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.856137307 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.857506376 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.859967486 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.855859042 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.856913684 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.859955036 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.859547163 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.859351994 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.859881403 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.860093789 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.857158709 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.859125008 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.85755011 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.856335588 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.859142741 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.860412412 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.857543543 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.856732862 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.860566096 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.861731109 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.858412139 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.858503576 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.856803292 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.857658103 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.857481776 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.861286335 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.85785423 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.859036027 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.858270394 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.857639031 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.861541381 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.858068852 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.862680387 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.86157175 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.862204691 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.862021018 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.860750976 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.859542765 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.862605864 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.862534049 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.860157154 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.862372635 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.859162425 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.85902902 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.859502506 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.859022859 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.861576546 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.862067315 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.861958737 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.861948812 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.862477237 seconds)
  done (took 104.064380974 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.861873147 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.862679385 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.859025646 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.862515461 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.863404145 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.860618598 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.862523876 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.860093728 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.859353007 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.862377062 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.860877382 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.862885897 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.861044313 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.863383618 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.860933998 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.862881214 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.859699243 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.859883443 seconds)
  done (took 35.299303148 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.861700806 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.860530286 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.863885282 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.860325044 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.859759621 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.862732826 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.861194864 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.863987659 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.862926729 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.862506246 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.861079935 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.863741164 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.864166023 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.863569156 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.861860917 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.861281342 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.864772063 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.864089545 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.861140521 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.861836513 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.865755437 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.863867392 seconds)
  done (took 42.770310545 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.863776433 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.863323086 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.880594143 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.885535494 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.886756184 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.8991718 seconds)
  done (took 13.073957402 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861355753 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865819283 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.861410956 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864633148 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864111635 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862554102 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862569048 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862768522 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865711369 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863300838 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862605383 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866935587 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865529165 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862108385 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865357896 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865753984 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862812829 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863417394 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861734539 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865320941 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86304951 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865573995 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861132229 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862560757 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863302039 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861904538 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864745428 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863309432 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861837037 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867731663 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868221928 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863839983 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865137877 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867192724 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864536407 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868224275 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865594545 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868025912 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868942396 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865190662 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.868506154 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867980978 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868540215 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865523561 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866625708 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86542802 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865561089 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865342393 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864535797 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870641244 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868331352 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863515377 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866584343 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866881567 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867231444 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855811983 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8526114 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853423728 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855991676 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853439644 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853999287 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85499686 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852849698 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852132318 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855581107 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853310513 seconds)
  done (took 124.768718936 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852161544 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.851175571 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851440833 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853896302 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850746439 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850905342 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85235454 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851632352 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850742038 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852133737 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85358145 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851288647 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851630806 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850892538 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851519713 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850945765 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851195257 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851402059 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851067374 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854838772 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85316873 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850345911 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850656989 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851058381 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851756004 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854871933 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850819917 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851100461 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850831759 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852110454 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851042919 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851902809 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851215578 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.851655243 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851645128 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85187505 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852092245 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85158276 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852106749 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85433364 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852401441 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854476019 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852964777 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852253301 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852886747 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853060468 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85267648 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853326561 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852435751 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853685346 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853334767 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853948558 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854249644 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852718357 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853170822 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853476193 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85233628 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853073975 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853756971 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855861692 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853388074 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854074217 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855189544 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855558125 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852645554 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853966471 seconds)
  done (took 124.049744909 seconds)
done (took 2547.336032735 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.899743092 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.871553488 seconds)
  done (took 15.557940902 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.019584345 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.971992882 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.858628806 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.878532292 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.856741792 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.876830734 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.863967458 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.856193465 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.856156977 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.856584599 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.856790968 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.04194696 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.863523287 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.858937335 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.853675803 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.946867578 seconds)
  done (took 52.273831271 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.854381345 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.855332226 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.865429888 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.857628521 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.854330174 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.874038186 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.890514856 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.86099988 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.916560054 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.869547345 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.974498993 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.869354791 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.85531983 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.925854496 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.868568156 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.870856448 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.953067087 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.932123657 seconds)
  done (took 35.733619967 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.934892683 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.861854218 seconds)
  done (took 10.58836394 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.884515002 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.879875637 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.879622575 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.864256947 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.856042568 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.862770093 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.860471844 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.859584854 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.88617529 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.881040922 seconds)
  done (took 70.499844828 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.860521984 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.856905056 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.852812827 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.852515316 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.845493636 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.849350027 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.85147797 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.847630212 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.54905196 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.887892299 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.857828123 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.85911813 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.853658909 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.852097099 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.847420627 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.874779286 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.972890065 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.846395489 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.844659046 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.853247657 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.848867688 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.902640943 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.864543612 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.849601964 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.879559916 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.546679583 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.857520832 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.854261315 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.970491868 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.844821399 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.845426886 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.846448846 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.848870238 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.222076215 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.122777559 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.846442192 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.855179803 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.853355343 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.843290262 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.973892143 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.846339239 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.849999702 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.792272313 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.095871875 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.95836738 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.891382769 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.231011343 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.849268222 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.846041471 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.875343808 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.847017502 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.846320999 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.859738261 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.350290252 seconds)
  done (took 131.519117442 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.840851873 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.101975121 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.994620984 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.839160363 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.127774348 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.048554303 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.840552966 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.888481291 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.841872448 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.071624632 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.061158079 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.949831241 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.842114789 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.83723288 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.835113266 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.835161319 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.997405545 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.912374498 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.839659287 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.833074915 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.867059314 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.083271704 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.967388779 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.836229711 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.857283502 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.049363684 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.963853584 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.945446005 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.308771301 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.833528926 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.904387958 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.841457773 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.831669693 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.831343177 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.992014013 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.934114197 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.925711206 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.836190557 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.834160144 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.832524768 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.505918675 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.031438769 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.935350873 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.979358659 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.088886102 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.0404373 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.623311954 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.833751923 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.573612043 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.99615492 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.069565195 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.066165023 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.960860353 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.835940964 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.104026582 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.832008474 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.831458202 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.067997455 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.076291984 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.936953765 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.833780477 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.832956682 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.832930613 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.07886044 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.8332685 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.930734443 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.834062838 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.832315302 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.930124421 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.936949401 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.082062905 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.046806226 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.866027302 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.127967817 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.318964373 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.081271423 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.902258538 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.066697629 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.835977942 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.830473668 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.916932281 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.678566239 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.033745693 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.083496929 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.089328672 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.870488353 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.554062611 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.831807783 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.05948802 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.057079056 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.085571927 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.073522651 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.986264561 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.160181373 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.8313089 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.8317252 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.072254378 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.972212217 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.835742781 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.193926886 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.069671561 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.410241908 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.863846078 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.144062837 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.967467141 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.835567534 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.475776582 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.832170788 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.061404914 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.875029532 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.833824549 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.833415486 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.054800651 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.818449984 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.831622687 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.553699511 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.898115936 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.83512411 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.068995427 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.837067835 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.099121155 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.836516205 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.073006927 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.848005929 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.867622304 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.00684882 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.073751628 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.836985489 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.090860758 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.080669465 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.953349604 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.109412238 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.757070649 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.835026469 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.124931494 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.835652148 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.833432956 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.008092609 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.834986863 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.060644496 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.83868454 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.123134635 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861735182 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.991058201 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.838246135 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.093795678 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.870751936 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.888008786 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.836894993 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.967948656 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.835787287 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.708310125 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.98832604 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.836156534 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.834505178 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.377819134 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.83385699 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.992503296 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.067459596 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861105919 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.910538155 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.509793753 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.833394154 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.923350508 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.862878474 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.174731926 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.835669811 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.049771645 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.838332953 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.379313932 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.835331311 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.077373583 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.069449512 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.837318989 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.834838016 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.741660216 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.834671244 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.833549773 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.001242942 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.657046509 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.833837029 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.04397314 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.840062186 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.969493866 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.84248504 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.918614879 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.188408729 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.834295776 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.837168281 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.838042946 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.841820906 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.834884094 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.045227394 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.869953562 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.363828504 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.981451295 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.106890305 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.155867866 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.087397484 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.883234596 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.83892119 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.086048067 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.845325616 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.902395372 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.838554921 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.862860605 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.069844447 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.842626706 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.050727237 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.117283478 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.77484825 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.889188706 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.841541702 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.836237478 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.752129831 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.990721306 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.9290314 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.834387697 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.841413885 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.958957898 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.968490787 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.055627036 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.839520678 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.062262363 seconds)
  done (took 895.740420822 seconds)
done (took 1213.698620305 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.834444266 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.835993466 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.825276109 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.835262323 seconds)
  done (took 29.100880809 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.84519723 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.84016574 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.842448063 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.838610215 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.845367123 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.842178731 seconds)
  done (took 12.827670404 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.863100712 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.838408404 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.840464538 seconds)
  done (took 21.318303339 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.913015775 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.249376493 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.961743101 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.285235206 seconds)
  done (took 10.181827691 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.845823769 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.846141026 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.847458735 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.85048305 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.850340432 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.850018959 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.844957602 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.845108152 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.84761755 seconds)
  done (took 18.402771647 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.288425939 seconds)
done (took 97.892250439 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.846145058 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.840477567 seconds)
    (3/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.562967811 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.478158193 seconds)
    (5/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.187988681 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.841349661 seconds)
    (7/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.353566684 seconds)
    (8/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.978520961 seconds)
    (9/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.852705189 seconds)
    (10/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.904137961 seconds)
    (11/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.824156402 seconds)
    (12/309) benchmarking ("sort", Float64, false)...
    done (took 5.613230025 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.968435922 seconds)
    (14/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.401939138 seconds)
    (15/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.150064641 seconds)
    (16/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.86969346 seconds)
    (17/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.030968503 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.882536681 seconds)
    (19/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.157328114 seconds)
    (20/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.929801485 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.866800314 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.937407279 seconds)
    (23/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.033626559 seconds)
    (24/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.919401512 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.132465601 seconds)
    (26/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.863824275 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.108221966 seconds)
    (28/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.854593355 seconds)
    (29/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.306967648 seconds)
    (30/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.782706175 seconds)
    (31/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.926925481 seconds)
    (32/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.843360402 seconds)
    (33/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.075888219 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.839547236 seconds)
    (35/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.335542119 seconds)
    (36/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.000357411 seconds)
    (37/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.947973513 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.792261601 seconds)
    (39/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.835830086 seconds)
    (40/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.893579862 seconds)
    (41/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.17549204 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.960913516 seconds)
    (43/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.398252726 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.490858997 seconds)
    (45/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.872786571 seconds)
    (46/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.098671893 seconds)
    (47/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.860639879 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.223558407 seconds)
    (49/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.530751568 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.1529268 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.851507759 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.960686361 seconds)
    (53/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.176874392 seconds)
    (54/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.745659734 seconds)
    (55/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.220958914 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.107136376 seconds)
    (57/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.954497876 seconds)
    (58/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.93684814 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.847633864 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.720611578 seconds)
    (61/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.058862912 seconds)
    (62/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.312543527 seconds)
    (63/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.322896878 seconds)
    (64/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.927657911 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.905356599 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.948043413 seconds)
    (67/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.217964132 seconds)
    (68/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.913944761 seconds)
    (69/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.354982177 seconds)
    (70/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.833602918 seconds)
    (71/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.420846037 seconds)
    (72/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.144334982 seconds)
    (73/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.212698711 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.859782521 seconds)
    (75/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.307835175 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.935545104 seconds)
    (77/309) benchmarking ("map", abs, Bool, true)...
    done (took 3.804113307 seconds)
    (78/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.134421888 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.847001233 seconds)
    (80/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.139096644 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.221036941 seconds)
    (82/309) benchmarking ("sort", Float32, false)...
    done (took 5.595339598 seconds)
    (83/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.885484061 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 5.538906711 seconds)
    (85/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.84554407 seconds)
    (86/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.919870239 seconds)
    (87/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.967257934 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.760454845 seconds)
    (89/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.278374596 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.079277454 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.851373415 seconds)
    (92/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.001761518 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.922413787 seconds)
    (94/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.842455363 seconds)
    (95/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.006435363 seconds)
    (96/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.075081159 seconds)
    (97/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.953395802 seconds)
    (98/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.019625926 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.991610706 seconds)
    (100/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.869322584 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.918849153 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.950208453 seconds)
    (103/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.13901416 seconds)
    (104/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.155258902 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.897747378 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.84034775 seconds)
    (107/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.876823091 seconds)
    (108/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.843240398 seconds)
    (109/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.888623671 seconds)
    (110/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.409319015 seconds)
    (111/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.033303599 seconds)
    (112/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.954376057 seconds)
    (113/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.940571842 seconds)
    (114/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.984626742 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.048614244 seconds)
    (116/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.069898978 seconds)
    (117/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.967092501 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.840263391 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.232866722 seconds)
    (120/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.789230252 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.233347913 seconds)
    (122/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.129799074 seconds)
    (123/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.849617718 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.884428613 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.132007818 seconds)
    (126/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.850153305 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.988840247 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.783549959 seconds)
    (129/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.938787061 seconds)
    (130/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.776523694 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.160485781 seconds)
    (132/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.019332326 seconds)
    (133/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.315932948 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.061038254 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 2.294312886 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.869050743 seconds)
    (137/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.896430056 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.090546162 seconds)
    (139/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.505222196 seconds)
    (140/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.450945069 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.110067499 seconds)
    (142/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.974122673 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.176849158 seconds)
    (144/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.981165526 seconds)
    (145/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.100134589 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.074198561 seconds)
    (147/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.065125463 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.118556793 seconds)
    (149/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.032928683 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.192150899 seconds)
    (151/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.095030236 seconds)
    (152/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.934998492 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.979172304 seconds)
    (154/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.408447712 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.070669136 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.877879232 seconds)
    (157/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.688396133 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.856068437 seconds)
    (159/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.916556641 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.870061452 seconds)
    (161/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.025239987 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.188935116 seconds)
    (163/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.006023439 seconds)
    (164/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.92079337 seconds)
    (165/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.123382333 seconds)
    (166/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.997116806 seconds)
    (167/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.157078192 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.903469604 seconds)
    (169/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.460470985 seconds)
    (170/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.852152453 seconds)
    (171/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.980435355 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.877894496 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.837355811 seconds)
    (174/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.082089674 seconds)
    (175/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.881293494 seconds)
    (176/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.971797699 seconds)
    (177/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.02040598 seconds)
    (178/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.855499519 seconds)
    (179/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.895114361 seconds)
    (180/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.605794267 seconds)
    (181/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.965462747 seconds)
    (182/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.134340862 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.071198961 seconds)
    (184/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.416255177 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.877684379 seconds)
    (186/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.239103871 seconds)
    (187/309) benchmarking ("sort", Int8, false)...
    done (took 4.858789455 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.664031656 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.896453667 seconds)
    (190/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.866921047 seconds)
    (191/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.941639343 seconds)
    (192/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.841967756 seconds)
    (193/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.175248393 seconds)
    (194/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.431052355 seconds)
    (195/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.91709706 seconds)
    (196/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.957451176 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.868673716 seconds)
    (198/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.836150643 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.116024393 seconds)
    (200/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.889271014 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.529086042 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.018371679 seconds)
    (203/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.877954817 seconds)
    (204/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.692749776 seconds)
    (205/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.455296379 seconds)
    (206/309) benchmarking ("sort", BigInt, false)...
    done (took 6.949659594 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.853445996 seconds)
    (208/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 8.156335234 seconds)
    (209/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.921716584 seconds)
    (210/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.19454338 seconds)
    (211/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.055749495 seconds)
    (212/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.218106936 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.943227868 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.648303413 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.062468243 seconds)
    (216/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.854565336 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.102511261 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.963782551 seconds)
    (219/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.878118715 seconds)
    (220/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.814514904 seconds)
    (221/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.370480721 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.957121747 seconds)
    (223/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.39161435 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.951835934 seconds)
    (225/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.957646333 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.874238496 seconds)
    (227/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.952651574 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.84114487 seconds)
    (229/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.907496882 seconds)
    (230/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.332119692 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.894703398 seconds)
    (232/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.254386621 seconds)
    (233/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.251831539 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.232853019 seconds)
    (235/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.980426272 seconds)
    (236/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.838253129 seconds)
    (237/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.845438141 seconds)
    (238/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 3.297244184 seconds)
    (239/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.02176945 seconds)
    (240/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.071057975 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.8599838 seconds)
    (242/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.474063171 seconds)
    (243/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.999150584 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.857055903 seconds)
    (245/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.963583104 seconds)
    (246/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.939048549 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.953287726 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.807186481 seconds)
    (249/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.768354778 seconds)
    (250/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.225684528 seconds)
    (251/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.029365616 seconds)
    (252/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.940965881 seconds)
    (253/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.93563782 seconds)
    (254/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.856164603 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.029791585 seconds)
    (256/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.886562488 seconds)
    (257/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.999356942 seconds)
    (258/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.842650961 seconds)
    (259/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.282829093 seconds)
    (260/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.969149958 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.880998076 seconds)
    (262/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.984579738 seconds)
    (263/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.812720858 seconds)
    (264/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.863473139 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.226699216 seconds)
    (266/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.940851498 seconds)
    (267/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.987106508 seconds)
    (268/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.786223399 seconds)
    (269/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.857461096 seconds)
    (270/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.118418951 seconds)
    (271/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.051230561 seconds)
    (272/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.879755914 seconds)
    (273/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.990171606 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.56494596 seconds)
    (275/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.874824386 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.192632206 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.56368068 seconds)
    (278/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.984300367 seconds)
    (279/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.940165815 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.4983981 seconds)
    (281/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.046693345 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.942659458 seconds)
    (283/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.241722585 seconds)
    (284/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.883762777 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.935725976 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.00018246 seconds)
    (287/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.088737498 seconds)
    (288/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.875062479 seconds)
    (289/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.99169893 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.596869931 seconds)
    (291/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.336386002 seconds)
    (292/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.860698883 seconds)
    (293/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.276135205 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.89087348 seconds)
    (295/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.257034945 seconds)
    (296/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.002420305 seconds)
    (297/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.281621545 seconds)
    (298/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.290268813 seconds)
    (299/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.082197082 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.18548864 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.146807814 seconds)
    (302/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.844783793 seconds)
    (303/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.870059668 seconds)
    (304/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.152115925 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.544069381 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.890838189 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.855348748 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 3.367243145 seconds)
    (309/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.85667248 seconds)
  done (took 1012.05719665 seconds)
done (took 1013.907113206 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.888939768 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.886815361 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.867116314 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.888049798 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.981765412 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.900379768 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.878085916 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.867924047 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.914355523 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.917460213 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.8698174 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.89890156 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.871663163 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.871920109 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.866059685 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.885813201 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.174430199 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.894061649 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.888558961 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.877270923 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.887852478 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.868794699 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.916593221 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.902106597 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.871999768 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.87031209 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.875243983 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.89052717 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.983108984 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.87550121 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.870980165 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.882803123 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.17727285 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.892234719 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.863481786 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.892376093 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.883863759 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.879079748 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.872918387 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.906153203 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.31098052 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.879314356 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.874172511 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.870171436 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.871654746 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.874806339 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.876082885 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.876675702 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.88704049 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.887509584 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.305460301 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.895168875 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.877628266 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.872317949 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.879998295 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.872163437 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.876924327 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.890907051 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.892407469 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.88970247 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.166898588 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.89773844 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.872851278 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.889646787 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.882654649 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.343418501 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.872421288 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.882099665 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.310040097 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.882115389 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.346932745 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.888338056 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.871217695 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.888896597 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.907109774 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.17822123 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.890223915 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.872150254 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.882585501 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.875498289 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.88248086 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.889422516 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.877256939 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.87476134 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.890992888 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.903932363 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.880882405 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.879347461 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.881424228 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.895277834 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.885370935 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.887343657 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.876784123 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.868003093 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.882779727 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.880696849 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.881704515 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.878200818 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.8788947 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.8846822 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.315790902 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.902651658 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.874173549 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.878771706 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.876664994 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.894345287 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.310169364 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.882115131 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.894645755 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.920328696 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.875793187 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.168505247 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.905124977 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.89357256 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.881438246 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.87710806 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.868609546 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.16967884 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.332163516 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.897583654 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.874908959 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.875113815 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.894425659 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.877492838 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.871103338 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.182034956 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.898475477 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.889789339 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.999208152 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.883028391 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.910982236 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.878069216 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.87838945 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.907316228 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.893386385 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.908554842 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.879384082 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.894474215 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.894074353 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.872386741 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.889366075 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.888223014 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.878957295 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.885615907 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.874707873 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.914664763 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.894642644 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.894601873 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.89862222 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.002851258 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.874144943 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.168482449 seconds)
done (took 294.520099475 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.943674628 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.866106848 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.970826044 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.873168593 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.955925597 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.958622964 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.869005834 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.869286867 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.871478627 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.245002707 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.870073855 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.86913148 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.866120947 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.871414622 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.955856484 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.873269517 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.870454955 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.206338351 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.872940358 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.944236609 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.872339571 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.87035299 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.873222393 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.245783215 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.873556083 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.869753644 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.947684873 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.874147836 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.254860696 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.875039 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.867588072 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.21147456 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.96525897 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.901617003 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.87433314 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.880177901 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.958886636 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.886849315 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.955615762 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.956099477 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.973888753 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.905155427 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.871114491 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.871488253 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.876364808 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.876225589 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.871051658 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.903927929 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.877949808 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.872734051 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.261096358 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.885564129 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.874397991 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.873611623 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.872867765 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.904738524 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.874834691 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.877108638 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.967299907 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.876875981 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.939001596 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.247742341 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.247097325 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.875113141 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.871346336 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.872815137 seconds)
  done (took 184.662267758 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.941619335 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.9509953 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.942551286 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.87756507 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.924165719 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.940428375 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.878454086 seconds)
  done (took 15.258793617 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.882168651 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.876137243 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.927047536 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.925797332 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.877200757 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.02532894 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.876154958 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.888644353 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.8739325 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.927975905 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.877688237 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.876213294 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.884477389 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.870279041 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.926712261 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.888588659 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.992340476 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.876857386 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.877255489 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.027225467 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.875460795 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.8842573 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.933059469 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.887646479 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.87772676 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.883157509 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.461562062 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.87819419 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.875201336 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.879919491 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.876005622 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.919622524 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.877688666 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.879007329 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.875069959 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.992549061 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.880281527 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.87525121 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.878447671 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.876860878 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.87774979 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.879207358 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.878762313 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.876750179 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.879053255 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.90141118 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.87836037 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.878027927 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.879386655 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.881176479 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.928273703 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.879966349 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.877215929 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.877021352 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.931892674 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.885448189 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.880194943 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.875831003 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.880768763 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.876464872 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.029587688 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.928299916 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.879230822 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.927350681 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.879524644 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.878494176 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.880656706 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.879723213 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.974403296 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.878296907 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.928258993 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.876819151 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.039311027 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.905893071 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.880139797 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.880199023 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.882871343 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.88305935 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.874632621 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.888239964 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.877425262 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.883527579 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.887159637 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.879280128 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.877118519 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.993057229 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.989102075 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.878320944 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.892504957 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.887525019 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.877263967 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.932917074 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.881852618 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.878708356 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.936623467 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.998037672 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.935777132 seconds)
  done (took 206.715762326 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.885485139 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.889185013 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.883061386 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.897924881 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.880954325 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.882560847 seconds)
  done (took 13.129102677 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.884768411 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.881766691 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.881572991 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.883092597 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.883328081 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.885204161 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.882664895 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.88313572 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.884275921 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.882618525 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.884420397 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.883159501 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.884019259 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.882432065 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.883164909 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.880286807 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.883950362 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.880011395 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.882124445 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.882187685 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.033268801 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.883045479 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.882759145 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.884093639 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.888264524 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.881831301 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.890615942 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.881933776 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.883725113 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.892096527 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.887049238 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.885749855 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.883577005 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.888547792 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.887035053 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.884797214 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.886937774 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.885821658 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.881339117 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.885340309 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.884072327 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.883173532 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.883583723 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.88561055 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.885965274 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.888241006 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.888251627 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.889559925 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.88481555 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.885267523 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.884637668 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.882179968 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.885413806 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.884888374 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.885104688 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.889089422 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.887461587 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.885234757 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.884042186 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.885285823 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.885030575 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.885630123 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.886599467 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.888849757 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.891088212 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.884115719 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.885294675 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.888865667 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.886434677 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.886516482 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.884710228 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.881319257 seconds)
  done (took 138.673996541 seconds)
done (took 560.252890925 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.99795441 seconds)
  done (took 8.811421511 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.898506907 seconds)
  done (took 8.808140625 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.137494886 seconds)
  done (took 9.95263391 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.894163729 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.903333452 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.880518959 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.88467469 seconds)
  done (took 29.385444759 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.967307779 seconds)
  done (took 8.783084727 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.891657647 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.879320816 seconds)
  done (took 15.618191467 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.897580325 seconds)
  done (took 8.714310927 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.945825775 seconds)
  done (took 8.7607776 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.895421615 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.920145349 seconds)
  done (took 15.641375894 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.864574738 seconds)
  done (took 8.676242455 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.548365721 seconds)
  done (took 11.3708792 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.892695823 seconds)
  done (took 8.719736363 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.932912429 seconds)
  done (took 8.745089901 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.962864882 seconds)
  done (took 9.776559666 seconds)
done (took 163.576346601 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.881034569 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.882857638 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.877571524 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.879187718 seconds)
  done (took 29.332129662 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.918407313 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.922217474 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.922846426 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.930711368 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.924766625 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.920596379 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.9118721 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.913477445 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.933813665 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.927837499 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.92673756 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.927317281 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.926742317 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.91377467 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.928603109 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.926461479 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.933832886 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.921471694 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.912113545 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.92282821 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.888255836 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.932652094 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.924296859 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.888985457 seconds)
  done (took 47.915395549 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.085646276 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.959454611 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.043608431 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.941409295 seconds)
  done (took 9.842742968 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.939843537 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.941504753 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.954224707 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.992408135 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.014932426 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.955160397 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.915733539 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.910434658 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.896521313 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.942559847 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.016970581 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.939496557 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.036656766 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.889341907 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.071391842 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.893068149 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.886053696 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.940234352 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.992683489 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.005244593 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.889936556 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.939589212 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.944230616 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.936133016 seconds)
  done (took 48.661534857 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.886193155 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.896112221 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.895024113 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.890454062 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.887903716 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.888677922 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.894509673 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.888116073 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.91108194 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.88988875 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.887944889 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.888219072 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.885318777 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.88703541 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.887819249 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.902197448 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.902132525 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.886882978 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.892731327 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.894521944 seconds)
  done (took 39.656991975 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.882616727 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.735654192 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.234917201 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.140257395 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.883620203 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.887209847 seconds)
  done (took 31.578399966 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.907150061 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.893989338 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.890262703 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.947626977 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.028469618 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.900435444 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.890032316 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.901850139 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.935213388 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.955858133 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.916505319 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.917449596 seconds)
  done (took 24.902384939 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.88408854 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.886128408 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.886245626 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.903530731 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.902262266 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.90162574 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.896037632 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.884501159 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.905622692 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.906489247 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.895481134 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.900985188 seconds)
  done (took 44.574442829 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972621367 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.772762238 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.928739886 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.602357247 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.357859925 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.095919989 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.399850302 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.221524292 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.885596564 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.156769943 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.936198277 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989780813 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.138145743 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883227687 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.909601565 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.365409139 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.177259234 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112656066 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911223971 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.642852804 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934613536 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.31546113 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.720291588 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.941133731 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.095066962 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.015536991 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.146069423 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.845541682 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020562275 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92224805 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895224726 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.8852788 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159723185 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263833154 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984239997 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896150033 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.576260364 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.601274567 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.879001216 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.665268199 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.672205734 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.003343738 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894390514 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886782541 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.820359126 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.306960268 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261200611 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.892021488 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.597533904 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.886279873 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.897664598 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975418265 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.890064208 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.706675034 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839599242 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.165515073 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.883645416 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893631987 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.458599504 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.977029132 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348913704 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.857029965 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.080747209 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.655946887 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.281142026 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.034076772 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.890785998 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.891523664 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821909873 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.654343408 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937940575 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.447076552 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.908899771 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.508808536 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190998265 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.980091848 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.830622332 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174344057 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.587810953 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.858241645 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116677116 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.845455793 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822085372 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.75112972 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.822842045 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155455538 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92383973 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.527465571 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925965005 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.223938542 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.89896761 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905517638 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895620604 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.112736648 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.456016703 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887590532 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.701189126 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.03246231 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910651811 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.225944001 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.823016164 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.892734152 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14349533 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.100340506 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.044966023 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.40131415 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042343585 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.915929355 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.905056429 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.720589945 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.933823221 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.16273362 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949691092 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.987078578 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946253102 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.854625956 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.192716567 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946401927 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.991993241 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.952607644 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.016947048 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.219805169 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.188377194 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956041762 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.890369258 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.889182911 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.723060913 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.441019233 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.158250667 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.892695831 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.301584564 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.934279843 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.894711483 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826469884 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.518768871 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.980459826 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.862463223 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.115787486 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.758552168 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200600092 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.82743163 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.038311253 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.003648626 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.116154185 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.53988084 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.971019468 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.149698471 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300313625 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.059153334 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.935903922 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911823091 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981904565 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915500136 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.221036587 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.177968836 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.896135214 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.894120754 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.7033219 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.893484754 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895482403 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.906068622 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.697644347 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173774748 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.916689225 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.89513592 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.780071639 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.905874535 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959412662 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.897401764 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.902133452 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.433929408 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.642000059 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.900891006 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.510886553 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11816075 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901928553 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.635755102 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0035795 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.974192461 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.165232444 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952338059 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.826078489 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.603736935 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.584547067 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891948206 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.828359162 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.894454693 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903708197 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903799842 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.272974367 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.174190751 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.936798872 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.762076728 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.934211225 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904975517 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.89825878 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893729517 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.436067354 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.993782385 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366912573 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.937133358 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030919027 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.90705227 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.828413047 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.8986405 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.898114354 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.895033222 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.850317921 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947070766 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.660317961 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272824984 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151915563 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.589422409 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910641895 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.684097812 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.951392285 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.937803679 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.714152973 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.746781072 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.930564351 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908898377 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.904748236 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.665130907 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.600761906 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.462759712 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207407698 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.202747819 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341593952 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.276743896 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.193922279 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.233992713 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13272772 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.42425469 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.953834326 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.23612618 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839986949 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981060253 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.544057644 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.24493814 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910546351 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123953842 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.297204876 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.64777585 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06199218 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.1075935 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93090074 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.719854224 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.855860085 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.099486955 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037012067 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.651240692 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092528201 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230282539 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.601245027 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.979724498 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.89695443 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.596047278 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978280399 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.609966741 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.258159479 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.332300838 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.846530481 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359162983 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.901284241 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.342930363 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.249936683 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.120657303 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.014344821 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832962401 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.908243451 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.908387317 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.898372855 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.891849074 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.754999409 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.154947883 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907614404 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133066267 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.085634567 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191699038 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.803486101 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.904134318 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901356077 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19486099 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.618897831 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063195374 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.247808257 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.424561976 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901960544 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.834988723 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833667131 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.591532361 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.905982552 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.873103693 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123438829 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.082633893 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.885374856 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.308657987 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140444431 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.15323579 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.91396894 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.174383609 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.170519524 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.635100018 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927327935 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.001531862 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.576523432 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.002595689 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.169685843 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.135994147 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.699806361 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.130189203 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.947833033 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.718934937 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.899944758 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.113729319 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.171833116 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.808948559 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124504082 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.62256338 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.938037457 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.224534817 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956663145 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.82189396 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.044244054 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.094340185 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911743649 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986250643 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911356371 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.913610732 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.914173293 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948173813 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.90489672 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.020062684 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.917127768 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989890656 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.003485388 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.431798951 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.908781199 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182698294 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265090846 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.226917685 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959792365 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.902777051 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904190523 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837625251 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0392873 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.350230691 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176740585 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.034085223 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.201761747 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927474917 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.59632315 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.176395719 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141170595 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178273997 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.800607479 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903459034 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.935708101 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.169931129 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915502927 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.113499835 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133466604 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220611487 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373050498 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.057915585 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.269079782 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.179214262 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.27249646 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.904399674 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.494104035 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.953628406 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.603492113 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.943012513 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.802011282 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161480504 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916885704 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.284204458 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.926964104 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.105372704 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.422225067 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.668331855 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.190525723 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.888154393 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.967388643 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.182429182 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.29023721 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214347342 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976397055 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916553996 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.617494583 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042875894 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.760986015 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.178719654 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.906537648 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117228336 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.616849603 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.91613629 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184854835 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21221479 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.902609742 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.770943142 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914872969 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.914326549 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.129806638 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17661311 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.157003008 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916694415 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.914522249 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.722951472 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.183098831 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962705801 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842131437 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.911089135 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005395441 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.154799851 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928821439 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.425033178 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.619460422 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203068404 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.822646688 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93077082 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.334616423 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.272517209 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231142652 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.451160122 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133906021 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.464134832 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.781395761 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206738882 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.912095493 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.339669858 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210908439 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.912610063 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.444936073 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944926285 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.180201556 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.225120866 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.954088311 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.651531931 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.875084679 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132051701 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.498900172 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850654281 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.907483789 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.970093178 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.907800736 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.037511585 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919205611 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.772522118 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.762224797 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.655292239 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.400698647 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.913644372 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.902531236 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.641680908 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.458771339 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940018487 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049802829 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918422475 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.620243299 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.20247784 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.162731868 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.452662227 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.914110788 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.915087561 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908736577 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.837981203 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.10577645 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.291141893 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205975971 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.268650652 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.946219332 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.915026084 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.12718479 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122905059 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.816860132 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039332472 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312668223 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94648327 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.644364427 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.591716716 seconds)
  done (took 1695.483706095 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.912497547 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.921522443 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.934059711 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.979845266 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.988459156 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.959342113 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.012202039 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.99392008 seconds)
  done (took 57.545200433 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.911777641 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.114962083 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.922039091 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.911616209 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.922018936 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.923716768 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.079006317 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.934265138 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.920469625 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.922537717 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.919431341 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.923028345 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.220332771 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.933603719 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.913151036 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.894185505 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.919561148 seconds)
  done (took 75.174926678 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.914367694 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.11965017 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.947537712 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.940635635 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.866100383 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.916682164 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.89120386 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.96370258 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.920418438 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.142460602 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.246783763 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.925550256 seconds)
  done (took 90.640457517 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.925684201 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.92153418 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.919301425 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.921067934 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.919525689 seconds)
  done (took 11.456051223 seconds)
done (took 2208.604282704 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.342281413 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.134981862 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.144469641 seconds)
  done (took 6.124633854 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.069208132 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.117228879 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.236493857 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.256831216 seconds)
  done (took 10.532627575 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.214178266 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.290552556 seconds)
  done (took 6.356303976 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.326149067 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.922295485 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.317692245 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.921774395 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.922318969 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.921276388 seconds)
  done (took 22.622708113 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.922948964 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.925969588 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.924382482 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.927318619 seconds)
  done (took 9.552099677 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.904572314 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.737780039 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.909169637 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.920934362 seconds)
  done (took 21.325092609 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.672624686 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.323529737 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.664920249 seconds)
  done (took 9.514021528 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.420481478 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.809985831 seconds)
  done (took 9.083303465 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.190872706 seconds)
  done (took 4.042594017 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.951692487 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.195131833 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.482106334 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.438449982 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.547107927 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.749743102 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.234079566 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.159704787 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.341493211 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.347693951 seconds)
  done (took 25.302246249 seconds)
done (took 140.209644809 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.305648208 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.291814829 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.123353645 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.270303725 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.1446278 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.124428356 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.331442005 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.2561607 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.769475474 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.764958594 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.311789833 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.149668676 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.2760276 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.285290418 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.283196403 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.15636086 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.147508958 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.31964492 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.007371252 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.207744981 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.34433063 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.897265539 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.152109511 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.912802178 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.148714536 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.069707759 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.473192973 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.157745495 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.154864416 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.484322682 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.071242745 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.357281763 seconds)
  done (took 173.604440964 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.919274486 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.924676129 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.922585897 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.923369368 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.302856429 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.926855447 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.923614247 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.924264366 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.217014196 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.196085064 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.926070999 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.291851511 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.924508012 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.924522935 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.925027659 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.923933445 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.405486797 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.934723282 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.938809116 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.939693317 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.943503656 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.174154346 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.946918132 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.221163327 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.434610386 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.943685899 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.925165886 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.948435968 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.931277974 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.932585088 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.93525787 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.92503092 seconds)
  done (took 210.435703418 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.926055574 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.926020428 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.924161788 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.9277326 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.928799231 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.929001702 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.930873995 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.929592 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.549175986 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.546053503 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.935518693 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.930917264 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.927838268 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.926074548 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.924821076 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.927013464 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.930731338 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.928208228 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.93076048 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.932699084 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.934392903 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.565496062 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.931723831 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.580240862 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.934500416 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.935150503 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.928106481 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.941277451 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.944122079 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.946006666 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.943346821 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.927068658 seconds)
  done (took 222.193657861 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.130025617 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.933729808 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.934672724 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.860806402 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.934449338 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.930796416 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.873913192 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.125147963 seconds)
  done (took 19.610651269 seconds)
done (took 627.706724552 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.386739995 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.238245142 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.11259073 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.958334014 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.210364382 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.992335582 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.953903972 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.019989689 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.67981538 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.020859558 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.647572112 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.971114795 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.742257294 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.973496721 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.082171388 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.014257505 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.552622048 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.648070687 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.130420302 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.03896612 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.135780597 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.888544006 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.031390396 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.701805407 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.74984804 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.932818533 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.132695139 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.556874725 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.963663086 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.115283315 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.723518516 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.342378388 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.965235989 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.950620288 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.0095674 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.988373288 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.290763985 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.962643938 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.075419822 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.690676667 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.044874074 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.57064456 seconds)
  done (took 106.057831758 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.925446944 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.921958136 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.921093962 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.92481609 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.92371284 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.924599303 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.925092412 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.922455347 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.924800582 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.924146219 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.92205773 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.9260227 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.92376592 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.925155321 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.924665598 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.924751783 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.926536712 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.926970517 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.924642017 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.921981497 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.925820154 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.923765365 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.937468739 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.923983454 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.924476705 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.927230752 seconds)
  done (took 51.921703292 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.939669896 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.091281512 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.192085243 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.954087722 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.940243916 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.943041599 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.956564229 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.942852104 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.941536828 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.942243944 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.046353684 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.944116051 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.95927524 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.19333228 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.952080565 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.938942441 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.941304271 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.941849724 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.094068182 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.954899124 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.959294416 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.942541576 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.957746843 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.951534028 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.941812097 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.939511015 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.942800503 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.4162939 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.944973621 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.0473989 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.982004355 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.959515872 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.3672929 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.202231722 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.98947556 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.945262693 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.940114984 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.046873926 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.94538805 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.940260017 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.957256182 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.942218073 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.194489134 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.423949633 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.950735488 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.940251419 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.422991673 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.055940859 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.978570122 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.950762833 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.197212684 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.953648311 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.941062881 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.941552189 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.977510392 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.950811358 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.940546224 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.262254479 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.950392477 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.958538302 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.946549069 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.941233996 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.102257519 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.949006124 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.090555333 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.950453934 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.949818599 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.94264033 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.198592425 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.956332493 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.438870253 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.94591276 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.93378962 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.039185436 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.086454778 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.446538619 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.946143288 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.095337504 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.364753593 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.955088868 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.941299989 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.396877423 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.960523605 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.941660926 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.936206286 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.935868898 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.937224862 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.979306182 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.949272631 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.349088353 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.43408415 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.269699715 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.959503556 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.949526998 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.935081571 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.253624207 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.940153414 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.93548723 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.185316441 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.437346016 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.952802544 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.949308088 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.419921438 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.946324635 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.95469924 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.942366273 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.1905082 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.945704174 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.976098593 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.933832342 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.942966794 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.938398819 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.952675567 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.94137596 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.934447418 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.40079448 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.058572931 seconds)
  done (took 240.217082742 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.928463755 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.943421027 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.927779597 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.929711834 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.931367774 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.936230973 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.928134737 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.929517234 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.93716158 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.93018679 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.929250201 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.932729872 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.932487805 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.932262873 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.969774164 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.939009668 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.54253209 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.931104524 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.932350864 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.931186256 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.575834541 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.936374792 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.930513375 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.938789987 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.931860314 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.930397643 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.939010791 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.457125492 seconds)
  done (took 169.793622638 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.954015838 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.173009491 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.970129616 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.996646328 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.962784571 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.950112361 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.975750386 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.974317022 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.956385456 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.950500611 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.947629945 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.014389638 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.966515343 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.108669823 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.988075663 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.985278905 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.065013341 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.965317155 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.950456986 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.951604253 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.982660978 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.947059236 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.013296734 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.0814496 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.970341277 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.069867981 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.95893566 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.954317298 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.953337889 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.072462442 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.968511893 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.013840021 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.982932247 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.971810433 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.076759752 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.074139776 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.064988036 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.982660705 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.956410709 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.951438485 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.950745525 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.942755629 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.071046314 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.972956977 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.955133324 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.067552916 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.972291833 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.957504357 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.964344584 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.954567192 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.968381714 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.973088926 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.023234065 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.089808713 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.987657527 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.979741492 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.979410427 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.231360693 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.966667082 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.057996798 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.950223716 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.072655663 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.975024189 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.943382192 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.957185627 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.959447688 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.983894969 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.985332129 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.063438571 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.964650121 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.058764892 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.991334183 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.962213026 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.954326477 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.957739229 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.073201217 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.077371886 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.994045042 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.994017118 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.985779347 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.950368403 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.955626127 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.943666518 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.974114088 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.960210805 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.07606285 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.076139391 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.968045622 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.95574642 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.95869684 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.957490886 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.98274429 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.082333175 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.990650471 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.055027983 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.027032945 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.030132243 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.970993066 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.968915893 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.959621705 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.021627003 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.971497642 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.964285003 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.28009849 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.030328555 seconds)
  done (took 211.815777859 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.437463288 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.013910064 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.013818294 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.273186036 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.387919561 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.832704033 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.005835307 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.005864375 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.027751181 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.192015338 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.077988968 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.025139919 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.991233637 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.980872501 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.00463252 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.027168078 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.017439192 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.344837546 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.134301977 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.094043243 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.987609972 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.317411764 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.329355317 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.456386726 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.041975439 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.331765784 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.688370012 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.148963812 seconds)
  done (took 64.078287996 seconds)
done (took 845.742689531 seconds)
SAVING RESULT...
DONE!
