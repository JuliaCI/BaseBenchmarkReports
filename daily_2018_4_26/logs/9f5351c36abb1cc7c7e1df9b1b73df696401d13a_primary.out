cset: moving following pidspec: 27514
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.393689877 seconds)
loading group "string"... done (took 0.501335539 seconds)
loading group "linalg"... done (took 10.512239739 seconds)
loading group "parallel"... done (took 0.170872554 seconds)
loading group "find"... done (took 1.346794095 seconds)
loading group "tuple"... done (took 1.957423223 seconds)
loading group "dates"... done (took 1.436412303 seconds)
loading group "micro"... done (took 0.193853387 seconds)
loading group "io"... done (took 0.524934907 seconds)
loading group "scalar"... done (took 49.205853802 seconds)
loading group "sparse"... done (took 13.557664231 seconds)
loading group "broadcast"... done (took 1.260191976 seconds)
loading group "union"... done (took 9.070498951 seconds)
loading group "simd"... done (took 2.998400936 seconds)
loading group "random"... done (took 11.170701308 seconds)
loading group "problem"... done (took 2.179476595 seconds)
loading group "array"... done (took 24.574283997 seconds)
loading group "misc"... done (took 1.094836604 seconds)
loading group "sort"... done (took 3.685487492 seconds)
loading group "collection"... done (took 19.005703444 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.594273076 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130502472 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.201518013 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.279013234 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.230640005 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.168421902 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143996162 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.2403464 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.519890855 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.199416585 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137985524 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.41181432 seconds)
done (took 5.981243352 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.302825458 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.241659151 seconds)
    (2/2) benchmarking "String"...
    done (took 0.162448946 seconds)
  done (took 1.075062684 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076854899 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.156040127 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109643985 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094074868 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093061408 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109949823 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093572241 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109199512 seconds)
  done (took 1.440044425 seconds)
done (took 3.569900258 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.500415329 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.862837646 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.486822361 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.144032916 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.311947019 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.293089855 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.268096801 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.195963888 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.09124366 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.090644534 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.172923243 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.413065648 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.381318442 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.964627483 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.089036716 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094854069 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.129939816 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.755795164 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079764584 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.123500784 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.490135521 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.188461144 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.113534874 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.104931842 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186731954 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132944247 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.160981771 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102217312 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.661306356 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131747492 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.17814269 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097482327 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158323726 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.186846087 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.192341784 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110873641 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671965847 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.199584075 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095583807 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099922539 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.681874052 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.11712139 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.180991952 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104801878 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.088632906 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.180063323 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.099527242 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.093883751 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094305482 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086509213 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16463511 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.453798436 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105410128 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.168377863 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093658382 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.696432908 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096842823 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.277230655 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124325718 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.092509719 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091402402 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088255162 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.159945457 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093933322 seconds)
  done (took 19.856760925 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.145803334 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.165186165 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07837116 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.155585524 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.123353259 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.081003475 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.102202981 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079388787 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125939844 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179859261 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.139561355 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.152080532 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091670187 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091377141 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.127390641 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248222691 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107440216 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.12107914 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089613962 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089619285 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138820711 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096213778 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107519137 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092744242 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170617436 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20298772 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108198994 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122448159 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.0896894 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096822719 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142853099 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14424983 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092377324 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088696703 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.1871699 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.106561048 seconds)
  done (took 5.167621184 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.218280459 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105241732 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.225784235 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.196544257 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.132538594 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.183351711 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.150231651 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.268467246 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.202155342 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177747093 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113665915 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112616512 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080756058 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08218955 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078782416 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.459059631 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.147679207 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.189250602 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160991016 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111442207 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083415122 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.373211368 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100493547 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.084501097 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108991275 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.063737647 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.198176705 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093427516 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.129103126 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083376115 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.118830995 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132186642 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193361127 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.119811597 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.141315491 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122081663 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111611953 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.08619383 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.224245296 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.153923447 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.099695058 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.082783919 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09726369 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.115179449 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131800986 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114998561 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.106195273 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.109302737 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220725536 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.085381809 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125895855 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.05179245 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195628134 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.135001433 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.08414958 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.289909114 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.126029185 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098490488 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082283308 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.107491555 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.78774551 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.115534719 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081871077 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097663954 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093330924 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078986599 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.802804101 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105730303 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.66457545 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083814773 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.155889839 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095625563 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.11564598 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086089599 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102071276 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.109893222 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.084257479 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099189441 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085176366 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080146451 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.105728472 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112778299 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100791865 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081359426 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14648714 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.112244257 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.107611411 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12408895 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.091475056 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.08403781 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129131506 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083757495 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.104730633 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.148128111 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.114118842 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112500227 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114207492 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142450693 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.087530212 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.240500496 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096498121 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122025647 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09996164 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113813547 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.119447756 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080785407 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08378719 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095662486 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082453849 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147455876 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.101636302 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08105264 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.087007482 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110594346 seconds)
  done (took 29.093727675 seconds)
done (took 54.788428957 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.430912033 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079569807 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078753516 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.09710912 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079685505 seconds)
  done (took 1.509692886 seconds)
done (took 2.228408462 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.316100992 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.18858247 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102427907 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.185919788 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085519553 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.190525302 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.177687254 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094512332 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.200980441 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084856786 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.183270277 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083941156 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.103350188 seconds)
  done (took 2.744977818 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102731988 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110475997 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.117889112 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.105710178 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08604962 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101771865 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11809616 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111054181 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100342177 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112436019 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08501857 seconds)
  done (took 1.870733842 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100300476 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106056103 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098570336 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11650906 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084244186 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099115535 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114287532 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109839183 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098707422 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111223974 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085994774 seconds)
  done (took 1.8485884 seconds)
done (took 7.184286429 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.064826671 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.413747499 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.166545751 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.208184776 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.346427253 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.234333206 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.556841043 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.152169643 seconds)
  done (took 14.011319722 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.164520161 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.10810725 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092029229 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.093146817 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.090754717 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.111356329 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090611429 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.092693681 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.11064609 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.095918794 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09443059 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.111223013 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092129946 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093401028 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.109947557 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095740386 seconds)
  done (took 2.43136991 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.143478835 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.140037285 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098207019 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100189452 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.113613653 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.099506076 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102294925 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.113882594 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.096770584 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09630258 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.119348465 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.099878839 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098369813 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.10951792 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10062408 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118532718 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.111929695 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.101269786 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.117516922 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.115237533 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099926475 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097024771 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.11412226 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098592683 seconds)
  done (took 3.414243497 seconds)
done (took 20.58101372 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148329441 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101033822 seconds)
  done (took 0.974583402 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.139392033 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.155929608 seconds)
  done (took 1.023188331 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111975329 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091183627 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137244548 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103502932 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091049802 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108117434 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116447679 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.107140295 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092656311 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091723622 seconds)
  done (took 1.784518213 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.097460484 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096093526 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.120639373 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.135688655 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.11645945 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093542525 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095807494 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.094257036 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113706854 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091899487 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.09613097 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.124905269 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096766032 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.126475574 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096192892 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.097438291 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116704102 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095963225 seconds)
  done (took 2.641999339 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091776283 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.093865998 seconds)
  done (took 0.922290337 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095685706 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090011411 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092499746 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109106277 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090480425 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090153887 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.106307034 seconds)
  done (took 1.410046865 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.604544798 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.260170045 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.354792197 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.109297603 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.14397379 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.349320171 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.145751145 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.103233434 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104298429 seconds)
  done (took 2.94761346 seconds)
done (took 12.437434401 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091208494 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.219180443 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.603248233 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.113140477 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.091501943 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.15710153 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.281631905 seconds)
done (took 2.297970537 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.339273954 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.141195733 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.081815369 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092301489 seconds)
  done (took 1.389837538 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083348511 seconds)
    (2/2) benchmarking "read"...
    done (took 0.09908923 seconds)
  done (took 0.923728874 seconds)
done (took 3.056660139 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.121679622 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08906453 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.105795901 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.088669196 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.088190777 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.087269147 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.105824645 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088643298 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.088484852 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.105756407 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.089185182 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.089384689 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088093489 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.103189411 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088393455 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088083124 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104086985 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.089595045 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088134381 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.087561006 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104400223 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089912644 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088138256 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.103536723 seconds)
  done (took 3.046017204 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10694902 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090979741 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.10808955 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093858418 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093307335 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.109923201 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094080184 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090650779 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.109702306 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.091601557 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093327087 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.108350624 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.092083346 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093913516 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106438399 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.094197656 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094347356 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089911137 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107039589 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.09406766 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.09332992 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107937771 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.093908572 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092510423 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.110465418 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093125701 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089990557 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.108031759 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093922857 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093272679 seconds)
  done (took 3.680211493 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098891251 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086152321 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088475562 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.113218823 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087460904 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090234541 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.101428748 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088795908 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090762403 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088995874 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.107434134 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089279149 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.086395876 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.106324287 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091914019 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092402623 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113949241 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.087313651 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.087450261 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090706764 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109468111 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086719217 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089716853 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.106029036 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091255063 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.08664518 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089530309 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.107228158 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092563387 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090706705 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.107957908 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.092906649 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09055547 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.11438538 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.093470824 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090171452 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094305271 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.103569997 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09087203 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087434848 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.104220272 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090303697 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086742916 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.111894406 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.09085737 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090719877 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086451852 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.106828551 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.0915615 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09205514 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.103054936 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.088081951 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092058204 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090307466 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.109947308 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.087661263 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089930501 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.10292176 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092851586 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088899374 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086790032 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.103326763 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.094568405 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.088989826 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.12072595 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.095123425 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086498864 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.108218562 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.090891655 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094437615 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.108276324 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.099829725 seconds)
  done (took 7.626578113 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.101712728 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098927532 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.090689043 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.108053424 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090326004 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089404497 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111657657 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090821158 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091525938 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112051697 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090677201 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091055425 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10684659 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091592196 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089791359 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090924625 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112720071 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090309122 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090229996 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107399148 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091194007 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094872657 seconds)
  done (took 2.886266238 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.234492318 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097897385 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138022328 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123474896 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107625643 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120429382 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.09454076 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097349982 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111095095 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100605416 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099134177 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111000451 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108879809 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115033157 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099473969 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09906724 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110233 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101188399 seconds)
  done (took 2.825775312 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.104154348 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092209162 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.12903887 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093492439 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092433965 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09427919 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.114788302 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111408556 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.109405525 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09271535 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099155313 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108110311 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.092896291 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092877897 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09199161 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109081392 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092918251 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09209587 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11626253 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098041174 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096687813 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117216667 seconds)
  done (took 2.998477816 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106000112 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092298261 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.125858756 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095980031 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091146265 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.107844769 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.097784259 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092209342 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.114331327 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.093606303 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092784546 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09091207 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.122612105 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09316189 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097369512 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109306355 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092483786 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092701882 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111108372 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092250843 seconds)
  done (took 2.769137692 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.169117536 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123564544 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109791336 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114981341 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124347163 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107870098 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115590129 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125732903 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107893507 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134413825 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10839348 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10882504 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134401178 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113650879 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123521185 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117832608 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116156935 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132319952 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109098382 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124175588 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120239678 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107498296 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132548736 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108182733 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.124080419 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109370388 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107329347 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130641427 seconds)
  done (took 4.121768338 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09202886 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090804351 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089776156 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.107240569 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090943543 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091040434 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090527593 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.10852102 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091791233 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090660605 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.108537288 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091346501 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090594957 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090665883 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.108898502 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091876216 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091605409 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.107535437 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09179897 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091890939 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090713689 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109153799 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093104364 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091826559 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10835296 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.091793846 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092722735 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090971922 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108131237 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091864272 seconds)
  done (took 3.636159109 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.104578893 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102112022 seconds)
  done (took 0.969602584 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099723019 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107059046 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090450421 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110321321 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098720139 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091830674 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117765927 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098839081 seconds)
  done (took 1.578585601 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.140871491 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.160212157 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096070556 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.102821625 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.160151559 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.151524544 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13548405 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.096768175 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108628807 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085718879 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.153189579 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085441604 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093618647 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088957582 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.111521884 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09859661 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.109796854 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103239797 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.098835245 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.094062459 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115375493 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099132938 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111771991 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104277029 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087885938 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111414551 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096528398 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103398189 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107520513 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094811741 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091510997 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.091820071 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.114162674 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096306606 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.093468059 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.161130961 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098335778 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108265602 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094628015 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097047411 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.143623474 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09375339 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093930254 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108960796 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096368152 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.095898613 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.114365763 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093505081 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084963776 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.105267341 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094893457 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087958641 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093249462 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113054988 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.094374423 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11681719 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.09630485 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088755157 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.105797081 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090277536 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091922716 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088269946 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113861938 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.096915015 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092988714 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.11284825 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091969594 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.092176131 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.113394235 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094614972 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092372451 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125564585 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094675529 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.097297183 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.116392491 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.093887541 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089839756 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117144108 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093057906 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092865111 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.114379488 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122396988 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095393908 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107196943 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089126296 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.099232178 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.113827593 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096752619 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086992629 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118959061 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09584128 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094346006 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.103780758 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092852127 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08976408 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.114307247 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087091205 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093889046 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091339188 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.116302791 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098489114 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092271454 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112939811 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098371621 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098872816 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109755061 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.137106605 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109162365 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.090108601 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09601452 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115886029 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087769777 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092605045 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092734929 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108835384 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088902438 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.09693159 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111243374 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.094629196 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096851553 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11412129 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095722968 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.0940485 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.11057364 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090455115 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.096908674 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119886015 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096043233 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.095270445 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.112371722 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095526464 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094099829 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.114492377 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.090873462 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098564191 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090268284 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.112410558 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095841809 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.098660786 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.112494689 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.090097222 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.092012946 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.112360136 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093688465 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.096059732 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.113445863 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089917926 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.086578466 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.112665857 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.090018254 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094756122 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120098647 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090150203 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.094663859 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.108382226 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103928019 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.09029432 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.116224518 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09702872 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099163169 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099309503 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.104598983 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091887327 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.095891774 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113714825 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.092488792 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094258261 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.113194866 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101298993 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086608397 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.116099588 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.088176863 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090089485 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.116983452 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096454942 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.096936089 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087928495 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.153853992 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104714922 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116488499 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093063923 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093620775 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.095905948 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.113839716 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.096921138 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098123058 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.116739308 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090693287 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090993687 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11777262 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089768877 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09554938 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108998262 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095734964 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085630136 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.112361064 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086953985 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.097662178 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.112968738 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.099930711 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097727925 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095558453 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111117335 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101936802 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088790975 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.116289897 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086845906 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.097136108 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.12218635 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.100643051 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098588892 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113335685 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09264745 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094204313 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119397402 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09701886 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094056228 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.112903306 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.088710232 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087513072 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.117476303 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097920014 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090674222 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.103777242 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113046465 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09729394 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.090850824 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.106296826 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.098476428 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096999083 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.108239576 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095162951 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089513853 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.11053843 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101609511 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086610839 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.109603972 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096888308 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.098021463 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.112005277 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.09483723 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.096489693 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.118767823 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098759723 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09686268 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.119713627 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103826896 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091506651 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093596217 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.111121269 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.097481068 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.087898281 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.113889061 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09565487 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091005109 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.108955953 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09817399 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098784967 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.118171444 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093666617 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098191715 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.117952445 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100609608 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092474998 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.116676623 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.09089037 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08727577 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090108736 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.105678413 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096283248 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089492502 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.118089526 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.093138579 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092924775 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.116307799 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096927149 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.09160587 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.117656243 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105117218 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087641092 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.106505589 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092912404 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09345029 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.109078654 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.09226659 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095346712 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114712472 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099931708 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097698788 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.109120512 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095818647 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100250318 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.108816305 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.102555515 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100636668 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100339214 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.109490882 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098176464 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090278178 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117013748 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088532488 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093355961 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112883839 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094667884 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.0913094 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.113866137 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.091708136 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087585264 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.110639991 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100888265 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.093682561 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.117403939 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.094838772 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092327356 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.111730007 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09127787 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100188215 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.111840137 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102688386 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096263747 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.088312631 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.108247446 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.09964541 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094964161 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.118888876 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.091048904 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098786252 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119507617 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099231366 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095809757 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.121207624 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105128872 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.100669378 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117678406 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088639386 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092226547 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116594649 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095666554 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.097510181 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097318798 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.10809119 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097000467 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.100364523 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.115438606 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.094471873 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087393989 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.114503148 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102126169 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.09736365 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.116980551 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097764382 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095229956 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.10917039 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099926479 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100216783 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.095176293 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120874573 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095735318 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.098341222 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.111173831 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100795876 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.096965384 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.108222961 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.089552047 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.092367061 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.119966249 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.090507672 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099272508 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.117846106 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.093319079 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.093566425 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099027236 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.110714249 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099057066 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099079729 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.112605346 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105402372 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096397009 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.112122986 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.1007654 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100011402 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.107197464 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.095509984 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093982896 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119482873 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094801105 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100087724 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113751905 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10228826 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097719002 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.099145147 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.119728336 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.100953288 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.088058217 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.120996839 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098727651 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.096702134 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.111125378 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095050613 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089788491 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.112443915 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10241002 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092399784 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.121864588 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103229503 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093649705 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110621085 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101802674 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094551602 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100615809 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.111584459 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097351689 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.08853901 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.117453125 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.095096727 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.100461586 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.1111329 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.09244485 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099437961 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.118810562 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099993813 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097769638 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.120230977 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089731037 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088825476 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.116454507 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.094893373 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103496268 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11593786 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.095343875 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094700285 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.09685232 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.116357406 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101172961 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088479411 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.110619604 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.097333259 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096074503 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.113349772 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.091066175 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.097996086 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113087796 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098088241 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093285103 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.109201742 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095873646 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101587565 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.111892163 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091869971 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.092072606 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11923863 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095154883 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.09228445 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088566109 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121113854 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097090182 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119706442 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.094046481 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095554389 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.110572064 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.0986942 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.10472865 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092884468 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114919802 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.094617283 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099941334 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120033088 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089080872 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.092986663 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.123905507 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100662232 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.09672521 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.116233294 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094769941 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101466607 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120736911 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098531514 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089562232 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.108803441 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.095989041 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08923817 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.096557716 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12011677 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094361644 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092352402 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119771972 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099920276 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096930422 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.117510921 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.091011162 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102042843 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.11104358 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.101329783 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089880484 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.107207602 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099444205 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101729332 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092889294 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.1151728 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098343057 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096840231 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.109779923 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.094231115 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.098562465 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.118673548 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101961518 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09421033 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.11319725 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.099130067 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103743101 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.114893014 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.096123377 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102399854 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.119034624 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098026046 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.09531246 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116668634 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102548727 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097192688 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101060279 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.11309412 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095098707 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.10134594 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.122054518 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105625163 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093104505 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.110473744 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099538935 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092602791 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.109549424 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.100591319 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101837854 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.121220259 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096662992 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092012577 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.122962817 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102347391 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094621098 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.112859148 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.09419617 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099653979 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111753377 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.10056237 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092822505 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.120471884 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103299621 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100967798 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.102758303 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.111224752 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10230893 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096580131 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.123839371 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096982036 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.090686495 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.110382535 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099225294 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102209336 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.120209366 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101410312 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.09920549 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.099475482 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.117514105 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096526819 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.092415777 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.121890439 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102779955 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.0964433 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.117275024 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.096413002 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096193279 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.115673797 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103027336 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.101868438 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.11552129 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106734024 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.101694678 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.112999057 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.095659208 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096521383 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.117336348 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098019514 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099941889 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.09282077 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.110795396 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102301298 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.101562748 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115143557 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103794895 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102247849 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.11470955 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100054346 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103639495 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.122039793 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098992633 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096991511 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.117901558 seconds)
  done (took 61.826867361 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145225548 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103158608 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117294655 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099043815 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115026265 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119343422 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099111267 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099053699 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.118591709 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107736616 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097292527 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117139211 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113940334 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136997704 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116398961 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107122327 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118001278 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100868275 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097243767 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11875427 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112909365 seconds)
  done (took 3.174991672 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116731966 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110697052 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129511328 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113618563 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105321766 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.130111653 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10858318 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130939093 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112838832 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106300169 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.13276841 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109446588 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.127136566 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107865546 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105901606 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128586073 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112739489 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124884898 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.111470518 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109877253 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127800917 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111471354 seconds)
  done (took 3.394209723 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129228852 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10138826 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096324797 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.117236792 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101660924 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098484717 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.120400408 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099882945 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105759252 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.113201918 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.090324134 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093984225 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.09612437 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118062574 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092770639 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097908063 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.12547667 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102236118 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102674275 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.117144671 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.090790715 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098268013 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.09757587 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109735354 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104412205 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102814029 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.118077093 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103398513 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.09027701 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101972548 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.117919841 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093169097 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089051201 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.109454965 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090897076 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101519021 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.120940359 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.100166549 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099478225 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088939485 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.119887669 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103708894 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089299891 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.117845392 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.10071089 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092884569 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101310392 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.118294335 seconds)
  done (took 5.814437688 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127895867 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163242433 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103512191 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135575964 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.13433859 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107673294 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.123718978 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.13631775 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100417082 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.125111278 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114551994 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.135023853 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.351843492 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105699607 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.122407273 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104668417 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104326953 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.121191568 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107904334 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102278656 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.126293029 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105438502 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111528713 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.131465219 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105193217 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100963712 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122253956 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106174949 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.130506476 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108506822 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105150473 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.125563207 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.113644864 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103081129 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.122059608 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.103879007 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.112339546 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.123658612 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.102960833 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.09965645 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.123560473 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.106113072 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103252884 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.135001474 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10271304 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.12333351 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10379421 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099448594 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.131792277 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.105059074 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.108240956 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.134170113 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104819273 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103489244 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.126507273 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.112636731 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.125277192 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103075463 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.103058276 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.130056364 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102640516 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103812914 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.133077233 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103741288 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107256915 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.133604728 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.104755705 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10378758 seconds)
  done (took 9.001100252 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133042102 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10596069 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134426278 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114130765 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105204526 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127593506 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106454044 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.126581797 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10743128 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110665048 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127391684 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.198042281 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.124405409 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111445825 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106084873 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127571408 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105954295 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105731339 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.12747596 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106862464 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.127880693 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115386705 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106593538 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.135300486 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116822535 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103344678 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.127695452 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106061623 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135197466 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107587943 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116992993 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.127406685 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107401666 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.134319564 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.119906328 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105193042 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.122040235 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109146443 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105590036 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.127905856 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104240221 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113338863 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.127356905 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103245145 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106236623 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12862742 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114518353 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.138186329 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11149816 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110599322 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.127556551 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114021206 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12619999 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107553437 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113671523 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.142858781 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114111139 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134921519 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107530321 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113799001 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13582007 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.120980494 seconds)
  done (took 8.215703558 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100952282 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099327192 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.09910856 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120692241 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100147778 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099479941 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099375246 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.121739947 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099927491 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09895833 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120534629 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10062428 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099286172 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099477279 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120587097 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100437249 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099742381 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.120373193 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101595495 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09965407 seconds)
  done (took 2.933421002 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.111117975 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116647242 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123330498 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109744175 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.103066255 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.12872336 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103293279 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103120035 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122541218 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103919347 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110372293 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130723429 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103832596 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107339919 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.131902699 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107911177 seconds)
  done (took 2.649793975 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120666415 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118145455 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.186538421 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104027901 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.122997192 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108761404 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101464164 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126062925 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102116718 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107019124 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.106010447 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.127878179 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102392244 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102446891 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124957207 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106553633 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101191125 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128055713 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102215094 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.185470831 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104976069 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102522013 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.123994613 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.104937197 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102061336 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128248389 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10925093 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100693528 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.124067364 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104067616 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103250723 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.129273195 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102013466 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105149832 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.122943593 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.106006433 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101985142 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101814511 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.126624833 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102307507 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104086062 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.123777559 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10251581 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103626716 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.122099497 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10339989 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099711106 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.128863665 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104163721 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103141424 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.122556243 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.10981356 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105931899 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.129700397 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.110320485 seconds)
  done (took 7.100787851 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113300754 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102617047 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133805904 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101588625 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103154982 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10266273 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125364288 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104109181 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103491115 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123384032 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104410165 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102956612 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126193457 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104332819 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10269348 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124466491 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101608176 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103313953 seconds)
  done (took 2.82144872 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10704842 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101923988 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106024745 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.12527423 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103196276 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101428438 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122258913 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10206216 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100448866 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.123448008 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104152133 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.10214092 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101131579 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123824514 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101849944 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101935453 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123973205 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102279925 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101620201 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121749272 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103659875 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101489523 seconds)
  done (took 3.223396936 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113651714 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.182791372 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108826547 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.191528694 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098503497 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.096461277 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.129396256 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099511766 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.112970175 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.120274502 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.09786024 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097355468 seconds)
  done (took 2.290119399 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129817968 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139166038 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124736698 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103547306 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110695735 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128342635 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108243587 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107300387 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136260703 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117405583 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128026635 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114539799 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113368373 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136219894 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111102851 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132552369 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1073668 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105725687 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124431993 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122340799 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106211559 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136272745 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106750674 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128367393 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109675953 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114923866 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136975882 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118944244 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127932692 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11562183 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110259732 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128752217 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114695864 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138109658 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103945125 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114101604 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127461971 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121524112 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111167069 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137479468 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103807435 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131770748 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115793884 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112757837 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137405636 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107882935 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134383073 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10931486 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106251399 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15015247 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110853893 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135280868 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112410569 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113994919 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1361759 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12819903 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141124881 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115348865 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132615211 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118762743 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114512012 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133662308 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11505492 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141352957 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11315748 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114762566 seconds)
  done (took 8.841389336 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145705726 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104257425 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128343168 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118523392 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135953275 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109328581 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107034117 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130130097 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108526559 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104334669 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172037465 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107173727 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136853122 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116198349 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107449617 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12893438 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10739851 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115896058 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12692269 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12776505 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128685571 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116260398 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115538281 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137959193 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118305159 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133333624 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108678405 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107435894 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130068492 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108304557 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13378059 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109200301 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11587992 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.124663147 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116465439 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107692762 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129644369 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114505556 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107535378 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135159054 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115435177 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142392086 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108301129 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108150748 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140777631 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108322439 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128830065 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106117788 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107598089 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126232523 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120155332 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117708468 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141032634 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117006386 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13068225 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109360286 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108287355 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129994456 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109148165 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112463162 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137898973 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107927126 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149150356 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108165761 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108069477 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13849192 seconds)
  done (took 8.826669432 seconds)
done (took 166.995513157 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.147791341 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.184815625 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.144047977 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.206152627 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094395136 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.128745741 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.149743198 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.145232452 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092335004 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.116933335 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.095284467 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.095027989 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.207599723 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094299326 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.093997849 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.117224268 seconds)
  done (took 2.957434381 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.19344748 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.305586921 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107516741 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120145914 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09995861 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098513657 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.119091747 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101163456 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098641664 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127875374 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.09988608 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095263316 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.12751719 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095500474 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09927685 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120190786 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106552979 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098436878 seconds)
  done (took 3.066315577 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118540074 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.153235056 seconds)
  done (took 1.130727368 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129835626 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.212076163 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.280551652 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.168485649 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119281683 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139733664 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.14688094 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133838114 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.187333792 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134154662 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111913244 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096558771 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148412593 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.10468393 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.137524113 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098267251 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126119171 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.136275817 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114190789 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100711813 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.143661937 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.102949706 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104417924 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136251485 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.177380439 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134684983 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10325563 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.124729813 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.103059061 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11364642 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.126988522 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115972344 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111721659 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.17751932 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124411825 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.153339254 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.126956863 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.101119613 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114486994 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.121633823 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.103185708 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102974924 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.13569028 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097462414 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102230537 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.128268584 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10243428 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.124435927 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.107608249 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.106397581 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.12883637 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.105995451 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.174504651 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.106616666 seconds)
  done (took 7.829753597 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.854661006 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141144892 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099844112 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.000965068 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149229676 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11396224 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.850733763 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.146342371 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25469119 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.874124643 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116232225 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.133706786 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235899323 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.255884127 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.291093887 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.355779828 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.715276821 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115325383 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.127094536 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162802277 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10878886 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.149840176 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119183394 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.520409432 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100877674 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.122228822 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.108776454 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112224227 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176144299 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100189467 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127957517 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197037404 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.268689614 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203667996 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12410243 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100666427 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099315883 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185517604 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267801101 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214677327 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.195342348 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098132033 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.121685951 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.112143596 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118483566 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119983875 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.15525394 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.189319735 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190024273 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103950734 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.137224612 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110655713 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130204346 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.15442011 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121761949 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.355286273 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.359666097 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099101753 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13142359 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.115941622 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264183329 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124057941 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.232685795 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127901473 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211479569 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123751195 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.842104348 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.160771219 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122839881 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107676615 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.128202989 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108348974 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108385284 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.189785347 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.47987069 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136969361 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10395566 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122377219 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229668731 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10171994 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100511554 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.179886626 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101727457 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130044916 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114878747 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134332975 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.166538145 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.270084076 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.134627399 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111425984 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106173677 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135502337 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.102687968 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231288979 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224251465 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.174125763 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.205798563 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132448476 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.180459944 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.160753768 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131547132 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.185660197 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.10881585 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117400806 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131820992 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222262296 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.15476397 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10647238 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106838776 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130234626 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.13721871 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104154534 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132320701 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.186325222 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.553769718 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.162868741 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.119151533 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107355169 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110564948 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.178791175 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108115227 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257688858 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134116869 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.184501785 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.110148107 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.098424661 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130079747 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.159244359 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134307851 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10931856 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130860164 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111480431 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.279319971 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21910933 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114063645 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246551889 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.198961041 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108677964 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.192109539 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108663551 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.186552278 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132354424 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110446443 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101435632 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.827559588 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137952267 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108634383 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128476479 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185118538 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121547367 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104213458 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101307751 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098221028 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.810922582 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127366653 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099828352 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103539137 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130976535 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10982626 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108505238 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.131036623 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176532699 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242890711 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113777969 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130214985 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102367669 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.178430065 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102474621 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101261074 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123590901 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102515702 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109139696 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129119812 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105604391 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191402426 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.176334288 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.228401119 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.634616639 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101765033 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100870574 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.26203317 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103652437 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.321395331 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108347755 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.25375687 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161106453 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122177101 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.358118125 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.185272153 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185597266 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.12643742 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.168606322 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.121947331 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110037065 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179337899 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102433613 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107712258 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178266981 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138005958 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.116392471 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.281757483 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123431578 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227988089 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.122644573 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.164961606 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127440184 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109177435 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.319846099 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.125207131 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120134851 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.179312092 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105978523 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124102092 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.649524816 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125586826 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113449204 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129988355 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.23285906 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.180138176 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111966945 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109636635 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.138240756 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.177984882 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206531451 seconds)
  done (took 47.678748179 seconds)
done (took 63.512217413 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.267972381 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.206716999 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.2820371 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.174329192 seconds)
  done (took 1.888043599 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.238474647 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.155505952 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.198948436 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.12054834 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.20329945 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.120499853 seconds)
  done (took 1.921030754 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.172334465 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.165938128 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.14414098 seconds)
  done (took 1.36423824 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197725704 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.215504519 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.324088304 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.253818081 seconds)
  done (took 1.964664582 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.260175337 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116241266 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.123900518 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.205328545 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.215621347 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.198105307 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.121879266 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.169056902 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.129086688 seconds)
  done (took 2.464050639 seconds)
done (took 10.491261771 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.243957413 seconds)
    (2/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.280402391 seconds)
    (3/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.302771798 seconds)
    (4/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.334622177 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.225092694 seconds)
    (6/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.190904159 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.11007579 seconds)
    (8/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.096388356 seconds)
    (9/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.312378148 seconds)
    (10/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.166278229 seconds)
    (11/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.308813324 seconds)
    (12/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.20835157 seconds)
    (13/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.271748774 seconds)
    (14/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.220746556 seconds)
    (15/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.192905553 seconds)
    (16/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.109013134 seconds)
    (17/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.10097212 seconds)
    (18/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.195545654 seconds)
    (19/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117074606 seconds)
    (20/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.173593049 seconds)
    (21/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.223149874 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.126864251 seconds)
    (23/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.300671954 seconds)
    (24/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.210965637 seconds)
    (25/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.075356992 seconds)
    (26/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.122471776 seconds)
    (27/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.336116222 seconds)
    (28/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.270615533 seconds)
    (29/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.129039214 seconds)
    (30/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.178167183 seconds)
    (31/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.171550055 seconds)
    (32/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.200017195 seconds)
    (33/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110999332 seconds)
    (34/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.138398999 seconds)
    (35/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.131869717 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.114170446 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.117325324 seconds)
    (38/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.212355281 seconds)
    (39/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.101944907 seconds)
    (40/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.289390145 seconds)
    (41/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.082966946 seconds)
    (42/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.206142286 seconds)
    (43/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.171268619 seconds)
    (44/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.131858826 seconds)
    (45/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.159330481 seconds)
    (46/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.187061941 seconds)
    (47/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.277914586 seconds)
    (48/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.074869087 seconds)
    (49/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.159580784 seconds)
    (50/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.213188056 seconds)
    (51/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.134718244 seconds)
    (52/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.107921573 seconds)
    (53/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.218499763 seconds)
    (54/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.134672051 seconds)
    (55/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.219768815 seconds)
    (56/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109614599 seconds)
    (57/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.121986679 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.143382346 seconds)
    (59/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.13927739 seconds)
    (60/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.136873078 seconds)
    (61/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.100677597 seconds)
    (62/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.077726706 seconds)
    (63/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.185159059 seconds)
    (64/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.149281183 seconds)
    (65/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.077356947 seconds)
    (66/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.075977984 seconds)
    (67/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.121924315 seconds)
    (68/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.140241935 seconds)
    (69/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.084511968 seconds)
    (70/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.082854164 seconds)
    (71/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.104850502 seconds)
    (72/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.188404557 seconds)
    (73/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.138942988 seconds)
    (74/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.132828575 seconds)
    (75/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.127938591 seconds)
    (76/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.082498101 seconds)
    (77/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.076316885 seconds)
    (78/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.07965751 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.146238615 seconds)
    (80/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084233047 seconds)
    (81/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.120021228 seconds)
    (82/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.077199361 seconds)
    (83/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.100414788 seconds)
    (84/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.132396144 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.10549327 seconds)
    (86/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.15282476 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.10075725 seconds)
    (88/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.084040069 seconds)
    (89/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.105910171 seconds)
    (90/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.146713358 seconds)
    (91/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.083738362 seconds)
    (92/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.110720619 seconds)
    (93/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.100705738 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.101291719 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.109613375 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.141914607 seconds)
    (97/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.084480731 seconds)
    (98/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.127634283 seconds)
    (99/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.109739694 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.126450471 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126897927 seconds)
    (102/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.082714021 seconds)
    (103/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.128964074 seconds)
    (104/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.14249515 seconds)
    (105/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.083975389 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.102598738 seconds)
    (107/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.10214636 seconds)
    (108/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.161116161 seconds)
    (109/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109732333 seconds)
    (110/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.128657455 seconds)
    (111/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.172783814 seconds)
    (112/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.081704878 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.128342392 seconds)
    (114/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.102372043 seconds)
    (115/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.077495655 seconds)
    (116/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.124129159 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.104923801 seconds)
    (118/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.080767509 seconds)
    (119/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.111328871 seconds)
    (120/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.11029986 seconds)
    (121/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.17747753 seconds)
    (122/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.082224427 seconds)
    (123/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.077955118 seconds)
    (124/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.13135418 seconds)
    (125/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.109585583 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.110326608 seconds)
    (127/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.125385751 seconds)
    (128/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.083212544 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.102967512 seconds)
    (130/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.082053839 seconds)
    (131/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.10094662 seconds)
    (132/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.085031067 seconds)
    (133/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.184889438 seconds)
    (134/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.10047762 seconds)
    (135/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.130654968 seconds)
    (136/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.124587537 seconds)
    (137/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.082559035 seconds)
    (138/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.107858586 seconds)
    (139/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125047316 seconds)
    (140/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.123121372 seconds)
    (141/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.083837913 seconds)
    (142/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.124789652 seconds)
    (143/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.093433068 seconds)
    (144/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.108969562 seconds)
    (145/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.136442346 seconds)
    (146/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.134909172 seconds)
    (147/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.082933076 seconds)
    (148/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.080280853 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.134789254 seconds)
    (150/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110891721 seconds)
    (151/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.08330949 seconds)
    (152/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.083288489 seconds)
    (153/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.151769943 seconds)
    (154/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.07997951 seconds)
    (155/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.077476925 seconds)
    (156/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.082223596 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.126601987 seconds)
    (158/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.113605163 seconds)
    (159/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.100568644 seconds)
    (160/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.153790947 seconds)
    (161/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.083646125 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.103570311 seconds)
    (163/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.08024056 seconds)
    (164/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.076443187 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.126042949 seconds)
    (166/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.110829307 seconds)
    (167/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.080751893 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.132025111 seconds)
    (169/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.078966045 seconds)
    (170/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110437017 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.102284041 seconds)
    (172/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.103803763 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.125702364 seconds)
    (174/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.109770012 seconds)
    (175/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.123822751 seconds)
    (176/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.104482509 seconds)
    (177/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.077807691 seconds)
    (178/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.081285018 seconds)
    (179/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.079356178 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.128067239 seconds)
    (181/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.110777944 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.102737058 seconds)
    (183/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.103001962 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.104059591 seconds)
    (185/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.08035063 seconds)
    (186/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.083738711 seconds)
    (187/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.079715003 seconds)
    (188/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.129681261 seconds)
    (189/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.122958845 seconds)
    (190/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.079380239 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.128669156 seconds)
    (192/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.082044106 seconds)
  done (took 26.313447878 seconds)
done (took 27.205040377 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.203304364 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.126620032 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.110563909 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110973059 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.199931627 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118441985 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.150038283 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113953367 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120782438 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.133439782 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101390745 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123118807 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.110247716 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.201671234 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.113027988 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.127638016 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.10320754 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.119877126 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.15049394 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127003938 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.200342795 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104090601 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.119642877 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.126060255 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.174688041 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128184934 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109959517 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.111346345 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.147084622 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111289421 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110479539 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.125778889 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.127504655 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.124731758 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.124111101 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112097695 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101015693 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084727858 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.136105131 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112275431 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.123099362 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.136104489 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110972316 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.103124758 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.135779326 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110685545 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101522937 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.138428563 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101221651 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111762436 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128288809 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.127061607 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110782502 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.12348926 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101633801 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102853614 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.144636753 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103469588 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123470724 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101505095 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.128460375 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103019256 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112929903 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127226269 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111367298 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102345104 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.134832163 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.118067252 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111474909 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128733519 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104449731 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111333497 seconds)
done (took 9.821295451 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108486035 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146733409 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.198222294 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.209666045 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.129463956 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.140409588 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117341079 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126332751 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.139352668 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122193514 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.138535651 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.159439885 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.182420066 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.144239664 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.1177337 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.113967233 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.138799728 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110538399 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.20651322 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126330209 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150082605 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.118702628 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128177681 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.143954295 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106549282 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.136763063 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.134923498 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114436939 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.105280252 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.139772535 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.126933457 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.105669078 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.133185364 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.12464441 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.147341673 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117831311 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117011582 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.138299538 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108029028 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106568266 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139169714 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.121808322 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106641536 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.141627987 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115416505 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.120110145 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.138789604 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119940443 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107221992 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.137853482 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10859623 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131050367 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.142418857 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123066125 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.117878832 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.143401486 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119732869 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.118095248 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.134954273 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119285271 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.107266889 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.132510923 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108112104 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.127331259 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.1357929 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120684086 seconds)
  done (took 9.543227236 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126063272 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135803036 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141068154 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.11790925 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110920018 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125297506 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100555488 seconds)
  done (took 1.796438822 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.103486256 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.183130308 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.206341759 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.20712211 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.179039454 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.215293005 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150533661 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102348533 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.136050936 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.138370776 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.183339851 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.237465173 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11089506 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.142738567 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.184597152 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.127504865 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.186184955 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.12806978 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116023619 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210718346 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11816702 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.158201045 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.115724811 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102291385 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.204941499 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104230083 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.261025941 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11945824 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.139006353 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116103385 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115782899 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.207125993 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.20495508 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116437306 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110395314 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.208708364 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.203260777 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115885501 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.218017544 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106817327 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.203974776 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116632009 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117599064 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.142305982 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117389758 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.194462352 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121510763 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116260326 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.141579585 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.18718014 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.13923827 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.182508156 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.139512104 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117284707 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.112971822 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.143286394 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123843296 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.117325299 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.21434837 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118802207 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.20863261 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.207543435 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.179818683 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.210013332 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124871282 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.210193449 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.20004493 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115396881 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110348358 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.14446675 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.185037992 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.142367105 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114709103 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.19980714 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120770371 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.211186512 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.184931767 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14075977 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.115637774 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.105202696 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.140787348 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103382737 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.20021643 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116271003 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114018303 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146810525 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116216756 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.116084137 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.133942184 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.12490406 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.116899924 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.140581269 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121726272 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.140150022 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119492868 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.213684894 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11409302 seconds)
  done (took 15.618800424 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.105897313 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104521625 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108500671 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129774552 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104926077 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.10383653 seconds)
  done (took 1.617763082 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.140857842 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117357711 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150848806 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118806561 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.185485235 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.189917695 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.218608119 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112004721 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.158657239 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126989985 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.213946403 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.19189891 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.21494676 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118876329 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.218014798 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119135877 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.218850628 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114832387 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.151702959 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114681891 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.115848526 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.147652319 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115819699 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.20672155 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118834698 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.143560585 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112352877 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.124197865 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.170315976 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113318698 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.119215607 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.143949598 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110956734 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111586724 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.220571458 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.109754425 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.14134894 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120628975 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.119946986 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.145172706 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.21646452 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117275608 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124008133 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.145790657 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.114185643 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109052041 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.146669207 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111552172 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.220003831 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120090262 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120334112 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.144544445 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118501837 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120175461 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.136712392 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111965978 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.144632703 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.196998363 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.145827249 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.112338007 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118340218 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.145408242 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.11278676 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122488226 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.144459925 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120764176 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.109949166 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.144386696 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.135552357 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.11867716 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.146583811 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118697411 seconds)
  done (took 11.18445417 seconds)
done (took 40.69384271 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.561778114 seconds)
  done (took 2.516267606 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.965964347 seconds)
  done (took 1.92253501 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.10052098 seconds)
  done (took 19.081986883 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.43991947 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.470982334 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.020515354 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150491765 seconds)
  done (took 3.032981585 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.049345347 seconds)
  done (took 2.018839525 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.284527996 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.26013649 seconds)
  done (took 1.502800306 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.746959233 seconds)
  done (took 1.717100208 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.528167492 seconds)
  done (took 2.486831603 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.283144258 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.241549034 seconds)
  done (took 1.49431706 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.601225538 seconds)
  done (took 1.56790476 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.833779207 seconds)
  done (took 21.804900927 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.248382198 seconds)
  done (took 1.223668872 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.286041457 seconds)
  done (took 1.260760075 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.524304783 seconds)
  done (took 4.499015819 seconds)
done (took 67.097332031 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.114531012 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116952773 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115682595 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.140234319 seconds)
  done (took 1.452639715 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122927802 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117022492 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.144384921 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.117853096 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.122708627 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117768602 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.144398312 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119806097 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116833158 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145646348 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118295019 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116180387 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145494552 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117176561 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116383317 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145081885 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.120858702 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117181534 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.144544978 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119480237 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119248014 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.145460754 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121225321 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121294855 seconds)
  done (took 4.013909812 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114701215 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108410615 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110521164 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133090408 seconds)
  done (took 1.44734527 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.126228938 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129025255 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.152040834 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126121058 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130009549 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153290103 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117690515 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115317085 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142264657 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125808925 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133645565 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.157132157 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128882157 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119282757 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.153738048 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112291349 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118631385 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154787555 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124009951 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.151277494 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120816812 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123109072 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.14680714 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.127814977 seconds)
  done (took 4.165774895 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.19026229 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129048533 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.17399768 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161059181 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.175940555 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.115995212 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.145015553 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.148369169 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.123703113 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.14397979 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.120733558 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.161382104 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.149835994 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.119589385 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117141851 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.149357098 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.128483943 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.122374114 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.188425966 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.121137802 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.149167145 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130062983 seconds)
  done (took 4.147919178 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122675926 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107699941 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.129018969 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.109513086 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120131814 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.135264026 seconds)
  done (took 1.713756598 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108066947 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101943067 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103188666 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127977704 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106893373 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.102501334 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.126437405 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.104689538 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102721635 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.1032071 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128404824 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102578977 seconds)
  done (took 2.301591459 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.326654128 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.108272348 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.13520993 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110647251 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.112995748 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.105560167 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.14632797 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.107994534 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.264572789 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.104005666 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.143965192 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.194481145 seconds)
  done (took 2.850506755 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200376032 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145148123 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286436715 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.364263298 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159873274 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185167637 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.26331259 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186993611 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199205967 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135179029 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205440242 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158224724 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175969718 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187192085 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165734093 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.1582743 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19419126 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202806849 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166676535 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231328151 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155808086 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199281033 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185959275 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174898003 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137731953 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187107914 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118506076 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127215014 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190454478 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187698452 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168467555 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173837815 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139062188 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214913516 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250480043 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169088665 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294065421 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131233702 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.189582864 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.186598981 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252531177 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138666762 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211850252 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177095029 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128811326 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212960561 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150827178 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.207908624 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.132397312 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169877771 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176967639 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202591461 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.199824859 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13500467 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306334015 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133048162 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166173644 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165116325 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210614433 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223764195 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176025148 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.147377654 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175278521 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211506794 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234191293 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.138843868 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.188258244 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123324019 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191132529 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.226311793 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178671216 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184787133 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.227771897 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129916342 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193275894 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166591931 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177716373 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19952726 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194456884 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119333847 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178057361 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132768739 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154191702 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.188892475 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120981541 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238440836 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15713234 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.335133595 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181110242 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180871429 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157254625 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185161857 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159552236 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172696228 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.100423899 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140328662 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.186189114 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152363502 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155245472 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155467629 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166067849 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.12573911 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174692164 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123021438 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165266781 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.15900098 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159829237 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19387452 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.129532779 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201972475 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145458688 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.187648003 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190124224 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188565057 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155419355 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131762582 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240485909 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166233176 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.162316908 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170450092 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.218055556 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.145851889 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160683434 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159954652 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217452263 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167222909 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1962581 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163787462 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133507297 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.160653656 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169447746 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183024219 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151349054 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125143508 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.19007377 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212860181 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.124591649 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135782414 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205158539 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158288955 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124466194 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134095402 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160976497 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140471929 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.172651637 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137520812 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150303836 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190415331 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186807612 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155478439 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132036764 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195802759 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154892797 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.168945332 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14609138 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.146066773 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.169411676 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220321045 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126659511 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206255647 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.188224724 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18339782 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196709886 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127612072 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208672493 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126773652 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.147913649 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158036103 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195526706 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160014527 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.215207844 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206436786 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.163828614 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.188384794 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173017131 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166168529 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.20735243 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153591028 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.169570187 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169253435 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193065623 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.119585224 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.148119319 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.128268843 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134987633 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155218244 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136080892 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200087716 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16072444 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206602312 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192275292 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135560185 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215298714 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124018691 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182547947 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.172695475 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16297586 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.184443075 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213017608 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174603067 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16622289 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156163744 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.150112468 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123881156 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.156891271 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161937009 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134222631 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16057913 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137703962 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217115824 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194802864 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146698693 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217805344 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187712103 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197270893 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.14675534 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.161737216 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190161949 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167272195 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.185159295 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156238845 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.155669997 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.216686529 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139049923 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216256951 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192177458 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176462658 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219792387 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.186651489 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129655806 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145769379 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186731723 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137343232 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187350936 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144361485 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156142928 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150518412 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.135673777 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165767128 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206451228 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141222861 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20317761 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155450635 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194702947 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125449738 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166947118 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170791346 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170974519 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104619634 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192785965 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189959446 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175067184 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153092687 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196672491 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129378829 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.340479145 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180680525 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20143862 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133300223 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164992116 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170663021 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186394653 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157785319 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210120959 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13766802 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231224018 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194940535 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141075243 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156381789 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147482875 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174789596 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.136831359 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14641102 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.187505343 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.141214319 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208138711 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162632926 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167929251 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19970425 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.145555579 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.147261505 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166442725 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246975332 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165453247 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198436847 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.161138147 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.190309679 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207113264 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124130164 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124423737 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.157661744 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18385652 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126476416 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201682998 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.193560221 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209936925 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17117749 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189185188 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138652309 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.154407848 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1644667 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172367012 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186574033 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160459039 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136346595 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212545573 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.124697278 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158453989 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158829921 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298283063 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147571277 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195922506 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104543709 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.292519972 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128495952 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158272661 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161292594 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192856917 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.132934583 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.180421571 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198495885 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137826398 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188995158 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13274987 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207524465 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212114663 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162193352 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197039946 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.14289977 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186682113 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156359617 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199339713 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143519265 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.17450019 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156526166 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21701984 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.202670102 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131353456 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164372866 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196060177 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195823288 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169862543 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163881811 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1811049 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154197846 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161509495 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134954274 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153097569 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157270903 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.196213709 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155130142 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171422143 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196413629 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130237049 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125711534 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173233084 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165896521 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167630263 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127999588 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207427221 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126768475 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207458337 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202778089 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158651289 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163139709 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173948007 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128469164 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163228165 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143237221 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129499255 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.198573868 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177951117 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.158003681 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1726695 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188780404 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159288612 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184858235 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140440377 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.356487152 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126349437 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216031963 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14845638 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221317923 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146916082 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201766976 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166532751 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177317057 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159004467 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174772746 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.219419229 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189763685 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.192555754 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131161656 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140521503 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166127771 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.131486431 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177644078 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166095414 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166345136 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.136328175 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.163611054 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171125387 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.142919487 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16916628 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195268268 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177854527 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208874146 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185011746 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163666971 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172973293 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199953921 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127482356 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.189440827 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168590494 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170811243 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148280313 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.159963762 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.137426338 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236153909 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125045067 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15723007 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200858196 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193124709 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16914073 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.158196508 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175283923 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165484519 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173408597 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125814799 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.179180832 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166713661 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162202644 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125213782 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19640052 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155757014 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.194483599 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139569033 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.176118615 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214913708 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122348232 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160857717 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295451881 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158701789 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220753447 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.134670917 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134039271 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172386978 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155519229 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.191660742 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167306209 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.158802502 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128934396 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.172208766 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.15480001 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.164706463 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167314983 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196626293 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157702192 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21225429 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132673184 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.28236971 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140880471 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196061653 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115206348 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127654965 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166848095 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134105999 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139202112 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209701084 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237203484 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.188587437 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.146910109 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133139247 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.155055462 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129579518 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161214675 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177684149 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191622623 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145493917 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102164463 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167349376 seconds)
  done (took 84.991906267 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178559121 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.184142823 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.171299992 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.222549607 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193490497 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.28724151 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.227296325 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.245374534 seconds)
  done (took 2.77878931 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.118555144 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.15655765 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.139524664 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.142283134 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.110829652 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.436935482 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.130154414 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.145682017 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.159103726 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.150322448 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.133600052 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.52504755 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.115667457 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.141263887 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120895614 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133820963 seconds)
  done (took 3.923891095 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.544700657 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53958293 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.780189554 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.293750257 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.249212982 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.201065701 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.745638457 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.188979383 seconds)
  done (took 12.612016279 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.153816706 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.146818293 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.412244982 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.24950403 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.203402828 seconds)
  done (took 2.243262268 seconds)
done (took 129.608137943 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.122576612 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122255747 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.122655432 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152017763 seconds)
  done (took 1.583447642 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.174563473 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089379788 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092147087 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116891215 seconds)
  done (took 1.549222529 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.42113435 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088936367 seconds)
  done (took 1.61241883 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.146303804 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.138794104 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.164500706 seconds)
  done (took 1.538006048 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.138140227 seconds)
  done (took 1.214314678 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.122096872 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.115331633 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.235116881 seconds)
  done (took 1.555101022 seconds)
done (took 10.133965143 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119243913 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.92699263 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.432272472 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13094821 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710741514 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.427107038 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.428388943 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.17456432 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172809936 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.137977299 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130232523 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.688508305 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.442242409 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.8719909 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.397266398 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.904595546 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.691465768 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109520091 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.143822976 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110064693 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.408639149 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.13636458 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110711779 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110123325 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.716675422 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.418605375 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.107589157 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.919435078 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108862727 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.111482843 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.429094048 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109128726 seconds)
  done (took 20.907316078 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11807359 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.164742426 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144723067 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111435799 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113086976 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.137558046 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121140536 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122263832 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.2018617 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108610611 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158682571 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109184244 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114214986 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.138163846 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.134619453 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108893666 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.140398096 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112656916 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116173059 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.139157215 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.131272023 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107805861 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.139768777 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11215091 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108541217 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157956489 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109784039 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122162337 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.13719582 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113882385 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114236691 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137970674 seconds)
  done (took 5.199032419 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157131002 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174122179 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145796589 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145499764 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.185382005 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.111549431 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.222455818 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148421531 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200833823 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109702262 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130021502 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.137468454 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.149092402 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109832095 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162724557 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109814099 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.1119371 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.139718088 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117539957 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.136259425 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132801552 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109049875 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.135755523 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112387535 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110115556 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.158485674 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110776875 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122551429 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.136390136 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114363806 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11447973 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137073082 seconds)
  done (took 5.485913784 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.124795049 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123578053 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131522641 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.161692603 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118686611 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122051495 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.152012312 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119484928 seconds)
  done (took 2.139233938 seconds)
done (took 34.81476454 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.135049087 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128372846 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129272929 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.153641715 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.185231831 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.146462641 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.127957151 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.117067815 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.150902317 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132237968 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109970369 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.120170701 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.158393633 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120423029 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.215885687 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.124214858 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.220859507 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.187605381 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.147029345 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126096153 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116989056 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.220259647 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.121297917 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.146804614 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.18882293 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.112228054 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.211907365 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.119491191 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.150037831 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112023847 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.218696097 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122422932 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117711519 seconds)
  done (took 5.975074788 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.204104226 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.11924571 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.148182085 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118872253 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.119420169 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.147026275 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.206625435 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.147138479 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.118859691 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117287164 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.118114661 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.219271726 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.122992733 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.144195233 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121465856 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.108246172 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.237117269 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.120296621 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.109912868 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.120461056 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.114908558 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118476083 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.248887085 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.114031526 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.117628538 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.14816389 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.12226454 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.123263461 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.149763085 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121263352 seconds)
  done (took 5.348499824 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.125811179 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132354646 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.163820792 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.186722553 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.14675299 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.159375455 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138194553 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.132586314 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.169375099 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.1134844 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127960758 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.177591071 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128965275 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122181948 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.147170274 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131018271 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13438421 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.143565817 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121016975 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129417646 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.162286577 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130205037 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.135513156 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.149808209 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.111897806 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119109539 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.151768662 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.128777935 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121645166 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.15670324 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.115070002 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115486885 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.143041149 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.147211028 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.113002195 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.155420214 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.138322844 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124380035 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.155895543 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.144775224 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.115934364 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.143768125 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.137728453 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165871171 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.143160089 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.124739864 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.12405227 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.155781807 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.112871322 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130649977 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.184267267 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.113879192 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.13233594 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.141078577 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.11182595 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121628954 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.14296472 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.117191016 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127205472 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.143553052 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.138240284 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.118975821 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.151122234 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.116182915 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123555795 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.110963866 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.141216518 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.116849248 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.138361293 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.149549616 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.149482631 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.113280385 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.153449684 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125857383 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123047572 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.153750013 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.11398505 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124189218 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.152821639 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12043643 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.12551373 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.143998181 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.118131001 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.130196252 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.162179625 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128460525 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124187414 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.15379089 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118007696 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115426554 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128930253 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.144501348 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118711233 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.125634634 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.143058114 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.119358883 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.123983924 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.153219913 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112093764 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137616061 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.14598954 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113743035 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137140175 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.145133623 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119980163 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.122941458 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.181971958 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.113885837 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123648326 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.153767578 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114062048 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121368214 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.115745923 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.143354313 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130565476 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127416603 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.149760167 seconds)
  done (took 16.873482767 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.314521835 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.269945757 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.208894423 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.306357895 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.124874949 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.236921111 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.298138099 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.301548902 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113309559 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.178856122 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163950059 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.269120657 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.144697158 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.142571839 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.302800933 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.352757903 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.173939814 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.151026353 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.178767581 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.126643747 seconds)
  done (took 5.468858453 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.133474306 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.147973476 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.165659257 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.140454878 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.123187714 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.159445279 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.113665472 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134099997 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.153962396 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123448679 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.11481163 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.158492281 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126907357 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.129064127 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.158100066 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.144657846 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119911404 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.148401215 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.135812369 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118068479 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.130640356 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140638244 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121767678 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.164443406 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.131866239 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.123009039 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.113416361 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.117298067 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.119302644 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.151274478 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118245293 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.131117496 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.149534624 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103505812 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124127644 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.156158151 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.120424691 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116045312 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.117440726 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.146142538 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.127594373 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.126017627 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.151418632 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097556911 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.131497426 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.10738202 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.1571423 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.12619104 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.10447232 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.162209157 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126518533 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127731192 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.150034516 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.13530339 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.11919038 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.158774786 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.125307994 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.127326399 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.147321179 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.112172509 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111063205 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.145337394 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.123422912 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.127001098 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124981569 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.163820721 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129334356 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.141415042 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.120082783 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.116663551 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.116078859 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.158218173 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.133425192 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.150506719 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121852423 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.125821022 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121124325 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.121893559 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123720215 seconds)
  done (took 11.596101184 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138853355 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124929004 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.159166618 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.151217836 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128571172 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.148232515 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.125595369 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.13323959 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128174449 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.162262767 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128885403 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128470069 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.165004912 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123673426 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123244768 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.158884843 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128271799 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.179364331 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.133521674 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.139185908 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.157688873 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.119567085 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126808123 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.153008004 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143340491 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.124033252 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.169019143 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.12861846 seconds)
  done (took 5.058984511 seconds)
done (took 51.415324293 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.240535704 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.44325396 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.222087097 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.220470112 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.214607542 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.246993683 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.220325523 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.237571313 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.629898602 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.193153831 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.222333987 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.234112682 seconds)
done (took 28.446288297 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.332281782 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.78232769 seconds)
    (2/2) benchmarking "String"...
    done (took 1.504526744 seconds)
  done (took 4.416001613 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.227899355 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.211062047 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.456999743 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.210921673 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.228210852 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.213249559 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.219248575 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.227037847 seconds)
  done (took 15.880118874 seconds)
done (took 25.969415772 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.29575878 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.415731649 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.472260266 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.212719731 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.226690383 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.213181819 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.218647685 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.235699399 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.226124254 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.227744474 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.621718866 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.486528157 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.214605752 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.593593276 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.214321034 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.214175283 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.228338767 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.515067271 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.214607897 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.247524476 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.191456052 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.192132402 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.247688443 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.212967018 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.222299888 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.229995315 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.281013483 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.21626298 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.427567475 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.245059044 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.25005264 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.219014184 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.279591557 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.217649651 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.225386572 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.222251415 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.454540171 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.224655685 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.199454142 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.238509895 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.426453214 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.223488789 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.214709925 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.237244454 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.226723498 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.289582363 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.198956142 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.349025873 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.237971848 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.218118305 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.218550213 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.587781339 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.220222009 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.227639376 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.229648813 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.452141836 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.231650556 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.274083698 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.241306082 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.230030544 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.216523218 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.237353257 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.259872401 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.223745635 seconds)
  done (took 144.879636986 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.218559127 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.22080971 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.221553362 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.226230341 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.220759695 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.221497342 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.218286831 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.216746634 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.222184232 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.248817827 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.216280988 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.217826147 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.220779269 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.216946037 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.227146094 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.236583311 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.220069254 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.237317959 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.242597399 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.217849188 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.242720539 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.218554544 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.219481465 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.221186691 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.256389717 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.294379337 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.249146046 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.238912404 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.228681364 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.21867825 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.218356695 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.226443284 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.849031091 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.087137374 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.228712939 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.236369296 seconds)
  done (took 80.840790922 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.218988582 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.219660942 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.220753599 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.251906609 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.218895194 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.792210849 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.791811472 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.185869582 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.442647798 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.57538191 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.450797803 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.221139861 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311042531 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.232506959 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.222168443 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.236236764 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.245429602 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.224587272 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.221189804 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.794813621 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.235564639 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.302267485 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.397622505 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.237713272 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.25468101 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.611684284 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.221692298 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.254541572 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.55360226 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.271566648 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.220247078 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.541129147 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.319844671 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.221377525 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.332197549 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.222953211 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.251887656 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.223010663 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.504874238 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.223471144 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.220625988 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.221432097 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.222709588 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.226116265 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.843682391 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.222563335 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.797840407 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.225098984 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.181667217 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.220295395 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.222192269 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.21954029 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.868787069 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.222458871 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.22295437 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.225185355 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.22163018 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.221849129 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.222782815 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.256470295 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.285326724 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.319855934 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.225262671 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.225118321 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.256275616 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.223607987 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.279269496 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.223505279 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.689982505 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.282511384 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.330308692 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.800665386 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.225924803 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.319096823 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.340373649 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.223861906 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.224054986 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.223939424 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.223604317 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.334095192 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.223122069 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.905577979 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.400950156 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.241770658 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.580641005 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.321943309 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.224866338 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.554746575 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.224158175 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.225439255 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.939721785 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318958983 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.224619246 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.225496259 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.225185993 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.915672309 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.796144361 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.497035239 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.228060821 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.938526035 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.227684969 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.093436691 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.788533857 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.84511347 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.224054908 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.33622436 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.401900953 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.24567235 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.224677582 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.587189849 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.224912797 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.281368854 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.228874704 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.627813727 seconds)
  done (took 375.696742403 seconds)
done (took 602.531583328 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.110522865 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.064766929 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.20650322 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.075997028 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.058009095 seconds)
  done (took 11.641434675 seconds)
done (took 12.767168492 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.418659526 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.420273224 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.287694276 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.422015264 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.260270543 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.436778913 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.399421422 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.243231281 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.336693951 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.30841987 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.339453958 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.279186771 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.259962582 seconds)
  done (took 18.537637539 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.51512408 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.238005781 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.29264263 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.496564257 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.273895392 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.520565692 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.551981979 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.239274536 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.387572944 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.272684397 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.249257242 seconds)
  done (took 18.165390455 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.507702778 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.239234066 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.296799059 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.507326629 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.274965166 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.511222229 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.545471227 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.239382921 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.419027068 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.254560474 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.249697146 seconds)
  done (took 18.172927766 seconds)
done (took 56.001579517 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.266538679 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.328967439 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.260191348 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.248071244 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.244008069 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.242817045 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.249051365 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.24609902 seconds)
  done (took 11.213478854 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.242323712 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.242397982 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.242984166 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.241514507 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.241838735 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.242571203 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.240147428 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.240435252 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.242218476 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.243219499 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.243416282 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.24368041 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.241998618 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.241556892 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.241208735 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.241527713 seconds)
  done (took 20.999335266 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.245334728 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.241698531 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.243680462 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.241314598 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.243287233 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.243638853 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.244059164 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.244253648 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.242505174 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.242265184 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.243048708 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.241127529 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.242758326 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.241809057 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.242626738 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.246300661 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.243611838 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.245498034 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.24659719 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.244469087 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.242254552 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.244202781 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.243548767 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.245094097 seconds)
  done (took 30.971211728 seconds)
done (took 64.310681446 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.229090218 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.247972386 seconds)
  done (took 5.604723323 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.304452508 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.300899055 seconds)
  done (took 3.733339105 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.24663685 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.245168099 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.244912208 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.245179586 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.246739362 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.247525831 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.245655211 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.243958713 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.243901003 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.244359587 seconds)
  done (took 13.581706911 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.245273102 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.243563258 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.245146254 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.244707058 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.245390955 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.244531898 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.245823031 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.245249341 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.245789011 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.2457628 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.247255796 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.245547279 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.24734998 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.246197105 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.246065703 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.244352821 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.245764531 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.245207787 seconds)
  done (took 23.547424497 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.258852496 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.265489978 seconds)
  done (took 3.652526343 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.375622632 seconds)
    (2/7) benchmarking "second"...
    done (took 1.287840938 seconds)
    (3/7) benchmarking "month"...
    done (took 1.349892251 seconds)
    (4/7) benchmarking "year"...
    done (took 1.34161477 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.28723395 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.268586438 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.28731376 seconds)
  done (took 10.328166424 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.247052366 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.445424032 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.57113427 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.860634544 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.248464267 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.252565882 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.131756408 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.250959083 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.252733996 seconds)
  done (took 14.390782399 seconds)
done (took 75.964842975 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.231540004 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.265855893 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.250402262 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.248098925 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.585729043 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.25665956 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.236284287 seconds)
done (took 16.203749223 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.221553332 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.224023142 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.218168812 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.242717164 seconds)
  done (took 10.035577028 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.239932169 seconds)
    (2/2) benchmarking "read"...
    done (took 1.558625769 seconds)
  done (took 4.928997033 seconds)
done (took 16.09383579 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.249637389 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.25132723 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.248922798 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.249780252 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.248692491 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.249895695 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.249945451 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.249339615 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.249775077 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.250621955 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.249677141 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.249425972 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250393807 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.247602018 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.249604094 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249898809 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24909611 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.250911473 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249604062 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.248850383 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249353244 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.2492255 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.24844329 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.248775364 seconds)
  done (took 31.121612092 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.249010301 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.24911711 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.248969588 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.249734354 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.249769529 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.250056111 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.248628486 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.24963885 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.249646762 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.250226443 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.250875225 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.249954692 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.248476781 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.250195284 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249958542 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.250756967 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.249726179 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248521668 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250297349 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.249447447 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.250703042 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250536099 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.249639807 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250987985 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.253939096 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.251684169 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.251465365 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.25019858 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.250288286 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.25037821 seconds)
  done (took 38.634468805 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.252732956 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.251289485 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.251128143 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.252024889 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.252072855 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.251169013 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.252130201 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.251800505 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.252198742 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.252007183 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.250350591 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.252289057 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.252310036 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.252976579 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.251389063 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.250795319 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.251170741 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.252410098 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.252959508 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.252375077 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.252949282 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.252230121 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.253782038 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.25380132 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.252707405 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.251825822 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.252971714 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.25228286 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.25475951 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.253163407 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.252803563 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.254347888 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.254382509 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.25364606 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.253936763 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.251597932 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.255681382 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.253390178 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.252601458 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.254010947 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.253107265 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.254189034 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.254753244 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.254426988 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.253964232 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.254808802 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.253977246 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.25472419 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.25479469 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.254224648 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.254327731 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.253730641 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.253480439 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.252196816 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.25674293 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.254808877 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.254687085 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.253822988 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.255039633 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.254389743 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.25612744 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.256043923 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.254740477 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.255361659 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.255767341 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.255435368 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.254359726 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.256204973 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.255963101 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.257072951 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.255199869 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.254485105 seconds)
  done (took 91.392209458 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.255313866 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.258707589 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.25443838 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.255303193 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.255612427 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.256146972 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.255439564 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.256225596 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255735872 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.25583875 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255027195 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.257741442 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256045995 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.256562782 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.256510977 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.25488666 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.25681089 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.255501961 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.25652954 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.256651919 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.255218624 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.257051513 seconds)
  done (took 28.770036382 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.256350162 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.257123063 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.255278187 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.258537379 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.259460952 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.259112937 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.257714197 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.258557944 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.256830158 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256500239 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256919752 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257833438 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.259754668 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258136009 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.259927214 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.260183038 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.258537836 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.257825968 seconds)
  done (took 23.784210619 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.258123575 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.257981506 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.257029246 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.25851374 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.258440603 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.257491386 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.258291353 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.25895834 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.259183638 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.25935367 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.258847877 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257583129 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.261277392 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259854867 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259010278 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.259720658 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.259176195 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259513354 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.259183233 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.260601102 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.257482105 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.259547652 seconds)
  done (took 28.836095201 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.259402626 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.259462439 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.259902596 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.259661827 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.25926604 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.259072259 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.25859962 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.258881664 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.260345171 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.265823051 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.259767486 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.260889179 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.260802556 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.259915356 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.260588762 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.261120238 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.26070969 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.260166601 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.260873915 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.260499769 seconds)
  done (took 26.346099627 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.261838319 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260515872 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.260549882 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260104273 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260230211 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.260011387 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261061652 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.260491399 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.26021798 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.260826096 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.260674876 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.263111813 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264093137 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.261661172 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.261014961 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.261716628 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.261419682 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.262299537 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.262497478 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261433095 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.262317989 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.262796235 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.261249264 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.262526888 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.263029833 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.262909491 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262709435 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.263290232 seconds)
  done (took 36.468551958 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262541131 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.262464534 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.261086177 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.2631598 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.262701531 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.26173734 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.262789403 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.26385913 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.263026574 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.263575627 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.263684372 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.26229861 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.264564636 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.262493974 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.262157454 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.264001937 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263182872 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.263095803 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.263359056 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263708981 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.262156919 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263202075 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.264247613 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.26386546 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264254021 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.265642393 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.26420041 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.264070906 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.264408389 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.264177265 seconds)
  done (took 39.044556175 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.282075702 seconds)
    (2/2) benchmarking "in"...
    done (took 1.282662947 seconds)
  done (took 3.708802526 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.262934992 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.264022159 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.263722752 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.263126195 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.264986964 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.264957365 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.265561325 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.265371771 seconds)
  done (took 11.259973882 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.256018765 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.266057134 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.265312024 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.266398623 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.265465135 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.257598662 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.265688406 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.270210959 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.258426328 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.257412566 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.258562061 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.258513581 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.260963349 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260624677 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.259427457 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.262618572 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.269159643 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.267410345 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.269430467 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.265934879 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267528872 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261789543 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264646175 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.269790632 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.259022411 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.267693161 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.268210823 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.272422727 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261015602 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.264741874 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.262912037 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.27013081 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.26851891 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.268639368 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.26763332 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.268124397 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269053752 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.268186804 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.269342951 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.273481259 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269042551 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.268825936 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.263727331 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.265045518 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.267101743 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.271398201 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.269367901 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.268503859 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.260111151 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.264351468 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.269828418 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261120078 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.267819302 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.265295896 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.265138843 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273245889 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.276383695 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.262442313 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.2634477 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.270582524 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.277437795 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.271320999 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.268832657 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.273922826 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266439062 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.268345669 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274891036 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.274646338 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.26997174 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.269674113 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.270286388 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.277652657 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.276589711 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.274765597 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.270244759 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.272037709 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.264661123 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.274326282 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.273013376 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.273830527 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.275558322 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.269885192 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267728966 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.269183118 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.26460185 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.274592582 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.2715015 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.27301616 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.264543335 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.273770856 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.279294466 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.270705381 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.263482222 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.26700596 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.267294332 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.274595616 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.264169399 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.268415243 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.275215335 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.271941218 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.271576315 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265962222 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.269619295 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.2770884 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271422226 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.273880325 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.278257594 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.265452396 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.276052599 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.279677618 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.2728764 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.265508683 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.269801918 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.274496901 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26687645 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.270514883 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.277126386 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.268145632 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.278498428 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.273755084 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268674132 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.27551542 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.279571683 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.272866228 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.267405709 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.275830083 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.27217746 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.271540576 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.279539613 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.272231416 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.274219911 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.26863298 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.280335805 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.267188733 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.278003147 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.268826426 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.277907884 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.274162454 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.275540631 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.270743141 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.27327846 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.270902059 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.273764305 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.277137861 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.279735336 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.269817961 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.280581044 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.274491949 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.273759013 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.275827281 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.281942498 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275827611 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.270194665 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.278807028 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.266638045 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.278361751 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.268469164 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.279257265 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274764895 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.277245024 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.274871542 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.2677324 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.272118953 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.278184173 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.274496165 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.276110041 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.278542527 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.276447377 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.275753626 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.268310362 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.277689848 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.26804679 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.270868697 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.27870601 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.277511756 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.27547935 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.274114492 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.284420215 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.27670235 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.276199491 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.270374733 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.274490716 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.28229869 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.279788097 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.283956294 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.278229822 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.276749883 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.27220809 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.27341163 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.278119811 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.270796235 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.280504702 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.282667464 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.285971527 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.273208807 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.279966236 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.269568838 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.279808331 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.276137062 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.285732258 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.278788997 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.27959782 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.272077065 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.281672159 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.272201759 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.281395044 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.270448734 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.281824192 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.278753157 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.278406409 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.279451715 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.272596543 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.276726534 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.281471631 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278456799 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.278555726 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.274386976 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.282015689 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.270652822 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.273802884 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.28166441 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.278565038 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.281389185 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.285873002 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.277052071 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.283067308 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.28087892 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.275464645 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.281067004 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.277722282 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.279649373 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.284499206 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.281727844 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.276324667 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.284813138 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.282225893 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.272816647 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.280237802 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.286946173 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.279639375 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.272714885 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.284140954 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.281616699 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.280415171 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.280322942 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.274250516 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.284574943 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.282987286 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.289583446 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.273451168 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.283532412 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.275762103 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.284510306 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.278031826 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.281987269 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.282114693 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.285091551 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.290431982 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.28260019 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.276766749 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.285170366 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.282825731 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.281647649 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.276134238 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.284415016 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.284576135 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.281932871 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.281683206 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.279397472 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.284488106 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.276394876 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.28376921 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.276407432 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.291343417 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.297317005 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.28521328 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.285555342 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.286898133 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.285779959 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.285122569 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.277476836 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.278389914 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27946364 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.27937535 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.278311923 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.286441337 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27745961 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.287273984 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.282552742 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.28573569 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.286772631 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.283024869 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.276792134 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.287159527 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.285238454 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.283704951 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.27713857 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.286830487 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.279541526 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.285597024 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.283911414 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.279156547 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.290438836 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.287948001 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.28232361 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.281463524 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.279778195 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.279032778 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.281119117 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.291272525 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.279595667 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.287404362 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.276832942 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.281903728 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.281504848 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.289494794 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.295942417 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.279331027 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.287958869 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.284625997 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.277257762 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.280296542 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.288921622 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.289774127 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.298918001 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.278996846 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.289319893 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.287021798 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.284466519 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.286764603 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.287662967 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.28866014 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.286637708 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.291272559 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.29080467 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.283034901 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.288404871 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.29710866 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.286458874 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.288011273 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.27784609 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.290003366 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.295876972 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.282985052 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.2859609 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.283372333 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.289519853 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.285985388 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.287876189 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.288325881 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.28684201 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.290425322 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.29306757 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.290791935 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.289385411 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.291646347 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.298426847 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.292249726 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.301060159 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.282950989 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.293794469 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.288611055 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.284771536 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.284406246 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.285005287 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.2933425 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.280487552 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.291413121 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.287400655 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.284970839 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.289979141 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.293692729 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.281362794 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287054804 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.29626668 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.280981016 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.290701253 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.288747431 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.283883561 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.291669087 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.289760817 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.28175644 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.285645592 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.285469153 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.29310145 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.283580373 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.293807682 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.285479531 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.294910819 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.29074559 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.290647105 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.290547763 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.290545426 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.284643114 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.293617001 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.290033008 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.301343989 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.287037249 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.290403564 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.285747718 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.296841446 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.301715472 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.286953915 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.2965302 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.292088421 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.285639048 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.289541585 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.298173059 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.284874377 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.294096446 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.283109017 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286332864 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.287233753 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.292514834 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.295262072 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.294180361 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.284800416 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.287215275 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.293844146 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.293670655 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.293154692 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.288154783 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.299790477 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.285505572 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.286172448 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.29633646 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.287826926 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.297477656 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286299962 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.289516042 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.290246641 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.297105961 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.294535663 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.293302253 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.285551922 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.287391619 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.29844999 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.296644664 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.289237233 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.288981174 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.296012498 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.286985779 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.290730482 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.290353341 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.288502113 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.290503132 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.299184147 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.288530721 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.287990968 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.289334771 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.29533507 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.297308775 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.298595162 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.287454602 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.301725613 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.303278089 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.30150787 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.287918141 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.290236422 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.289202134 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.296986179 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.294389915 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.287590208 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.30071386 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.300972571 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.298836233 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.294403262 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.296795776 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.286894457 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.297545574 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.296195565 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.290710394 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.300916843 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.2918134 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.302179927 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.297294107 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.295594038 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.2885348 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.291240236 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.291201262 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.28944417 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.297806601 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296409037 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.30000516 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.293936248 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.301318695 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.296455125 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.295267981 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.294987165 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.288889684 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.298036335 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.289120827 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.297423675 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.297964525 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.29205342 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.299867946 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.297679365 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.290774747 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.293476806 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.301063423 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.298788798 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.288852872 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.29545068 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.301328304 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.30627372 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.299061733 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.291878904 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.296288581 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.300954155 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.297663569 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.298594949 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.291279878 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.307476415 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.311126939 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.292768908 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.297719369 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.303581595 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.307537141 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.299451053 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.298433146 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.293709762 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.297873482 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.302745597 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.298283019 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.302730098 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.305882478 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.294092772 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.300389619 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.292608496 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.293867458 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.301462123 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.308211689 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.300228836 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.294494389 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.304852875 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.31111337 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.297108366 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.310660417 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.305903993 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.299880767 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.304801232 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.293450691 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.302827829 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.297170307 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.303836508 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.301192603 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.30047573 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.299719607 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.292973367 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.300827071 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.308370928 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.310510808 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.300998264 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.2938241 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.294847289 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.300947999 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.30108716 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.302456268 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.302511472 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.300889894 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.301364509 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.295650758 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.310291062 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.314194101 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.306695309 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.301743538 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.300777881 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.301209786 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.304644824 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.298009734 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.305997071 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.300486848 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.300811432 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.300777529 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.310088381 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.305000827 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.296478589 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.298846983 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.296050366 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.304601211 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.308060252 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.321317027 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.307025241 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.306828785 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.305208139 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.302423439 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.296275674 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.306842517 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.304011 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.297376966 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.299101738 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.305901857 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.305013505 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.303974823 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.296685688 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.307915801 seconds)
  done (took 766.575994404 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.303868654 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.303110346 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.303203633 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.304127425 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304149565 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.304325665 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303138963 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.303698578 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.30385176 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.303583336 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.303709027 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.305252777 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.303189243 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.303068345 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.305930713 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.304032231 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303265471 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.305138216 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.303306038 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.30347659 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.304604897 seconds)
  done (took 28.55986845 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.305095012 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.304635066 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.305270031 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.305807147 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.305006325 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.30441205 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.305893414 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305317041 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.303748112 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305542196 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.304636916 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306047835 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.304790409 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.3064284 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306512098 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.305716741 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.306369814 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.306002315 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.305669038 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.305625506 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.304656922 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.306244139 seconds)
  done (took 29.899117196 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.306137712 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.30731542 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.299688466 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.310375273 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.30705246 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.30591263 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.30840689 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.307119504 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.306803472 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.301197947 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.301108659 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.301344734 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.302182667 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.311397783 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.303600624 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.312779416 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.309315902 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.308644578 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.307269828 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.308505328 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.312218385 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.320215952 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.307815649 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.300289076 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.310499415 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.308008393 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.309857733 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.306989722 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.300501703 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.311490931 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.310158142 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.302204522 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.311863792 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.311730086 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.304993096 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.31009114 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.309370358 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.309372408 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.309556034 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.305377256 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.317240308 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.309109537 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.313308622 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.321909347 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.308534248 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.303561182 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.312096387 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.30819141 seconds)
  done (took 63.973469195 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.309636418 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.309051468 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.309644169 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.309783234 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.310175117 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.309749804 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.311066256 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.309955959 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.308802842 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.309015925 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.310369987 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.309934594 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.309339868 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.309104952 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.311622604 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.309237848 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.310028943 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.308897998 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.30895194 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.310013873 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.310176411 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.310637439 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.312601025 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.309852286 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.310060973 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.30971755 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.310824218 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.309779925 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.308984345 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.31017593 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.314242641 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.3104267 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.310675005 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.309535112 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.310092116 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.310278834 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.311522921 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.311863589 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.310545404 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.312330543 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.310007308 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.311409971 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.31109774 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.312310854 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.311417785 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.311690939 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.310717594 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.310119102 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.312139894 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.3114544 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.308993904 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.312502045 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.312618449 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.312738557 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.312204705 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.311411848 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.311382344 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.311929759 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.313282083 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.312855373 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.311987952 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.312758669 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.31136643 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.311635708 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.312628115 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.312047091 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.313121323 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.313211788 seconds)
  done (took 90.324542118 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.314244293 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.312824587 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.313653688 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.314227981 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.31236451 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.314212913 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.314213982 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.314598662 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.31448381 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.315696821 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.312578189 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.313130388 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.313233365 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.313917845 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.316449474 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.311112651 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.31153783 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.313315341 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.312233422 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.313045708 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.310467442 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.312654557 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.312008576 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.312529258 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.314718502 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.312062967 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.312122096 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.312330882 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.314100953 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.315586092 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.311394905 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.312440481 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.313275301 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.311949031 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.31392005 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.315240695 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.312922171 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.312434886 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.312398874 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.312995415 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.31297433 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.311913515 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.312858249 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.313533828 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.315206055 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.313522378 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.314392006 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.313716493 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.313386834 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.312705894 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.314422547 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.315053258 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.312554772 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.313895831 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.313697363 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.314042588 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.313238275 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.313597563 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.314095342 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.313261627 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.312518042 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.313977468 seconds)
  done (took 82.612502688 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.31339696 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.31431675 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.313338873 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.313171148 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.315096284 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.313210637 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.314264216 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.313911018 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.313931756 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.313084875 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31560261 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.312993447 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314762073 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315953514 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.314364939 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315231611 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.314194946 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.315273347 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.315044128 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.315301939 seconds)
  done (took 27.47097694 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.314994475 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.315066902 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.314938387 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.315322038 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.313998325 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.316080653 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.315660802 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.315195626 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314011186 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315020021 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.317555169 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.31618294 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31555719 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.316372229 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.318731699 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.316260943 seconds)
  done (took 22.237649091 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.315901607 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.315000582 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.315008113 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.316509477 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.316081659 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.318223286 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.316367226 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.31588324 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.315855249 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.315950208 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.314888189 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.315232116 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.314109569 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.316844835 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.314680141 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.315432265 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.315270215 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.314491009 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.315956854 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.31508562 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.318071924 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.316091207 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.316066529 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.315286309 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.31592628 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.316642903 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.31695663 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.317460534 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.317095343 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.317479528 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.316996293 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.317346801 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.317635568 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.317408199 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.317369428 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.318107355 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.316321362 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.319639959 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.318895826 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.317756293 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.316738151 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.318187986 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.318275708 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.316842372 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.318480651 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.317284166 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.317229121 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.31778539 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.31758034 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.318091942 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.319234543 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.319119608 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.319339241 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.319367575 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.318728664 seconds)
  done (took 73.618487488 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.318199061 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.319586458 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.318056497 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.318669977 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.319465332 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.319263502 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.31884911 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.320250976 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.318729412 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.318976923 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.319032328 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.319611814 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.321048741 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.320618582 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.319204465 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.319887293 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.318437317 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.321551101 seconds)
  done (took 24.939827007 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.319764485 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.319444155 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.318413956 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.319291799 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.320723751 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.320806899 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.318265109 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.320256885 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.32197626 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.319835417 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.321277017 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.321229251 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.319379814 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.321528426 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.320895305 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.318850832 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.320926338 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.321265526 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.320346057 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.321454 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.321909988 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.321039493 seconds)
  done (took 30.240930667 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.313213236 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.312400869 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.311927639 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.32460675 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.319752631 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.313846032 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.311766509 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.312248399 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.329046694 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.335456106 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.331863373 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.320407485 seconds)
  done (took 17.028452461 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321935363 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32267648 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.324264703 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322541133 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323622139 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32204883 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322588724 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322260356 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322846669 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32317178 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32244335 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322522974 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322792378 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321302741 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322782047 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322662846 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321779718 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323244495 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321605071 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323728811 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325835203 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323797499 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323231966 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324499895 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324632228 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323279628 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324567493 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322885987 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324336758 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323280638 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324112787 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323752349 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322972344 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323633721 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323940894 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325531788 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323291665 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324498043 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325059752 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324531618 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.325545214 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323529809 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324840444 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324329774 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3247727 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325495677 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32338847 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325326442 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32516636 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326085165 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325775219 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323856102 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324852963 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325564424 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326142152 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325336815 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32708166 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325337091 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325244457 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326585989 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325154223 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325216485 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325852137 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326405906 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326056859 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325629405 seconds)
  done (took 88.587911337 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324559907 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.326294467 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325696834 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327452822 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326241476 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32540132 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32569179 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324396931 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326415486 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327368181 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327016519 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328476133 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327067498 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325867802 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328833032 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326925509 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325872992 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326711058 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32752706 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328385792 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32733432 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326039922 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328930243 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32902736 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328210855 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328585825 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327807496 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328416144 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327826205 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328490283 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330250638 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330697157 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328127894 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.328613846 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326808794 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32915393 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327861465 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330496261 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328349856 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329258437 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329434379 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329230199 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328696119 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329091381 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328573706 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3292674 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329480583 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327684996 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329522264 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329287568 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32947287 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32910782 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330146438 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330222361 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328954867 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329875611 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329584714 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330259481 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329624596 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329868179 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330007525 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329159983 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328815163 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329908518 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32991861 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330833142 seconds)
  done (took 88.865809477 seconds)
done (took 1795.433926953 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.488506132 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.440455482 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.320073561 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.370269713 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.322791923 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.320372542 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.322937051 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.319550595 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.322034202 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.321186303 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.321020946 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.512336802 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.383610918 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.323466347 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.321510544 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.420867643 seconds)
  done (took 27.031159877 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.35171001 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.330240762 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.447118941 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.326325253 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.351635747 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.526750564 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.384508705 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.327879911 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.505148157 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.346542907 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.32110748 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.349116569 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.32733935 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.31856993 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.347653534 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.52584421 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.599317397 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.323244079 seconds)
  done (took 29.211814198 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.799642089 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.321601546 seconds)
  done (took 5.322988816 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.348406675 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.328028748 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.328645746 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.326616836 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.319093391 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.320039516 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.326388913 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.326552346 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.320284233 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.457945628 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.330306741 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.34230832 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.344998401 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.329337522 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.335093485 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.375933886 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.477392576 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.338566472 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.33517581 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.335332506 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.326491103 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.423798954 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.372706322 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.336982335 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.459215415 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.321853723 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.33177339 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.335994633 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.449903878 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.339274431 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.328730905 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.328433857 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.329876704 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.31345049 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.871058328 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.321792921 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.371806657 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.336884612 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.335127267 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.46133993 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.329992751 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.33518996 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.321512446 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.864792271 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.441414395 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.452886349 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.339089795 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.348836429 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.328897718 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.39792093 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.330194127 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.331601158 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.389852109 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.134278164 seconds)
  done (took 85.200110927 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.383130455 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.322545326 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.506628098 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.345560731 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.320503714 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.34778563 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.320926464 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.622775429 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.342222447 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.32323326 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.646554133 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.959572644 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.327991741 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.398937992 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.368513747 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.386910842 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.323576036 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.339656033 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.339749202 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.328740122 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.902332983 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.324634825 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.323137332 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.412223072 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.366069055 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.876584719 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.324210165 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.323450287 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.341257827 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.323170247 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.930815295 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.323469391 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.383037583 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.324651133 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.619237724 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.731852675 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.688707659 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.326004065 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.362374082 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.339841109 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.351353051 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.867837293 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.711354194 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.325559414 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.327083175 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.868827075 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.325995288 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.329912657 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.335657018 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.599157567 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.324388389 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.32830376 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.325585971 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.325478245 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.326114296 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.387947547 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.381571164 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.880656007 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.326855533 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.3252958 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.331030276 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.32864345 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.331867536 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.326348103 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.328859814 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.715377101 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.586676158 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.334851825 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.713514987 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.922007883 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.323938449 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.016625087 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.327326779 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.364511717 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.373391729 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.327374152 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.326951594 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.877691541 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.331520957 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.326145234 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.693168255 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.330678916 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.639699181 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.347332629 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.328604314 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.923586298 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.334191463 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.379045609 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.339518719 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.329585439 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.327447686 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.329066909 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.628101586 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.380810425 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.328466406 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.329628364 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.383864292 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.329469124 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.330811147 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.333721761 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.998990668 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.334158449 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.327639781 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.349233246 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.332543685 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.328067598 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.332339787 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.33289831 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.616053848 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.328053162 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.351584553 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.329125534 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.339205614 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.337616487 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.423432164 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.334697019 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.656558553 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.333706024 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.331342715 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.331653228 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.330160811 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.361396434 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.330049232 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.356768987 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.320068225 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.630877071 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.348480368 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.348452249 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.329944638 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.329264422 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.330673469 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.331016102 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.394728063 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.33313323 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.153150868 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.336781022 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.346762149 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.330719515 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.346320107 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.332523319 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.339762133 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.332561375 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.639597971 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.627632753 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.579282289 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.335630487 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.331639126 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.163643276 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.342334312 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.514739429 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.351048566 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.331798873 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.614309689 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.566114615 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.33191382 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.332867807 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.335124049 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.617786678 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.334070917 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.679242093 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.958664455 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.332395094 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.344155305 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.148806594 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.156206089 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.334722304 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.336534916 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.640063674 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.350982401 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.333080519 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.33420478 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.335344244 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.333144278 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.337538708 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.338649241 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.333628596 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.333972585 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.624220601 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.530162077 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.351927296 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.335163194 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.88922041 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.365255769 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.335795797 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.363257855 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.336072905 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.333950018 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.38908097 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.33814322 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.386672199 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.336472457 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.337760606 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.910088677 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.334648419 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.351943551 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.531364478 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.10129587 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.335920143 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.335179137 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.336208106 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.398646467 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.918918225 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.382853759 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.662663761 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.339632855 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.377903013 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.335279119 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.352580314 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.919279702 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.34279372 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.335060239 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.097927675 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.336498744 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.817681621 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.336599363 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.339465967 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.023274303 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.336028771 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.339078287 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.337972888 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.338796323 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.64799069 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.338027062 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.349792691 seconds)
  done (took 499.299560164 seconds)
done (took 647.264702431 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.335884227 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.33685453 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.339800543 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.34021608 seconds)
  done (took 10.56842828 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.354947712 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.343151427 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.352128222 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.343335723 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.353385043 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.344273804 seconds)
  done (took 9.30901746 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.336478772 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.337072757 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.340406891 seconds)
  done (took 8.232662115 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.561900284 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.359120297 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.716117158 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.351251421 seconds)
  done (took 9.206932038 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.354303324 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.35347509 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.355296047 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.355715405 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.355595945 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.357974277 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.357272197 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.354905024 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.356363429 seconds)
  done (took 13.416711369 seconds)
done (took 51.952250454 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.500532584 seconds)
    (2/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.322394713 seconds)
    (3/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.505559188 seconds)
    (4/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.592306738 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.409321207 seconds)
    (6/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.46008119 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.377097131 seconds)
    (8/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.595138389 seconds)
    (9/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.317954757 seconds)
    (10/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.318412289 seconds)
    (11/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.324478426 seconds)
    (12/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.351225002 seconds)
    (13/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.566661805 seconds)
    (14/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.426208289 seconds)
    (15/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.506461099 seconds)
    (16/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.376749848 seconds)
    (17/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.511257282 seconds)
    (18/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.411859246 seconds)
    (19/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.354214776 seconds)
    (20/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.719387593 seconds)
    (21/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.317795977 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.417982826 seconds)
    (23/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.325583344 seconds)
    (24/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.66543219 seconds)
    (25/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.31687975 seconds)
    (26/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.506775333 seconds)
    (27/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.426921253 seconds)
    (28/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.653237139 seconds)
    (29/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.427107557 seconds)
    (30/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.317520239 seconds)
    (31/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.352281021 seconds)
    (32/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.319293773 seconds)
    (33/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.41310029 seconds)
    (34/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.403878808 seconds)
    (35/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.376016972 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.44007313 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.503236382 seconds)
    (38/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.327415235 seconds)
    (39/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.356097434 seconds)
    (40/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.502499311 seconds)
    (41/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.319361369 seconds)
    (42/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.421203038 seconds)
    (43/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.370786029 seconds)
    (44/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.497214967 seconds)
    (45/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.367178943 seconds)
    (46/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.320822016 seconds)
    (47/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.352255278 seconds)
    (48/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.320576355 seconds)
    (49/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.609735816 seconds)
    (50/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.331672509 seconds)
    (51/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.445297366 seconds)
    (52/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.384573022 seconds)
    (53/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.334081936 seconds)
    (54/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.446639491 seconds)
    (55/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.560901804 seconds)
    (56/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.377885529 seconds)
    (57/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.474262487 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.470447775 seconds)
    (59/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.51654991 seconds)
    (60/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.423716879 seconds)
    (61/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.407522922 seconds)
    (62/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.477180765 seconds)
    (63/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.489457528 seconds)
    (64/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.725125311 seconds)
    (65/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.533620302 seconds)
    (66/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.321103578 seconds)
    (67/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.454960506 seconds)
    (68/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.378687716 seconds)
    (69/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.321515811 seconds)
    (70/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.617710514 seconds)
    (71/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.435913855 seconds)
    (72/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.335172944 seconds)
    (73/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.570446135 seconds)
    (74/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.424636356 seconds)
    (75/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.344098772 seconds)
    (76/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.572594805 seconds)
    (77/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.322841794 seconds)
    (78/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.586406071 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.42862309 seconds)
    (80/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.33010556 seconds)
    (81/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.346620472 seconds)
    (82/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.330625946 seconds)
    (83/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.324067855 seconds)
    (84/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.412990805 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.463224867 seconds)
    (86/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.431385626 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.407039796 seconds)
    (88/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.32301484 seconds)
    (89/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.549573789 seconds)
    (90/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.60337686 seconds)
    (91/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.572221123 seconds)
    (92/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.424180172 seconds)
    (93/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.322219176 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.473304577 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.377625409 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.603920445 seconds)
    (97/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.566154967 seconds)
    (98/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.426163471 seconds)
    (99/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.382123301 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.466091866 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.419620364 seconds)
    (102/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.665470001 seconds)
    (103/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.465730997 seconds)
    (104/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.375438079 seconds)
    (105/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.535972998 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.600302478 seconds)
    (107/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.333453704 seconds)
    (108/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.471961447 seconds)
    (109/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.377684989 seconds)
    (110/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.361527688 seconds)
    (111/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.408010348 seconds)
    (112/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.570436639 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.454185995 seconds)
    (114/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.37018085 seconds)
    (115/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.341148624 seconds)
    (116/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.431231536 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.467262482 seconds)
    (118/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.643971196 seconds)
    (119/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.414927602 seconds)
    (120/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.324487761 seconds)
    (121/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.524851212 seconds)
    (122/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.464683266 seconds)
    (123/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.447202342 seconds)
    (124/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.476167869 seconds)
    (125/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.38787018 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.445361463 seconds)
    (127/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.45903909 seconds)
    (128/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.467832924 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.508818886 seconds)
    (130/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.50569799 seconds)
    (131/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.358742205 seconds)
    (132/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.796470939 seconds)
    (133/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.670200021 seconds)
    (134/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.326902043 seconds)
    (135/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.517456199 seconds)
    (136/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.513487884 seconds)
    (137/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.583390104 seconds)
    (138/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.538351756 seconds)
    (139/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.445879579 seconds)
    (140/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.485426963 seconds)
    (141/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.354207866 seconds)
    (142/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.469865557 seconds)
    (143/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.606066949 seconds)
    (144/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.383676218 seconds)
    (145/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.416616281 seconds)
    (146/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.377891417 seconds)
    (147/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.667872702 seconds)
    (148/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.599385881 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.41331908 seconds)
    (150/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.379384808 seconds)
    (151/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.469583709 seconds)
    (152/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.578125049 seconds)
    (153/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.44663466 seconds)
    (154/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.598809096 seconds)
    (155/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.43279342 seconds)
    (156/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.522084615 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.477503964 seconds)
    (158/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.498748666 seconds)
    (159/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.463239375 seconds)
    (160/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.35977399 seconds)
    (161/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.467890912 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.507117005 seconds)
    (163/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.51662357 seconds)
    (164/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.328189158 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.414567602 seconds)
    (166/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.384747163 seconds)
    (167/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.455752057 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.389825562 seconds)
    (169/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.327775922 seconds)
    (170/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.394568409 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.502709469 seconds)
    (172/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.435417381 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.463199161 seconds)
    (174/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.384282851 seconds)
    (175/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.546838675 seconds)
    (176/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.370882965 seconds)
    (177/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.329642262 seconds)
    (178/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.629557111 seconds)
    (179/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.459327026 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.458396106 seconds)
    (181/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.390426807 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.458555093 seconds)
    (183/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.519051505 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.51456419 seconds)
    (185/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.328912888 seconds)
    (186/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.816874331 seconds)
    (187/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.48080696 seconds)
    (188/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.354143172 seconds)
    (189/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.600488645 seconds)
    (190/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.415324655 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.606025152 seconds)
    (192/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.335830014 seconds)
  done (took 327.838446234 seconds)
done (took 329.058644747 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.382022456 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.454976654 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.360961449 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.359518762 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.361295097 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.356496634 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.382288027 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.362252509 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.375858046 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.376564932 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.357708758 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.370457831 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.376084501 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.373971371 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.395458903 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.362581328 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.362971283 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.371169214 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.376970216 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.379147557 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363263414 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363878629 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.38929011 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.362409501 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373051314 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371221694 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.368855587 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.355808065 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.371587363 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.376928805 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.35754286 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.370758742 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.379106265 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.375047018 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365491327 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.373393812 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364649661 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.458037858 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.385076148 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.374267225 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.371465792 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.379935853 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.368697645 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.368468831 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.374928757 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.392128532 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.372323275 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.380352142 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.361184889 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.356428171 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.386267747 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.376066928 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.37026823 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.355792447 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.355266115 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.379087713 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.373623415 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.383139617 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.37087246 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365573535 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.399955124 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.384546421 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.376391039 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.373497623 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.373573317 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.380136932 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.374031632 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.381338502 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.371773957 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366804083 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.367117848 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.374076975 seconds)
done (took 108.197431218 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.488784635 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.363908969 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.522010976 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.374442882 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.531588923 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.487608199 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.372701237 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.372300592 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.373227601 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.170059671 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.373804446 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.373471587 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.363388658 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.373253895 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.484908017 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.373991405 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.373121773 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.070136061 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.374567848 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.501540044 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.365410277 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.374238199 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.372722907 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.172694547 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.362025332 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.361379868 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.50244096 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.375681572 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.072096322 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.360391301 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.362173854 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.073724793 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.502431695 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.392168419 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.384553067 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.38213507 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.533832152 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.37872144 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.491837368 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.491338862 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.524903452 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.413262788 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.360598232 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.365362455 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.377651129 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.376973874 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.376612384 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.403367689 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.363925469 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.376608114 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.070425656 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.386839701 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.384450247 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.377057714 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.377112121 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.397762181 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.37662035 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.379086771 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.506143878 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.378500518 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.493312374 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.176139396 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.174639357 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.377677014 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.364553013 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.379043194 seconds)
  done (took 110.806878872 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.436466906 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.445689187 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.485224232 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.370668484 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.416703643 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.485049374 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.369450564 seconds)
  done (took 11.2478687 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.375282684 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.378338251 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.418718249 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.417719564 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.377638224 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.541901906 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.378235325 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.381844062 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.377981647 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.419740803 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.380762937 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.378782088 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.387595212 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.369267021 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.417022414 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.382537059 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.486818331 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.371583768 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.379096023 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.520773472 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.379432451 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.388646642 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.421143357 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.38129263 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.382382441 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.377867153 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.152339114 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.378186262 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378066303 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.380071553 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.379748364 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.435596324 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.378952771 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.370544349 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.380351948 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.484036679 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.380563019 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.379467066 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.380286902 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.364355649 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.379807065 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.381663386 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.380164556 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.380786907 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.380720509 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.395601429 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.380929483 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.380847119 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.382128148 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.380778418 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.424373214 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.381488647 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.379387261 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.381342783 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.425476016 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.390558438 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.381315148 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.381326261 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.382058815 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.381722345 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.523634413 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.419296386 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.380788752 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.419593522 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.381962559 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.381714965 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.381017089 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.381842021 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.462669428 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.380793828 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.419698604 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.381113152 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.555052449 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.397881276 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.384282541 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.377213273 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.374860333 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.382449886 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.370773371 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.380297467 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.382952701 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.375675637 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.379221837 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.383379874 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.383007463 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.53290107 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.480847932 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.382477942 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.389210952 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.381653656 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.384616793 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.427857817 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.381523081 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.383161892 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.426361677 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.4929064 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.425800078 seconds)
  done (took 141.801817894 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.388542825 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.388144905 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.379369948 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.403679779 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.377148899 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.3747795 seconds)
  done (took 9.555542705 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.378774131 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.387304211 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.385458203 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.384000534 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.385332228 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.38784289 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.38473019 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.377129704 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.389002856 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.384764102 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.386734871 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.387640898 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.386219421 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.386702716 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.385861622 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.386822833 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.386309469 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.385933866 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.387743179 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387161301 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.373601895 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.387569542 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.386791181 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.381127602 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.389763422 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.38854705 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.402634972 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.38747684 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.387276467 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.383338868 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.390605725 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.389828891 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.380734222 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.382775167 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.390381134 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.380248784 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.391027337 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.390889768 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.388392526 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.391254714 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.391465738 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.388361963 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.386562439 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.390296682 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.379545128 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.38203654 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.394193311 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.403738116 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.388836309 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.391325758 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.390449481 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.389299481 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.390485891 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.392093474 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.38187393 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.383328031 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.393944003 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.390558766 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.389088435 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.38167129 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.39268771 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.391963215 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.384064058 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.392713426 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.390466357 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.392873516 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.381481944 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.395187941 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.39220849 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.390313022 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.393144639 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.390827551 seconds)
  done (took 102.170469641 seconds)
done (took 376.817926194 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.737409496 seconds)
  done (took 3.98596782 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.54314851 seconds)
  done (took 3.793448934 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.136106874 seconds)
  done (took 24.391552818 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.427986583 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.394797831 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.401927404 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.381573085 seconds)
  done (took 10.855339498 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.840362036 seconds)
  done (took 4.089144521 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.384734094 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.39068491 seconds)
  done (took 6.027951441 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.623027836 seconds)
  done (took 3.872457231 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.734795853 seconds)
  done (took 3.993386303 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.410018138 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.393178605 seconds)
  done (took 6.061610419 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.35367881 seconds)
  done (took 3.602754296 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.24240989 seconds)
  done (took 22.492857813 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.389160957 seconds)
  done (took 3.64195491 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.442043173 seconds)
  done (took 3.692583042 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.235822165 seconds)
  done (took 6.48590874 seconds)
done (took 108.236524659 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.374802294 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.376307143 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.378313413 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.376510348 seconds)
  done (took 10.755695155 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.455921574 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.454716917 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.463589302 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.451256835 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.448700671 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.459258186 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.417903478 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.419206004 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.448011934 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.443188547 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.46294454 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.448019397 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.461195925 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.417455932 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.445722983 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.460803461 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.450449597 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.465794146 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.417626054 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.450298792 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.39371262 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.452483991 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.443670706 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.392159575 seconds)
  done (took 35.874662757 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.884284662 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.454724624 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.539157944 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.435591952 seconds)
  done (took 7.564638282 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.496884929 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.497870277 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.517113077 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.552748064 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.600151747 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.511318985 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.421044512 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.414075921 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.402389265 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.500629487 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.582785302 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.496500493 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.714534389 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.394175898 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.710878637 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.394265707 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.393584525 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.498277741 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.546413355 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.578262015 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.394431937 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.498033477 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.503508213 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.498943437 seconds)
  done (took 37.369586385 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.401869033 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.412331629 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.397019899 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.411162491 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.396446269 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.395417128 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.398222906 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.400937123 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.395319429 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.397378591 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.396153886 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.410137843 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.396002443 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.397391776 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.40278174 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.397935532 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.399654747 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.403876619 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.405944977 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.397168641 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.397875956 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.403840096 seconds)
  done (took 32.068868302 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.381042119 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.381058106 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.732854309 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.637685997 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.382655449 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.38613543 seconds)
  done (took 14.155297573 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.463729287 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.609824549 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.388874997 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.770489194 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.856518794 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.390328319 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.388528169 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.649547605 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.979387595 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.985412563 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.450603416 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.462842535 seconds)
  done (took 20.651812523 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.383074831 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.382232542 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.398564411 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.397782836 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.447195319 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.39258508 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.395390817 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.382493888 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.451776216 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.452140586 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.39253397 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.44942136 seconds)
  done (took 22.18233338 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474158203 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392045167 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.407939044 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450235875 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396454183 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393535861 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.476833608 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.120977445 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.39882112 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668669134 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3946216 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478958238 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.640654344 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406263857 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398904748 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.362020047 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.621966101 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90809526 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399880964 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401633758 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426510929 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.40063634 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394619317 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.61953289 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397181952 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393721666 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.656940548 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393793964 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.700395178 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671725643 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.673667465 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396778578 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670423774 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074557874 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504350286 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.616430356 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394197034 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396860794 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.371562593 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.400374212 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408083588 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397434865 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.670482919 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39891583 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394416774 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399025586 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165481044 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.409134909 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.395567838 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396869884 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675628844 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480722361 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.40048016 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396965578 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411133362 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40053818 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.401426038 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523791423 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037121133 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399410109 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403508796 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.395987801 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390786782 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410251433 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080899054 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.405412829 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.401314795 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.402417481 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398196192 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400333802 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41956462 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398463277 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.418232333 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398675999 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262051585 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.407353431 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399570164 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961611546 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410343016 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.402100629 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625692449 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397340867 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39866096 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.39856665 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399261817 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.250919399 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404885006 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.365495924 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444813946 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.126455444 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.622855539 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41782498 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429116668 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.622440628 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.365245441 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401144306 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.402082281 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402022839 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421694973 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.166172714 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400691868 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.40625087 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647716882 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.611610125 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399172469 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.372803547 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898489183 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406868622 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.429743377 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401722437 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.625481188 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.059098621 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.688514007 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404318062 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435379382 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400232088 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232545906 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40871909 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.41023121 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.406029995 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694615515 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.267177056 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403683199 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476220568 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411633565 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402389443 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412887664 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403996332 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401297545 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.601827822 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403426004 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.679395082 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.405587456 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401264001 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.403070294 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418562924 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.406027998 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.625203702 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407215465 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680935803 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402879251 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403985042 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404623697 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.621655918 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.412606048 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.411231671 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.741325261 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402976463 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.41004836 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.683633571 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437572222 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515065544 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43510961 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.409505712 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.653120335 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.409230068 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.410900684 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41628468 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405909088 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406547469 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.412177314 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409298267 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06474261 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390487585 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.410776807 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.40599991 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.420111113 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47872144 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.413568005 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.630012641 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.42085301 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394427548 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.412509946 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.404902022 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626825687 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.682348155 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.406422312 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581576506 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.905572762 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.065229947 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421979306 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.405979686 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.406127238 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.405444579 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406201166 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406499162 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408505625 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.629486315 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.692791808 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404115517 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.072532369 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411926263 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407615599 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.415905572 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.686165106 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.416892054 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406129595 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.406794756 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417798746 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420802011 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.688763156 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6303148 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.422702037 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408580428 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.926377747 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.415765757 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.408201089 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408490248 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435216598 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409669995 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29134159 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.746589871 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422148241 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.689812464 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409275809 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.425964987 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.405867872 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407880903 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41627653 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.417463243 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418902878 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.635725906 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.415088076 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411361304 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047743557 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241687887 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012479054 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42576398 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.410238629 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.410255561 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.150531016 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409536399 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410419275 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672113954 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.144761936 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409511095 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911068671 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.420291448 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.234938368 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691084948 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637382031 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423730136 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.427464434 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.693804202 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.623794984 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438057571 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.414332677 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410079036 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.377762965 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023947677 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431718423 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.590150025 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149953574 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416949742 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.412605951 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.437765908 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.415735175 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862253223 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415942423 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413220058 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.419862399 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417867424 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312436091 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.418737894 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412025251 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098286892 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.42939119 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.919072749 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409111937 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.639520664 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.693767681 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.667844082 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.418438242 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.42152302 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.655336275 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.69397656 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414437718 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.428398536 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019030088 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.272063483 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.420566615 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412306147 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245898247 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412817095 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.721142463 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.419965154 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.415717982 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420658793 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413915519 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413755524 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.413060272 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421272846 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392506846 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928380252 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.431204018 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409413728 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418523753 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416268178 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.661866708 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.430924219 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.079024405 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643735908 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411788829 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446825665 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.420055143 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425749679 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.384653589 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.414390491 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413976059 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423214072 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.63516286 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.434980992 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.383518124 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.462963835 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626261988 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415594428 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.424285441 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.653621831 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.418325532 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.430344874 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254848898 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448367423 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.423657752 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418098746 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.422316923 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458211281 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490074034 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643152319 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.697594306 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.700225415 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848206853 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427348047 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418776392 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.432466841 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498280239 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427169302 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.419789171 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.417075483 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079555373 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29308255 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.087641841 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.701496404 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421286836 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427376236 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416724217 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658476897 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418121404 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694374547 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41828797 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.408827102 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441578953 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431317486 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419811137 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628617166 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692963851 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418146257 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417574756 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422743963 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.417598255 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.707359233 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.633409668 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939471648 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989697416 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421659674 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.422135811 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.198390412 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698891386 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420409157 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421218969 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419570395 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.4419549 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.421320124 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.425240896 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435224134 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.646502417 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.703464435 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10751208 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.700578978 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.601301231 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.331069458 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418921763 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.667198022 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.262893271 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.653931075 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093731446 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.198168398 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673931243 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494845528 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64965613 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.420303376 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658248727 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.419578215 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421166433 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422415772 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418991752 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.419801799 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.701565565 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092868463 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676414327 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.427417759 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.421757124 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450227084 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.649604485 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.64772896 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.202577501 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.640668394 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.70822263 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.431519469 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422679577 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.096885032 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.707640989 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424063849 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.429447766 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.659329307 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.424742385 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462598859 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.295240175 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.421577078 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994442164 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.6351792 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442483519 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425564298 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.204332144 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100381634 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.43020228 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941932844 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425337222 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431801628 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702199537 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.430947618 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.427733005 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.706269946 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.429051575 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.427569785 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655780001 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.091038955 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.254888569 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.425729729 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425352094 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.444893973 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424790457 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473166269 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427538554 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432390928 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.863064508 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.428169249 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424994819 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438484275 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.426372212 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431796931 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.424892732 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426012107 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.433822851 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.418746273 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.413432386 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.434595429 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553263381 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01262734 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425996702 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.040516659 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.762351552 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.67311322 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.430944105 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.3946469 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.433139938 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425691941 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427055668 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426475901 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.43640907 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001508854 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.431316402 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.709083413 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.434411216 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.637492129 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637064591 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.441663709 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.657978879 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433425771 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448185899 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.395003242 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427234691 seconds)
  done (took 1002.574193067 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.514766057 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.420039905 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.430190768 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.434096142 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.44011559 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.449035044 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.461744821 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.518256433 seconds)
  done (took 20.956044245 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.416619892 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.427622412 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.417534293 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.427699624 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.419441164 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.00113729 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.433060946 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.427761795 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.442310116 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.421473948 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.431841614 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.150861748 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.42766594 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.424042269 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.42951215 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.429399862 seconds)
  done (took 33.414947906 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.35599836 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.559923776 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.49627388 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.49939641 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.468404513 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.418320534 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.685517097 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.447189758 seconds)
  done (took 27.220272102 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.43133797 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.431189346 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.433437056 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.435157193 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.437614996 seconds)
  done (took 8.45699676 seconds)
done (took 1274.49616364 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.433215662 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.433349419 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.434904245 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.435205049 seconds)
  done (took 7.025057789 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.395242931 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.397623693 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.400321651 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.412644422 seconds)
  done (took 9.893623634 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.18237051 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.980898527 seconds)
  done (took 5.452269634 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.012101946 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.005820369 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.998053119 seconds)
  done (took 7.303001458 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.726234249 seconds)
  done (took 3.014015535 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.419102278 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.421344422 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.201867783 seconds)
  done (took 8.330650694 seconds)
done (took 42.306123225 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.418547919 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.189335318 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.575134473 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.433793133 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.584647212 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.580661401 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.663036198 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.418220536 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.433001259 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.428779399 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.431581428 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.579174849 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.650746305 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.182040474 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.652402804 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.181748075 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.580474668 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.418879674 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.41827911 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.418781061 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.688087111 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.419180667 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.42872915 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.429664256 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.58029977 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.56626362 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.419052465 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.182632373 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.419058267 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.41915263 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.564527343 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.427161488 seconds)
  done (took 84.071932939 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.420381925 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.419025541 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.419549654 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.435685248 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.420970885 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.421631192 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.44311755 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.420860776 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.439748442 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.420804505 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.41950551 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.420423556 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.423877338 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.420267123 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.420754171 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.419409809 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.421371012 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.421942967 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.421999787 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.423798604 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.425228588 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.433368191 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.42027401 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.434432338 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.432209267 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.42318464 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.43934406 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.455322613 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.42102242 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.420794154 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.442021478 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.452738907 seconds)
  done (took 78.961626704 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.420495267 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.421704828 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.423251375 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.438666352 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.421428574 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.420732005 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.44004882 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.421320065 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.421861185 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.421665088 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.425131043 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.421921477 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.423797309 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.425890785 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.423353858 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.434198148 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.421569249 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.421515577 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.438098189 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.422560683 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.424858498 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.437749676 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.421968918 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.438683042 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.423398377 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.436016906 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.421520066 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.422727744 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.423270664 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.42273363 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.435283642 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.423615304 seconds)
  done (took 78.930485972 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.661886528 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.437463307 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.442557201 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.432339392 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.443005585 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.438666753 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.432950166 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.668967423 seconds)
  done (took 15.246950376 seconds)
done (took 258.499000332 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.432783667 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.946119135 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.462260518 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.433295976 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.469111134 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.461899329 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.666333421 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.459698108 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.664281472 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.453831256 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.448287317 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.440194291 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.281218206 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.594101348 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.281660406 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.386770483 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.375269664 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.426785161 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.021060928 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.725423318 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.462131561 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.427755797 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.268074262 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.378495337 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.403907454 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.517350299 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.534122907 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.667863442 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.597754944 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.515281253 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.960989179 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.435369714 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.440082242 seconds)
  done (took 66.331920323 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.43348261 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.442274037 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.443125099 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.442348741 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.441717814 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.441360394 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.433456254 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.442402784 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.443843546 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.44290812 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.441697301 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.444243461 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.443040569 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.442506878 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.443285283 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.413429207 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.432170418 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.443125726 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.43305602 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.416398721 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.442483179 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.444199273 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.445454026 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.443813383 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.445233206 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.444353437 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.443456412 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.443414214 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.445989852 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.445161743 seconds)
  done (took 44.497713343 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.444982263 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.043192907 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.210313465 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.442719927 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.436650853 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.438354416 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.748611396 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.446597076 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.439888326 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.439962275 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.947223419 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.449957258 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.471117361 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.225229976 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.440361619 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.446313563 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.445658655 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.436370149 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.053188161 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.447250898 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.745433391 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.447789308 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.747499897 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.447043636 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.440411535 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.438103893 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.443749178 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.26768953 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.459080131 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.943488458 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.292250423 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.744646177 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.19384987 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.272585245 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.28471665 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.451856234 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.445694112 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.947943711 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.441437077 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.437731291 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.743801267 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.43927028 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.225840227 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.13743629 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.458466152 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.447535961 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.299522884 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.945325348 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.700015654 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.444864425 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.270828673 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.4428387 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.449410336 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.440402526 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.700374601 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.441768734 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.440253461 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.324715752 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.445036227 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.74531904 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.448035273 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.440499248 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.051564746 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.440371915 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.046149165 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.441368693 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.449473822 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.44219533 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.233063887 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.444719353 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.163601349 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.459155576 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.449608006 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.946962631 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.045763667 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.346912101 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.444723929 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.054667544 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.224373361 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.765435344 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.444307781 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.24177854 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.769550688 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.446514015 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.453212769 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.45248644 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.452191306 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.513696792 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.748005664 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.07891175 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.156060539 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.327718173 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.752081547 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.449665724 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.443532499 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.324342213 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.45154217 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.451434782 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.225615614 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.167548664 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.462999571 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.451323415 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.147128549 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.464531674 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.751517297 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.449695399 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.281490505 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.445278888 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.562413569 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.451936986 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.451004063 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.448041299 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.751361949 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.446988816 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.453695999 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.142491124 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.978349911 seconds)
  done (took 202.017509886 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.436670255 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.43823658 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.438874529 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.438244133 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.43805148 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.444756613 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.437406377 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.438359173 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.444431225 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.439419937 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.440056692 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.448085151 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.446065798 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.439031193 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.439465237 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.439764385 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.438664627 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.441089511 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.43957371 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.438646136 seconds)
  done (took 46.107403969 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.454117847 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.043521918 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.01524376 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.455904104 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.453801792 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.447223049 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.506389617 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.45502431 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.454280951 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.763559729 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.631266686 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.457449692 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.455146892 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.455156418 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.016454459 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.427639912 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.765243021 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.042844618 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.457376794 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.042709755 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.426884195 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.454512571 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.443936806 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.043793834 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.776249975 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.752120539 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.50857353 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.046270709 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.455880416 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.456842442 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.043147564 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.455597394 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.447825302 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.027498953 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.456283758 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.470096427 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.456728493 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.509317742 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.510003214 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.768426426 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.05182399 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.764331591 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.468143303 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.608332065 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.458255092 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.426437643 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.055349686 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.457806185 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.428547206 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.458998226 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.462978971 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.031390681 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.450365225 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.030988004 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.45861423 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.460432497 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.047730736 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.031148715 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.023361704 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.635570229 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.448742251 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.756507975 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.459674255 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.057389472 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.459164976 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.460037404 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.458635594 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.637549474 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.048083297 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.755906643 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.77009761 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.772266401 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.460067179 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.52198872 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.459561699 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.770677181 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.520171247 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.834330177 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.773083438 seconds)
  done (took 131.852118405 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.745972376 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.572239588 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.84601632 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.051919675 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.975277462 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.59526412 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.5695928 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.703716529 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.469886977 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.56487753 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.134430511 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.548014916 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.236433721 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.520000801 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.562039309 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.581429892 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.859709482 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.442989446 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.103017308 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.119176946 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.455269679 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.577480031 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.961507081 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.657900351 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.450001473 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.045288982 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.439822505 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.991452137 seconds)
  done (took 55.090050635 seconds)
done (took 547.187921105 seconds)
SAVING RESULT...
DONE!
