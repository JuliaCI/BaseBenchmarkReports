cset: moving following pidspec: 19825
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.383829558 seconds)
loading group "string"... done (took 0.550100731 seconds)
loading group "linalg"... done (took 6.854176851 seconds)
loading group "parallel"... done (took 0.156927251 seconds)
loading group "find"... done (took 1.191368104 seconds)
loading group "tuple"... done (took 1.797596985 seconds)
loading group "dates"... done (took 1.214658284 seconds)
loading group "micro"... done (took 0.227224135 seconds)
loading group "io"... done (took 0.986886718 seconds)
loading group "scalar"... done (took 38.46504951 seconds)
loading group "sparse"... done (took 11.760474822 seconds)
loading group "broadcast"... done (took 0.990980435 seconds)
loading group "union"... done (took 12.832162209 seconds)
loading group "simd"... done (took 4.761218337 seconds)
loading group "random"... done (took 8.802834643 seconds)
loading group "problem"... done (took 1.877914461 seconds)
loading group "array"... done (took 20.210997726 seconds)
loading group "misc"... done (took 2.060211432 seconds)
loading group "sort"... done (took 3.231570288 seconds)
loading group "collection"... done (took 18.018895219 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.504673557 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126941224 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119038837 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.122928513 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.144257748 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120370401 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.128361872 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087489667 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.917934092 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.143659409 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.121008785 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.420795537 seconds)
done (took 5.316910899 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.179528368 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087121889 seconds)
    (2/2) benchmarking "String"...
    done (took 0.086373634 seconds)
  done (took 1.488453024 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069160638 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12840048 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.069959719 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06996209 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06989392 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069070779 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068972739 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069094056 seconds)
  done (took 1.860427792 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076060842 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070783117 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.071028186 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069791455 seconds)
  done (took 1.605302546 seconds)
done (took 6.535280213 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.774963614 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.204309569 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183942634 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.395712167 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.134672075 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.165129226 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.64075618 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.307118249 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.188723008 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080723576 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104586204 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.3213427 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107573099 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.637604646 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074044737 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090028207 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137214391 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.417601258 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067081816 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082097356 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089161277 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128284349 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085134889 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075863846 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144986679 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067687215 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.128724458 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080321035 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066574847 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206823016 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172499935 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663682715 seconds)
  done (took 10.382675705 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099052141 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100161957 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070892272 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125683206 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098467122 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070272138 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071108329 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067079379 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086091859 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127069847 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088238673 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100831873 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065720315 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069158409 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08446651 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204243546 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082281294 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083496085 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072663354 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078466586 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108446923 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081046107 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079873813 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077441549 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128696167 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180708522 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099992014 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100302318 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069802594 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082649555 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117519466 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12900601 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068041019 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068870117 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12713839 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097178827 seconds)
  done (took 4.820186082 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.903729102 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143281531 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09188844 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.160859276 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068038272 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106822983 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06591461 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083845074 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.198502048 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.107941419 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.439473206 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.109800778 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110126151 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065141277 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.084172007 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067341307 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068548976 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066717689 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.349803447 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.109703234 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113097972 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084046029 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073817581 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068955936 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.346324767 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068890492 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.0673676 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068530193 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.05847881 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112308778 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068424417 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.978857916 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.091502997 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070372843 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104391073 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.166261591 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091258027 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.135673367 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066514548 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067700992 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150125757 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074720475 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066147789 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082419801 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104796749 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.10181919 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.197565018 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07031512 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162939285 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066579331 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084253563 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.721446356 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155262982 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078955229 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067345248 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.244662262 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086154377 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066803037 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06524119 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.179374068 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129788369 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06856378 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067603462 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067118927 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068570248 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.350230452 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067153057 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.802249425 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070687134 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078237454 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069885243 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066694722 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073403166 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072505213 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085882425 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066853166 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.069289572 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066690705 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066233667 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06907371 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084583294 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065815277 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.188042544 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067641818 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067267488 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065249747 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086304383 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098123523 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.073805253 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065919002 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100276698 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068592803 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067267659 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.101674528 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066735146 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084045777 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069115717 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113212796 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065709538 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.093348221 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067300202 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09516444 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070379303 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09945004 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.170428648 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070362686 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.226758455 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064289556 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06527041 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065827441 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067041081 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06616449 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068206553 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069248614 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079038416 seconds)
  done (took 20.239340834 seconds)
done (took 37.660455897 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.291552147 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07850665 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077869319 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074659333 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074672328 seconds)
  done (took 2.004631882 seconds)
done (took 3.390746475 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122346346 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100975762 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066846249 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096314129 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064251601 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100024194 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098976457 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081723649 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099329575 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064518594 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09598973 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064618041 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064472536 seconds)
  done (took 2.52746227 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085289531 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085313388 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071421618 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08578128 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065454294 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084743989 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082832972 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090966624 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082880412 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074471603 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066087826 seconds)
  done (took 2.256893935 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084655707 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085726373 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071555819 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083883848 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065601112 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08433457 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083553134 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088320543 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083873944 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07573127 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065765397 seconds)
  done (took 2.248052342 seconds)
done (took 8.407190266 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079461109 seconds)
  done (took 1.444116705 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.595063982 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.088259253 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081331893 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111685503 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.186365012 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119513782 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276477266 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086976422 seconds)
  done (took 9.10495733 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104914882 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070806842 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071539188 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073789363 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070770108 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074271883 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071930086 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071609049 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074190741 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071542888 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070996429 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072778751 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070714454 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07318604 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072997298 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072947659 seconds)
  done (took 2.630452115 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094356471 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093285413 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075605229 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076917478 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07349041 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072833837 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074397986 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072971373 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070928014 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072042952 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074341614 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073327353 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071628645 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066224438 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074201125 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07535672 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070547017 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07430274 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074748782 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074867375 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074689477 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06478895 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071331563 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073947909 seconds)
  done (took 3.276728758 seconds)
done (took 17.832047112 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114819313 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073253469 seconds)
  done (took 1.556840439 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083891 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085658302 seconds)
  done (took 1.548313604 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084744229 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.068050858 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091136255 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077411793 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066258276 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065854589 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086621556 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066362691 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066115369 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066200858 seconds)
  done (took 2.11699217 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071110732 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080555642 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072451828 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082795223 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07595596 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065992741 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075923167 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.070216512 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080095897 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064913032 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072982128 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084035877 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073305708 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085756456 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075298771 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070063216 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072169375 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068943516 seconds)
  done (took 2.725354452 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068733472 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069072311 seconds)
  done (took 1.526993053 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068927381 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065842582 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068114421 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068390242 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065120489 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064117699 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065244916 seconds)
  done (took 1.847041463 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.389616907 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113669273 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.301154513 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072565299 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083838811 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.255027868 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067381501 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072415427 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072476586 seconds)
  done (took 2.858670936 seconds)
done (took 15.570103043 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080386156 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087618935 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097674439 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.345790508 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092268392 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067440647 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115629102 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.191062899 seconds)
done (took 2.475445028 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.207565718 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.574029956 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.379422561 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.2009005 seconds)
  done (took 2.547906618 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.317111378 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093376851 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060456509 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068834151 seconds)
  done (took 1.939300767 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068061631 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071211373 seconds)
  done (took 1.53436976 seconds)
done (took 7.626676943 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068887925 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067845269 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084700673 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065236329 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068321137 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065134639 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065793228 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065103007 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067379211 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067942685 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068145821 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.070488829 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.067855266 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067724516 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067833339 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065413185 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065358609 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067556009 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065966034 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065132957 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0653147 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067447173 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06858124 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06501395 seconds)
  done (took 3.056872415 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085714177 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068516434 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073330636 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072791162 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072171356 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073416712 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073314875 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068337595 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073094648 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069841215 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071379748 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071835367 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070074057 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072028209 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070204287 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072114076 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.0729079 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067963768 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070068836 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072406972 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073182713 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06822086 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07149065 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072612157 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071730338 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071494889 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069970958 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068220866 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073329468 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071703327 seconds)
  done (took 3.560559526 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07207514 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065045129 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066406029 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072729627 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066189157 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.067013859 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065473662 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06582734 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066294565 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065619241 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06679822 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065486183 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066221723 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067178261 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065939524 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069434327 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080647279 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065636701 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065428919 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066521849 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068528428 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065423454 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065564714 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065321826 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065472437 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064774105 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06601798 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065623635 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06601285 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065187294 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068515699 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068833642 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065246977 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072241241 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068862355 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065583125 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069323189 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065113559 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066324602 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064963021 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06485058 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065325985 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065308801 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072107107 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065480552 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066881275 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065496813 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066558433 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065276075 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067684548 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064863048 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064762865 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066915708 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066105357 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069084119 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06457553 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066305001 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064515984 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065998468 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064708957 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064540906 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064457831 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067783367 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065494798 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079791987 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072002636 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064979958 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066691072 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066262077 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067539336 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066699897 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078068675 seconds)
  done (took 6.241439786 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.206080892 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088699685 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066806562 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067641389 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063743836 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068725271 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069313207 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066032855 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067820604 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071490467 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065856954 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066849414 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067205679 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078594093 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06639289 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067544318 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071563384 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063497076 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065859845 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069200298 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066041579 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068985014 seconds)
  done (took 3.074273031 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156231035 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072272655 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107292413 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074868201 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06952851 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074591885 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07155797 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071912571 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071849795 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070061684 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069846732 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071476896 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069544095 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070414669 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069656966 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069984708 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071787837 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070148303 seconds)
  done (took 2.81736613 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078799333 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067298002 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08774332 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068010193 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067454645 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070155396 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072159802 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075941499 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069834733 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067435798 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.076097721 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070604419 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069934509 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067583466 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070030375 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067909383 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069844728 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067511936 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076031239 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072533246 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072469668 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075603258 seconds)
  done (took 2.996274092 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082072768 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070076409 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084354243 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070843304 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063890481 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066327444 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.072093283 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067666046 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071554852 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06947324 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067570191 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065911575 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071343833 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067768815 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071110583 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06783359 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069164022 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06751826 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069170665 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06366896 seconds)
  done (took 2.814536928 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088605323 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069779454 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069739129 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077070168 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069666082 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069135528 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076877987 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069391716 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069630288 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089693272 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069569448 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069109922 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076588858 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073939839 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069002378 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07647884 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076747759 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076444918 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06887084 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069228721 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088780925 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068897038 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076448302 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06952106 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068919195 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069142394 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069294549 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073686397 seconds)
  done (took 3.475718835 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068738618 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067824352 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065492104 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065816934 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065102821 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065494167 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065568032 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065616101 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067883971 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06508763 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067483809 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068575656 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068159689 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06760211 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067655865 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06806968 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067893689 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065559545 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065373073 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06549185 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067594149 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067634482 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067564883 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06497115 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065742134 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067899528 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065146796 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065318856 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067325005 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065177802 seconds)
  done (took 3.418491132 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077480217 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074957869 seconds)
  done (took 1.572310297 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065489196 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082122334 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.066156797 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072010832 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072060544 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068171334 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075442091 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071690062 seconds)
  done (took 1.990570859 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084426709 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079573189 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069446788 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081878653 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078698381 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085966745 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134695045 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069073243 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074512972 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066026911 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081864804 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067283791 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073974016 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068074478 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073799106 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074329927 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065870227 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074647291 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07063263 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066750155 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069481191 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076618892 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070558676 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063611221 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069655514 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090118886 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07910365 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067676869 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070846077 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075204127 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073476352 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061856013 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067844961 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068579643 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066008615 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07753317 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082842802 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070758515 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077005064 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068625849 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078880943 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063119569 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072095758 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074166556 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078120034 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068172859 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068366298 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063042596 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065963474 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07006015 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063350275 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06810097 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062916945 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074835564 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071365313 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080872136 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067337894 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069441011 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070699687 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071149934 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074620562 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069949719 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070563806 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068136552 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07759595 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072704332 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077579078 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06315892 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062366173 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066500078 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07783404 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090471232 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073967864 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068405891 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068711762 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066023627 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071007078 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068884153 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073402864 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074100582 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068070998 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073618381 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075487534 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068190411 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070431669 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076184382 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066183279 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070956424 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065728805 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084347596 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066914002 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066058688 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065580125 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078674952 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070933382 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06782272 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066013411 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074790038 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062671935 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068500394 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06915413 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069322368 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079038 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073033479 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073245285 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076952051 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075479747 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068351031 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071638671 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06485434 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068968033 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067319127 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074967979 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061925549 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070261434 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068623636 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.192805131 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075189597 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065563485 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067710213 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075763518 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073987764 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066758961 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065327867 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071281907 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068479314 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071558213 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076851356 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067452001 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064110439 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063694588 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071474227 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068725084 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072073435 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072865254 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07155884 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063827106 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066769056 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075990213 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077415599 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069166876 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069392397 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075469617 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070025468 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067176614 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074966495 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070414572 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067795348 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074537922 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069141972 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063250081 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071364895 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070923129 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066714005 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072521765 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071632718 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070710276 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069964741 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066919391 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076141177 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068926444 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067668071 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069072233 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067273369 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079015177 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071060334 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063695619 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065693243 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078369167 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066569361 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067703167 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067807376 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070289554 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069216919 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066495682 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068391346 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070067384 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079189554 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073115874 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069514117 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073565777 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079825452 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068123234 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071121077 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067806513 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069094931 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068949102 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077542065 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073534439 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072727218 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07035852 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065069489 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07382609 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075711352 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067163244 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066276581 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067731763 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07244541 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073394521 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072380604 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068876502 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066127277 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068630036 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071521548 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070522847 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067840907 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067110518 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074494827 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066058216 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075115112 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068760979 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07809269 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071114877 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06293627 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07072538 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06583833 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073962487 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062979288 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066118136 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067719426 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068955877 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066903465 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070512686 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06199592 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074470385 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075698058 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068524202 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067010166 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067924395 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074945531 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069933051 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072308485 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07202285 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07447079 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078400513 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067043638 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.1984433 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079573139 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.069295999 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062652323 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073834485 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067557128 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068266684 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067793288 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066569395 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071491518 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078142878 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076524597 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062719944 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071124687 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067684358 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067549036 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063932907 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073840287 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071721936 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070101302 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075882147 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069982531 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069743999 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072410513 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068687617 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069786795 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069966983 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071050844 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069777916 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070682319 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068115025 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071450246 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067542275 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066645557 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070974745 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068105801 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069406206 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073698965 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068152428 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06949616 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07114651 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069693052 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069206502 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069356895 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067744243 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07156212 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069249029 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068234574 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070472976 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063850483 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076004508 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067993191 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075456389 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068709386 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065377857 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076203259 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071386355 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074887563 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069264395 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06903665 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.07033451 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068450017 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071546679 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076016621 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066917806 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079481584 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076720476 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069451569 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071947199 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068489844 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069951994 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067384728 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069232434 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068999605 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069138355 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068050352 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072562535 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071109863 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068525024 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070175143 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06920839 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068796379 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069631158 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063037 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06722185 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067985466 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068354442 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077942361 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069109323 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067972696 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067712985 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069294107 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067454267 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065061572 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076357224 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077993286 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068906475 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075262527 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067484464 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069387076 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078693486 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062184437 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066283447 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06593101 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06580907 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07488329 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06833839 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077471443 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067859288 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067380113 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065634557 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068850171 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066692241 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062164202 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06602209 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071500745 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067056256 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067009399 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068397326 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071101359 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069497662 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077262764 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067261157 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.200107893 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069763103 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066242702 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067309324 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067942997 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071803377 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069676165 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06672812 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066499066 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068501928 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069925404 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070566173 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069147952 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070798297 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075803582 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06858788 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07200134 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072055879 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.066310113 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072649194 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068615328 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068985214 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.0676646 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072064516 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072141932 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06999186 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07798587 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068889511 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069780359 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069011714 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066611843 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068189259 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067421201 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069029829 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068033117 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069426936 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076407853 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066632186 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071375504 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06900988 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06893104 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075413296 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069721575 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071551873 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075363976 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069240782 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069861091 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077524908 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073136027 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071664471 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069727398 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071088807 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074378367 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068391906 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075489173 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06861354 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069700727 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070319868 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066139944 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068117223 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067819304 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067581473 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074910187 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069267068 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068625708 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067896485 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066293408 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069210645 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072001878 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075798611 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070883447 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07141024 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063910574 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065528303 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069460257 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066502232 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069973645 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070557222 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073945555 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070697924 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068813054 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067303596 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077470759 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073795601 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072120171 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066298443 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071944183 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068809411 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070276065 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069151677 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068237777 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069418003 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072021995 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069504594 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067241557 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074866524 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071896952 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069050969 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069748959 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06937631 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069110011 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063421488 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069200688 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.07024762 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073471042 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070611152 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068414993 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078593892 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066205683 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068259884 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07102494 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067438228 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07257854 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063704616 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069834101 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068860809 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069060868 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06325645 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067901529 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066040352 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070392852 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067357802 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063224887 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07821867 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076744066 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.200930868 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067476809 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067659281 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063684252 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064361178 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068473578 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070372157 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070700878 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078995199 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068215413 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06794131 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064449443 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069417295 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071803681 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071961028 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065701111 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063859452 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068325414 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071844898 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074522647 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067146309 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068444611 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071921494 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070688919 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066697798 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072389044 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06524375 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071708852 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.0815119 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069248567 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069133261 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074368565 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076294383 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069543113 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06394584 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.0709855 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071792637 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06910653 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069998127 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069550622 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083998977 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071786351 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067452999 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067485476 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071276823 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067460254 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077506206 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069253201 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069072642 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073090361 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070475564 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078086057 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07129217 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078281656 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072099047 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071675999 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068055524 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069345769 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066638562 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06751906 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069033578 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069529772 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074632539 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076806567 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068177688 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079422265 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077611271 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070501195 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065613618 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067897491 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067794218 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063701977 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069083102 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066953763 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066794706 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066832783 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066985467 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069395472 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073808289 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068946518 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068963821 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068290008 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062766718 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070767465 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070604712 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069239506 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065359309 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068021775 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069054047 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071794021 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07133045 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065994604 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069600115 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070063516 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068877774 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063479408 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074380669 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067409729 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06969648 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067678408 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06807751 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068906176 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071240216 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072874567 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068864765 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.07029577 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071955265 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070564765 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065407429 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065474752 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073223675 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065886081 seconds)
  done (took 43.932614729 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101890577 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065295776 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064002442 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064365479 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075327586 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064742938 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063810646 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064830533 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064767087 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067287369 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063767291 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063833549 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072356639 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079510846 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075491969 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068610114 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063753862 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065169732 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064061479 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065175724 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072412424 seconds)
  done (took 2.954577621 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075683684 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.072222193 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075704653 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077958974 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069426394 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072628464 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074286855 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072744891 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078320689 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068672526 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077331484 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072723877 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068869195 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.077464209 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068786111 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073076977 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077917788 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069102119 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072317838 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074516379 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072677711 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074051367 seconds)
  done (took 3.0925499 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068299017 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067945736 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069714347 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063389087 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067891143 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063092841 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071158394 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065637435 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071424887 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067037707 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067306305 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066909835 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069864284 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063435436 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068129426 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065492117 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110050887 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071008284 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067519059 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068509738 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06342894 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069476715 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.0634732 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063843995 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066597496 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07165468 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068629339 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065864575 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06829273 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.0668253 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067805719 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065960077 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069817583 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068346557 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067237827 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067069723 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067535156 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.0676066 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063330352 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.066037195 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068935953 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063828671 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068102047 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069214137 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06620529 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065908349 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06941535 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067918429 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06341402 seconds)
  done (took 4.814828586 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082225555 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109945246 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069476627 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090066465 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081495999 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074348141 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071240873 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090860867 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065180676 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065941083 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082871543 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083622394 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06765085 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071638112 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074603039 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068156578 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069095341 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066309921 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071615327 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06730829 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.07146593 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073802856 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081716803 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080445749 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071481881 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066705362 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066795882 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07196629 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.082864696 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072488247 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072690791 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07379534 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082373461 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072851479 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06705511 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069710994 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083111115 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067370097 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069917282 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065138304 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069815194 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071772924 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073821817 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083146284 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067741876 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072617942 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067287355 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064783877 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080002927 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070113602 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074901973 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081340985 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070971878 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06734787 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07183215 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081566913 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067369359 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065920601 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070548007 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079165659 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065236317 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071109084 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080644724 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.069132369 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073974554 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080915134 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072179749 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071029897 seconds)
  done (took 6.659834349 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07755942 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.073917238 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082106161 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081493831 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073807211 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074137338 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073681347 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074213507 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073804302 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079208071 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074038606 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.094531975 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069373648 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076370171 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073954658 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073799825 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074629963 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074050184 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073868126 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073922177 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074347335 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081457076 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.0743581 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081533372 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.100438071 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069586465 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073619472 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073804925 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081714209 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073756645 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08169789 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073947057 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073983757 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081831242 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.081146045 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073997695 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067035239 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073421798 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074227257 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073978164 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069670667 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081224146 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073973429 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069380879 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074377621 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073935869 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081377678 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080915442 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07659143 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078425544 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073374612 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081210077 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073638678 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073977424 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081048569 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105834102 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08103473 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081867543 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073789683 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081136912 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081459871 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087458715 seconds)
  done (took 6.303009366 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085544501 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076771613 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078130263 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063527803 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.0661418 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071383123 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066251887 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065770241 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076371997 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076419671 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078128475 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071143176 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074101711 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078178216 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071457431 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074819006 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071625302 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071695089 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076391884 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071447831 seconds)
  done (took 2.972277954 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07636131 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084449021 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069358867 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074001752 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070621022 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073328778 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070063187 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070842163 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068868618 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070730056 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077636215 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078132772 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069132801 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073189218 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077626835 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073477321 seconds)
  done (took 2.672950629 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078111082 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073547831 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081335711 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067834573 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06615121 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064158834 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067360571 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063080106 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064212718 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080028787 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067975106 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069895411 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067838302 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066387624 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064719027 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070348531 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064140552 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065238784 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067592321 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080001324 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078610559 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06642691 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068081047 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067493993 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067787149 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072982708 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067151691 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065234405 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065015527 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067741223 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068196033 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070996681 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06522157 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065830081 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066816654 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064922424 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067335831 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067893606 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07004054 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067093342 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065743216 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066866389 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067085837 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068453289 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063669903 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.0676401 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063675577 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069275134 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065836304 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067960774 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067529557 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069700205 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068264255 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074512741 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070471471 seconds)
  done (took 5.263007773 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081838346 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070986145 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064022625 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065469817 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070646659 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069877679 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071098951 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06940584 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069541231 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066516264 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06979311 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07017832 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069612642 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071835698 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069545806 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071311762 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063964491 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069521094 seconds)
  done (took 2.763426088 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073669424 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06832005 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.075382441 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067929444 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067304502 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06976309 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063803898 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066525933 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066487643 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067864475 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067719805 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070557002 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066587331 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069924346 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067925812 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067651101 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069670484 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06665113 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067395436 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063565494 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070113319 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066517398 seconds)
  done (took 3.001454918 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074536537 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093676069 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.143919643 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.085750447 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083310096 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.080315369 seconds)
  done (took 2.063278979 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092760464 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081306479 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068718895 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089899702 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07547956 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069263712 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069333888 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0697719 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077508501 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078047841 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069554914 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07762901 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077629015 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076933622 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075106963 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075285557 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069406517 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069308328 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067997524 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085421908 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069396981 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077307229 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069007361 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068587429 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068961916 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076666781 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077242274 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077775105 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068629745 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077201271 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074954049 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068752262 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077060941 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077465479 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071153813 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077276867 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069187538 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085587224 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075011104 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077086787 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07072788 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075367123 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077873737 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073832424 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077317217 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069335496 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074046373 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069604019 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069599221 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087487502 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075175911 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076803538 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075518205 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077591733 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077509805 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08731077 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077614784 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077068175 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075657337 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078123318 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076714063 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074890809 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076329258 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07806276 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074910614 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079061083 seconds)
  done (took 6.490189653 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083523478 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08812744 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069294789 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07813147 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077168387 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069380011 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069487895 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069544769 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069601753 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069356649 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109800603 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070172834 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077277209 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077643425 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069712264 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069784127 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069278154 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077023353 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069080699 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087667904 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069606341 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076847147 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077018174 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077117091 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078023852 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074811108 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069609239 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06962911 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069610775 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069210893 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074224857 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069776841 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077167249 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069217905 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077107617 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069465838 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06935538 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074458139 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069730286 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074943891 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077224725 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08572839 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069352515 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069213568 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077915251 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069171448 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069623293 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069092894 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069734524 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069301364 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077949038 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078323162 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078214374 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076912101 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069684359 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069756856 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069452823 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069565976 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069496722 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074633078 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07688084 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069005816 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08717828 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069225208 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069150824 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07667536 seconds)
  done (took 6.411419249 seconds)
done (took 135.805504819 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.186450516 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169004263 seconds)
  done (took 1.851621914 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.0704997 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098207555 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.079989493 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130481751 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066577658 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.09958531 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098569262 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077771217 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066366183 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065854346 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066480424 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067843457 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13083798 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06642512 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066192514 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068123704 seconds)
  done (took 2.830232828 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100533871 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.180037201 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102667437 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.0672048 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100344461 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07542033 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067341723 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077037343 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07327447 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067301565 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074943412 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072941063 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066959198 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072677016 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073556412 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075156708 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067219457 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075114595 seconds)
  done (took 3.004102246 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103439519 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094372019 seconds)
  done (took 1.714293007 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158355614 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105499829 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150206901 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.332448177 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.159355526 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229859933 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129564672 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.128629977 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118723293 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122461107 seconds)
  done (took 3.14690895 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101167068 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.150162293 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.257618662 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116017059 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072280054 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.091014665 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117973297 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.079512551 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079473649 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079794566 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079674812 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078277632 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098602323 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075819677 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075773652 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078211376 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101347688 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074854948 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077290656 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076150468 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099015029 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067571317 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075955816 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074770087 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076987438 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076993027 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067573171 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06748898 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07653653 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076378362 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079202143 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092165883 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07682592 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106985292 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07211344 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108423026 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078398682 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073346828 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075618392 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073203662 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078286223 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077582891 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074090644 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078149615 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06732061 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078805968 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067725103 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067236021 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080175235 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068812466 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080070371 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079367927 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106655805 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068928307 seconds)
  done (took 6.175322986 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.668709581 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106133266 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072610467 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110835176 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095385963 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073856035 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.691504613 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093042619 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.177615481 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.094555834 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.090859693 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072273687 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083242616 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086249416 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108958166 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100308092 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092971303 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073794263 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102630254 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.100647918 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070026521 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095386675 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092611704 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.378168339 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06966277 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071809038 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069632586 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071776155 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.113204064 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079884491 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071804054 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.122562657 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.090713314 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.121811044 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069070215 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06992007 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069786414 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081528027 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.182956982 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.136766466 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.131767909 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06904912 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069789444 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070901346 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091444185 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069517493 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.112008472 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08209349 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.120361105 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071900273 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071512042 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069915651 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070995913 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081836466 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079019486 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083390128 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.226824323 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070016604 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069789286 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072991912 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.18031686 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081382005 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081771411 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.094669814 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.134431289 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070293488 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.699598973 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088054049 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069907949 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071414073 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069645261 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071717702 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.196691855 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.120285075 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.361189876 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07243552 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072483497 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070702755 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.151622283 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081409579 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070509475 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.115604399 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069878272 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071496081 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071618485 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072525034 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.120035589 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082634567 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072210538 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07006851 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071896682 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070398732 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069560668 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.165025305 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082823411 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081793557 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.162641694 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071490953 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.113642722 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.08158154 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072074129 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081991394 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070166356 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072440842 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071250955 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081220292 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.097013466 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081498069 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072908257 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071117462 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.099615734 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083375137 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07035945 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080638305 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.401908465 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.082485869 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069950568 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08331532 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070203414 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.114267529 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072197565 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.185181393 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071107866 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081193253 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071250102 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069415201 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070362158 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.113270049 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072063237 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070779943 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071104734 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071932373 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.082188479 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.134383402 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072583099 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.160809126 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.135333421 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07238333 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.120910627 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06989012 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.119375801 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071963089 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073221831 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071687302 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.690495853 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068525682 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068083751 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071608988 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.139560957 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070273929 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081368245 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079924161 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069375776 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.712867345 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.209607011 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077992137 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079695771 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070181452 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068612848 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068529608 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07350729 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.11288053 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.147087386 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073011779 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07078416 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080158033 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.114243095 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069437045 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080511438 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079780025 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080489643 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070854949 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072481197 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083134872 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.117039384 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079436166 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.137483455 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.509679118 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072017278 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079972837 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.14596883 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070471376 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087053774 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07050952 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.085285228 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.115359203 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079872321 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.230682603 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.116204242 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.140011654 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.08272526 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.086612522 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070144165 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070604532 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.081506106 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070733742 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07252844 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.080640085 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071982672 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07228036 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.087318548 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068556996 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.177233045 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069518606 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.081459324 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069800287 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072213766 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086051844 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071134326 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072205717 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081938782 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072691723 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079532501 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.789237898 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080743011 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07028307 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071992628 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.137692374 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.11524903 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069855429 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069858982 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072830528 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.12087035 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.15913255 seconds)
  done (took 28.891743174 seconds)
done (took 49.140273227 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210455894 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150086184 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.199113799 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116361945 seconds)
  done (took 2.288500931 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.124783343 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102580469 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.096195373 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066290344 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10353563 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067011427 seconds)
  done (took 2.111277769 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.306039234 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.206324453 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.179202887 seconds)
  done (took 2.238555443 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.19650459 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188486612 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.39557245 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252212177 seconds)
  done (took 2.699259306 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145045195 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090444743 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068975554 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085525629 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135927375 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161120186 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101685615 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127336685 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080043986 seconds)
  done (took 2.602589305 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146960211 seconds)
done (took 13.650665278 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.218705248 seconds)
    (2/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.168110774 seconds)
    (3/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.19756146 seconds)
    (4/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.099123847 seconds)
    (5/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.082173846 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.152807277 seconds)
    (7/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.148038477 seconds)
    (8/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.193333576 seconds)
    (9/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.101840204 seconds)
    (10/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07696136 seconds)
    (11/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076876663 seconds)
    (12/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076141143 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083906332 seconds)
    (14/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.181781348 seconds)
    (15/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090891851 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.212266448 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.120763291 seconds)
    (18/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.152001718 seconds)
    (19/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.161627517 seconds)
    (20/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.191661141 seconds)
    (21/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079933146 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075615884 seconds)
    (23/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.163794131 seconds)
    (24/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074926354 seconds)
    (25/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.090138167 seconds)
    (26/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.16560355 seconds)
    (27/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.119036315 seconds)
    (28/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05340733 seconds)
    (29/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.074044031 seconds)
    (30/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.206922866 seconds)
    (31/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072866413 seconds)
    (32/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.066292822 seconds)
    (33/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073587916 seconds)
    (34/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076402171 seconds)
    (35/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.204201379 seconds)
    (36/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071197062 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073281961 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090042608 seconds)
    (39/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.073561232 seconds)
    (40/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091594237 seconds)
    (41/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076967861 seconds)
    (42/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.065035265 seconds)
    (43/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.161278777 seconds)
    (44/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074052075 seconds)
    (45/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.109961934 seconds)
    (46/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077541141 seconds)
    (47/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056539255 seconds)
    (48/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07406396 seconds)
    (49/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077834608 seconds)
    (50/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056560092 seconds)
    (51/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.173899632 seconds)
    (52/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067118132 seconds)
    (53/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073341306 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074444674 seconds)
    (55/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081797703 seconds)
    (56/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079269617 seconds)
    (57/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120374062 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.139243933 seconds)
    (59/309) benchmarking ("sort", Float32, false)...
    done (took 0.12922703 seconds)
    (60/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054676187 seconds)
    (61/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.111123431 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.179206281 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.102845091 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073648777 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068856197 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.097413092 seconds)
    (67/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073489157 seconds)
    (68/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.063516441 seconds)
    (69/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066940382 seconds)
    (70/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.144518964 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.096974871 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.102399848 seconds)
    (73/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.154929233 seconds)
    (74/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.110831262 seconds)
    (75/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084611281 seconds)
    (76/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.053213751 seconds)
    (77/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082977238 seconds)
    (78/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.143061975 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068838314 seconds)
    (80/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077960278 seconds)
    (81/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.205874585 seconds)
    (82/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.101218859 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052959036 seconds)
    (84/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.068839184 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.097996169 seconds)
    (86/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063653765 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092663811 seconds)
    (88/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.172751501 seconds)
    (89/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073375643 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095439033 seconds)
    (91/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.231378359 seconds)
    (92/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.180160356 seconds)
    (93/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.05298849 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 0.068861088 seconds)
    (95/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.152222527 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068213375 seconds)
    (97/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083411188 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.15581773 seconds)
    (99/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.117754659 seconds)
    (100/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071455744 seconds)
    (101/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.069673959 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.11581113 seconds)
    (103/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.101066449 seconds)
    (104/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.145423664 seconds)
    (105/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080723918 seconds)
    (106/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090702665 seconds)
    (107/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.169434746 seconds)
    (108/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.073188485 seconds)
    (109/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073103325 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091489435 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.094617076 seconds)
    (112/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053184979 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.143592481 seconds)
    (114/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055035322 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067784392 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.149725578 seconds)
    (117/309) benchmarking ("sort", Float64, false)...
    done (took 0.128208537 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074954932 seconds)
    (119/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.308403205 seconds)
    (120/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.136433909 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.146463646 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.078244282 seconds)
    (123/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074663387 seconds)
    (124/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068163835 seconds)
    (125/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.081227327 seconds)
    (126/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.054547121 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.136032519 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076138381 seconds)
    (129/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070515795 seconds)
    (130/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.054424193 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074270723 seconds)
    (132/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.151253017 seconds)
    (133/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.111223259 seconds)
    (134/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083241899 seconds)
    (135/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074153087 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073189994 seconds)
    (137/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.142565655 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074353498 seconds)
    (139/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068375371 seconds)
    (140/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.052417582 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066249618 seconds)
    (142/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14791698 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095642223 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.074056128 seconds)
    (145/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08877427 seconds)
    (146/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.052726672 seconds)
    (147/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073753404 seconds)
    (148/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06641155 seconds)
    (149/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077446087 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066918152 seconds)
    (151/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074060565 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066699765 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074290596 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093720373 seconds)
    (155/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.109372165 seconds)
    (156/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.071534325 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08984712 seconds)
    (158/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070166703 seconds)
    (159/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054119928 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075249956 seconds)
    (161/309) benchmarking ("sort", BigInt, false)...
    done (took 0.186706102 seconds)
    (162/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066836321 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.099225429 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066875459 seconds)
    (165/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075615596 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.147812192 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068729475 seconds)
    (168/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.141161485 seconds)
    (169/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069240533 seconds)
    (170/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069303349 seconds)
    (171/309) benchmarking ("sort", Int8, false)...
    done (took 0.142206504 seconds)
    (172/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.054018368 seconds)
    (173/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.114926627 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.179424138 seconds)
    (175/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078757795 seconds)
    (176/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082438802 seconds)
    (177/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064229026 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094180662 seconds)
    (179/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090130961 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.142022691 seconds)
    (181/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077610472 seconds)
    (182/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071093522 seconds)
    (183/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.150845895 seconds)
    (184/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.161864373 seconds)
    (185/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07473706 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073735317 seconds)
    (187/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.054123534 seconds)
    (188/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.107669625 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075868121 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053202333 seconds)
    (191/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.172308447 seconds)
    (192/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.054881834 seconds)
    (193/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.152807037 seconds)
    (194/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073727841 seconds)
    (195/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.053997015 seconds)
    (196/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.33560335 seconds)
    (197/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078501261 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.112024593 seconds)
    (199/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.0532017 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.127239169 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114992771 seconds)
    (202/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.053318971 seconds)
    (203/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.165715383 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069258512 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067079274 seconds)
    (206/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068690713 seconds)
    (207/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.142087491 seconds)
    (208/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068429931 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090802892 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092755727 seconds)
    (211/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073630061 seconds)
    (212/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.072191076 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076716096 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094643141 seconds)
    (215/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053520553 seconds)
    (216/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054920089 seconds)
    (217/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068211134 seconds)
    (218/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054239605 seconds)
    (219/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053081653 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073483283 seconds)
    (221/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.053100384 seconds)
    (222/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.067977717 seconds)
    (223/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075483996 seconds)
    (224/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068255288 seconds)
    (225/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.054908722 seconds)
    (226/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.174897443 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092775739 seconds)
    (228/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054656944 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067717142 seconds)
    (230/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.053073943 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068797497 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.078698005 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.106188989 seconds)
    (234/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.150387714 seconds)
    (235/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.054427262 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067416883 seconds)
    (237/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069490081 seconds)
    (238/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053673499 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.14024071 seconds)
    (240/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063770354 seconds)
    (241/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17342181 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092971739 seconds)
    (243/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.054548508 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.170624148 seconds)
    (245/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053206863 seconds)
    (246/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.142267859 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095589864 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067957409 seconds)
    (249/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054797137 seconds)
    (250/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054080523 seconds)
    (251/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053195753 seconds)
    (252/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.053949588 seconds)
    (253/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.054582751 seconds)
    (254/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076662298 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.113465249 seconds)
    (256/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053216982 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067217274 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067500616 seconds)
    (259/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.052896484 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170272579 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.09889375 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089839001 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074049297 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074582828 seconds)
    (265/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080343226 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067072637 seconds)
    (267/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073895496 seconds)
    (268/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.053723705 seconds)
    (269/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.110646417 seconds)
    (270/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073877895 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09247892 seconds)
    (272/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054837903 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067225378 seconds)
    (274/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052915124 seconds)
    (275/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172335008 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06749412 seconds)
    (277/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.053019455 seconds)
    (278/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.073205298 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074847583 seconds)
    (280/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055718014 seconds)
    (281/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.055826185 seconds)
    (282/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054687723 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065872102 seconds)
    (284/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068474167 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065820965 seconds)
    (286/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066269443 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07473801 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.115835399 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.167472151 seconds)
    (290/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077445965 seconds)
    (291/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.068847546 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072743927 seconds)
    (293/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053199946 seconds)
    (294/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.055240403 seconds)
    (295/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074873837 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066837075 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090396878 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067240801 seconds)
    (299/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.053189208 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.12953051 seconds)
    (301/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.053884487 seconds)
    (302/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052765269 seconds)
    (303/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053127837 seconds)
    (304/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075045761 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07264663 seconds)
    (306/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068755234 seconds)
    (307/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072105726 seconds)
    (308/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.054022941 seconds)
    (309/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067568756 seconds)
  done (took 31.186622529 seconds)
done (took 32.748153625 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085929653 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095335061 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076829196 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095081225 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082950198 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079667187 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074594428 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080138922 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081661072 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083549637 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.08074789 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057000895 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075332301 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075865328 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075914613 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093457522 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079922145 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074232809 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075096918 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066735037 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074867622 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067796037 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069243116 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057302078 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079927219 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073807104 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074620564 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07559943 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067937797 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06794821 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070910905 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074871646 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067236492 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079925202 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073751371 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07448563 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076710502 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078156268 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069515314 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067983701 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075761171 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067791144 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074302764 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075312442 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074105667 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072965397 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074891805 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079803589 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094278136 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070814861 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076409647 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078781362 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078675186 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074359767 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071601083 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075353093 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072658118 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093807536 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075180853 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070740938 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075804007 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075782162 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072790404 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074692397 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075097932 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077167906 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077180154 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072856539 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076977016 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073083205 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067817003 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075005193 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070693502 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067590764 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077874776 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078887115 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066112859 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072605595 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074492581 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07347071 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06695061 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069914478 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068993783 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073257899 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070117306 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05705499 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071049417 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073631038 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066756762 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074877377 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073414365 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074475184 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068981581 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077407281 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06684502 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072353328 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067490719 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067577568 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069264018 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070817983 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067419007 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070708613 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076115075 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069026146 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073423891 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080913868 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066921492 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073107342 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066204975 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066858011 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081373029 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075858301 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067266237 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07047648 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06621237 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073891728 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066522784 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067153216 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066837916 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067440565 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072971045 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067281325 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069829504 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074083617 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079142924 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066746729 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070247685 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069518989 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06697454 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071859583 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067416973 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.199177799 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066814972 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062019801 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068797084 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065400116 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074589016 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070335418 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075517256 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069537925 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075793104 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072089531 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073685453 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073018979 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067865568 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061527707 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071099075 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070728034 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069215547 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067908188 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069065006 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06761309 seconds)
done (took 12.900416636 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068431881 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143254215 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100969261 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09828462 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089176941 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069030657 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.078856791 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10424089 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070226702 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.105110012 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090389867 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088216843 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115675713 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066710366 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067943078 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071528931 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069075156 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084272629 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.103752088 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088857121 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.1112319 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067127906 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096385101 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092352373 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.089824853 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104225711 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069495219 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071919639 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071709219 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093664872 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089582341 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071892418 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068725837 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100113163 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.095086828 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085970275 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068818699 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084901302 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068900596 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067768104 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.083357682 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100426039 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.082841641 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082881149 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074835505 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071968062 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069708023 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086244659 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091360481 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081283003 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088969535 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.105251244 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071345279 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.067905029 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067214699 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086894768 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06701655 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070919945 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068614257 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.070290202 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068252264 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071856247 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.083218087 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.089530752 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072366123 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.082748985 seconds)
  done (took 7.110980468 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086585623 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092999771 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085817941 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08652034 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069037306 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068755076 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068520592 seconds)
  done (took 2.204471356 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069180999 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090646684 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.09184407 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091388455 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086566496 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089501592 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078082419 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069080697 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.083596715 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070386876 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08947673 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.104137911 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069330901 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07528123 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093318083 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068569743 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092626113 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068286544 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071843928 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.092722688 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071230892 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.085470185 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072228309 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069028357 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083483857 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069137089 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115006719 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073247604 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07072488 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071454617 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066963282 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108581419 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082748723 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07800497 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068521495 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083409562 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082963075 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067243868 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085265495 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074407557 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083059198 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069498553 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069307667 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066743508 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073183251 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079425905 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06966163 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069471909 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071352211 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088921632 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.069346464 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082765423 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.074219064 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071698883 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07008735 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073195175 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078561103 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069464868 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088813696 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070191933 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085592974 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084961918 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082316866 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085249264 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071296243 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082752492 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082528442 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071249749 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070274316 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071986699 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085191089 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066724197 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069587636 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079051365 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070010679 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091995905 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091523574 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069474525 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078036879 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068651462 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068860135 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068870374 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092021708 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070803418 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068431086 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072990145 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071910891 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066849469 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067969642 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072255894 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066745161 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070301314 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071509456 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072045371 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071913985 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085628713 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070991476 seconds)
  done (took 9.13867953 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07162415 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070523708 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072544776 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070347548 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070383307 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070494484 seconds)
  done (took 2.102033399 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096264519 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.071848579 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082322653 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075188477 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106747706 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.089524029 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.090364942 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.08201912 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086968476 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082050049 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.089541649 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.091060434 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095932142 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.075750843 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.089528889 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.074426227 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.090048955 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078913829 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08119049 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075637574 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089417167 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.075239449 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075567874 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08436697 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.078279534 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075301512 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069444662 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081494969 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081065305 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081815946 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076255953 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.078534426 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073340772 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081008495 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.089081769 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072106424 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072795306 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077566522 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072568767 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075487617 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087842092 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075769088 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.076616876 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.080475593 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081445244 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072995388 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.080237414 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07894007 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.089169181 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.079765656 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.079733522 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074587229 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.078216511 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.080039649 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073501035 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081086668 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07977303 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.089405001 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075423288 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072006303 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070676631 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07776426 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080224609 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.076471491 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079043176 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077173901 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072883859 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075053786 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075332343 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074478184 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.079791535 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071877173 seconds)
  done (took 7.409267228 seconds)
done (took 29.602951667 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.548417032 seconds)
  done (took 2.172743468 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.619287732 seconds)
  done (took 2.272370575 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.439075413 seconds)
  done (took 8.087641505 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.393627197 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.501460993 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.713063232 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134755156 seconds)
  done (took 3.430310986 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.670697533 seconds)
  done (took 2.331895031 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.212227337 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.19877293 seconds)
  done (took 2.079434901 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.372914472 seconds)
  done (took 2.023663319 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.10717296 seconds)
  done (took 2.758387247 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.262636099 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163058945 seconds)
  done (took 2.082318339 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.474752919 seconds)
  done (took 2.128420393 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.817777422 seconds)
  done (took 6.474639716 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.211381331 seconds)
  done (took 1.913014404 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.243485594 seconds)
  done (took 1.898274382 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.729474227 seconds)
  done (took 3.382721924 seconds)
done (took 44.703588414 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082727105 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083985822 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080227159 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078145662 seconds)
  done (took 1.960945095 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078875229 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074532555 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078747357 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074428255 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078578542 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07425801 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076098583 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079039678 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074223014 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.075244976 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074742663 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074198591 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077060548 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076622365 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072842349 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079353607 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.078277554 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074670679 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07757205 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074200455 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072988661 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076351953 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076906393 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073783147 seconds)
  done (took 3.476588968 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079063048 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074501105 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076759934 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074310495 seconds)
  done (took 1.965705924 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080781639 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09415457 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091902763 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079413892 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094154104 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08776944 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070937386 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070928553 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072333531 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079432328 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069464649 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097969425 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089382095 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079075612 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080892217 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067725713 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070512285 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088781332 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07905553 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079171423 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074086703 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078763422 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070032362 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090261757 seconds)
  done (took 3.593561164 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079663109 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10521085 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.079626023 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089785186 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092018353 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06757353 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.076667256 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090903845 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124044942 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065319474 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070538086 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065479827 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071583927 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064458452 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075595687 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103223184 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106623188 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067971286 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095089227 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067195497 seconds)
  done (took 3.325314675 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075155014 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072166692 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067624319 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071429305 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079048813 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07494626 seconds)
  done (took 2.107073154 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069816359 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069562075 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069197998 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069088992 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074076705 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069138616 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067898776 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068778556 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068848428 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068683302 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068391579 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068050675 seconds)
  done (took 2.493526852 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.342800799 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071069123 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068047635 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065527025 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069902873 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065640168 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079226565 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067322905 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089869561 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067638575 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06817509 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070818534 seconds)
  done (took 2.78834051 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206891051 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077588716 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234619883 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13633708 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11361069 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117317639 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105124976 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115045095 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144311776 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10334565 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17034661 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164506251 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109023792 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138404981 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091127409 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.101291586 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156912739 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164229843 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105531367 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167865303 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146013051 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126352555 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149360174 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103428492 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10772381 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123544626 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073448823 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082221729 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170572015 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132672738 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147681089 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112573758 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095680789 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17671617 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170477753 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143552861 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136133311 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086909161 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104502214 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135922085 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199840192 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088826348 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161589344 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242804096 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080042243 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138668653 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118669806 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119136154 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107223274 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090163181 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145218597 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183494671 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.14017367 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089969214 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11452367 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117849532 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117394085 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105086816 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183845427 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16176219 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128711704 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07343699 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101696166 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154155526 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133277309 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.111233739 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127608022 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094815168 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133973102 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155671861 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119873322 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143988638 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.131323267 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090625414 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121472266 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141690327 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127834751 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168459158 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122293144 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071878105 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122500843 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1019513 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080202393 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140454475 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074597828 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172093784 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097817534 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105345231 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112708256 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10809901 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107667357 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158825241 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280994036 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102628876 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065584474 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10227142 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.11895699 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145225405 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087149126 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107029645 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115603602 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077538187 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137589806 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076464206 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124777701 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077687579 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125623593 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130525521 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077995589 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125227013 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10285765 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101796122 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13399158 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161214267 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091393869 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084217192 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168751824 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123866131 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104323902 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141733885 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153160915 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.100295256 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102616222 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147160308 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176060462 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088697077 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15974677 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10618772 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082697847 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086701064 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121637436 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110819606 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120149438 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081069108 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117059404 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16475683 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074481605 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094004899 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131384185 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07822025 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079640939 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103525448 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099230342 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094534037 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098934789 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102342048 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136669724 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121127473 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.24521411 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124231439 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0974418 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167835614 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088148897 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099148898 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102598353 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069127203 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135719768 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157499953 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08223411 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166062049 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.125525286 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106402477 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121040832 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085410017 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141711927 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081102467 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072570869 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14496119 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113050655 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112065205 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149939878 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104024026 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126205539 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.117285242 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13189941 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130650415 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126861866 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103227505 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087636154 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110259396 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123573942 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072701352 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09012042 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078897019 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102743524 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094925509 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082323682 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139151922 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122768496 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098887366 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110511818 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094882223 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144680222 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077511656 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127921352 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118297005 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095663464 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153115512 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152972568 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131038506 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097991394 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142420632 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07053151 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074215182 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.229297421 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121953515 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082522568 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082882852 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116742784 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144877878 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127980356 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138501615 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112949288 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123151513 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157481979 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071703008 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117898216 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149149904 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122293226 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.107407371 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0926902 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101342029 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145120744 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110925509 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183108303 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114243206 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122355205 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151307843 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098383905 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079065623 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103698719 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134168166 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105021163 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14690133 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098599184 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089459164 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110397236 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075150608 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099916578 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126516029 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120857758 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134500528 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114061053 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130010375 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076303377 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117727825 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122776174 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122877506 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064796706 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120286613 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161953361 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096073553 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120027506 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153581703 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080980436 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.126087324 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.318517826 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14446797 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084352063 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108372195 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117025677 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125477161 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118732213 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1387655 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108469444 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133809449 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107206813 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084570264 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086365109 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09613761 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103311868 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093416929 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106464712 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113193076 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093914281 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130575839 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101907988 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107787889 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11657419 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096226378 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090359489 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095797113 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175401333 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121358291 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169102624 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097850759 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143509384 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164614397 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07668828 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080986956 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080422825 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141711713 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086137316 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131713769 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.099922823 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107652137 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125809926 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141923911 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093579919 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068228502 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110679564 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135003092 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114048134 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100424451 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106992425 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165752371 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.103184862 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081925391 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115736063 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106408161 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104262872 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314666503 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062328438 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096868073 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075443813 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07989556 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126163616 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151227821 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080228256 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101726805 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117015233 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108831333 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126005318 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09962531 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098138191 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113028654 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148569148 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127346928 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089463774 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114474993 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130509988 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173759103 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106974572 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095588553 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169463554 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149200009 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160475031 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090833226 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115964816 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116571195 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109856522 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139980048 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085273655 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165007844 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084121289 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138505082 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110198942 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092232873 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132009665 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.100848071 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090155971 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147074533 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117668799 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081787944 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076561386 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115640135 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118448798 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105893328 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075203894 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137592751 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072479471 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130232879 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165213259 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222138383 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104265981 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096340797 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079830202 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106331956 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10105843 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086178328 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097914505 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169850709 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087331056 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147323382 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138546757 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111587983 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13475224 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099137785 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.634294557 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076963704 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152665375 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115425468 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170107302 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096229779 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116589378 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110480472 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123557437 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143346033 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106530218 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177831959 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133530269 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.118253862 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082296161 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104455915 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104692347 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.09085256 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107590582 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115982605 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118003682 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094971208 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.1174868 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124917674 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.084372422 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097785238 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156190387 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117399811 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144132365 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140807103 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087573024 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120481972 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141141448 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082399867 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.123339243 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153520104 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10798945 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241720772 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080268606 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101559288 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168199411 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072901871 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159559216 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118555068 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108491682 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111614661 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112268754 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12952398 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107585616 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12027562 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092022139 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109580823 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110947963 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083405599 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079567811 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106578968 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113739896 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099916633 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100712634 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098895945 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148957673 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070638353 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094892847 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10198443 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142987774 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175009266 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088743843 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081845445 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117064805 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110951137 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111395493 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118736512 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07832903 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081423199 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082703168 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.079395098 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107309484 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110364416 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103071984 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109285085 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16146226 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084598068 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225885028 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09739463 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104803551 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.06981146 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079491089 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097408628 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098385847 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107538768 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099370735 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169177144 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094130763 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088758878 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091020561 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072499001 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223096394 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126189149 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109248379 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117474137 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095768109 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062870725 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107780404 seconds)
  done (took 59.007880034 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110330038 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081843515 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096248501 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148902226 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121350504 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210262672 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155993055 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198086936 seconds)
  done (took 2.888237756 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070031318 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096525819 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101511404 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084470573 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069638384 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.07017391 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.220111925 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082515651 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068646665 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090098738 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080798884 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070810485 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.407467989 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068050054 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071231358 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065117005 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069202993 seconds)
  done (took 3.540404965 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.379233244 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.369625266 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.368565085 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073049818 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.645788422 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088125754 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.070371763 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.095816176 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070715716 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.265291045 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.698801019 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.09144069 seconds)
  done (took 13.983181609 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079311786 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072138549 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.086655903 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086598052 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074995441 seconds)
  done (took 2.246545055 seconds)
done (took 105.073433912 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083249559 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.308954625 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056090657 seconds)
  done (took 2.154460205 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086601416 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.0877899 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08811893 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086444446 seconds)
  done (took 2.113824117 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077433189 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079746833 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.087517735 seconds)
  done (took 2.001851563 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.228823201 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.144339989 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089580605 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084983795 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080571406 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081552368 seconds)
  done (took 2.00725577 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07490415 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077480865 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.075006072 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07926501 seconds)
  done (took 2.06340354 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080104619 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056195853 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057660204 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.058945437 seconds)
  done (took 2.007656727 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089904358 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082084312 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081341601 seconds)
  done (took 2.007545253 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110686107 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.087813876 seconds)
  done (took 1.951917308 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085197823 seconds)
  done (took 1.842282538 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102049762 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.117144199 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132670533 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112744408 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140474182 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.112204971 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088386393 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089232686 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079599766 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089870733 seconds)
  done (took 2.824725706 seconds)
done (took 23.28133957 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082294084 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.461830503 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363970496 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095836455 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671366073 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359747556 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.004135924 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096081625 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126881325 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070226378 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087394072 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652397748 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.960670266 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.416491515 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.946317412 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.321886957 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652369823 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07175466 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070668091 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071061847 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.98976708 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071107739 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070752776 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071610782 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652555683 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374405064 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071378695 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.321164146 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070825552 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072805565 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.3582978 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07226358 seconds)
  done (took 16.520858316 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074024786 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121517868 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.0766394 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086862314 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073750829 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072537747 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072808144 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07032668 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129042985 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071026197 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088417703 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07057659 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074891682 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072004286 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090980439 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071186455 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071768771 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071636842 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071843602 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07164735 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090775082 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070823225 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071555827 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071370196 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071189507 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083358408 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072304764 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071308632 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071939075 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073750607 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074415866 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07254864 seconds)
  done (took 4.267483388 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118920849 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129509612 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077046643 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107215767 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115548707 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073347712 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147598972 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096929145 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131560171 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071828615 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088741893 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071187874 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104989734 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072525936 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091355113 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071451276 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072611751 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071891036 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072013364 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071808328 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091210799 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071697673 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071790484 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072478154 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071699101 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084598204 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071954494 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071849543 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072213249 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073621754 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074908426 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072765694 seconds)
  done (took 4.53210127 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075390249 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078157141 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.086022248 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086705034 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072426859 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074682959 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075504034 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072782254 seconds)
  done (took 2.397215318 seconds)
done (took 29.483108807 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082656531 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071566497 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075957875 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084189699 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07608034 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081540132 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069694974 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077223595 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07496501 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075891762 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077845573 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070815102 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07401462 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070089666 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076799237 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070379075 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082548633 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074898975 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083980747 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082720673 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073005389 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076098626 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077337202 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082766382 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082768194 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081956202 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080223594 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075426221 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072144111 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073294564 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07995092 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.087782534 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.07099078 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082014035 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070358686 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.07040014 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07377764 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.07033499 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082221052 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078809171 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071795123 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078516467 seconds)
  done (took 4.976442924 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091823978 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096700107 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.088711518 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065006662 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.071440865 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.068442421 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.09291477 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062789011 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062993909 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092748572 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059005526 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063019712 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065669623 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057270749 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062492892 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060200733 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.064967681 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058867873 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.06245607 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062748641 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.061279316 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057279153 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.06319744 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065743674 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05950975 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065073964 seconds)
  done (took 3.563678096 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077061759 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087377407 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091449062 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131508346 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106824296 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080350172 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081686829 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090621706 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088472216 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069613614 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07429304 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096651147 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091463316 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076895636 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072475897 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086795019 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084559272 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071505628 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076052663 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093744677 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087322502 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080213464 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09648379 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083425977 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069594447 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072127348 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074230854 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.101126262 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074374652 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078766641 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074290182 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073741682 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072327713 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081831104 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073707147 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.07151817 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092687215 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07967683 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080537357 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070894937 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073873786 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071379441 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093128502 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126078271 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06993643 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07715334 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.078647808 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079562828 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.07050729 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089054018 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081867615 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.0698779 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073507026 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069906486 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070617777 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083942578 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072583577 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073192391 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079527472 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073555771 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08306154 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074954963 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086263339 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069797383 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077775993 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069655149 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071433673 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069505618 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095929678 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071969049 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112787741 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071459321 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071314079 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079166788 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077866346 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076688742 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071145657 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08587194 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081009693 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074349609 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079250198 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.076201495 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073575736 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091045993 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073107781 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072283487 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071234547 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076504725 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073289102 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071941197 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084105042 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070191045 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073240575 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087423148 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070045194 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071650301 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076491607 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075170233 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069991281 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082487599 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075010369 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071141548 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07968813 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070478633 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073425552 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080727204 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076645475 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069879605 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074726002 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.076562063 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071050223 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071867595 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073610596 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072143451 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080231111 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077376723 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07490228 seconds)
  done (took 11.037832852 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164580466 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.161116911 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074153307 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148319128 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079667294 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.082477834 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151396202 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098159345 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070924972 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071242106 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072032897 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.119749894 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10926089 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.130104306 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081686194 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070735245 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.08632815 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.121448268 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153154491 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147166549 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.087095096 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.08069007 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07335615 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071995656 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.077167305 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.085448112 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.098228362 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079796957 seconds)
  done (took 4.661009557 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083662355 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.105366235 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076982048 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092365084 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094401587 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070874067 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073451396 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072763183 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.083488641 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081741886 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073123209 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076763976 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077741165 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.078752853 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07149278 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077603916 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078571368 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072598059 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073893678 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076583535 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080278687 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.083271726 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074964867 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070273252 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076882501 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069908009 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06706534 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.087156714 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071198789 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.093618346 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068729127 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.078123216 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.085050731 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071473773 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.07093112 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070660977 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070555771 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070668666 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072904065 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069197791 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069118511 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.06065902 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069872343 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082178971 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.077072585 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.059980435 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075448297 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075789626 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076319848 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068426777 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07360919 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074093316 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073997277 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078609831 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076131959 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07637802 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071906815 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.070182334 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078258193 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070843421 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067778585 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069082778 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075496185 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068666611 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.07877387 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075260462 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069254452 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070208783 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072441426 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.076812012 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070714689 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074032285 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068374374 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072792501 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.075051737 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072462518 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071899597 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069090546 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.07014939 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070752549 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058896864 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070596004 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056659415 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074051081 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068899481 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069195511 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070900947 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075286291 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.082464603 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072014698 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.076872488 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071562607 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069829693 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073761086 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063632087 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073547759 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084791616 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082451612 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070789682 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068533197 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085999342 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075324932 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069522928 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.0599262 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.078307614 seconds)
  done (took 9.601472519 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.098668095 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091286656 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073119802 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086779453 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.094677257 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091040349 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078382283 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07992099 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072311109 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.085227476 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07668263 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079569579 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070936323 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080068311 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.099152843 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079820657 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.073027077 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080181797 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075387111 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.105573291 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086403565 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.085048402 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.077803718 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071103998 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078984727 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083764433 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094051691 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.08379889 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.081523188 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.078662664 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.083686045 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.094335456 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.077238128 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.075914035 seconds)
  done (took 4.64649401 seconds)
done (took 40.256326374 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.845499484 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.029675716 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.847465611 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.240428884 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.929999433 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.868345605 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.917993286 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.86093181 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.167822352 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.88499026 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.086239432 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.895590963 seconds)
done (took 66.357874843 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.906808011 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.979140665 seconds)
    (2/2) benchmarking "String"...
    done (took 2.109116511 seconds)
  done (took 5.867308495 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.2214349 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.37018255 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.082921888 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.83715779 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.843282402 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.144139684 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.629224872 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.368942443 seconds)
  done (took 31.054341905 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.090536937 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.047545006 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.536318917 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.573972174 seconds)
  done (took 16.086418758 seconds)
done (took 65.004175097 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.852727624 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.836365984 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.852723271 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.82520298 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.896346076 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.844686752 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.945767106 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.069019981 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.838058394 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.827758211 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.835933448 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.25947892 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.837103793 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.992006141 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.837950702 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.843602952 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.869573219 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.280092446 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.990395507 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.847953126 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.840546912 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.864891579 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.837099908 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.980362988 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.842153178 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.836699348 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.29191469 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.847542286 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.477580209 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.841499696 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.87034013 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.190154393 seconds)
  done (took 206.880814056 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.839737688 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.871640927 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.853923633 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.843635933 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.240085642 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.042781078 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.964921059 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.28377012 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.844462348 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.847533923 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.014935276 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.843245346 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.022474836 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.794154026 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.851036722 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.843950666 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.012280975 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.044686733 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.84253197 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.083702642 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.845776837 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.916645288 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.854657874 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.999303928 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.860180733 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.896591803 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.867597922 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.859680702 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.049543113 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.994806067 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.855620127 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.8467291 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.039949379 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.712892518 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.839426764 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.85322794 seconds)
  done (took 172.061970862 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.23666185 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.839552992 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.839163472 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.840770663 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.845421589 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.841558277 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.981880567 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.981380505 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.322616274 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.282230625 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.890163961 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.839943493 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.690366654 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.839837532 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.841584858 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.907839991 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.854383939 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.839784646 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.855225053 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.867971079 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.842839369 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.841768459 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.972895406 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.854135825 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.868331945 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.847753312 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.841965897 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.84616869 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.212174294 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.842270866 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.847916849 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.086785756 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.847143137 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.842486617 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.760469983 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.889587006 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.945240839 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.841988009 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.848903153 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.843889078 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.063954105 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.841167676 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.842810309 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.845606178 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.039913188 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.843348667 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.978045009 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.844102113 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.36322967 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.842669064 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.843310556 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.181131148 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.993046701 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.846027109 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.846023565 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.848502343 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.846137992 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.846339074 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.860829213 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.685579653 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.924259702 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.84926004 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.849484175 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.853676382 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.84767926 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.974320584 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.847759974 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.671580477 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.903860324 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.05968499 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.96979734 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.846444812 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.915775935 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.941331725 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.845736739 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.848617493 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.847021274 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.846324564 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.928758633 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.846149757 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 4.060889167 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.846192578 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.854272992 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.848273456 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.898548334 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.918489963 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.847492646 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.762332211 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.849027287 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.847576468 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.180238436 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.917148042 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.847282798 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.848826657 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.849309995 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 4.002633435 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.969857276 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.644692634 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.847450744 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.626429798 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.849918522 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.022128651 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.973235916 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.03415072 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.851695297 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.930607453 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.850530947 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.849423607 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.850157478 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.848253409 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.878581709 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.849884772 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.913479935 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.847973427 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.218950184 seconds)
  done (took 411.871553232 seconds)
done (took 794.892049255 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.535891564 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.499139576 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.607202004 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.519263538 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.497825873 seconds)
  done (took 14.447899891 seconds)
done (took 16.235129145 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.941877769 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.942913876 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.874808184 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.939416668 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.871429793 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.93871269 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.924592484 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.877511207 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.908059912 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.878284098 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.910443111 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.875642637 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.86383799 seconds)
  done (took 26.535498812 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.08881573 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.09068137 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.922988144 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.093693703 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.898712564 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.083096095 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.030240525 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.003062277 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.01376579 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.869662972 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.86501191 seconds)
  done (took 23.748093195 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.089432108 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.088260758 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.925815256 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.089728058 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.90049009 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.094494495 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.020352258 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.008018645 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.011698065 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.867537642 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.866249384 seconds)
  done (took 23.75320735 seconds)
done (took 75.826175111 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.861109214 seconds)
  done (took 3.650636262 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.882552835 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.023120041 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.866716545 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.868083585 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.86294858 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.861302113 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.866868217 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.859917708 seconds)
  done (took 16.882334488 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.861356026 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.858358568 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.858569776 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.862279898 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.858711361 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.861291329 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.860162101 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.859114975 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.862088292 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.860064129 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.858448314 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.862533913 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.85907682 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.859729411 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.862102301 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.860450401 seconds)
  done (took 31.555923019 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.86071789 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.858694199 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.857661782 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.860193572 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.860411382 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.860857437 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.860041094 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.860358618 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.858944914 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.859884189 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.860073859 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.859206654 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.858737145 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.861707137 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.860526831 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.860025068 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.859701632 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.86093113 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.8637214 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.860707222 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.861176268 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.861287922 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.861600065 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.859851039 seconds)
  done (took 46.441781647 seconds)
done (took 100.320008375 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.537032058 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.274174131 seconds)
  done (took 8.603868349 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.864209824 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.862282631 seconds)
  done (took 5.549434006 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.863460273 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.863004023 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.864538433 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.863226051 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.863829566 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.863397403 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.862715765 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.863421797 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.863814487 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.864101805 seconds)
  done (took 20.429362661 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.86357241 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.863494257 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.861515389 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.863963123 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.864210528 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.860948706 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.864842318 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.865189448 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.86482015 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.861982038 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.864070116 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.86339768 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.86505519 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.861873883 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.865294202 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.861952906 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.863388102 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.862818762 seconds)
  done (took 35.33532822 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.866308338 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.864761022 seconds)
  done (took 5.5259247 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.863064436 seconds)
    (2/7) benchmarking "second"...
    done (took 1.864829201 seconds)
    (3/7) benchmarking "month"...
    done (took 1.863074294 seconds)
    (4/7) benchmarking "year"...
    done (took 1.86243868 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.863150102 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.863962923 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.86223398 seconds)
  done (took 14.836515592 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.866797791 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.021600617 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.095225043 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.551961023 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.868004278 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.869990629 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.857354391 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.869383035 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.870039854 seconds)
  done (took 20.66531866 seconds)
done (took 112.738485291 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.691120493 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.861171098 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.249040993 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.902292068 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.911596549 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.157780122 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.863314002 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.07947356 seconds)
done (took 43.510911205 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.900750105 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.336080941 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.331793701 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.600657413 seconds)
  done (took 12.063693233 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.844092067 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.391050795 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.892471918 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.454774272 seconds)
  done (took 20.38833352 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.225731209 seconds)
    (2/2) benchmarking "read"...
    done (took 2.215073987 seconds)
  done (took 6.243042741 seconds)
done (took 47.393169015 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.865942998 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.867723088 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.863301117 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.865229812 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.867814141 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.864690519 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.864819514 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.864713416 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.867015097 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.86640189 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.868928686 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.867334697 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.868826927 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.868821916 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.868495394 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.865704467 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.864879684 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.867238361 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.864969351 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.86472518 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.86397439 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.867484716 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.86444041 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.863604176 seconds)
  done (took 46.583897112 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.867488371 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.863801449 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.868401074 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.868186053 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.86492491 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.869240569 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.869536938 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.867572029 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.868050874 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.86887142 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.865104906 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.867550359 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.868286408 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.865409081 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.869620569 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.86778731 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.869389461 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.865477108 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.868074976 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.866657966 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.870703471 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.867034505 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.865923269 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.869176116 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.866496801 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.866436039 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.869317616 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.867865698 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.868929062 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.866285557 seconds)
  done (took 57.825690713 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.87457614 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.876912727 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.871321478 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.870078491 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.86849897 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.869313552 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.870064447 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.870445334 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.871552434 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.870953464 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.869874505 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.870299937 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.871874529 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.870234912 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.870898138 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.870873703 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.871636933 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.87312362 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.871541834 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.871534906 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.872360062 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.870931344 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.871527486 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.870585145 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.87298774 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.872648873 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.871807111 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.870230357 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.872392868 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.871971718 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.870625048 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.872750943 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.871675348 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.871494973 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.87248931 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.871603218 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.876865479 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.879469533 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.871567138 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.871979145 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.871964554 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.873427813 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.871110282 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.872107554 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.872172546 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.872563967 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.872270129 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.872673067 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.871132974 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.87306606 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.872614247 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.871262558 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.872745829 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.872657912 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.871831135 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.873160883 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.873390453 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.87304322 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.872332286 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.873264998 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.872301211 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.874095621 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.873139518 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.872600236 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.872848974 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.872712398 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.873665469 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.873420297 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.873617855 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.873941107 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.873709293 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.873942821 seconds)
  done (took 136.60524071 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.875499804 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.872639621 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.871546646 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.870541025 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.870738101 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.875241671 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.870945434 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.873598993 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.871650885 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.874590377 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.874006753 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.87144264 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.871770957 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.875777373 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.872713951 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.872032606 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.875414544 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.872844202 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.873941686 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.874673372 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.873130482 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.871864282 seconds)
  done (took 43.00970253 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.874085949 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.87584066 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.871032045 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.874461631 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.873135093 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.874737005 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.875345468 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.876730805 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.876541067 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.873068911 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.872326063 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.87503759 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.871810979 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.872982656 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.872171278 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.874047061 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.875171426 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.872457112 seconds)
  done (took 35.534882953 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.873414115 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.873169114 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.875223255 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.873230868 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.872070412 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.876565158 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.873424447 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.875850052 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.876589497 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.87381644 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.878559682 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.876614902 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.87792074 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.874355103 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.87579379 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.874331398 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.877352334 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.87496706 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.877713221 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.873981794 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.874744245 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.876952444 seconds)
  done (took 43.060403607 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.876787651 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.876375691 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.874396242 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.87372166 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.875032318 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.876349832 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.876250799 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.874908837 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.877040561 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.877971417 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.87399991 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.877602182 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.874279735 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.876108387 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.87589341 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.877454806 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.87899608 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.877087027 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.877739015 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.876242182 seconds)
  done (took 39.330891852 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.878270822 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.877781097 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.877753057 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.878212981 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.878587775 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.879409846 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.877909786 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.879401776 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.878949445 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.878377129 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.879406881 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.87934192 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.880156514 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.880164288 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.879313963 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.880329848 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.877785132 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.879148863 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.880759056 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.880898873 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.880538842 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.879215425 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.878979818 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.88196112 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.880264353 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.880765595 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.880634102 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.880623347 seconds)
  done (took 54.43180087 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.878823053 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.879505302 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.877234215 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.876911711 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.877242313 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.87615963 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.87662473 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.877980048 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.878832033 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.877567531 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.881312071 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.881535553 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.880599017 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.880069955 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.882035312 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.880347428 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.880171458 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.877412054 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.877969332 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.877344539 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.8800928 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.880532806 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.879518391 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.877008 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.877755418 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.879875372 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.879118053 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.878161553 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.882157832 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.877705971 seconds)
  done (took 58.17607939 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.900537136 seconds)
    (2/2) benchmarking "in"...
    done (took 1.899896168 seconds)
  done (took 5.608970253 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.877183179 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.881777657 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.880907086 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.88026025 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.87815123 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.881466878 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.881373702 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.878535662 seconds)
  done (took 16.849735426 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.881248165 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.8816962 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.882963827 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.883215808 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.882764132 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.881203794 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.887765122 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.882646016 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.883961473 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.881945966 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.887533173 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.890060058 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.885782146 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.881251891 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.882343172 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.883254126 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.882532913 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.883085395 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.883909189 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.882849178 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.882646862 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.883827801 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.883469576 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.879868266 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.883076752 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.894288969 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.88812931 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.882475815 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.881987576 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.889046743 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.882491147 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.88160009 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.884817548 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.885342094 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.884657632 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.883712834 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.89146098 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.882503247 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.890906858 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.884068245 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.884558724 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.880421875 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.884339891 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.886042289 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.883526061 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.883367435 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.885046223 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.881631669 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.882180171 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.886938859 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.889538204 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.883697239 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.882192416 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.891159687 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.884849894 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.89189802 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.887102571 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.88638592 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.893367093 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.895469869 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.899950559 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.890628563 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.886848923 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.886529538 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.894048777 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.911178318 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.892159021 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.882886825 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.881950513 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.8853099 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.89350701 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.900296914 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.895345308 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.885230463 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.886976594 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.88591486 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.88626456 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.886660471 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.893064236 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.887920555 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.886488356 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.886534993 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.894390923 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.906667305 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.884356015 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.886619252 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.886112145 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.886329922 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.88559854 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.895699268 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.887407522 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.886968638 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.884330053 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.885332419 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.888451742 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.886073514 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.885007268 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.887118367 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.883956312 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.886769337 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.886379685 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.888610267 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.895105051 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.887597194 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.888259504 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.895362978 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.886430477 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.886690949 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.896866113 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.887671532 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.887067914 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.885714509 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.896244189 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.886284932 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.890944716 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.896508112 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.88810387 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.888277507 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.887621267 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.888106826 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.896539304 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.914848858 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.887852594 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.888097117 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.892258954 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.900361441 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.887170601 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.891335007 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.889596375 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.885721181 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.885541457 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.889432196 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.889754447 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.887641454 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.890027426 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.890375356 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.886065204 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.889710342 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.889519223 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.889937246 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.889841149 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.889113583 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.891260526 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.889596826 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.889667171 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.8894891 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.89657671 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.887862621 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.890141519 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.892033065 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.886886137 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.888730727 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.890746928 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.889650197 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.890368315 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.891015506 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.888090176 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.891162374 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.890954708 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.889898034 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.89041828 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.889311792 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.891610951 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.890135752 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.894387438 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.88867768 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.887446686 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.89136796 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.890463929 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.891055013 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.891974759 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.887980762 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.890786539 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.898890054 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.891628694 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.890758846 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.89467596 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.891343508 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.891365367 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.891985184 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.892364665 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.89918828 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.890738511 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.898179081 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.892021367 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.891879955 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.889875075 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.89095007 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.890159516 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.89170831 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.893803124 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.898733566 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.905503042 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.900534225 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.89174502 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.89731797 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.891822526 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.895833866 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.89600236 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.892869797 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.892515591 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.892584384 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.891210209 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.893519243 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.894227991 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.891288039 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.892444032 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.891976269 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.892805024 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.892808773 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.892369361 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.891624264 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.894639434 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.888380256 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.892751911 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.893885031 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.890562296 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.89200382 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.890117077 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.89233086 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.894245083 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.894297758 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.902995676 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.891447362 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.892597837 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.894513358 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.891691517 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.891922698 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.893470999 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.89559968 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.892454126 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.899928617 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.893812319 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.894730301 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.898278267 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.892669502 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.893353342 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.894664475 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.893599907 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.890987045 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.895044769 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.90252862 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.892377245 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.893986611 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.895528722 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.894271558 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.894257181 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.903256931 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.892700469 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.892390321 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.894887049 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.895362721 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.892195143 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.894160663 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.89496908 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.895332385 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.895788179 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.894687887 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.895424205 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.895883734 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.897032535 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.895428271 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.896566773 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.896821111 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.904111881 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.899911987 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.895838559 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.898287599 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.896017288 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.900367196 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.895293931 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.896265783 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.89453498 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.909644551 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.907043487 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.901886891 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.898563368 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.896116919 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.902185212 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.897436917 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.898581734 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.89592681 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.897558255 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.896161002 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.894850984 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.895233681 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.896617626 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.89710954 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.897572779 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.896485214 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.900949017 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.8981468 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.894635437 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.898429733 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.897112455 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.897614018 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.895624118 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.898167256 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.901464374 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.899827287 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.894400291 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.895763434 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.903797313 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.897220504 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.899932686 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.895469179 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.89627738 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.896774933 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.899672277 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.899399085 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.89947008 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.907607417 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.900408796 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.907530364 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.89689816 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.908515133 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.899428253 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.900365185 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.90796693 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.895851622 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.896988721 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.898478587 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.899661106 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.906484016 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.897817729 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.899432168 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.904121637 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.899782852 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.900908144 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.899453064 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.898477675 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.899312914 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.900141632 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.905824396 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.900030383 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.90206811 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.900408831 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.897398949 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.899022133 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.900540961 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.898463411 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.903362377 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.900765857 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.899620139 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.898561348 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.899856773 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.899947421 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.900302892 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.900478932 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.896517392 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.898931868 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.907651939 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.899450805 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.904546784 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.899750363 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.911028158 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.902371105 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.908350109 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.901105281 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.901854812 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.899915553 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.901055772 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.902353431 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.89920892 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.90201042 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.90083784 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.901474927 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.905136752 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.903691519 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.903966882 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.900225337 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.903924808 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.900452552 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.911035945 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.926735549 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.902823371 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.905872953 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.899455562 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.900680782 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.906568885 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.902797537 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.900161356 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.903182196 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.910870647 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.910663379 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.900438451 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.903601915 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.901361798 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.902200494 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.902073651 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.901532508 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.902833942 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.901927498 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.902751651 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.902462648 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.907495722 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.903373072 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.902073667 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.902545304 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.903052227 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.913319065 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.902761107 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.902641899 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.90354065 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.902709643 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.903843634 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.900950283 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.903617777 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.902892638 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.903095691 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.902070463 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.908357391 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.909501576 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.904585243 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.901494125 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.905014547 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.903122564 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.903223457 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.904129915 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.903736178 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.90491071 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.903848428 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.904131406 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.905243899 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.90071973 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.902546257 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.902833931 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.905472445 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.905052721 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.911636617 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.903909307 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.902290592 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.903774786 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.905413274 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.903079755 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.904993594 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.9154544 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.906451796 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.914712648 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.91263723 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.908054386 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.902764659 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.90576539 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.911771817 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.903899978 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.905462973 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.906794398 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.906845546 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.904746213 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.906955859 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.905789127 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.912765179 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.906007569 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.903660849 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.914181011 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.906259966 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.905638011 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.906139913 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.910441451 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.904782624 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.903158986 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.905387327 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.905231045 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.913016663 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.907951859 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.90732755 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.907541269 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.904340732 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.906882665 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.910804541 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.907299635 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.905152332 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.903177347 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.905011168 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.907516707 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.908282288 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.905982806 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.903985625 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.907761623 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.909288967 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.912618016 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.905589039 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.909483194 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.907700198 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.906355294 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.908455962 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.907593316 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.905697694 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.904235502 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.90617252 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.907076692 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.90782338 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.909394753 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.907286314 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.907185935 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.908795952 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.908102071 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.90999995 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.918284292 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.916646409 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.905307343 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.905552471 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.907537461 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.90978777 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.907099746 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.908896022 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.907363688 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.909237248 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.907513131 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.908753905 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.907049842 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.910993972 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.925970517 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.908551703 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.907779737 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.909587833 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.914547955 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.908532988 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.906116974 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.910536357 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.911300999 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.911667245 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.917825497 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.910413855 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.914398224 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.90978232 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.908589338 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.913307172 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.9132955 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.917767361 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.911102991 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.909516605 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.91085727 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.913692373 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.928761374 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.911122049 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.919289054 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.941874118 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.908043481 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.910270363 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.909328194 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.908461006 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.910641977 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.912214374 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.910647988 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.909289507 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.910617202 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.910978774 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.910539248 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.915083924 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.910865888 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.91045697 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.909454571 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.91070876 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.913263809 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.907812335 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.910765163 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.910670407 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.9123599 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.912044308 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.911326233 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.912026227 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.926730326 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.923093677 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.911981033 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.911892555 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.907611945 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.91583598 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.912767593 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.9218189 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.920344647 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.91249248 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.912973438 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.912694968 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.911426234 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.909327807 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.911619278 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.912271325 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.911690119 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.909934858 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.92598024 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.920824811 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.91614408 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.912310633 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.911650329 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.912747877 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.91366532 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.912385509 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.913169408 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.914665682 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.912225442 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.917899222 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.91358346 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.914287094 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.91406955 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.922010875 seconds)
  done (took 1133.665660599 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.910241919 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.910720759 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.91179611 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.909566419 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.911943046 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.910807942 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.911369948 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.911993377 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.910296239 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.912096662 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.911663748 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.910710278 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.910463109 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.911507625 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.911257255 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.911280387 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.912278367 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.912369478 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.912469856 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.911455344 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.911829562 seconds)
  done (took 41.979514408 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.914012878 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.911515582 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.911208221 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.91525308 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.911831577 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.914757591 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.912232614 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.915287284 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.915628787 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.910892498 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.914184067 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.914061634 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.913042933 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.913583508 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.912502985 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.915614006 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.916045955 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.912744064 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.914840595 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.91336474 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.91694281 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.912392299 seconds)
  done (took 43.944268244 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.917538609 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.916158143 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.913238081 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.913171239 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.915786363 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.914144636 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.915925072 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.914599985 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.916852311 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.915588289 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.914243146 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.91551551 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.921934172 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.921382843 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.917873168 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.917530084 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.060492067 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.917291212 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.917133653 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.916151611 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.914038402 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.923068937 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.913642479 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.913359416 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.913654062 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.916391663 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.917795837 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.917585064 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.917672735 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.916619238 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.922447685 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.914771594 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.916339656 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.917074871 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.915190197 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.917586966 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.920790298 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.917697414 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.915956815 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.917589404 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.927477726 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.93853033 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.917780902 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.925889 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.916927872 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.917180136 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.92043604 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.925503492 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.91604041 seconds)
  done (took 95.961855003 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.917613323 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.917666047 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.914619491 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.917744552 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.917843719 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.918809122 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.919857138 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.917881966 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.916164971 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.914636732 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.919091596 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.914959848 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.91411089 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.918544854 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.919052143 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.914758932 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.915076201 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.915104735 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.915153728 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.914811918 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.914687494 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.919055531 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.918274937 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.915329549 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.918727684 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.916110713 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.914882883 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.917851284 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.915566738 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.915983111 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.918097236 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.917811246 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.91885264 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.91485485 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.915791111 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.918688172 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.918605804 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.916479944 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.918471034 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.916404971 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.918787459 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.918872985 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.920114305 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.919516322 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.915703533 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.91690335 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.916639004 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.915760558 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.916564049 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.919859118 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.920418361 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.917559116 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.919467014 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.916769338 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.918928282 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.919613942 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.917580651 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.916990963 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.920624341 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.917235285 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.917269015 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.921211559 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.917446553 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.919666387 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.92072595 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.91809896 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.917170345 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.920096362 seconds)
  done (took 132.237180999 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.920613376 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.92066078 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.921297483 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.920403474 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.920562622 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.921155428 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.919755228 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.919932594 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.922182287 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.920858747 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.921890762 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.922772597 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.921760169 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.922680958 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.922017558 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.922469871 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.9226641 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.92299499 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.922505058 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.923893353 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.922213696 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.92263159 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.921188347 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.922608147 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.92481613 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.922748906 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.921737976 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.92294529 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.923549587 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.922451963 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.923102782 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.922551508 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.922029609 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.922903634 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.924643001 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.923488386 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.923800113 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.922182801 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.924768364 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.923766139 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.924167363 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.923871448 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.923346724 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.92369337 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.924877465 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.924174233 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.924617256 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.924744651 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.923397891 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.925011071 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.926080218 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.924010405 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.924207006 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.924587043 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.924262373 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.923976173 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.924328981 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.924024209 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.924492019 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.922958284 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.924048842 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.925472985 seconds)
  done (took 121.077019449 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.925220114 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.924294586 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.921146831 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.920592662 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.923931179 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.92008561 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.925537296 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.923310738 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.924765291 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.926025232 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.923367943 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.922604963 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.921800933 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.925595863 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.922186695 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.922405232 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.921498803 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.921394142 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.926059227 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.922164189 seconds)
  done (took 40.31525018 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.921837336 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.925138946 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.924145413 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.921266413 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.926054857 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.923576032 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.924745561 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.926191935 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.923638983 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.926665855 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.927091008 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.925234034 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.923827852 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.922819917 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.928250092 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.923798372 seconds)
  done (took 32.646482759 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.924122378 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.926601703 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.925749553 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.9258761 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.922926013 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.92585928 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.926898318 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.924978509 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.923282901 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.927550014 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.927824142 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.92688287 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.927266353 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.926952723 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.925276344 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.927888123 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.924302137 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.926122082 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.926645424 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.927251291 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.92467149 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.925075295 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.928734675 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.926933744 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.924895063 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.926227575 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.924712099 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.924110312 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.923716422 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.927014472 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.926398194 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.925807262 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.926885011 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.925348787 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.929069685 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.925084481 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.928923382 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.929116515 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.928101913 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.928949078 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.929014052 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.926132764 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.929339779 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.929147533 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.927037148 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.927929057 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.92675408 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.926914067 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.92519284 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.928418043 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.928827482 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.929397985 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.929544605 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.92878415 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.930095668 seconds)
  done (took 107.827776442 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.92984799 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.929864788 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.926325662 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.929018352 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.929377764 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.926666071 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.929900786 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.927231454 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.927052481 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.92976454 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.927219332 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.928831121 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.927770242 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.929898886 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.928890728 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.929896319 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.927779014 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.926093471 seconds)
  done (took 36.566311941 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.928226328 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.928126758 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.930620283 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.927878478 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.928141696 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.931674477 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.928265716 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.931101148 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.931739958 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.928919678 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.928874613 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.931785933 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.932438453 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.932693868 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.930284116 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.929140369 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.931622001 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.930835656 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.929029914 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.928444561 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.932849451 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.931597101 seconds)
  done (took 44.321353244 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.929818939 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.930960669 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.947019011 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.979720212 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.968526198 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.930204841 seconds)
  done (took 13.543843716 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.930526098 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.931227357 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.92944993 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.933641471 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.932171488 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.928673963 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.929623597 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.9292683 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.932514148 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.930801219 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.93000497 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.931509669 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.932488587 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.928498581 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.933852794 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.933960075 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.930602335 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.9309857 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.930943681 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.932988272 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.930574621 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.933174945 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.930584016 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.931151996 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.93130446 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.93006903 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.933314194 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.932654969 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.931217418 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.93235826 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.933634948 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.931931632 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.933551545 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.932668595 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.932870087 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.934534691 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.931488098 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.934736868 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.934577902 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.931154243 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.935252908 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.934773802 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.933977618 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.932454158 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.933428973 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.931201671 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.93226646 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.9315285 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.931576277 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.93478036 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.935205353 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.931583149 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.936885762 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.936177254 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.934234201 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.935791853 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.931462702 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.93196442 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.935834928 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.933464588 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.934619021 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.933528488 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.932108942 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.932926577 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.934418855 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.932492635 seconds)
  done (took 129.406661974 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.931249249 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.934978894 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.932799914 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.93466415 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.932869002 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.932417923 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.932361072 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.932967899 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.933391848 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.93297219 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.935482048 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.93536526 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.932411212 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.93434273 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.934748722 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.934786773 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.931263918 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.934098117 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.934559568 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.93832569 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.934637079 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.933958435 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.935739898 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.933885195 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.934520513 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.936586632 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.934327935 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.935252948 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.93425396 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.934937555 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.93541811 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.934126449 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.932584223 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.935067126 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.935638668 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.933863793 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.934538206 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.935344484 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.935966507 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.936135676 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.933861619 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.93789184 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.936314644 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.935383233 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.93603639 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.93468395 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.934265759 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.935596811 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.93492489 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.934619743 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.936536386 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.935880628 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.935624984 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.934322965 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.935484319 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.935771462 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.934952501 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.934480541 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.934805055 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.938245038 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.935130097 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.935920102 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.93978025 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.936208514 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.93594232 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.935353799 seconds)
  done (took 129.563437274 seconds)
done (took 2641.869802076 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.961788881 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.942959797 seconds)
  done (took 15.768416604 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.099639319 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.05202386 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.935390434 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.972804034 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.935288704 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.931778033 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.948055508 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.933683942 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.936665562 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.936273796 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.935931348 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.123498629 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.938090101 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.934811815 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.938790376 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.029891554 seconds)
  done (took 53.452244438 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.939792951 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.942550711 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.967837017 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.940185855 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.940208163 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.972438139 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.987829224 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.942974359 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.062708124 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.958109487 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.220795236 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.941583396 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.940657174 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.12951462 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.96412439 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.971912348 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.139981487 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.21664345 seconds)
  done (took 38.046768019 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.247262247 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.933970433 seconds)
  done (took 11.046683279 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.950612489 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.950662994 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.964805699 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.954113782 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.933507043 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.936913892 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.974613703 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 7.004705894 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.98527135 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.941927523 seconds)
  done (took 71.46664268 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.945376544 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.941934707 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.9417919 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.939366244 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.931901979 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.929335356 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.942378146 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.939057709 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.421369626 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 2.021906517 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.966351244 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.946462736 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.941573282 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.94287896 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.941930401 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.96421344 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.078092856 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.939792885 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.940246797 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.945914858 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.944083711 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.011854397 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.972021527 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.941800684 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 2.02166542 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.450612039 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.945345485 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.948947648 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.049852558 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.940308052 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.940934183 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.941577902 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.943375672 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.465004843 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.345003525 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.948912273 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.94629267 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.951142664 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.94088089 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.056403862 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.941999566 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.948630709 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.943474286 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.297114206 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.064047317 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.020910023 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.863273063 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.945284759 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.944399623 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.99136578 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.943806689 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.942552745 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.957056174 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.594460432 seconds)
  done (took 141.537033486 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.959114851 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.422833916 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.092519657 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.959483953 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.368572013 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.313565725 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.939365233 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.126704706 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.985446085 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.333145065 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.23850389 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.194974322 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.936321839 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.940662463 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.933333736 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.935241743 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.161265809 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.149504355 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.939128277 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.940325461 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.973684573 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.370855786 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.136862017 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 7.093054376 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.960960598 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.306256793 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.133857285 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.19707723 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.941279314 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.93419815 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.148843839 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.940742019 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.937188249 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.939065152 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.177939273 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.185278832 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.174854494 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.939987696 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.97801655 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.940265943 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.961384306 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.304779712 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.187483908 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.1472897 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.264964793 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.309322236 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.939299371 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.938588717 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.944027817 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.133226625 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.175833111 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.363586517 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.137873542 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.940798552 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.28277995 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.939377426 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.963463886 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.334885733 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.243386328 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.191622736 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.966286455 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.940265542 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.939691356 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.401065008 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.941703418 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.189042285 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.114054246 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.940955855 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.19337868 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.195049962 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.241682855 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.320166164 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.968660721 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.955032415 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 7.017431292 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.369576621 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.151526837 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.333323748 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.958550226 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.938478051 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.178095241 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.945447678 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.227370398 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.400966219 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.348495742 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.980159137 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.971426079 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.940639703 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.335110278 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.332812436 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.213471489 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.280294315 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.176853641 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.981272502 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.939406856 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.940450089 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.957012411 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.148681853 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.943279884 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.305138482 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.331399883 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.709112839 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.973196492 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.403525497 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.150614628 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.942461488 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.944818575 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.943774879 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.148985068 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.006016528 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.968677371 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.940701993 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.334703289 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.897638415 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.074526342 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.665539894 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.153391501 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.945801751 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.355354249 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.94463759 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.336119128 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.961853823 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.397907842 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.324719652 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.987780995 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.160242611 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.283420973 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.943833008 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.384224582 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.399043103 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.137175603 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.334887061 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.783527566 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.944263901 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.380756954 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.967031763 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.968081119 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.113279987 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.974858388 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.195668075 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.950220964 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.397778809 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.965846599 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.187823254 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.983614024 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.369674143 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.985341269 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.157087348 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.98821453 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.070060299 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.966328028 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.931267778 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.128581074 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.384676121 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.944273364 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.486431352 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.945379464 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.093106929 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.411183966 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.968071067 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.159700046 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.94481102 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.949741238 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.180720411 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.971308723 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.611533978 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.945009651 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.241147447 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.905641559 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.398079487 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.946173197 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.40229472 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.155176087 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.971433478 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.953321847 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.75176694 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.945200163 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.002023967 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.106609428 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.740228643 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.952280683 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.312076309 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.948603697 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.153861996 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.947949136 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.946073048 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.300499206 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.995042908 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.951930937 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.981815152 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.946101528 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.944838341 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.320613054 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.972086389 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.675899307 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.084372348 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.363436526 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.25617563 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.360221576 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.993413466 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.973003536 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.395504671 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 7.012080811 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.160336396 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.946983798 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.972427483 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.337213332 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.948572317 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.362452223 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.38286747 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.970796696 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.139052583 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.946963063 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.288982901 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.948015432 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.162996472 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.186356764 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.94794753 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.950780844 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.136837853 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.144733761 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.140296968 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.977744678 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.985818254 seconds)
  done (took 982.724221364 seconds)
done (took 1315.904810993 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.948855707 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.948691516 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.934432372 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.94852926 seconds)
  done (took 29.662190798 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.957515569 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.953951853 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.956488249 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.955259991 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.956509704 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.956500635 seconds)
  done (took 13.619124137 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.988834566 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.949869549 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.947651275 seconds)
  done (took 21.768066877 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.115641475 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.927147181 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.22532 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.509583692 seconds)
  done (took 12.660874574 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.957291029 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.957427192 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.957754323 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.959181118 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.959275662 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.958930506 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.957306622 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.960492697 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.95967097 seconds)
  done (took 19.509893339 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.952342439 seconds)
done (took 104.055070585 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.353101713 seconds)
    (2/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.95335997 seconds)
    (3/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.425439345 seconds)
    (4/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.060003988 seconds)
    (5/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.096674406 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.943161272 seconds)
    (7/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.948325717 seconds)
    (8/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.518415441 seconds)
    (9/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.595106082 seconds)
    (10/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.999950248 seconds)
    (11/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.031919545 seconds)
    (12/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.987169233 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.152503642 seconds)
    (14/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.092317456 seconds)
    (15/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.9713051 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.946534223 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.841283662 seconds)
    (18/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 4.191737407 seconds)
    (19/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.117142724 seconds)
    (20/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.028969492 seconds)
    (21/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.009145579 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.97730747 seconds)
    (23/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.620997557 seconds)
    (24/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.978370861 seconds)
    (25/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.057605958 seconds)
    (26/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.585487582 seconds)
    (27/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.938134432 seconds)
    (28/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.03629234 seconds)
    (29/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.96484098 seconds)
    (30/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.934660441 seconds)
    (31/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.058520661 seconds)
    (32/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.489804579 seconds)
    (33/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.9783344 seconds)
    (34/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.994944607 seconds)
    (35/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.936529468 seconds)
    (36/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.015568151 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.055538485 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 3.187287712 seconds)
    (39/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.233883393 seconds)
    (40/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.038924995 seconds)
    (41/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.054749717 seconds)
    (42/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.935232671 seconds)
    (43/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.764568259 seconds)
    (44/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.001780776 seconds)
    (45/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.228147656 seconds)
    (46/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.952829338 seconds)
    (47/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.946837717 seconds)
    (48/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.054466571 seconds)
    (49/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.962330952 seconds)
    (50/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.937325673 seconds)
    (51/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.872438987 seconds)
    (52/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.051241267 seconds)
    (53/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.499794455 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.066031266 seconds)
    (55/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.596522405 seconds)
    (56/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.038718356 seconds)
    (57/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.953193296 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.234228701 seconds)
    (59/309) benchmarking ("sort", Float32, false)...
    done (took 5.869557259 seconds)
    (60/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.475574296 seconds)
    (61/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.384533246 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.95337979 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.954534603 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.281924117 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.008598684 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.474867978 seconds)
    (67/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.497295983 seconds)
    (68/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.151361782 seconds)
    (69/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.329309892 seconds)
    (70/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.333213145 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.317970879 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.0036303 seconds)
    (73/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.500943408 seconds)
    (74/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.860659514 seconds)
    (75/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.746679306 seconds)
    (76/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.777858021 seconds)
    (77/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.841048944 seconds)
    (78/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.577676784 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.953187493 seconds)
    (80/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.963303914 seconds)
    (81/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.238393079 seconds)
    (82/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.23207326 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.578081714 seconds)
    (84/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.013567106 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.611999821 seconds)
    (86/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.497349492 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.683426062 seconds)
    (88/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.606827485 seconds)
    (89/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.122572992 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.140356454 seconds)
    (91/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.067195766 seconds)
    (92/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.040816162 seconds)
    (93/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.34186008 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 5.956360972 seconds)
    (95/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.657472947 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.42130076 seconds)
    (97/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 3.015986317 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.976993755 seconds)
    (99/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.697915709 seconds)
    (100/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.037713091 seconds)
    (101/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.005453471 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.029616142 seconds)
    (103/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.964440192 seconds)
    (104/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.875966193 seconds)
    (105/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.982137521 seconds)
    (106/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.972844623 seconds)
    (107/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.939048198 seconds)
    (108/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.021780181 seconds)
    (109/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.988425751 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.857588091 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.294639207 seconds)
    (112/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.367463336 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.051498769 seconds)
    (114/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.037773936 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.289519194 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.059571662 seconds)
    (117/309) benchmarking ("sort", Float64, false)...
    done (took 6.070991718 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.182577967 seconds)
    (119/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.984466468 seconds)
    (120/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.072899029 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.954895635 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.327421991 seconds)
    (123/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.062653594 seconds)
    (124/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.968372219 seconds)
    (125/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.958819749 seconds)
    (126/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.124104632 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 2.445567494 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.981817697 seconds)
    (129/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.022450385 seconds)
    (130/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.946069096 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.213510123 seconds)
    (132/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.205930942 seconds)
    (133/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.883556485 seconds)
    (134/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.751651539 seconds)
    (135/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.04276975 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.505143633 seconds)
    (137/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.629993397 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.239243565 seconds)
    (139/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.012453731 seconds)
    (140/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.220463559 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.164035056 seconds)
    (142/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.957659063 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.730719124 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.062874014 seconds)
    (145/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.975877948 seconds)
    (146/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.340230496 seconds)
    (147/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.593328815 seconds)
    (148/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.04122391 seconds)
    (149/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.131394377 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.676849698 seconds)
    (151/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.985868886 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.530623479 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.986610749 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.004422799 seconds)
    (155/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.259542704 seconds)
    (156/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.169043933 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.860935263 seconds)
    (158/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.020933203 seconds)
    (159/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.150374423 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.981254326 seconds)
    (161/309) benchmarking ("sort", BigInt, false)...
    done (took 6.957275392 seconds)
    (162/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.51191008 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.162480996 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.330168118 seconds)
    (165/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.984988722 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.957710473 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.966642256 seconds)
    (168/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.172455014 seconds)
    (169/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.082995089 seconds)
    (170/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.062902607 seconds)
    (171/309) benchmarking ("sort", Int8, false)...
    done (took 4.955414364 seconds)
    (172/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.942763273 seconds)
    (173/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.946990833 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.982861121 seconds)
    (175/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.963153562 seconds)
    (176/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.590938569 seconds)
    (177/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.869439232 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.948300299 seconds)
    (179/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.956749382 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.972660474 seconds)
    (181/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.044713549 seconds)
    (182/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.969200128 seconds)
    (183/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.452412747 seconds)
    (184/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.810209059 seconds)
    (185/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.98820122 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.986995175 seconds)
    (187/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.413856046 seconds)
    (188/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.237030037 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.004037423 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.328722142 seconds)
    (191/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.953454036 seconds)
    (192/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.839804101 seconds)
    (193/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.947694057 seconds)
    (194/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.010277097 seconds)
    (195/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.945733244 seconds)
    (196/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.050571398 seconds)
    (197/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.958668149 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.031239582 seconds)
    (199/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.171931966 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.986672082 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.039041518 seconds)
    (202/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.891588228 seconds)
    (203/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.436894979 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.959482847 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.050007318 seconds)
    (206/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.961425024 seconds)
    (207/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.838007509 seconds)
    (208/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.978432735 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.223832823 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.733291333 seconds)
    (211/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.988261958 seconds)
    (212/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.160742342 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.524771456 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.161981698 seconds)
    (215/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.957742345 seconds)
    (216/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.469013491 seconds)
    (217/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.967297324 seconds)
    (218/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.945002794 seconds)
    (219/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.978855033 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.984197278 seconds)
    (221/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.510847225 seconds)
    (222/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.977846925 seconds)
    (223/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.9671573 seconds)
    (224/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.961656698 seconds)
    (225/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.164342892 seconds)
    (226/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.135270143 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.876375272 seconds)
    (228/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.237477665 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.002034052 seconds)
    (230/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.25459533 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.271718201 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.680955275 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.034457495 seconds)
    (234/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.159649648 seconds)
    (235/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.235268626 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.673010816 seconds)
    (237/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.064260666 seconds)
    (238/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.955409206 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.961095416 seconds)
    (240/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.036362851 seconds)
    (241/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.983894776 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.733985395 seconds)
    (243/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.749221652 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.983574203 seconds)
    (245/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.159222237 seconds)
    (246/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.348667486 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.009778135 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.678191048 seconds)
    (249/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.946412895 seconds)
    (250/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.945583307 seconds)
    (251/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.433484978 seconds)
    (252/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.130409153 seconds)
    (253/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.236027447 seconds)
    (254/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.048779962 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.058835496 seconds)
    (256/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.972909054 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.640191173 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.130461342 seconds)
    (259/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.872591509 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.976076037 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.953151701 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.29103261 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.991183238 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.348103011 seconds)
    (265/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.605437736 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.609755225 seconds)
    (267/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.991271484 seconds)
    (268/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.3944545 seconds)
    (269/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.038066289 seconds)
    (270/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.016613721 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.425671723 seconds)
    (272/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.20181785 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.488588413 seconds)
    (274/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.367514103 seconds)
    (275/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.968481928 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.242785955 seconds)
    (277/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.273905771 seconds)
    (278/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.109787615 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.063266024 seconds)
    (280/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.954676594 seconds)
    (281/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.990718484 seconds)
    (282/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.444501548 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.055037286 seconds)
    (284/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.079639236 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.085205374 seconds)
    (286/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.076751173 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.190731016 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.06732444 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.969296339 seconds)
    (290/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.096012098 seconds)
    (291/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.055871994 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.013066473 seconds)
    (293/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.615838506 seconds)
    (294/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.955648192 seconds)
    (295/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.135618161 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.252141812 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.738476358 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.345321063 seconds)
    (299/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.146566064 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.087284042 seconds)
    (301/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.405987769 seconds)
    (302/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.23036026 seconds)
    (303/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.278885509 seconds)
    (304/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.997157207 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.994833337 seconds)
    (306/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.9758798 seconds)
    (307/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.055456869 seconds)
    (308/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.616287672 seconds)
    (309/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.536524998 seconds)
  done (took 1084.501405547 seconds)
done (took 1086.386878186 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.003942329 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.000258608 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.983133364 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.005584664 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.093667538 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.011307087 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.993070364 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.984654751 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.031054561 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.029824815 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.980776088 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.00930649 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.985115412 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.983960212 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.982055802 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.998048066 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.746374953 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.984959572 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.999535736 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.994528845 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.001381882 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.981174308 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.031277749 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.011208611 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.986246478 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.985338468 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.988854833 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.002918878 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.09684201 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.984437397 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.985194513 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.993864548 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.742760618 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.984406867 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.977440076 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.002925472 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.995322032 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.991241638 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.988043497 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.01487762 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.006865624 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.982418979 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.986709305 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.986260041 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.985745644 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.986835009 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.98728321 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.9901357 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.999201623 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.999233419 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.998299228 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.99872866 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.990074252 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.986031981 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.997051761 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.98464679 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.989953734 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.000517393 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.005630574 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.001293415 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.738327489 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.989583011 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.989062123 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.00286719 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.994338234 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.038064619 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.97843453 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.990035037 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.00749931 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.988406386 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.04088608 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.991668144 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.98816383 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.00124517 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.018603576 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.749871426 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.980860017 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.986338936 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.994634441 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.984955836 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.995824764 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.999306849 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.991240905 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.987459535 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.000988377 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.017838697 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.997643747 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.989545762 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.9961693 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.007657641 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.994670556 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.998737709 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.989438589 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.983008658 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.996400126 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.989771926 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.991689966 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.989579639 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.994579136 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.999627508 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.008750786 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.001987485 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.984531705 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.985195444 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.987105082 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.002795167 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.010189893 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.988005768 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.009329862 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.033872183 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.990752941 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.742912384 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.992804655 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.006272007 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.99897394 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.991553197 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.985027128 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.743230625 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.010046075 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.001940773 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.992156236 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.988361302 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.006496765 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.992396535 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.984028897 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.755548894 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.990586273 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.005480692 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.110594463 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.999557757 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.021812361 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.987886788 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.992141495 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.02301394 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.005825202 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.022699489 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.993929626 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.006831257 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.006794485 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.985739934 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.001953676 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.999869173 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.99044073 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.99512423 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.985990938 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.019780992 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.002728316 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.999070626 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.011661402 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.110995032 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.988580444 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.745163193 seconds)
done (took 319.885361552 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.046654668 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.977922381 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.086315059 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.987499241 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.067906628 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.085878432 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.984988187 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.985885001 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.982193872 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.3639256 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.987681547 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.985619076 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.979784197 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.985145951 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.069722736 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.988551639 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.985520144 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.327266539 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.988511142 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.058403337 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.985816394 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.985976426 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.98910642 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.368198741 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.98485804 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.986412901 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.059353355 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.987673005 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.331332108 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.986649211 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.985566459 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.333492872 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.077104473 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.007126661 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.999826602 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.996385604 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.070883654 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.010952408 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.068637442 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.068154486 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.086436161 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.030706437 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.978072464 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.98740593 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.993501522 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.989727144 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.987360766 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.01670426 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.987829969 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.987760489 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.328254434 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.000081294 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.98886493 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.987428819 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.988932242 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.020756189 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.987751297 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.990456359 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.079174171 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.991167949 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.050485185 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.369455789 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.364609942 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.991638428 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.988383327 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.988392351 seconds)
  done (took 192.282668261 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.055054121 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.064983899 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.073652852 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.992440411 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.042647324 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.078721222 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.991685615 seconds)
  done (took 16.213975711 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.995137856 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.991874014 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.041570297 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.04061336 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.993395475 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.13977042 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.992250514 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.00261441 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.989748105 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.042879418 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.993240685 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.98941394 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.99842175 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.99021934 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.040142409 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.002685895 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.104977185 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.990983229 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.991212084 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.147896066 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.987926016 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.000325908 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.044891925 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.002942517 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.991851953 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.995786163 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.573820108 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.992479855 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.989971631 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.992979537 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.989523162 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.030388684 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.992374117 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.9917731 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.989372277 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.108137681 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.993704449 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.989903622 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.993627304 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.990446178 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.992450698 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.992859259 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.993390371 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.989736537 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.992966627 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.014519165 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.992401751 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.993111669 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.993552812 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.992971943 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.040793003 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.992172716 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.991422942 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.989661278 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.047722033 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.001863932 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.994656488 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.99114867 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.992659008 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.991214191 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.148532165 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.038412882 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.994610292 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.037492499 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.995556848 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.996120991 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.993763271 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.995352007 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.047531518 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.993164767 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.041834838 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.99113421 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.14999082 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.01698506 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.996763694 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.994232098 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.994966359 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.994175327 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.988559712 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.998588957 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.991040282 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.992479083 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.999519885 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.992623755 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.993285365 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.09910147 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.543211037 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.992664516 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.007173745 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.001102248 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.991513388 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.047219061 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.994575171 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.994033052 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.047929433 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.110677342 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.05040457 seconds)
  done (took 218.276806325 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.999624725 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.002802175 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.997598247 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.010317716 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.995248423 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.993750436 seconds)
  done (took 13.917738178 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.996586494 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.996184919 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.997638793 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.995521241 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.994300059 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.997950816 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.997372994 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.996708229 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.001726551 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.997551512 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.998343321 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.996508872 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.995940472 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.995899613 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.995229562 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.991895148 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.996876776 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.99479667 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.995838406 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.997344911 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.141064173 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.994694047 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.995396493 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.995872382 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.998240009 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.995493954 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.003130784 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.995983303 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.996586204 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.003630845 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.002784252 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.998758003 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.997175354 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 2.003798547 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.004153451 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.997037154 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.001010368 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.999967926 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.997415721 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.998848225 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.997862769 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.997117632 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.998715213 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.999209481 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.998244137 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.001239679 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.004132803 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.006201747 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.999331786 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.998177862 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.998755281 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.998655326 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.996988263 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 2.00021029 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.001960094 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.999321499 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.004055233 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 2.000952465 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.000915267 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.996767075 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.998360878 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.000349334 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.00011026 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.00590427 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.007592622 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.999580537 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.001379733 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.005802925 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.999149324 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.999949939 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.000509386 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.995780162 seconds)
  done (took 146.984877967 seconds)
done (took 589.586919351 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.10201554 seconds)
  done (took 9.024778627 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.99718837 seconds)
  done (took 8.922997811 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.263122878 seconds)
  done (took 18.187181284 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.065661179 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.00886991 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.005034039 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.998867716 seconds)
  done (took 30.003298719 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.092172646 seconds)
  done (took 9.01593712 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.994449303 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.991003171 seconds)
  done (took 15.91192024 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.120250863 seconds)
  done (took 9.04641684 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.046828841 seconds)
  done (took 8.971833919 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.000013013 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.016232729 seconds)
  done (took 15.94811978 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.977217554 seconds)
  done (took 8.902227174 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.015506821 seconds)
  done (took 8.937532132 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.99993277 seconds)
  done (took 8.922822988 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.004251636 seconds)
  done (took 8.925505097 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.171807279 seconds)
  done (took 9.094388962 seconds)
done (took 171.737343574 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.988610569 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.988465543 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.988867082 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.987413708 seconds)
  done (took 29.8724581 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 2.03087891 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 2.030536768 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 2.031245799 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 2.041369224 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 2.03395342 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 2.029931311 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.022865319 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.023132419 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 2.042970242 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 2.035109032 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 2.032245499 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.034540871 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 2.031232992 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.02457524 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.033413391 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 2.034285831 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 2.041910296 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 2.033742733 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.024332293 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 2.034681711 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.999228765 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 2.042904957 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 2.034785911 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.997827875 seconds)
  done (took 50.643481299 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.195990765 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.07074559 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.150302292 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.050407229 seconds)
  done (took 10.390340127 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.050343603 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.052611225 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.06337661 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.102561964 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.128148252 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.062062616 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 2.024875277 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 2.020052829 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 2.006903023 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.052197221 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.128757359 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.069936072 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.145953276 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.998721635 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.187019433 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.999551274 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.998893658 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.051502128 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.102353399 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.123617758 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.998994599 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.050405862 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.054373106 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.069613744 seconds)
  done (took 51.466068742 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.998261433 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.007630697 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.005761573 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.000702571 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.998525063 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.000469616 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.006049118 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.000112719 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.022715378 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.999862609 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.99869681 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.00038522 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.00017325 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.999705284 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.999921547 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.012675981 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.013958606 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.00065245 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.002502718 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.00541495 seconds)
  done (took 41.997465967 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.99125394 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.848225405 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.34334202 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.248656571 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.993070042 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.991777683 seconds)
  done (took 32.339240412 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.049795142 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.137753742 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.002043213 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.240076638 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.313605194 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.998803721 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.998813386 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.166580392 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.385670288 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.365889806 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.055281322 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.044255463 seconds)
  done (took 27.682386961 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.993460651 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.995654137 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.000759541 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.010580368 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.028486718 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.005890557 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.005663072 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.995197089 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.030864622 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.035637229 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.006017783 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.030915123 seconds)
  done (took 46.065458197 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083934677 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.037856122 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.540251391 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.757055219 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.372656035 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.20616594 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.783133185 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399632349 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.999814122 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.270046247 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.791686734 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088802456 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.253711979 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.995821186 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.999102368 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.739353119 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.227299281 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.387723148 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.994674628 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.190502015 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023863822 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.001040882 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.345475231 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.013066195 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.208469087 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.129592388 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.25879479 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.997385841 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.22198887 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005488359 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007569092 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.996104228 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.270447811 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.52002338 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090795844 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009080753 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.712286825 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.709393634 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.981647276 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.273915655 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.585423825 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.00236752 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009371193 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.998842438 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.933984935 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.017835715 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409513321 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.002884404 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.711160953 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.999047084 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.008851761 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093807278 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.002139288 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.818549957 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.059196352 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.995744893 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.995664163 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005518378 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.568732028 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.664339715 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.010448009 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.932935389 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.092106614 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.282779333 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.54962105 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.098406185 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.004628436 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.003246967 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.934627522 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.282910625 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.020643669 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337572086 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.015767653 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.660667422 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.605823107 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.805289106 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.932340603 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.439459734 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.996961994 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.933836731 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228449341 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.001846208 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.935862551 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.948069308 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.936280696 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.519395513 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006050971 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.093586798 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002011183 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404184958 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.010408191 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017594452 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024434314 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.224264899 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.883133593 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.000407877 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.569206469 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.126591323 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021198878 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.406375356 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.934353309 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.002005255 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258701971 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.214232706 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.007408224 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.741222018 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162500248 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.008997496 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.015024052 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 7.00993767 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.011792617 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.51171225 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011695189 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.676248842 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020570546 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.001667489 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.560102577 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.005819522 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.10137298 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.835001627 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194631129 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.581633652 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.999931634 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08630327 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.005175418 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.002944136 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.31013176 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.516577263 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 7.002167359 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 2.001983281 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.010239744 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.012078186 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 7.003102912 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.949663175 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 7.010988661 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.848319643 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 7.005936507 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.227026083 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.008499182 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.279053475 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.937795248 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340851427 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.100472338 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.223375422 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 3.010825242 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.000282631 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267993851 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.009734831 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.012054623 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015162306 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021840727 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102690408 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025780508 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 7.014132847 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.262665358 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 2.008029943 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.009156314 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.313748417 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.008041118 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.01046739 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.009247953 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.847152956 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514688569 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.975002994 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.009610374 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.894003128 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.019971681 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068408386 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.009589558 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.015092298 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.369103434 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.810135829 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.009844712 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 7.003338335 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23054137 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016025865 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.294088437 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.08828913 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.160379663 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.521799792 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.016738081 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.938929082 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.716274641 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.700147797 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.005953351 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.939030398 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.004096128 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014801869 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015891648 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.22245078 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.521543552 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.00682566 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.206974375 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.012777561 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016945295 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.011002912 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.007390522 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.342990112 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.679099143 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.029485971 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.017327075 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150106001 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.021385497 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.942171261 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.011914344 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.012249215 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.007208669 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.007967358 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03959452 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.210527474 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433273914 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266562808 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.755578928 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017979263 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.371149984 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.024279624 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.012858315 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.599755355 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.020270245 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.020447522 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014217725 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 2.017420995 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.225431291 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.690606134 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.573137273 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645154216 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.452326273 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.7705984 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 7.01351814 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.009128972 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.419223542 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.942827695 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.572988196 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141029186 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.420815587 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.952942018 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161311926 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 3.010612769 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.582214287 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018604053 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235490953 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.766006475 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.593719857 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022202585 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.219185389 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042071605 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.021113559 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.938959473 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.527377155 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.224245872 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.619912333 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092693301 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416514574 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.624593865 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.015035086 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 7.00838939 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.06767052 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120911142 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.719637118 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.179826335 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.006696405 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.870001432 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435339745 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.013306246 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.236226122 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.562658193 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.025063982 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.165413817 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.944676563 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.020975354 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.020662593 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.010509056 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.847184097 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 5.916575791 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.265663278 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022105675 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.944555847 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.009690426 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.477732519 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.863727786 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 2.015769461 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.010030416 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.56530129 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.010708249 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238859546 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 7.023230047 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.324632624 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.017071578 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.945763923 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.943573466 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.704798963 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.017622469 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.98059413 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.384522325 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.077107504 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.07360257 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.008987019 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.065626043 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.269096514 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.026701337 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.526529677 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.240821976 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.805231036 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033276473 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.113048829 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.643349112 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.000662545 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.013170918 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.248293178 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857897313 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.231132708 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.551784226 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.911788784 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.010976623 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.224448801 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.014068322 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.86097767 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204723889 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.722750863 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.030292879 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.642166316 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033893738 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.859329679 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.936491818 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.103201895 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021002112 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092021432 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02422713 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.024185624 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.023888264 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.127825645 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.857637436 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.018127862 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.027284551 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10849655 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.707004421 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.335264166 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.01863337 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533298235 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.640909908 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.52919181 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.024282022 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.012306803 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.022414928 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.94941133 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160340035 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.239364001 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.292672167 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.136742198 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.150185208 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037676507 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.651981651 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.028864293 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.228954724 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.290349728 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.912056936 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.016014094 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.031787271 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 7.015709344 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026571714 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.225525478 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.396610212 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.459629859 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.135391826 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.024036873 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.425732201 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.29005173 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.018313494 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.014584565 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.60531398 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.041999829 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.090653071 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.019369956 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.895809602 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166731503 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026859468 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.543291307 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.028649632 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.175299255 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.792943285 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.31500657 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.275526873 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.301474005 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.027003857 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.537625938 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.646974409 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279027151 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085086701 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029657188 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.121020275 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165192892 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 5.945559861 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.016831206 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.017157812 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.066518401 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.728104613 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.028811789 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.539720893 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278626368 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.016323132 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 5.944638532 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042039785 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.028916728 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.241979312 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.558212209 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.239256058 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029900961 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.026303241 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.83572557 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.549320934 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.029329972 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.954159134 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.019949164 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209246385 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.255719875 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042792612 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.472501526 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.729862527 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.467541994 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.986163266 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041385564 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.021853853 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.653128767 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536600173 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.338423083 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.410634134 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.573123504 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.020983746 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.294838709 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.023968416 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.017773167 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.29749257 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.023532222 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 7.020765151 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031684702 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.536820521 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.600026708 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.027503081 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.247499241 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.959204097 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.362489208 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.679941574 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.956355544 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.025219122 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.149246066 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.020670385 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.142129637 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030324672 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 5.956636662 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.032768751 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.756490117 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309574273 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.023670518 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.018358565 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.655105132 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.025650609 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026470846 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234224072 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.026256276 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.696436888 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.370676749 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.278008381 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.026020621 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.005488243 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.024207548 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.021575109 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.00800054 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.215775148 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.239012902 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.46902671 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 7.020788094 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.032415611 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.025113439 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.238536851 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232491418 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.886168678 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036063174 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.025987969 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037254166 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.92732667 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.535885902 seconds)
  done (took 1865.599957417 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.041395634 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.020089455 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.022219075 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.02871163 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.024279622 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.08713908 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.072061778 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.130477733 seconds)
  done (took 58.379263225 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.034841657 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.242271032 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.057613373 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.033637912 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.029497426 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.032387591 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.36905363 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.028200874 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.02721486 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.031609588 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.04039226 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.027578576 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.548001661 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.031878426 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.038706394 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.020614581 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.027076553 seconds)
  done (took 77.5746052 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.018932451 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.274844023 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.048162698 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.020252796 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.070306574 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.029225241 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.954211244 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.035139644 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.01806748 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.231946633 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.670406709 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.03951958 seconds)
  done (took 90.364670038 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.025694943 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.02806376 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.031074468 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.028045506 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.028557397 seconds)
  done (took 12.095767492 seconds)
done (took 2396.394160174 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.275137158 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.529907183 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.460237671 seconds)
  done (took 6.941708344 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.173188321 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.220327023 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.34190116 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.348251323 seconds)
  done (took 11.039671903 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.309330937 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.397139707 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.243339045 seconds)
  done (took 8.904734338 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.066594069 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.02664862 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.101907616 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.025859536 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.026507887 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.027524228 seconds)
  done (took 23.037456521 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.03118095 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.034011215 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.031300626 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.034832513 seconds)
  done (took 10.086905029 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.009224247 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.744410125 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.012356959 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.024654195 seconds)
  done (took 21.745828089 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.776634211 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.790783025 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.77502191 seconds)
  done (took 10.297903854 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 7.030093123 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.868200274 seconds)
  done (took 11.854056042 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.313354497 seconds)
  done (took 4.268308995 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.162387424 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.294876775 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.949277072 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.7965104 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.984966716 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.793377357 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.192187097 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.895927199 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.795150745 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.549345032 seconds)
  done (took 32.371043096 seconds)
done (took 156.969365546 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.9291981 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.417993809 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.227733191 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.895926362 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.276101926 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.227338443 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.450186678 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.869111705 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.500827973 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.424079103 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.956558626 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.275469857 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.18479049 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.399822002 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.185213069 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.274041551 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.251540223 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.974658565 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.643018298 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.805523011 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.468095982 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.53885047 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.793359612 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.652801775 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.277959354 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.180420104 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.118122968 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.295517142 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.787046979 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.230654618 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.204062359 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.952819525 seconds)
  done (took 201.623946227 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.029511191 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.026450885 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.037571004 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.025436047 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.970339173 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.058182937 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.024494804 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.026697269 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.831688507 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.74691825 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.048850831 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.875001779 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.050426583 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.025069391 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.026878882 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.025924512 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.993746383 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.06831442 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.025795208 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.025988062 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.028608141 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.78613999 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.048155815 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.877976632 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.868049815 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.049929072 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.042385973 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.027112298 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.026577893 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.026084693 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.029966096 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.028319217 seconds)
  done (took 225.743002968 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.030616045 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.027142595 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.047174133 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.029787589 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.026212662 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.030080952 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.029940115 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.026839447 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 7.025676645 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 7.030260817 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.027916391 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.02778579 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.031200005 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.027056645 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.025267687 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.02743689 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.031512846 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.027191728 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.038618148 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.027645862 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.027997453 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 7.039804476 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.026552857 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 7.027363772 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.03138923 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.030139277 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.029396162 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.027544733 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.028498042 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.029250279 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.051033364 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.029570515 seconds)
  done (took 226.935720966 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.234160114 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.038399205 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.04059641 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.994697774 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.039905134 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.041371088 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.033617056 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.240609642 seconds)
  done (took 20.626277197 seconds)
done (took 676.886103008 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.015510065 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.74783333 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.21245917 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.0625799 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.618305525 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.057805099 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.060779798 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.184473682 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.429394186 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.168164399 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 3.124429849 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.055980694 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.247148043 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.057944002 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.270814921 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.130996375 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.795942277 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.898154319 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.322362101 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.399111276 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.269267737 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.389217354 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.185236008 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.475157511 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.248140719 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.414111045 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.58086698 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.795489815 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.059271667 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.323824501 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.343353878 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.799791836 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.074173533 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.076688695 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.13157533 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.114942147 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.809964755 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.072431654 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.219459811 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 3.175438413 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.436856563 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 3.260848715 seconds)
  done (took 119.078845003 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.030006599 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.031017952 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.029055205 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.029387079 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.030377448 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.030750811 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.028904837 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.028402937 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.032272924 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.029700148 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.030656804 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.031369348 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.031178123 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.032243345 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.031721015 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.029901221 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.031419326 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.031614571 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.029293382 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.030190548 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.032185362 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.029932484 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.032601707 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.030136608 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.030922988 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.030422569 seconds)
  done (took 54.761134722 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.043791965 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.243787282 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.380595684 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.050551558 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.043769057 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.045360047 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.100458334 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.04545047 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.045781247 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.044340257 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.176168774 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.047009613 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.060650778 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.387832112 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.047966016 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.046624539 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.046311667 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.043402817 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.251713616 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.05256933 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.104005518 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.04533032 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.100354883 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.052073113 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.046839086 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.044202853 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.046518486 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.569944471 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.044605867 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.176000845 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.594064402 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.099354164 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.511316955 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.391910007 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.598110769 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.049981148 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.047919429 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.18146848 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.049047936 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.045201174 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.102133878 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.047442844 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.391536891 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.60622204 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.063071494 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.048326652 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.565299742 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.180985033 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.217891777 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.051210801 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.39488545 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.050628872 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.048822615 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.046999832 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.215769271 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.051341477 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.045371933 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.428764175 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.050521918 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.103878015 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.050071436 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.04817168 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.259625855 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.046499177 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.25052312 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.048839816 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.053793961 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.04758159 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.392463212 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.050541304 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.619591372 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.063616016 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.049083443 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.182460844 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.250729364 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.609887779 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.049603697 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.265526927 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.523521674 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.10204108 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.052939295 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.546742598 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.106170757 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.048966571 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.051543977 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.049520055 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.048416073 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.093640242 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.101913627 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.55881781 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.614833667 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.450205904 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.105789498 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.059523427 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.048529822 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.430973478 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.051192621 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.050194881 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.385828802 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.626334477 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.063974873 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.055595707 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.604064084 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.065892189 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.107097046 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.054028855 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.398409551 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.047233444 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.094149385 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.050215384 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.055748272 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.051926604 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.105460302 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.053014756 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.051309413 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.59532682 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.198555998 seconds)
  done (took 256.782070074 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.058276979 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.039994687 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.050247411 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.040877916 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.043941265 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.05003101 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.041226857 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.04411328 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.047717438 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.042522977 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.044170245 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.043215148 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.043109101 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.05402768 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.047652722 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.050760567 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.656148264 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.049800023 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.043368091 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.041820917 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.794891169 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.048156639 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.043940721 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.039052817 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.044718428 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.044855445 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.044411002 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.042550226 seconds)
  done (took 172.609745344 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.053359652 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.463199354 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.055374045 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.135899412 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.080246572 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.049214012 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.134032767 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.083882096 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.053571055 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.049442013 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.050894352 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.271740812 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.052798489 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.419007623 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.173314932 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.13631287 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.42176558 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.055615458 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.05278656 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.050552627 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.137337288 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.067001581 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.27289875 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.465523972 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.056363839 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.465719276 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.041307904 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.054687316 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.050877949 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.465985445 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.052883173 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.273107626 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.107797979 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.084809386 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.46798961 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.41861182 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.42149581 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.136112931 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.053648821 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.050566777 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.053107706 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.039786493 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.465157039 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.054748634 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.054012015 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.45668066 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.056334101 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.055715677 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.063480613 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.051808994 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.085595821 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.088151088 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.279321456 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.47164314 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.111069073 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.075656957 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.136688589 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.403031869 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.054808463 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.421474013 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.041635844 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.472115143 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.06029815 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.041943832 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.05391109 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.060213179 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.161818695 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.139697335 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.425701916 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.056439939 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.422732365 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.161169257 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.052608605 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.05344905 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.057887014 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.468020623 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.426283597 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.161378393 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.140574941 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.201643355 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.042565341 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.054353857 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.041925351 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.10919567 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.056263216 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.466769585 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.426002447 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.058235652 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.056209435 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.057451084 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.058098512 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.176255061 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.470466454 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.111015826 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.418944796 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.276571021 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.277028204 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.059243155 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.090013692 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.058322295 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.280334306 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.059842357 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.088805347 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.451936593 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.275584516 seconds)
  done (took 230.62501863 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.238880772 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.935686196 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.122221892 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.147338086 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.493456034 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.562932803 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 3.040335168 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.098602448 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.12446354 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.149325616 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.567657489 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.149783145 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.197306581 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.10618723 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.638639595 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.090992334 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.126359893 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.142968802 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.14650481 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.874516649 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.558823527 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.303068236 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.155898541 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.696793553 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 2.086740131 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.635116363 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.733917993 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.516427235 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.185010137 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.897914518 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.502287338 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 3.036356443 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.608720217 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.549424956 seconds)
  done (took 85.39958719 seconds)
done (took 921.214784976 seconds)
SAVING RESULT...
DONE!
