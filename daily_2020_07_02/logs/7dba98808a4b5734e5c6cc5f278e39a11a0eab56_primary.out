cset: moving following pidspec: 28196
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.559574071 seconds)
loading group "shootout"... done (took 1.14237951 seconds)
loading group "string"... done (took 0.416566045 seconds)
loading group "linalg"... done (took 7.70667611 seconds)
loading group "parallel"... done (took 0.148764325 seconds)
loading group "find"... done (took 1.356923329 seconds)
loading group "tuple"... done (took 1.885051196 seconds)
loading group "union"... done (took 12.314446782 seconds)
loading group "dates"... done (took 1.297004891 seconds)
loading group "micro"... done (took 0.223451923 seconds)
loading group "simd"... done (took 4.207800583 seconds)
loading group "io"... done (took 0.970028805 seconds)
loading group "random"... done (took 8.563262995 seconds)
loading group "problem"... done (took 1.5326348 seconds)
loading group "array"... done (took 18.621873849 seconds)
loading group "misc"... done (took 1.541797061 seconds)
loading group "scalar"... done (took 38.790821704 seconds)
loading group "sort"... done (took 2.946999446 seconds)
loading group "sparse"... done (took 11.507770986 seconds)
loading group "collection"... done (took 16.470211177 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.522281302 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122996503 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132252291 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118444304 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.151236313 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115878781 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12339433 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082539 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.857839707 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.145518318 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.1119584 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.435513062 seconds)
done (took 5.348601422 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172900325 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085565458 seconds)
    (2/2) benchmarking "String"...
    done (took 0.076947977 seconds)
  done (took 1.28007097 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064492719 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127580109 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065798733 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066234888 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066922635 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066448796 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066427096 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066253793 seconds)
  done (took 1.644209374 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071901974 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070479906 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065298056 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066911556 seconds)
  done (took 1.394109142 seconds)
done (took 5.690827792 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.240140035 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.106684108 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.301208743 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.322833968 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.413271803 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.090536272 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.072836143 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.069316555 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.129254863 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.339274423 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.114760949 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.18853152 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096015169 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.175446603 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.000337184 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.12823463 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084932478 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.121765637 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092752394 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13097625 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.366484416 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.076238141 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.081600448 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.070346097 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.067242703 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.655343989 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.658604696 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.13872931 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082794388 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.07956195 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.11785716 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.644738997 seconds)
  done (took 10.409186988 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099313067 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096238013 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068128702 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123125252 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094805199 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068516167 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073958271 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06700138 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087656516 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12591954 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088725434 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104747214 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065385983 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068889262 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.082253361 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.195059473 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078930069 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080355737 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067404865 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07772748 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105380186 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076631473 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077686808 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078041671 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128169002 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.168234343 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096619286 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097025776 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066231195 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079096938 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114163742 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125180125 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065881162 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068464038 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122679217 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094060899 seconds)
  done (took 4.545580557 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.101866598 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.118255697 seconds)
    (2/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064034403 seconds)
    (3/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.093823743 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.100694953 seconds)
    (5/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.612818906 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065675973 seconds)
    (7/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.147314982 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.233219574 seconds)
    (9/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071945489 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.474993073 seconds)
    (11/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.152630665 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.120194435 seconds)
    (13/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.141027401 seconds)
    (14/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.12097677 seconds)
    (15/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.06880888 seconds)
    (16/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.258126217 seconds)
    (17/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.119975309 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.263228182 seconds)
    (19/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066275983 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.065489582 seconds)
    (21/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.063893491 seconds)
    (22/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.073989719 seconds)
    (23/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066847675 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062757921 seconds)
    (25/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.075138843 seconds)
    (26/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.090548737 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.062449905 seconds)
    (28/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.085786848 seconds)
    (29/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.192537503 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.975191902 seconds)
    (31/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.290470321 seconds)
    (32/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067099714 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.17143383 seconds)
    (34/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.085876474 seconds)
    (35/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.362569329 seconds)
    (36/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.068593158 seconds)
    (37/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.08815425 seconds)
    (38/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.39728273 seconds)
    (39/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.123778835 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064761416 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.160157302 seconds)
    (42/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.128256254 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064276113 seconds)
    (44/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.114888515 seconds)
    (45/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.077007744 seconds)
    (46/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.067798271 seconds)
    (47/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.07024164 seconds)
    (48/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067566563 seconds)
    (49/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.077718369 seconds)
    (50/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.077659031 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.100335262 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066963221 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064554129 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166746502 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064151544 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065704123 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.066717745 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.149078651 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06446761 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.145225013 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063696542 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068910188 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.097021224 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.070069678 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.086742573 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.110163248 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.346283596 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.059017647 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067090483 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.227932447 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077231876 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.065703924 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.081977635 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065799135 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.067816078 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066669615 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.073728188 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069589408 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067889086 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.107309917 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065784026 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069055882 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064960694 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070483728 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.096722131 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064579542 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064792609 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.464403882 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096705456 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.066211487 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.075948199 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103745108 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065882914 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.071787302 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066487419 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.071253515 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065849882 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.069205865 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068960383 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.090419005 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068704626 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111839383 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.191708155 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.070526018 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066958631 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.071241692 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069176147 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069012657 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066507279 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069067104 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06756663 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064323936 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.115655371 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.064530959 seconds)
  done (took 21.975109227 seconds)
done (took 39.149862937 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.238455446 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080825727 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080587179 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081191965 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080628322 seconds)
  done (took 1.782179706 seconds)
done (took 2.992972746 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.106418006 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.066376892 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.099588295 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.099486084 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.063548766 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.06369221 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.097821601 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.063600619 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.097767642 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.100354707 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.101773397 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.101472936 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.066198527 seconds)
  done (took 2.3438208 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.068997124 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079375727 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.081952881 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061719843 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070725992 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080764305 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.06154724 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.079495814 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.086550238 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080041768 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080165538 seconds)
  done (took 2.035326214 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.068551404 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079500602 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.081576556 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062215741 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072345155 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079700668 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.062088879 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.079956961 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.083589633 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080250606 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080146316 seconds)
  done (took 2.026807612 seconds)
done (took 7.602344476 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.073631962 seconds)
  done (took 1.255591064 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.52550968 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.460619297 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.076197576 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.096330906 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.190737929 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.104963231 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.226346206 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.080151065 seconds)
  done (took 8.119165484 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104457497 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.068615168 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069595434 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.068483372 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068433474 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.067329917 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.068630376 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.068488193 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.067928099 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.068417525 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069910597 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067435153 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068279561 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06782906 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069317581 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.06833424 seconds)
  done (took 2.406449768 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095275866 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094148214 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072371466 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073196844 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071011437 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071046656 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07323322 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07354621 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070088898 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071650645 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074359099 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07223566 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072737177 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.062764039 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073260176 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074736526 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069822235 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072574789 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073163072 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074405799 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073429601 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.062840495 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071471829 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072355283 seconds)
  done (took 3.067998277 seconds)
done (took 16.047103613 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112739463 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075591876 seconds)
  done (took 1.378009012 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.076212823 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077420464 seconds)
  done (took 1.358863323 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.074207629 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.060421361 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.080678828 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.071380005 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06196488 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.061523368 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.079368537 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061576422 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.061439558 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.061807988 seconds)
  done (took 1.881276013 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.063531804 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.070630275 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.067443217 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.077184558 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.067924189 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062973891 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.065706835 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.062659756 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.069898866 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.0616237 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.066371172 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080887681 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.065378412 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082657445 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.065806761 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066533699 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.068414979 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065617141 seconds)
  done (took 2.43822481 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.061611135 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.061561737 seconds)
  done (took 1.337875545 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.064570831 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062497337 seconds)
    (3/7) benchmarking "month"...
    done (took 0.064822721 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064991701 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062394033 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061424935 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062403999 seconds)
  done (took 1.650158744 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.361298813 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121747056 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.324990903 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069783451 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.078017858 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.253481207 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.063319155 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.067939311 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.068321102 seconds)
  done (took 2.65927689 seconds)
done (took 13.918353798 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078821562 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084959302 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095850518 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.401596878 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090803453 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066292318 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112156329 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.171753007 seconds)
done (took 2.328051242 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211237674 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.298952085 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.85558298 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.065254728 seconds)
  done (took 3.433007884 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33347762 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085919493 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076580658 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065794438 seconds)
  done (took 1.789776695 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06618221 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069408138 seconds)
  done (took 1.357874652 seconds)
done (took 8.020290132 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063770792 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.088941431 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.063126677 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063816619 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.063023991 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064383326 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063526916 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06330835 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.063101492 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.063831571 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.06309253 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.063452402 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.063297439 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063623243 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064086813 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063934683 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063995299 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063716494 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064069312 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063794911 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063722456 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063473661 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063753706 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064314894 seconds)
  done (took 2.799791575 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.079981475 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065914222 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.066927834 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.066263646 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.067802225 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.066370034 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.06736969 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065599571 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.067237166 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.065198284 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067491874 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.067019026 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.064989198 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.067917048 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065663276 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.067235027 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.067246671 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065600335 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06503617 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.066975834 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.066575061 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065586266 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.067674905 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066704589 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.067464719 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067487647 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06529694 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065874288 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066880663 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.067530143 seconds)
  done (took 3.241390941 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06417389 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059423948 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.060816457 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.068999067 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.059589857 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.060532493 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.060370151 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.059580628 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.060574308 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.061580325 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06083226 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.060262213 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.060787652 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.059679449 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.060266359 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.060715886 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.064071994 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077233243 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.059750413 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.059831836 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.064545727 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.060036997 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.059996868 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.059683469 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.06098668 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.060386902 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062989422 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.060373605 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.059899767 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.060914523 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.059902039 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.064221579 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.064404971 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.05990016 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068488625 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.064829743 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.060305822 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06371971 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.060912656 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.059983593 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059515276 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.060112471 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.059866403 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.060422101 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069393746 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.060015126 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.061241592 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.060949945 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.060926184 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.060501581 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.060075002 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.06217944 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.065047713 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.061225999 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.059820504 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06079277 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.05989451 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.060453887 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.060099377 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059845873 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.059814673 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.063033183 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.061581167 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060860419 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077605665 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.062056492 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068450033 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.059838639 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060850382 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.062975787 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.060594324 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075082496 seconds)
  done (took 5.703009394 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084002406 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08586719 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064555049 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064882738 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060597266 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06025104 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068633279 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060912872 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065198122 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078909207 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060581995 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065109846 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06523168 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064806559 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060736147 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065145296 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069148826 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061073344 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060154102 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0649159 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060862344 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068254653 seconds)
  done (took 2.711703162 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.145829873 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066605732 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.102732425 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070301534 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069037731 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070725212 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066094793 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066823517 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066677651 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067068572 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066629327 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066029045 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069033427 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066963098 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067365818 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066635097 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066425441 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066668598 seconds)
  done (took 2.566522841 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076563956 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066174328 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084567433 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065728895 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065787206 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066006547 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069567336 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070218803 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.065102862 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065677798 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.070187992 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065125925 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065672272 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065626601 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065292754 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065798491 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.065147599 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065506489 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07032799 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069675511 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070016714 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070128993 seconds)
  done (took 2.744681024 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076742414 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065232708 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080161735 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066792195 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060437396 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061018921 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.066738573 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065166688 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.066254187 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.064563875 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065134136 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060521409 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067213063 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065894165 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067333838 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065117172 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064974257 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065050641 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065129701 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060567838 seconds)
  done (took 2.561876707 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081180962 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072672449 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063544372 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069670179 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063353873 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.064427195 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069331809 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.063277409 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.063727977 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08398242 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063269213 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063344508 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069322124 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.067395895 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.063823599 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069131615 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069481116 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071402391 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064142558 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063270288 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083795613 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063380478 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069527563 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06382905 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063958661 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063369065 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06360765 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067602809 seconds)
  done (took 3.142107397 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064209428 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063346734 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062980006 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063432923 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063549645 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064097547 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064300575 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063742014 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063765496 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063608004 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06366308 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.063089226 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063248832 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.063313983 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062994104 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.063447787 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063038984 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063490717 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063644157 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063543973 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.063022818 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063055281 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.063374874 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063662681 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063323735 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.062891763 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063371308 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063933464 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063294021 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063416617 seconds)
  done (took 3.151892385 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073413223 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071495224 seconds)
  done (took 1.392198854 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062311868 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077386785 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059359911 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070694155 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068303431 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064159905 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069366649 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0690617 seconds)
  done (took 1.783972102 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.073753851 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.097027667 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.062362339 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06325962 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07363889 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.121974287 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082617482 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.070922198 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073838378 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063764175 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.062562252 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080536707 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.061305402 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07264144 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063848941 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068984501 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06744199 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075766811 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073168827 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060902023 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07189492 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062528391 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060777102 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.063648621 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06171095 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067483376 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075533816 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072117716 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069139223 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059870086 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.078483239 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060507454 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.062082021 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068755082 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.072840041 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.060790069 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093701504 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.061061663 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.066890445 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060532935 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072272297 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079108616 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072719287 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.077185655 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.062237949 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.062611258 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060245213 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.06275424 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063734976 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068460092 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060608869 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067088629 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059614957 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.061798318 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07053771 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.060780457 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.067111256 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069204007 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071916167 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069301322 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068021381 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074201404 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068670841 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.069630117 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.062237058 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078253022 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.062943369 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072208299 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.073385578 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.06150264 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07405005 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.059854343 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.05949671 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060715921 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091056089 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.062347562 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.061738226 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.060694102 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060154239 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.062464326 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069180564 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.067038183 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066956006 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064070286 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073894138 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068872301 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.060280278 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.068588572 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.077303213 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063829667 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.060906605 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.075461946 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063058775 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.060193112 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080141256 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069050441 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.062377493 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.061848499 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063541597 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074498764 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.06210504 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060224473 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067651556 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.062492849 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.070868613 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.065308172 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06677203 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.060439833 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068457726 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064465155 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.061357233 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.059283899 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063327071 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.060916537 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058842292 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068051516 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.059954983 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072684616 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064765241 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.072179021 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072072514 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.068455687 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072713846 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.059862689 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.058797294 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.075297367 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067690396 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.060859587 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074806145 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059106009 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068422698 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059264747 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.060975666 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.067856146 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058930884 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06158373 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.05930247 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.064553397 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.192266609 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064163443 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067816325 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069369691 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072677919 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.062910076 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069429252 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06257551 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074973873 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069928936 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065974511 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064871637 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.061160981 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071423182 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06684578 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069204087 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060534295 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.061762864 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.061263858 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069846916 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070586586 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.063476229 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070339912 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065077258 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.061625424 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.061983772 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.062177603 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063920959 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065366711 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.062654214 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068188283 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068682921 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.074355573 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070083425 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068720748 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.059737623 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06094117 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.062506504 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060223931 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06468234 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069040336 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074375904 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07251668 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07938772 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.061454503 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07019609 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.062759692 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07611941 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072158341 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.061532836 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06587641 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.059608765 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062453867 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068841198 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071599662 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.073640577 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074717944 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065089199 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065131318 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06112889 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074012468 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.061249994 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068733373 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.068977827 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.065596828 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.061157582 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.063259875 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068954199 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064566966 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.060781932 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.073896627 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.06760018 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060689088 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073464609 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.060971057 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.071172625 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061297539 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063629067 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065314904 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06357204 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068755648 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074258437 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060012394 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.061284827 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074507106 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.063056711 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062769254 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067907186 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.07409191 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064432383 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067851285 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070609912 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069282527 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064496279 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06904799 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.061725026 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.069389314 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.064047964 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071181505 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.061072922 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077051682 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059440711 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.076539753 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.061129432 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.070863499 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.061523095 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069661754 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.06205075 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.076402101 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.062624783 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.06243128 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071525117 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059564297 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068758072 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.060437909 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064202484 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.065438381 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.067855894 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.062069186 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068559295 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061673707 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06805866 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063982487 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067544347 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.068176235 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.063803024 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.059702121 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066746875 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069574344 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066988252 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.061285512 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.061542089 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06086661 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068262687 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.061538538 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.061450239 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066929714 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.063984929 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.064662355 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061028314 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.062398609 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.061345298 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067364834 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.202822186 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079128435 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069457958 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068989713 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070050037 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061685872 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075490927 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.061806291 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068029565 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.060102108 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.068194447 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068998606 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.061429842 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078704337 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.062793317 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068316041 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072935398 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068373897 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063726065 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077754012 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.06462916 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067743634 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068207603 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065483459 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067353334 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.062560333 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068455833 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069562134 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070804641 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.062480146 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067559712 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068780496 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063626299 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.070282824 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.063040957 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068033236 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.063439511 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060191823 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064957957 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071280149 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06509681 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065709639 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.061715554 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.059946935 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.061825338 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.068586884 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065301963 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069527666 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075761386 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060151938 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.061622835 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.060855883 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064501044 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076966189 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070097079 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067353013 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065588086 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.059981208 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.062827387 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.062708814 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.061598577 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.064518711 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060156777 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.061169286 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070755278 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.062363381 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064839313 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06166341 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.062203831 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069182982 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.065947154 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.061775258 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066708884 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.061016275 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064764954 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.060349371 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.063146243 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064842197 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.060204309 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063492164 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.070425555 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.075668037 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066719391 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06849343 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.061701977 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.0678142 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074330767 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.069261304 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061951916 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07002592 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060013047 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077400783 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069575918 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067996799 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069773875 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.0618458 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076637697 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064654052 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069690357 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074153661 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062006552 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.068604659 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06115238 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074516761 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067167762 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.060819997 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068380593 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067292438 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066406269 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071739505 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.061431207 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068399802 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066783035 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064546876 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.062866849 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.062349525 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067600018 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074565873 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.061059846 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.06471021 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066528483 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066517737 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064050837 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070904088 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.066742878 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060886349 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.061642744 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.062966174 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.060832587 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.070394787 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060090326 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063525882 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.063315769 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.060077108 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.065455971 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073541987 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067945412 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0680167 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059700771 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.059461161 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.075230641 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.062830289 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.063054022 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06742078 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.207847508 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07367796 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.07029693 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077040508 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06216642 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066847389 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072250779 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.062038156 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.061439168 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063596029 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.062739168 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069866574 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069622912 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067545222 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062868557 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066922813 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072914539 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.062251566 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065467168 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.066863426 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.061712618 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070174482 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068161744 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068006619 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063153261 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060653042 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063690129 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068613933 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067179924 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069894842 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062121517 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.068581164 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.074310718 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068206516 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065051656 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061064913 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064791073 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06878069 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.067070941 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061218574 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065314509 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063997812 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.068849515 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06880574 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064643906 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060993973 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076069611 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068358543 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.069641925 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.062567073 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.062483085 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062167573 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061325839 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071374131 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060843913 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.063186993 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065151489 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.063127302 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.077175745 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068342335 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.075410202 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062920613 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064878834 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060765543 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069643372 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06522173 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.061579529 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070424353 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.060834019 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074583276 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.071612389 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.066536243 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060461395 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065505782 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068016068 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073985893 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069261995 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.0692024 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.064394305 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070078508 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.062773912 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.071100706 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.060904203 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.059992791 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070010709 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068520758 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072431757 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061044798 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.069758957 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.063330708 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06810339 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068410393 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.062941435 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063347833 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.062797088 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069568704 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065086263 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069059189 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06555977 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075671958 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.062405585 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070590961 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068875064 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.070324925 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073061523 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072970844 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071044426 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.061750159 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068078219 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068191737 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.062291041 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064838312 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.064402165 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080670817 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.063591716 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.062395568 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074178388 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.068021521 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.060269269 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.067425894 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06418997 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.07015409 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.061330811 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.069432834 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.064211073 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.061517635 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063832352 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063792046 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059342479 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059774828 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.059939365 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067973009 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.064031331 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.060517532 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.07656854 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.061642071 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067415778 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069838546 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06572246 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.061137532 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059356521 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.060770704 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.208661944 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075917624 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06564753 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07025199 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063571785 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069908435 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060317492 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069225287 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068888526 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06868041 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061783607 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061993007 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073897106 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074902271 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066023667 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070288602 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069516735 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.062497245 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080978991 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068922762 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062323844 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.071532831 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063933415 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060122874 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060053189 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.062638499 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071203124 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.061448159 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.063886313 seconds)
  done (took 41.521424452 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098322849 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062084144 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061166275 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061626177 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069261519 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061729712 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060906853 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061905131 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061971282 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063595069 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061170559 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060932775 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.067636699 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075005456 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070061429 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065434344 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060973482 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061795438 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061324429 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062300752 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068362528 seconds)
  done (took 2.733104561 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.068087363 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076029437 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072571971 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078468454 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069873505 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065978699 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072742325 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065840761 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0731857 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070807971 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.073405487 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065123055 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.070711069 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070196257 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070806807 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065878716 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073520603 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069559972 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.06614168 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073279745 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066181243 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072731846 seconds)
  done (took 2.89362932 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06238006 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.062618977 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068528776 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060550471 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.06038949 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.064480973 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.060366763 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.064247973 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.064057877 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.064508737 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068762109 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.062058425 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.06013027 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.065340295 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.060217765 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.061318404 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.104363403 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.061354568 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.062438817 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.06084832 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063536963 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068880551 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060175563 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060635966 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063816066 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.063766098 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.060659076 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.0630114 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.061259721 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063955085 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.062095612 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.059734702 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068476389 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068010943 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064162517 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063894576 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.061941647 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063840406 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060736782 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.060322549 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068216244 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.06239106 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.06036764 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.062035431 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06811286 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.060672328 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.060486623 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068756142 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059993927 seconds)
  done (took 4.477615117 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.072081728 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108618012 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066451235 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089227607 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.074660862 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.067152729 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.066448961 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090645783 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061800066 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.062926275 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.075402269 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07559788 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063988602 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.0650268 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068212095 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063829141 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064843618 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062986253 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066560949 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063027275 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.066380791 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.067344995 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.073812082 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.074218815 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064748432 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06327913 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062947173 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.064980164 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07419907 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.067245311 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.065661277 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065657845 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.074423789 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067960194 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063007981 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.063230421 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.074911998 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064346958 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.063801409 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062044965 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.063191275 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.065401023 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.067666991 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.075695578 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063786173 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.068483843 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063789059 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061667499 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.074500973 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.064113515 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067847804 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.075540947 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065001501 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.063990661 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065496179 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.074566461 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.063650893 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062740122 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.064065841 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.074552376 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062026985 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064605366 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.075097861 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.063787363 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.067269254 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.075314508 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.067942629 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064960772 seconds)
  done (took 6.141396651 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071389577 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092184314 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078026367 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077903442 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07220536 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072094126 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071936959 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071569017 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071170938 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074836179 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071372861 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111251156 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067528632 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073177259 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071187332 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071314915 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071690028 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071516001 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071176579 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070991501 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071320072 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076802944 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071210183 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077300861 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073807462 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067629812 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071390016 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071505068 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076859209 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071232744 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.074009435 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071320039 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071509185 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077647183 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.074447073 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070968135 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061953622 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071882675 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071451481 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071817948 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067485369 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077767333 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071243764 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067526149 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071846411 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071236872 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.077707537 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.074603321 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073424383 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075119801 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072011327 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077759739 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07156074 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071944713 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07760817 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.080414426 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077849269 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077703932 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071890284 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077865402 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077492645 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.079515005 seconds)
  done (took 5.968212175 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075872142 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068179654 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079283711 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063190047 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060077117 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070376523 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06062686 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.060729895 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068623409 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.068078432 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06997679 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070359933 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073030966 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069782098 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070078172 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07265415 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070805416 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070478613 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067844499 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069853105 seconds)
  done (took 2.752870193 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074620378 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.079677447 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06643471 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070177077 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.066804661 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070007616 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.06532204 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066560955 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066822585 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066432219 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071731063 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071445739 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066194525 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06995285 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071177818 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070067146 seconds)
  done (took 2.475588534 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081517747 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.068273582 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.07534449 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.062134671 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066228636 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061101808 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.061985461 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060414872 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061086026 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.074299528 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.061572915 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.073455596 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.062397079 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.060965875 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061598851 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067630908 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061417584 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062073094 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.062333036 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.073868846 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068271142 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063482021 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065626238 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.062104674 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066915922 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.068750582 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063696697 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065475383 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061861683 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062132412 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067174929 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068344109 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061444671 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06229361 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.060811514 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061794903 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.061668989 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062429875 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067639193 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.061930527 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.060566612 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067114338 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.062201187 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.063140134 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061017534 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.062189444 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061545359 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068202225 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062280038 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067378805 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.062510071 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.064334479 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063402486 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.069154858 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.064472274 seconds)
  done (took 4.925981024 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077203214 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066219195 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060902336 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060788633 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06579465 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.083704478 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066292896 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066100016 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066670833 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060742913 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066830888 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.065678925 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066797788 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06596191 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066612692 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066111179 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060444295 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066085156 seconds)
  done (took 2.574755721 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072089044 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066274237 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07012933 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065795218 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065222944 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065937584 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061539529 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061063128 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060707119 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065483513 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06534003 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.064770709 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060738072 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.065030439 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065158009 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065137303 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.064876964 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060661179 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065700722 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061260858 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065121384 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061088731 seconds)
  done (took 2.787708436 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093143349 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082853173 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.13762656 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07853212 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086025403 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071402784 seconds)
  done (took 1.919180938 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092240189 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096523771 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065467313 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065515111 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071385375 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069106002 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069071361 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069332196 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072859029 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074316626 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070978903 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073559226 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073263937 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075267359 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070639546 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070972804 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069224281 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068919639 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06587844 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07753676 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069106946 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072894319 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069318473 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068725851 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069396695 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075444885 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073206205 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073042355 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068675504 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073151658 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071606271 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069418919 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073559276 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073765251 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065871226 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073582151 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06896542 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077649336 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071035493 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075084895 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066430677 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071458176 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073631259 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07259341 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073001896 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068890395 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072485183 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06894842 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068947944 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0824882 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071389938 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074686837 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07100453 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073408713 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073121683 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079568259 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073501037 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074948367 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071155242 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073337632 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074567839 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07119637 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074452383 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073523779 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070731274 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075044595 seconds)
  done (took 6.168886035 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101647993 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06659124 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069781197 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074074619 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075087126 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068908743 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069192508 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069160736 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068876321 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066087676 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102681867 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069099527 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074954418 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075267532 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069937087 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069191636 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06902135 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075515828 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066090895 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079750303 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069072027 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074937235 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074701984 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075148012 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073403393 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07116435 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068806079 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069671517 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068675358 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068804242 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072574041 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069285146 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074826276 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065975958 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074879014 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069548832 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068633997 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072282724 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068737174 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071390579 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075168165 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078060619 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069115183 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069010404 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073860081 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069091577 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069465794 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066284713 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068990102 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066092257 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073561285 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073607433 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073720279 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074890344 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069276559 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069266372 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069328797 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069340495 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06914567 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07083461 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075078518 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068926787 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079918193 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06870189 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069156647 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075043406 seconds)
  done (took 6.155600856 seconds)
done (took 126.517715525 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209806088 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184120332 seconds)
  done (took 1.757842079 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072626076 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.101843008 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.079546914 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13160819 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069395643 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104007744 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102498652 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.08108581 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069063879 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069260397 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06926212 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072336077 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134830519 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069576306 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070521167 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071996751 seconds)
  done (took 2.755483903 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102498528 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.211272086 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106884302 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06784062 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102139051 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074906494 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.070563192 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080677128 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074440338 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06971645 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075387099 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073430291 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069622929 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07369316 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07395446 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07531708 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069970604 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075532683 seconds)
  done (took 2.934947699 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099892719 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091570599 seconds)
  done (took 1.58255872 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.169767534 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.131862746 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.20035743 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.333609144 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.14395168 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.410600005 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.133807484 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.133747442 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.110866234 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.130129077 seconds)
  done (took 3.28432149 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101629776 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.192531435 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.291581969 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118214575 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074213949 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.104858168 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119957211 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080572584 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078633359 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078742676 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078208708 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075615387 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098938716 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074844969 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074288487 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07510926 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101230007 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073250772 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074441819 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074041882 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101624011 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068831232 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07432359 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073546964 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076328267 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076390045 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069327016 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067953196 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074077748 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074105096 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076835301 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.102967315 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076682376 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.100712403 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072545704 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.101906616 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075782939 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072501624 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074423476 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072480721 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074832758 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075179103 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.076739297 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075678958 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069521067 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075852252 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070217713 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068358757 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077513244 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069783082 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077833459 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077254738 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.100989509 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069333274 seconds)
  done (took 6.099506031 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105574364 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105352412 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068922626 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110990481 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103047562 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069227468 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.1039151 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097803381 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.105304119 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068585884 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067544319 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06903266 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077006472 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.078789963 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113428537 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105553296 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070802009 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069172345 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105943575 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105923219 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068159768 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099760831 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096268227 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104816932 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067857971 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069763138 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068135598 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.06919978 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073703987 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075461166 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068565468 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076264889 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.080907168 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07476938 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066837525 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067685686 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068232119 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.076062639 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076899053 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076272048 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.074519591 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066865564 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067310395 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068019884 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068134 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066812731 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075150094 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.076429043 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.074968542 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06831761 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068967288 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067485576 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06823449 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076396244 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.074184633 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.076958014 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076213477 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067579026 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067435829 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069550732 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076957754 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076204801 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075723276 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068792697 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079017275 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06767504 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077052065 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079852061 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068245891 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068918295 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067957384 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06796257 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068547558 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074576909 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.074116173 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068392286 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06822469 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067663998 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076022895 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074792242 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068167356 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074093793 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066992839 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067749964 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068875232 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069610318 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.074023072 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.076413146 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069602741 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06840711 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068204641 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067826202 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067439197 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074006581 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076312273 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.075861373 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.075391534 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069330016 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.075921084 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07527054 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068641717 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.074271187 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067251082 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068392106 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068033124 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07372773 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.073480735 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.075672796 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067574526 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066355911 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.073018579 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075767001 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06672815 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.073180088 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074917681 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.073060768 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066444737 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076125479 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066794264 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.074657567 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067539209 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.210326473 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069906034 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077039447 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069837696 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069121385 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069542417 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.076773238 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069778601 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06866558 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069282779 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068416859 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.0757348 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079001725 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0695974 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075484881 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.074759296 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069414565 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074983281 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068134997 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076614939 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068843131 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068854393 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06730891 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079138686 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068540708 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06898353 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068601437 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077536501 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068543008 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07726808 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074755732 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067513074 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07836071 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077283168 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074241595 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.077441639 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069987211 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068305897 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067987838 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068116155 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074303936 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076333849 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069604967 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068863577 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.073949095 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078061207 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067477802 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075462401 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075093427 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.075500728 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069074328 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068765268 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077803351 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077101712 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075328551 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.075679575 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075396818 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069002821 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075307082 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075617925 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068927172 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081234964 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068362049 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079745485 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075600233 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074219582 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075476017 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.076479673 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.076823803 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.077533268 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.079555599 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06747156 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067960036 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.075466284 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067968947 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068286144 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075039978 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068854614 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068707925 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.079472348 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068658488 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077350212 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067737543 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076302803 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067025804 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069181545 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080253455 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068680315 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069240031 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078236144 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068392533 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.074749601 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077812795 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.074973836 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067790567 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069429355 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075909842 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.075806608 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06816285 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0676219 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069523463 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.075136703 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074488792 seconds)
  done (took 18.165371158 seconds)
done (took 37.981135254 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210531406 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.159508184 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.187185521 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118617947 seconds)
  done (took 2.166712673 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107023834 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100134792 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.086538113 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064273625 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.093215393 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064776351 seconds)
  done (took 1.949304173 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.303463035 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.207251304 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.184799799 seconds)
  done (took 2.1237645 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209520547 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.198094664 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.462345987 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.285164627 seconds)
  done (took 2.681668528 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.138449683 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08197827 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.063201493 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.080473621 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.121344786 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.146557688 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.092223322 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.116527555 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.074983583 seconds)
  done (took 2.401387215 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14603739 seconds)
done (took 12.915177198 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.100253673 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.338334544 seconds)
    (3/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.210978098 seconds)
    (4/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.224103926 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071373583 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.197089451 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.067741754 seconds)
    (8/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.076560389 seconds)
    (9/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074290374 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075275073 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.102622505 seconds)
    (12/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.232314272 seconds)
    (13/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.18929314 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.144933933 seconds)
    (15/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.078131567 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.09824939 seconds)
    (17/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.106638064 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.074126832 seconds)
    (19/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.214190624 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073869861 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.118421708 seconds)
    (22/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.083341423 seconds)
    (23/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.115393409 seconds)
    (24/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.203730218 seconds)
    (25/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.082777229 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093244924 seconds)
    (27/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.174477934 seconds)
    (28/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074646777 seconds)
    (29/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.204258294 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.088402686 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.071966492 seconds)
    (32/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.178892337 seconds)
    (33/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07523306 seconds)
    (34/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073558414 seconds)
    (35/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.064955549 seconds)
    (36/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.072129259 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091354473 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064811546 seconds)
    (39/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.178625931 seconds)
    (40/309) benchmarking ("sort", Float32, false)...
    done (took 0.130425907 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088268501 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.148352336 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072976562 seconds)
    (44/309) benchmarking ("sort", Float64, false)...
    done (took 0.129714708 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.064113785 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.101627188 seconds)
    (47/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.065288291 seconds)
    (48/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.085541815 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 0.137027162 seconds)
    (50/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.086937528 seconds)
    (51/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078993539 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.152974293 seconds)
    (53/309) benchmarking ("sort", Int64, false)...
    done (took 0.065975958 seconds)
    (54/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073708283 seconds)
    (55/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.091069519 seconds)
    (56/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177468457 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084844269 seconds)
    (58/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.073806455 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.163972211 seconds)
    (60/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076104047 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.064561041 seconds)
    (62/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073810574 seconds)
    (63/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.168872984 seconds)
    (64/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.178304475 seconds)
    (65/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064390241 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064481651 seconds)
    (67/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.136223286 seconds)
    (68/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070633417 seconds)
    (69/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.234605088 seconds)
    (70/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.190079981 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.136851808 seconds)
    (72/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.207999218 seconds)
    (73/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.07100892 seconds)
    (74/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073158207 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.087940696 seconds)
    (76/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.135767146 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.103200821 seconds)
    (78/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.063816473 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.074940473 seconds)
    (80/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.065278956 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086766456 seconds)
    (82/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.113115089 seconds)
    (83/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.066131922 seconds)
    (84/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.162844672 seconds)
    (85/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.17226945 seconds)
    (86/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.185326405 seconds)
    (87/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.064331342 seconds)
    (88/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064451539 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.07103297 seconds)
    (90/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.06308258 seconds)
    (91/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.141023391 seconds)
    (92/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.070961203 seconds)
    (93/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.119212904 seconds)
    (94/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.066175048 seconds)
    (95/309) benchmarking ("sort", Int8, false)...
    done (took 0.329902769 seconds)
    (96/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.169430254 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131462317 seconds)
    (98/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070451436 seconds)
    (99/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.095970378 seconds)
    (100/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.066727809 seconds)
    (101/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.191460512 seconds)
    (102/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072135512 seconds)
    (103/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.066066322 seconds)
    (104/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074428922 seconds)
    (105/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.066630975 seconds)
    (106/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119815995 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064986245 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.171972566 seconds)
    (109/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.196249271 seconds)
    (110/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.069990609 seconds)
    (111/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071760264 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126096737 seconds)
    (113/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071984736 seconds)
    (114/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.139372232 seconds)
    (115/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.196279583 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.0926886 seconds)
    (117/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.137614456 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.08573861 seconds)
    (119/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074609264 seconds)
    (120/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065386822 seconds)
    (121/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.136467908 seconds)
    (122/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.07230636 seconds)
    (123/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.080407616 seconds)
    (124/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075047281 seconds)
    (125/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.066161762 seconds)
    (126/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.231867831 seconds)
    (127/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067510243 seconds)
    (128/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064537664 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.132018061 seconds)
    (130/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.193598278 seconds)
    (131/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.073127262 seconds)
    (132/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.157902223 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074646849 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.132653531 seconds)
    (135/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.064332274 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073971803 seconds)
    (137/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.064620136 seconds)
    (138/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.066643937 seconds)
    (139/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.163203762 seconds)
    (140/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073871971 seconds)
    (141/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067585716 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072801959 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090760973 seconds)
    (144/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076107242 seconds)
    (145/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072648027 seconds)
    (146/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079326684 seconds)
    (147/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078633155 seconds)
    (148/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.073980366 seconds)
    (149/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073894348 seconds)
    (150/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.196098339 seconds)
    (151/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.137885696 seconds)
    (152/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.144893473 seconds)
    (153/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.064676681 seconds)
    (154/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064518878 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.165903343 seconds)
    (156/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.06512505 seconds)
    (157/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.18781411 seconds)
    (158/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.137482396 seconds)
    (159/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.162715846 seconds)
    (160/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.158086293 seconds)
    (161/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065511603 seconds)
    (162/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.063833738 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064870021 seconds)
    (164/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.06382303 seconds)
    (165/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.065286656 seconds)
    (166/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.064942147 seconds)
    (167/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091281687 seconds)
    (168/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072637473 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139402817 seconds)
    (170/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.156752984 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.077312152 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.077158242 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.090506729 seconds)
    (174/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.0645116 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122537192 seconds)
    (176/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.065791596 seconds)
    (177/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068651726 seconds)
    (178/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.064100095 seconds)
    (179/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.078420099 seconds)
    (180/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073075807 seconds)
    (181/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065272731 seconds)
    (182/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.064554539 seconds)
    (183/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.065789283 seconds)
    (184/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067644147 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088101955 seconds)
    (186/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.177957957 seconds)
    (187/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067672855 seconds)
    (188/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.064245483 seconds)
    (189/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.076917262 seconds)
    (190/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071643404 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.115037185 seconds)
    (192/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.064229857 seconds)
    (193/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.064516577 seconds)
    (194/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070571278 seconds)
    (195/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.065371936 seconds)
    (196/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.065223372 seconds)
    (197/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.06478317 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.085937974 seconds)
    (199/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.070659925 seconds)
    (200/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.063885948 seconds)
    (201/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091557711 seconds)
    (202/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074494441 seconds)
    (203/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.065068014 seconds)
    (204/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.136876285 seconds)
    (205/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.064979176 seconds)
    (206/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.158049167 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.139032923 seconds)
    (208/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.188833844 seconds)
    (209/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.063570516 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.063665204 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064009436 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.063818343 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070513809 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06370519 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088673352 seconds)
    (216/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063418353 seconds)
    (217/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.225289846 seconds)
    (218/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066707162 seconds)
    (219/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.06762052 seconds)
    (220/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.199050466 seconds)
    (221/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067823501 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06711018 seconds)
    (223/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.095169758 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073055611 seconds)
    (225/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.066238468 seconds)
    (226/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.065189231 seconds)
    (227/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.065277446 seconds)
    (228/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.159496958 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.0763806 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074491048 seconds)
    (231/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.065174888 seconds)
    (232/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.161852371 seconds)
    (233/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.064542052 seconds)
    (234/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.066721306 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135201827 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09517968 seconds)
    (237/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068085743 seconds)
    (238/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066229544 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.163830871 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.134101135 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.120613745 seconds)
    (242/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076114891 seconds)
    (243/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07351957 seconds)
    (244/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073079795 seconds)
    (245/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.065735054 seconds)
    (246/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.066773517 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086737103 seconds)
    (248/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.066513444 seconds)
    (249/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.064699969 seconds)
    (250/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07219297 seconds)
    (251/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07555409 seconds)
    (252/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065491013 seconds)
    (253/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.066844199 seconds)
    (254/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.071619785 seconds)
    (255/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066243671 seconds)
    (256/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066268766 seconds)
    (257/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.064780902 seconds)
    (258/309) benchmarking ("sort", BigInt, false)...
    done (took 0.244711813 seconds)
    (259/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092151348 seconds)
    (260/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079991682 seconds)
    (261/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.064167375 seconds)
    (262/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066134274 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.110766058 seconds)
    (264/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.139019968 seconds)
    (265/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.064162333 seconds)
    (266/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065482268 seconds)
    (267/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065385927 seconds)
    (268/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066515273 seconds)
    (269/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.065898145 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066539001 seconds)
    (271/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065461741 seconds)
    (272/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.064235872 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.11827677 seconds)
    (274/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.064093403 seconds)
    (275/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.06485241 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.130923035 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065197333 seconds)
    (278/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074469779 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067067483 seconds)
    (280/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.065152363 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065522672 seconds)
    (282/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071750912 seconds)
    (283/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.064783867 seconds)
    (284/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.06418513 seconds)
    (285/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.064999402 seconds)
    (286/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087370164 seconds)
    (287/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.065920852 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.121962502 seconds)
    (289/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.064588078 seconds)
    (290/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.065800536 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.118461012 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064805619 seconds)
    (293/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070318145 seconds)
    (294/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.069625095 seconds)
    (295/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064761274 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075018221 seconds)
    (297/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.065448225 seconds)
    (298/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.078597142 seconds)
    (299/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.065515284 seconds)
    (300/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.066188821 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071758776 seconds)
    (302/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.064139818 seconds)
    (303/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.064317537 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.086920379 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.127485105 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.107587598 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.064555294 seconds)
    (308/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.066671839 seconds)
    (309/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.073545334 seconds)
  done (took 32.472765047 seconds)
done (took 33.918279618 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082444147 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095014486 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.071685173 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.090081315 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079348817 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092818809 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072189655 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07718909 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079647297 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078437281 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077324297 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.070763315 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073788268 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073919006 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.071888458 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095117094 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079765466 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072851916 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072967961 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06487608 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072970072 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065073434 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.064300858 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071254104 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076046545 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072140991 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074233558 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073640523 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064964597 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065383676 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069595807 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073699902 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064910279 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077136247 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073660433 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072858122 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074363363 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076730776 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.064727009 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065367201 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074946538 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064792611 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073028618 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071282034 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.0700626 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071620831 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072946643 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077108439 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095208919 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069200875 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074820643 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075613523 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076630563 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070180532 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070225881 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072504397 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070975617 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094700853 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073549342 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069326105 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074501598 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074069034 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071225528 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072740666 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072572684 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075378596 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076882411 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07159166 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074838543 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071913685 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065083785 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072562738 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072440452 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065285659 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075886855 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077578647 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064068196 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069477635 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072623046 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073222666 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064779096 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069029554 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.064109973 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.06980869 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068953537 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07065706 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069999617 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072299983 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064729662 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073020013 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071883143 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07279081 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.064347518 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077138251 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064746805 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070963196 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065558199 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064819396 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.064197587 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06982544 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064337794 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06880089 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073134685 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.064230851 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069721989 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077750401 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064782866 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072050197 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064542947 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064824891 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07611759 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074821887 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065104908 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069598734 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065011319 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070416109 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064530774 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065254428 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064944046 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064664814 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069283486 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06535759 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068460608 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.069755378 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076950702 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064586839 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.0691507 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068590851 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06471356 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071175983 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065118363 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064729611 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.063887306 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076824105 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068283866 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06445177 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.069634363 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067994698 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071835012 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06347525 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072467404 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069559733 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.068474338 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070299259 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063068081 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074544499 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067793861 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067828831 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.062909214 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.063677621 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.062720794 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.063276174 seconds)
done (took 12.401668421 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068206614 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.114661707 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.088570891 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.091455391 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08095157 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066199785 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.071904788 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.086842638 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067083775 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.092562769 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086930553 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086303263 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.105747714 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064350483 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06625132 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.066298941 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066856136 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.075468283 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.090526785 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086874787 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.101071115 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065471736 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.082225058 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.084092124 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.080888135 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.087274589 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066099033 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.066385698 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.067815511 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.083483695 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089153244 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068913682 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066720722 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.085795225 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.082051442 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.077463511 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066667039 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.072835464 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066896576 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065577406 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067601087 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.08384677 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.072887218 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075114925 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.067204727 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.07325935 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067267555 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.079031363 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.081772201 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.073370873 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.078679674 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.086944284 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068021434 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.080240407 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064747601 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.079182623 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.073473039 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.066164089 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066969331 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.070759741 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066276874 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068363635 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.075189084 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.073238375 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.06950632 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08095093 seconds)
  done (took 6.569969973 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082448978 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.09293857 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081171645 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081508313 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065653384 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066316848 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065708285 seconds)
  done (took 2.091474036 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066154393 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087493758 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089703826 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08909502 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082021569 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090067495 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066092189 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097786892 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.065262217 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086122381 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.117752885 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091426654 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069816092 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076698283 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066016704 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.080589871 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.0663654 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074454225 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.082009855 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090146969 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070270322 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.092072298 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079361034 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067063106 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.098970456 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.078110045 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.06559444 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066217982 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067451726 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.067151381 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067437827 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10636334 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.07786443 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079315683 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067591158 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.065739233 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079705845 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069811281 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.07618056 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075921695 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.078556956 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067576451 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.065203229 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067685051 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069245438 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076944617 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.064925924 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067188415 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067231869 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086013972 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.0649535 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.077827234 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.0696596 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070798886 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072023996 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070307817 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074379157 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067771188 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085546532 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.073595377 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067837911 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08314263 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081983561 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.078694083 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082210605 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.070649826 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078007541 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.078830464 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067225408 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.068676675 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.067562127 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082139373 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.067095302 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.068461391 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069482749 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068321279 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077113233 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090173574 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090023009 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078992356 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066543046 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068336779 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.076861179 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089772375 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070746184 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066965267 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069538196 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065749973 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070091997 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067199063 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071342822 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.067058411 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.074252316 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.068208068 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069623088 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08205897 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065319979 seconds)
  done (took 8.856199135 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068860305 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067971115 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069119312 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066839896 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067104327 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067184626 seconds)
  done (took 1.990762144 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.089247239 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067423564 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079861284 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.067610959 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104628133 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.080830011 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.081074498 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074846658 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.079172083 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078444804 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.080634706 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.083777455 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.084344594 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.068727976 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.080578684 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.068042445 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.081110849 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.070379451 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078422881 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069538617 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.078896291 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.068955566 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069657431 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085231997 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07058073 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.067948045 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075488511 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078529727 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077617189 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.075425541 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.068527579 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.069419721 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074138954 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.074512229 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083850924 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073806227 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066642237 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072123546 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068912674 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.069771099 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.083251183 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.068938803 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.069513259 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.072480719 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.074999919 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074181728 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072343805 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074578467 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.080737857 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.072545175 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072784881 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068179964 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.069728665 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07239652 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073951656 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07542692 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072693371 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.080451307 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.06838055 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074283145 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.066557315 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.069361507 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074757377 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.069313728 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.073293866 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072332508 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074025863 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.068782193 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069286461 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.066602721 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073550149 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067028827 seconds)
  done (took 6.906470768 seconds)
done (took 27.993953604 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.517095494 seconds)
  done (took 2.051555234 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.614669412 seconds)
  done (took 2.186687601 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.486304424 seconds)
  done (took 8.053512179 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.414774905 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.476826583 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.746084768 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131804338 seconds)
  done (took 3.368873202 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.699490498 seconds)
  done (took 2.279828357 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.227620368 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.215599369 seconds)
  done (took 2.032399936 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.34439228 seconds)
  done (took 1.914634209 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.054370221 seconds)
  done (took 2.623700964 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.25050306 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160311463 seconds)
  done (took 1.990074599 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.438791881 seconds)
  done (took 2.011057007 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.263476983 seconds)
  done (took 5.840475788 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.233738919 seconds)
  done (took 1.848937798 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.232171246 seconds)
  done (took 1.812289102 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.711770727 seconds)
  done (took 3.288038796 seconds)
done (took 42.881007606 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082126558 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084547732 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084398705 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080335028 seconds)
  done (took 1.885556356 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.074222247 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.070654397 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.074031722 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.074662459 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07221574 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.072524067 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.073046063 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070341766 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.071608348 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.070614949 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069119112 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.070361193 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.072627231 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.070086435 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.073193725 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.073970387 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.070685722 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.070720261 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.072815303 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.070091987 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.072553486 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.070261687 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.069108196 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.069125877 seconds)
  done (took 3.296050946 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078857004 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072186443 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075168752 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071531779 seconds)
  done (took 1.882498204 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.076489412 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.085898229 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.087011672 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.091425547 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077038703 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.076593043 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.084684614 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.085287824 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.065873737 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.088043311 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.068059877 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.066585994 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.066845862 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.085205308 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.084651605 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.062757065 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.064669997 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.076630421 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.075576604 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.077836477 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068045131 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.06535439 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075951927 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.076511291 seconds)
  done (took 3.416055636 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.083572469 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066187287 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08297003 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09182997 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092576214 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065777371 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.08261667 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092209632 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.136414354 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065669671 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07116358 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06554975 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.10357326 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065733917 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082301536 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107216895 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110608641 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069361429 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09704297 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065598722 seconds)
  done (took 3.288409213 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083159295 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069229366 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069903347 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.0649587 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075365337 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072709661 seconds)
  done (took 2.027459194 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068260944 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067156743 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067352824 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069474155 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072109309 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066993469 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065561112 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067388149 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067677974 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067881741 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066694333 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066202603 seconds)
  done (took 2.398020748 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.157210982 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069354156 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070891762 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065941345 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071628697 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06605859 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081838409 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068597215 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.084911785 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066267235 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066768836 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068992427 seconds)
  done (took 2.525490902 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107939709 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184478901 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102252306 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073158268 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215379287 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098441408 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.090432631 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.1282472 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092745024 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.070070062 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107514236 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138490272 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106755499 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.129089814 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092802243 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148072903 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151797198 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102121676 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120571432 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086302886 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.071444971 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150077883 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070564695 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097545334 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12974079 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.109140156 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116923203 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135935964 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09515203 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.093582539 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096904087 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074737654 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157201134 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.084105675 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.110276956 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119006182 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129627022 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086326962 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.090140452 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161271564 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150826865 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126937132 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126913565 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137010827 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079683402 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.111243964 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085312098 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107713327 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144679611 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100591901 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075676475 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105877039 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.110726718 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13336664 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.243630316 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08721289 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165440857 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.123155372 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119855665 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081250161 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108052675 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.10334024 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11063105 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163857392 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14416588 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104144667 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137027137 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121599062 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099432379 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.100295186 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.112737145 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085590078 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117542302 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120736162 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143163359 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121236115 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122981586 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.110129818 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082028607 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110634502 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12673971 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094832721 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11503577 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154328329 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111935787 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090954639 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109460945 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.142780047 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072576917 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158592184 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094292103 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120999838 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10097977 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142069595 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103090193 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.085590771 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107012696 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139691599 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101873016 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129056094 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097497655 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115685325 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096727883 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126288787 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081230363 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100102098 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102233905 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.09783039 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074001041 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102396337 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.303034601 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117771204 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077423685 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113623865 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097548747 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.078231916 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118530326 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143058862 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083058144 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076213639 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149374366 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.098148779 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.117913238 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11077056 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.095232893 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133908347 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144626085 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094727182 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089815149 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076507206 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184971032 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076716023 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143344102 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086016656 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124875271 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106503106 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131603514 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139424482 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095198456 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079094544 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106291212 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.114577344 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10299193 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113666978 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076624052 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.109341663 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149218301 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.104733773 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090443446 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.096246203 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.070721337 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121163375 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077823048 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097417911 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096266746 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.095279488 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.094245706 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146193161 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.096675737 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112207113 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098527367 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.068403396 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090456369 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148734817 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08200951 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.108381986 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128285502 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096689237 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068722644 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.118935303 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07324067 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.298834107 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.114445018 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109112367 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080320112 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127776207 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07037742 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075898306 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12864297 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105585508 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102799247 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.137203181 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106360366 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.113063577 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.10918955 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.107784052 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101067924 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106562673 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.109799617 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118330947 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.085347842 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15061502 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0977886 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078715403 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087729787 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079978355 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.078690895 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127564196 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153257355 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112808879 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103378394 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106956521 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115969364 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.10881228 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091068599 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079926204 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135624264 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076194967 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075317935 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114770487 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.113039639 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090293693 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.139348335 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.080057107 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137119024 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123007078 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095675471 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12509701 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070779472 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071340302 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.081807803 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114111392 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120121457 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079551425 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080027133 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135518896 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134467917 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115393424 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102290991 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06954963 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107779604 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140101376 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.113383614 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233895099 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112249138 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0861098 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131222304 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096272441 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164656769 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105553178 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114106993 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.092066808 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.08146888 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075507116 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098335352 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129497772 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093398808 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082112447 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.069469284 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075223838 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119781801 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090913128 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115577776 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105145983 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136156141 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07421357 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102173479 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112893485 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110795718 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109749153 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109481474 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.0964232 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092077696 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108730787 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122112826 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074656592 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156225536 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132365731 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082644797 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100724412 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096331106 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11104059 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107213133 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115431136 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109348944 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127798712 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126009125 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103359047 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090768619 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097611246 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.095732646 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.095168577 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081556483 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.104182466 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11987249 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102741383 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107194697 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.095553745 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.09239249 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110489778 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111223158 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089961968 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.115619995 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154991607 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.099034137 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.304136235 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105820692 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108095696 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106186528 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114516604 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.129570297 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146315765 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072428541 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07697631 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.072404046 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128361829 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079944459 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117275559 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078172053 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108374024 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125215912 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09069817 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068272655 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101020054 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090762739 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.094574537 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143399635 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.110751453 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.074922831 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105889151 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108581964 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096913082 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155940599 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.101112681 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103210518 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073802187 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119410749 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076004974 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116710801 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137889221 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082358408 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.084859199 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.071886379 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110857278 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101758219 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116906028 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090673325 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104417298 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121277292 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131945483 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103225964 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118068158 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1395196 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115032391 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094863628 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155795486 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136671105 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.14497198 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.080952143 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.088849806 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105170784 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10522079 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100781463 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077249433 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079580887 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142688189 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119122091 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.06871377 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256443801 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084604374 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.089817697 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117035561 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116322183 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083420927 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131188596 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076836029 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107926801 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094814487 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125249726 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121705197 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152828915 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097786921 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089656004 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077805417 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153194639 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.082257441 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133303834 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121791351 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10361906 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.070606538 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097665302 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124386602 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.637317305 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109419938 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07598964 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136614604 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106287064 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160382092 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093826753 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.118546586 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108399483 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102754796 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095108101 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130303315 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094860958 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108928119 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.176078542 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119240828 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.10684872 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074945049 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.088838439 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074929212 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.090608814 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.082975766 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100856692 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108514681 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103187913 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105389646 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.08817117 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.106904551 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116947394 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112515715 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.105849138 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089973946 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137667102 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104150825 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284260775 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129436923 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079979935 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07644752 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.108616833 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138594712 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097574193 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094233508 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078848707 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.092298907 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155026034 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139709705 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101935573 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102455359 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.092080916 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.101182712 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112975151 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118643657 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110196154 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085997495 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.101818292 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104351615 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078866687 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075129801 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097633705 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.07121204 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090152615 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128135075 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10850299 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09144474 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.104143462 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080215415 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1077953 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145199069 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103994561 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077596614 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077264152 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.077252674 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.084650789 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104282282 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110568828 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113626655 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146468505 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102167163 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095120335 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.080271065 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.222763198 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090066675 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097987315 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.110613087 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07641998 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.130845546 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090941775 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090030132 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096425745 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103722112 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156326477 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085814659 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109286958 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112211613 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114935384 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101058189 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104275039 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094611773 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090501626 seconds)
  done (took 54.850745692 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.103796648 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.139903196 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.151230149 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.082511027 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.095573807 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121423304 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197853414 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.18733936 seconds)
  done (took 2.828788871 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067763746 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094885945 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100788168 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082001985 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066453777 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067326032 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.22688387 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080626481 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066259078 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091004485 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.075691025 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068106022 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.418169961 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065712599 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067021284 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.074441875 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066877487 seconds)
  done (took 3.48148769 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.377659778 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.610258982 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.361699281 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074228455 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.815588219 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088361831 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.335301118 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137418076 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080538581 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.515641538 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.364362079 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130497333 seconds)
  done (took 18.604876638 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080739922 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077593567 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.088216108 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.088207789 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.076621045 seconds)
  done (took 2.124174538 seconds)
done (took 104.225341492 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080414438 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.191160477 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.067603168 seconds)
  done (took 1.993895429 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.088907214 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087287357 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086788603 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.084565974 seconds)
  done (took 2.064028711 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074035721 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07583807 seconds)
  done (took 1.860487352 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.230668765 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172505925 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.094804375 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082953544 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080620703 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081644753 seconds)
  done (took 1.964720795 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071752659 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.071784808 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074576637 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075933096 seconds)
  done (took 2.003750654 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.067260232 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065947011 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.067972678 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071420112 seconds)
  done (took 1.98365179 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.083212747 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084169006 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078826854 seconds)
  done (took 1.957932272 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100694372 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092314205 seconds)
  done (took 1.903782244 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.079833356 seconds)
  done (took 1.795092256 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092266691 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.098778338 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.12879025 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112444666 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138072749 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.115786978 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.081359876 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08590639 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075987163 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.083064956 seconds)
  done (took 2.724044572 seconds)
done (took 22.538751324 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078742266 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368698046 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359868569 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089740353 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670508812 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355916066 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.986881005 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091295545 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.106330645 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067768103 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084851442 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648622635 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.97971863 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.329679042 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.965851422 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325298714 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651695132 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068028037 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067106328 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068051113 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.974035056 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067121703 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068199898 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068286043 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649701618 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373119539 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069086353 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325253908 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068048019 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072049605 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357525104 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069059181 seconds)
  done (took 16.215164475 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069913994 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120499709 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072835553 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083934702 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069937094 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069318063 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071641911 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068329533 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117254529 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068412823 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085364365 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067399567 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071422265 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069171051 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088065013 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067831342 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071426302 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069015695 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069021118 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069469338 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087886491 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068036544 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069437477 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068874922 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069336478 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081316592 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070211599 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068435718 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068787499 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07219248 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074089411 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070016264 seconds)
  done (took 4.137832331 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115584028 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12409689 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074045331 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105556542 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114917473 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070322128 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144718716 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091806721 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119582581 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068862779 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086234959 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067585166 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102304888 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069822005 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08905919 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069565252 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071436292 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069311895 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068549834 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069812972 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087546329 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068410223 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069323434 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069544369 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069053769 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08321851 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070014879 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068738778 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069028439 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072869093 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073995069 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070737715 seconds)
  done (took 4.39434576 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.069704915 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072432485 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.07999584 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.080454354 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067056809 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.069809749 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.070664474 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.067357315 seconds)
  done (took 2.30959803 seconds)
done (took 28.782134136 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077400013 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067167005 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.070531744 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086621818 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072747762 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077382125 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064559166 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074325379 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073884805 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071164886 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.072373789 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066295682 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069742678 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.064839881 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.071232563 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066240836 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079144087 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070331906 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.07860128 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078845944 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069763666 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071658073 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074470635 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.07872364 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078477192 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078547304 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07622879 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072114174 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06736022 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069989839 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.068989587 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.076058845 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.080306774 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080672855 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066807683 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066372058 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071283603 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068798239 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.07960311 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075506 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068347263 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075975509 seconds)
  done (took 4.767682399 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.082967193 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.087733466 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08125768 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.078263772 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096484625 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.0811927 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.0851434 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077201472 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.076536331 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.083842981 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.072836962 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079841443 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077806335 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071785199 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.075731048 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073499761 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.077884892 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.073541555 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076138397 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.076625671 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.084957274 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071029164 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.085323851 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07796069 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073534276 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.07991764 seconds)
  done (took 3.801365255 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073255117 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084096232 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.09171622 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143026661 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.109866553 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.085570119 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080540828 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092646733 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096101216 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067604584 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07229081 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091181621 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091775014 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073674541 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.10914458 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083793206 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079392273 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06909155 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074159929 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095775678 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087437981 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084980807 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093597545 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08376129 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06694297 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069580326 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072321007 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082307259 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.069779237 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078148829 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070372779 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071204508 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068038419 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077397289 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069453408 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.066812321 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.087096207 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078014338 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080143194 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.10482222 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076236942 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068660913 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091881921 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126858215 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067188568 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07140928 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.070378501 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078559496 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066506689 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09457745 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078925624 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067063668 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.068217151 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065998232 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066653521 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.069733433 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06871222 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068855797 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077120048 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073810506 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08615288 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072528071 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085972312 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06654442 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077187816 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066947522 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06877633 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065844082 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095278947 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068588979 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110359983 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068387232 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.066232188 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.0782719 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077324604 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072831667 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067429176 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085818994 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077568163 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070826175 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075777722 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069686116 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070578764 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.097673636 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.067336011 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069768471 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066158357 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.069934483 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070336741 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068465576 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078444208 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066504838 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070858572 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086345794 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067217154 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067680609 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.070500325 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.069176223 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067175745 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077808031 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070722596 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068245938 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077787501 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067713803 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070221111 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079938874 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07356536 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06633552 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068927199 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.070256508 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06866095 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068538435 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070742981 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069112201 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07359731 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074225555 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07295031 seconds)
  done (took 10.777295942 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.1656083 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15236079 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069162974 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.147043583 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075872884 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079677717 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.14751094 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095011334 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068856377 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069601894 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.066983784 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.106964929 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10313266 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.113034543 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079315709 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068782247 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092804438 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112567469 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149497768 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.145459574 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090656148 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07600567 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070426583 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069412446 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069729958 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077183526 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084498336 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075901183 seconds)
  done (took 4.497239124 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.076889567 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.102673822 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07264406 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090196748 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.086238851 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067794444 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069760424 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069804223 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.084461498 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.075941028 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067836811 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072746858 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.071445069 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070898361 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068402056 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074417652 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074439551 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067692754 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071994074 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072705644 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078279085 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091953541 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073426546 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067412276 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.070081726 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067674791 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.075854414 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.078642085 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068305796 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.10308518 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065388547 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072900661 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082165394 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068071319 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067433785 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067994908 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067791988 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067519194 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.067812992 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066232844 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066288823 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.071663163 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066390022 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07527429 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.080575061 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.074357413 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.069515319 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.070525877 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.070671241 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065975115 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070403113 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070695486 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070268699 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075252141 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071772336 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071154408 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068493462 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.093499157 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.073938381 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067286733 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066989105 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066147958 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070201818 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.077276666 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.082840814 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070015913 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066441934 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068157228 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.079389797 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081017343 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066981952 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072499923 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065636381 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068399136 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070866119 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070464371 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.0688429 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066448595 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067983396 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068148071 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.068692163 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067974618 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.067145873 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070836003 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06626426 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069887391 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06809482 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.069738275 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.076058502 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067302912 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.071768387 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068938158 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066518233 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070828202 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.072704669 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070495353 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.078769075 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.078048787 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068157159 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06629923 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084586592 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070198578 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067161709 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.07298501 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072505626 seconds)
  done (took 9.382301471 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08992043 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068034411 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084287554 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090604616 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.078497035 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073251072 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077935165 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.067336646 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08355241 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072342446 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075747118 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.065980285 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078138982 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077288097 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068254656 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078375145 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071100766 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084834504 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081823526 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066369955 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07593222 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079190425 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.079702204 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082331046 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.08139511 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082231397 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.079311343 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.077102452 seconds)
  done (took 3.954603007 seconds)
done (took 38.903681159 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.830994248 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.989163627 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.806451509 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.998726146 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.002193916 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.924005019 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.935296213 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.801414466 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 8.073921121 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.83004005 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.102718366 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.29386224 seconds)
done (took 67.453337139 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.842130357 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.957360694 seconds)
    (2/2) benchmarking "String"...
    done (took 2.056826088 seconds)
  done (took 5.750773775 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.024149147 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.469471794 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.067890968 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.803045706 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.810222438 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.232134419 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.572560877 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.253720864 seconds)
  done (took 30.949678311 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.938274014 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.022797783 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.498983221 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.53056061 seconds)
  done (took 15.774455771 seconds)
done (took 64.175640266 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.845304064 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.804912407 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.856828264 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.834152455 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.811326454 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.807125684 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.807113517 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.80827135 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.81500352 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.85684545 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.805162832 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.820843685 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.805943179 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.820424494 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.475739768 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.866279228 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.821432496 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.814595037 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.828420692 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.817924708 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.808044746 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.805711544 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.239166549 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.993402787 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.420449709 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.019582893 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.295976824 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.258116727 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.816192931 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.804959904 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.889946466 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.011137329 seconds)
  done (took 205.22528541 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.806179585 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.764195505 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.841970394 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.840470773 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.224930475 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.98556626 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.926537251 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.290261779 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.8115456 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.811479751 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.025359745 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.809102465 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.046096924 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.80559083 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.84429838 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.813944438 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.004031781 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.080009894 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.849267581 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.9720321 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.810284233 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.88547309 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.82398051 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.024201154 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.84958008 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.898626053 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.815472296 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.819809987 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.002228776 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.981446836 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.823237015 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.811610559 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.964647108 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.680177486 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.82989003 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.831755248 seconds)
  done (took 171.146807142 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.991199328 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.810191819 seconds)
    (2/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.807170379 seconds)
    (3/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.814328651 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.809616144 seconds)
    (5/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.864053116 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.932578856 seconds)
    (7/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.811312714 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.459166199 seconds)
    (9/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.818242489 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.991171576 seconds)
    (11/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.810862135 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.809645575 seconds)
    (13/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.808864288 seconds)
    (14/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.809806129 seconds)
    (15/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.821245635 seconds)
    (16/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.888382221 seconds)
    (17/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.809410087 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.823408339 seconds)
    (19/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.810743291 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.835606458 seconds)
    (21/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.811160611 seconds)
    (22/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.809456851 seconds)
    (23/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.808444674 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.808638093 seconds)
    (25/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.809177378 seconds)
    (26/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.809822189 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.809709405 seconds)
    (28/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.808987772 seconds)
    (29/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.091332956 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.050597487 seconds)
    (31/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.810285326 seconds)
    (32/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.808994011 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.8617034 seconds)
    (34/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.822754131 seconds)
    (35/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.06634194 seconds)
    (36/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.811097639 seconds)
    (37/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.899729691 seconds)
    (38/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.864261587 seconds)
    (39/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.923950981 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.81117129 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.026644529 seconds)
    (42/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.882324537 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.810121895 seconds)
    (44/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.810006997 seconds)
    (45/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.874118107 seconds)
    (46/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.822845339 seconds)
    (47/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.8095099 seconds)
    (48/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.810296661 seconds)
    (49/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.816119831 seconds)
    (50/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.874644231 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.052560595 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.811175088 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.934375013 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.291302686 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.810155696 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.810003193 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.810599314 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.406965436 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.811803461 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.810970777 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.817183344 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.817328441 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.810780705 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.809909702 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.19767588 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.88181075 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.254304482 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.05734325 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.811811772 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.248590582 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.061646492 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.811205515 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.810260727 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.812660119 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.81392288 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.813072857 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.81505237 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.931998793 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.82000928 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.937344607 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.895421202 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.933937621 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.814779124 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.822291859 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.636094885 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.814978228 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.880926635 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.847972731 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.63524466 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.815361618 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.186686322 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.597265136 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.814459779 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.811919771 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.825333418 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.813323232 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.812437396 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.813843897 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.892820621 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.8133407 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.933473893 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.538820585 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.990813284 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.812111285 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.813095791 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.819938364 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.89591479 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.935892764 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.815986441 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.880011107 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.820516104 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.815863511 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.893610441 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.814678319 seconds)
  done (took 405.085713114 seconds)
done (took 785.244763767 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.448697575 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.423850819 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.513189371 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.436912099 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.41383104 seconds)
  done (took 13.984698861 seconds)
done (took 15.734541766 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.829295354 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.819514124 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.872023644 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.899073797 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.830572473 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.833664331 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.895706408 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.834775945 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.863731732 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.869500556 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.901468677 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.898050047 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.837623314 seconds)
  done (took 25.932883157 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.823028867 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.96467358 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.039693679 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.853174681 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.824114726 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.042909026 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.877696925 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.956226919 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.961367109 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.056415202 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.052704378 seconds)
  done (took 23.204030747 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.822703083 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.966879605 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.059862396 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.85686599 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.824269064 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.050623162 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.885496754 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.97162537 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.96777587 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.049399187 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.058240509 seconds)
  done (took 23.272639313 seconds)
done (took 74.159005235 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.821450899 seconds)
  done (took 3.571827408 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.836226184 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.991055307 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.817156659 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.818394004 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.818171392 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.817857921 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.818985281 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.816885532 seconds)
  done (took 16.487133623 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.819690093 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.818462708 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.819110324 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.819025455 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.818165178 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.818386335 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.817527028 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.818504051 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.818349017 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.819754017 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.819293414 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.819287312 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.81911476 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.81905839 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.81966931 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.817699197 seconds)
  done (took 30.852613603 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.82005205 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.819342541 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.819784961 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.819899545 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.819275406 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.820191037 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.820128592 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.819477784 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.819381401 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.818996422 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.820198814 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.820496709 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.81922055 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.82022146 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.820170376 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.819633514 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.82062633 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.820090176 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.82444308 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.820124353 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.820499203 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.820178847 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.820408825 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.819602929 seconds)
  done (took 45.439649533 seconds)
done (took 98.110432774 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 5.06759307 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.660608362 seconds)
  done (took 10.47996121 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.82573792 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.821435398 seconds)
  done (took 5.477833068 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.821379401 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.820755818 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.820624495 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.821242446 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.821673706 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.821888052 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.821162559 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.821245812 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.821548687 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.821362225 seconds)
  done (took 19.965494047 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.821408928 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.821472082 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.821164531 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.82213075 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.821882228 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.821782328 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.821879039 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.821836461 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.822455136 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.822547596 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.823073867 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.82219465 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.822304984 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.823259497 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.821856279 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.822460283 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.822202034 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.822406712 seconds)
  done (took 34.550736477 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.823046493 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.822011512 seconds)
  done (took 5.398714507 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.821931761 seconds)
    (2/7) benchmarking "second"...
    done (took 1.822858047 seconds)
    (3/7) benchmarking "month"...
    done (took 1.821289291 seconds)
    (4/7) benchmarking "year"...
    done (took 1.822538193 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.822831249 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.822430767 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.823171747 seconds)
  done (took 14.511333589 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.82421019 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.978756196 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.04155519 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.495064423 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.824441676 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.827105602 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.73919704 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.826245802 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.828058998 seconds)
  done (took 20.13961822 seconds)
done (took 112.278045428 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.611550989 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.822325107 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.111922968 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.88519205 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.890754519 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.1591177 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.823919163 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.12867422 seconds)
done (took 43.190234973 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.876701606 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.820328437 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.852106904 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.85105682 seconds)
  done (took 22.278492238 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.821970677 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.179127615 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.849498776 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.703010532 seconds)
  done (took 22.326605297 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.183050849 seconds)
    (2/2) benchmarking "read"...
    done (took 2.215093762 seconds)
  done (took 6.157938904 seconds)
done (took 59.397898878 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.82470136 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.82440706 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.824105019 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.824128028 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.824829353 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.824462919 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.824226014 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.824568503 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.823776133 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.82469896 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.824821204 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.824271157 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.823917169 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.824985515 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.8252959 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.825155282 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.824496889 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.825510288 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.824855716 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82463477 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.825010596 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.824087579 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.825042968 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.825763663 seconds)
  done (took 45.547994332 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.825898319 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.825360013 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.825775084 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.825950599 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.825924231 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.825352384 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.826613564 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.825463993 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.826310618 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.825563541 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.825476408 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.82584744 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.825947988 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.826263992 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825929957 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.826278039 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.825720202 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.826456109 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.825990471 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.826949445 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.826720524 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82725041 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.826928362 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.827121947 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.827283916 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.827248763 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.827184541 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.826204683 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.82705251 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.827357468 seconds)
  done (took 56.547384298 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.826303371 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.826450505 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.826783966 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.827137798 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.826877508 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.827190365 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.826875141 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.826659157 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.827365227 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.827289265 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.827541491 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.826611436 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.827873768 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.827495573 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.82803538 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.827694373 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.828649166 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.827831617 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.826877069 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.828266013 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.827552589 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.828288704 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.827205474 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.828312644 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.828771306 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.828169157 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.828401712 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.827857163 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.828264404 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.829369144 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.828762621 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.828679564 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.828019666 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.829348204 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.829837673 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.829492768 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.82888108 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.829771442 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.829725206 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.83012888 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.82920865 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.828806858 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.829786604 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.829880166 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.829909992 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.831110868 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.828976133 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.829599983 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.8295211 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.829408151 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.830532129 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.830311119 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.830169491 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.830821039 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.829838382 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.829834065 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.830199615 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.830264455 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.829204573 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.8309229 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.82966083 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.82980268 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.830524875 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.830111343 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.830509037 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.830506306 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.831220978 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.830385755 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.830619734 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.830701307 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.830506917 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.830662731 seconds)
  done (took 133.444280906 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.830506188 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.830689166 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.830123217 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.830606531 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.830859904 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.830302828 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.831301023 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.829139315 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.830831958 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.830483244 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831264432 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.831435269 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.832107165 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.830930343 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.831504459 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.830977216 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.832444619 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.830901864 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.83157662 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.831694046 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.831551076 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.832584819 seconds)
  done (took 42.046037122 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.831492249 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.831297702 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.831598129 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.831494715 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.831468682 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.832404279 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.832096154 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.832052841 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.832115708 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.83267888 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832526517 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.832476912 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.832185958 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.833272347 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.832324082 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.832834457 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.832863289 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.832751167 seconds)
  done (took 34.743164745 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.832090798 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.83289201 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.831840707 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.832968187 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.832299115 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.833546452 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.832352262 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.833072057 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.833795778 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.832701492 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.834424584 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.832515092 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.833441333 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.833047158 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.832860666 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.833194735 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.834085395 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.833845932 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.833818525 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.833750033 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.833731787 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.833358676 seconds)
  done (took 42.094143054 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.83318942 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.833527565 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.83379159 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.833972542 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.833564752 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.83389492 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.834006134 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.83422464 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.834320005 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.833098383 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.834884644 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.83410311 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.835216308 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.835072203 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.834372926 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.83511379 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.834377417 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.835445611 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.836578106 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.838806757 seconds)
  done (took 38.457110605 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.834130468 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.83430585 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.834837466 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.833657929 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.83464569 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.833558189 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.832945968 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.833152481 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.833261112 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.834808265 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.833192104 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.834014618 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.833543332 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.834242577 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.834190731 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.833207348 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.834443914 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.834614743 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.833087132 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.835200873 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.834613676 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.834408253 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.833109626 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.835333697 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.834064701 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.834249921 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.835234018 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.835990025 seconds)
  done (took 53.122885037 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.837703502 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.839006273 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.837249996 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.838715201 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.83815248 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.837913962 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.838186755 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.839368691 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.839511247 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.837930078 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.838759446 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.838643469 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.839603885 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.838930112 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.839104396 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.839594356 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.83953113 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.83999757 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.839795316 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.838909527 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.839408926 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839027244 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.840301365 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.8398589 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.839809187 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.83949855 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.83995957 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.840222159 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.839581646 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.839622972 seconds)
  done (took 56.943591075 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.86020823 seconds)
    (2/2) benchmarking "in"...
    done (took 1.860350796 seconds)
  done (took 5.491429539 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.840561167 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.839646402 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.839642715 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.839744317 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.840173876 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.839933266 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.839910577 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.840617937 seconds)
  done (took 16.49134395 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.840537974 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.8427235 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.840977706 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.840440206 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.842106248 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.846446366 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.842145855 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.840392771 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.843110149 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.841589902 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.84577269 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.843176719 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.849000882 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.843677078 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.841481919 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.840890005 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.841644902 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.842597017 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.841814738 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.841752035 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.84362873 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.842532079 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.841508433 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.841955734 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.841583427 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.841995392 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.849085104 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.842530987 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.842873497 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.84284895 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.848209037 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.843830444 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.842006092 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.842464256 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.843478505 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.844123319 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.847282696 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.84342336 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.842219948 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.841901342 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.844338015 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.844056973 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.844738868 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.849332632 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.843068171 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.84223687 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.84190637 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.842769365 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.841954103 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.845117401 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.850909801 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.841755849 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.843203854 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.843561042 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.844715312 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.844148804 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.843944457 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.845139252 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.849242806 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.848997668 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.846140298 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.86183943 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.851901195 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.844096685 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.843847939 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.852409229 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.867743738 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.844142185 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.844017652 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.844341083 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.850567518 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.844644834 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.844704586 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.843733153 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.855305649 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.853255814 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.845463576 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.844567441 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.844479971 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.846279622 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.84543524 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.844415895 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.844688765 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.845978009 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.853200478 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.868425607 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.846707413 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.846079515 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.845227935 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.84641597 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.850726694 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.847024009 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.845735664 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.845167447 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.845161707 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.845675961 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.845045775 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.84553034 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.8447086 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.853033859 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.846312178 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.845924059 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.846577464 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.853060142 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.846049873 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.846052493 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.845530887 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.846383904 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.851751551 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.846982983 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.846186192 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.845728857 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.84542011 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.850243292 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.846209014 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.848904964 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.855770805 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.853069215 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.848487482 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.847461152 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.84953734 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.849183521 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.85540151 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.871663601 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.847035282 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.85054332 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.852413367 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.85921428 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.850053139 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.847559814 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.849401127 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.848032958 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.847925709 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.848427962 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.848044202 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.848228521 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.848011149 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.847959135 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.848291571 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.848738081 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.848660408 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.848559738 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.848710178 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.848157105 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.85074704 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.850005024 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.850088357 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.854655033 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.849869027 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.849683976 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.849254456 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.850327682 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.850182391 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.848261091 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.84950616 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.849193108 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.850588931 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.849538319 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.850236103 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.84940675 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.849110083 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.850112183 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.853703249 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.849846421 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.850308849 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.848912593 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.849444018 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.850124917 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.849112849 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.849480872 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.850116086 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.850399781 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.852254889 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.850172289 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.84903395 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.850641708 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.84926817 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.848916964 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.852337725 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.860420804 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.853857916 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.858146411 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.851372133 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.855736082 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.851339217 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.850034239 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.849159605 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.852127238 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.851209037 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.851399318 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.851350466 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.853851117 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.870025796 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.861408818 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.851558429 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.850735105 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.856851275 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.854994427 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.854433018 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.851748484 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.850503617 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.852144967 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.85331927 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.851647661 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.852428888 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.853427993 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.850804599 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.851432753 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.853450866 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.851929043 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.851537619 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.851037115 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.851901564 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.851744375 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.851536721 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.851676395 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.852283488 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.852312731 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.858586187 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.853786471 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.852799989 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.853839461 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.853080573 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.853061267 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.852533348 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.852284064 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.855346445 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.852055649 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.852994993 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.858512804 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.853004574 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.85265163 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.852313381 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.852630054 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.853846233 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.853387359 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.855557658 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.862077502 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.855431779 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.853868274 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.856425185 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.853574855 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.855392927 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.855144613 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.853707502 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.854292829 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.855277 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.854259417 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.853426664 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.859885239 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.854574547 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.852968035 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.853969869 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.855568808 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.855175833 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.854256511 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.854701486 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.855270665 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.862141423 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.859044682 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.855654004 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.856308277 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.855152464 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.854972819 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.858677915 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.854030336 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.865634253 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.863291468 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.854278022 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.855564919 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.855588445 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.856362478 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.856153568 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.855967581 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.862308901 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.856509393 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.856889355 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.860154858 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.855053333 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.858277421 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.86068703 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.855755018 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.858395334 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.855908786 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.85512285 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.855498023 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.855873093 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.856896067 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.857274124 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.854755597 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.860557719 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.856850948 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.854849749 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.856344856 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.863967033 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.857836725 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.856008507 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.86295854 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.857537495 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.856370081 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.856654489 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.857146854 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.856703809 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.857844887 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.85658861 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.858382939 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.858198632 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.859881478 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.866521896 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.860062685 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.865930417 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.857175947 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.86754751 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.857904856 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.857950838 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.858232256 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.860345217 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.866121678 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.858094096 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.856328613 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.8636671 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.8581675 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.857982407 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.863058203 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.857029046 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.858606145 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.858443192 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.857971806 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.861669759 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.859728629 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.858866633 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.859521974 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.858179994 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.857686026 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.860457715 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.858844991 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.858940061 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.859425213 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.858414748 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.858881944 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.859067546 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.859530113 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.859250615 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.858643095 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.858851773 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.864985946 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.86003381 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.859953894 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.864666934 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.859731665 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.866545262 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.860156626 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.860494185 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.86054569 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.85957014 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.861624022 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.860958446 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.859831157 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.858846695 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.85955796 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.861013971 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.870496962 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.865999212 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.863190855 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.860579759 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.860707279 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.860337143 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.869342889 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.884631481 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.86056701 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.86165128 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.864732088 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.866884393 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.861349987 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.864844719 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.862760429 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.868896959 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.860896989 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.859214643 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.862876466 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.872314445 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.862015623 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.860778321 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.860746364 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.864383042 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.862493792 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.8607046 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.86250074 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.861148823 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.861567194 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.870560369 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.86242735 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.862812774 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.861702703 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.861816344 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.861857495 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.861954555 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.862644111 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.862098528 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.861931005 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.863291867 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.862746491 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.865357764 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.861548426 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.864596072 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.870262217 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.861902631 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.861753026 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.863150102 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.862771134 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.863991952 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.864005425 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.862461165 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.864439342 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.863653623 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.86505036 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.865492006 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.871268894 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.862568197 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.863101986 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.8639583 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.866467083 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.863576184 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.864668526 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.864205647 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.870390539 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.86580565 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.873914564 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.871456615 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.865193753 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.86537838 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.870544405 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.872011656 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.864339602 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.862739214 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.863508929 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.86502709 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.865394248 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.863992084 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.865396244 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.86512084 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.868053526 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.8649454 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.864486227 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.865195835 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.86421959 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.865392171 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.865296574 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.867868163 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.866115147 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.865145313 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.863232043 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.863380097 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.864024627 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.866217711 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.864740957 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.864509879 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.867384598 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.865590852 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.870009888 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.866146402 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.865069859 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.866302558 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.866124576 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.866177718 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.865689002 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.866295984 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.866197542 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.868133469 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.87390576 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.865601905 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.866049562 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.865776522 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.86803725 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.866852991 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.866041597 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.86624544 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.865826787 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.871849263 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.866773696 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.867202867 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.865835667 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.86663041 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.868783295 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.865413419 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.869934314 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.867055232 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.865834974 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.865910086 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.868334668 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.874828023 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.871193747 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.867959654 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.87482072 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.871769798 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.86767385 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.867207364 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.866844992 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.866878055 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.867324348 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.869022953 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.866975805 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.868694609 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.867350478 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.867884236 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.86759214 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.868797319 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.86681522 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.868467155 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.870704243 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.875063915 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.87515863 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.868372975 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.869427234 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.869483665 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.87071305 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.878272693 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.869324032 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.868676554 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.868806173 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.867200087 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.870028976 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.873793723 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.87669951 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.870498585 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.869935531 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.872524466 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.884229402 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.870310788 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.87857333 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.897817071 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.870381558 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.869558434 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.866664842 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.86896329 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.869554452 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.870671857 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.868465485 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.874061333 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.870203941 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.868874726 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.874946047 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.869906378 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.869941159 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.869917361 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.87080967 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.873767887 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.870289709 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.875831313 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.870257391 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.87036475 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.86912989 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.869569178 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.869698159 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.869804817 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.870773223 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.870565689 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.870096109 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.871623549 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.877391522 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.870810159 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.869720199 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.880735704 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.880041606 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.871531171 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.871272828 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.871730458 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.873887513 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.873193795 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.870951793 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.873869653 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.879649628 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.873682936 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.880401388 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.872882269 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.871489792 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.871232742 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.872136114 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.872180136 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.883190554 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.881833886 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.872109576 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.872705541 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.875786086 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.872256936 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.876555605 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.876839339 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.872453255 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.872135229 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.871438973 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.871963686 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.87200024 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.871936134 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.874622802 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.879854912 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.873471115 seconds)
  done (took 1109.463403701 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.87299227 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.872713739 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.872055731 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.871931842 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.87249971 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.872733782 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.873210003 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.874691834 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.872018453 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.872288081 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.872794495 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.871518041 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.872816819 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.872563073 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.872110192 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.872201928 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.871914344 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.871471622 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.871609548 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.871640532 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.871711383 seconds)
  done (took 41.12233228 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.873664859 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.873030431 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.871736777 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.871139494 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.871295566 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.8720287 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.870984859 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.872430021 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.872165689 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.871835977 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.874105096 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.870785037 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.87182034 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.870899227 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.871510961 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.870983691 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.871259945 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.871768723 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.871165315 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.871621434 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.871096909 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.870927746 seconds)
  done (took 42.981415974 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.873757102 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.870892972 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.87035196 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.870734536 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.870504839 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.871383218 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.870134891 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.869835595 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.869762439 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.871621507 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.875580046 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.878448483 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.871164137 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.873263744 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.870302133 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.870584216 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.014698627 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.867604087 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.868923872 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.86798765 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.86822214 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.872742213 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.867550197 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.868307616 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.866681814 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.867767718 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.869323905 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.864382021 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.864732629 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.865648805 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.869328702 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.864520065 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.864990359 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.865993728 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.863124516 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.864531483 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.868135669 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.865247014 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.864705305 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.86540483 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.872882251 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.887986347 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.865194148 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.865659855 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.870688142 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.864935885 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.865543323 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.868357684 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.874543259 seconds)
  done (took 93.536318744 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.863208094 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.863342525 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.864581662 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.865461221 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.863273282 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.863099703 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.863194665 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.862709116 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.863303986 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.862845127 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.863200646 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.863166797 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.862517034 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.863435803 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.862626512 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.861036287 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.861378343 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.861463077 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.861838776 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.862664378 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.860379253 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.861155778 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.860741433 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.860858467 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.860628462 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.86132384 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.859740409 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.86080905 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.861057784 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.860692774 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.86138797 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.860808775 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.861657413 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.861275149 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.861707767 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.861442896 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.8619061 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.861176425 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.861432514 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.861282921 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.861916285 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.863979482 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.861660199 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.862153512 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.862042561 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.86173195 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.861848368 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.861976335 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.862612325 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.861855133 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.862063435 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.8627868 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.861854442 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.862117488 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.862491769 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.862046019 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.862051837 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.863646723 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.861814855 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.8621601 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.862387403 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.862187211 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.865015719 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.861701887 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.862518624 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.862195928 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.862709416 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.862918023 seconds)
  done (took 128.423418531 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.863353155 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.862985673 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.863043828 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.863312821 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.864683548 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.862939518 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.862778783 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.863203489 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.863596134 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.864092511 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.864859855 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.863393357 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.863485895 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.862926027 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.864494992 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.864235561 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.864819793 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.862847154 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.863027649 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.863177006 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.865128019 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.863594979 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.863571319 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.864198167 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.863400767 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.86305051 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.857471641 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.856546747 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.857136364 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.856234966 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.858458249 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.858360263 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.853302689 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.853544242 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.853929269 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.853470492 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.85521674 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.851440769 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.852472241 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.852068445 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.852332298 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.852115105 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.852721795 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.851176702 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.851043521 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.8511385 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.851496462 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.852626107 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.850455613 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.850537537 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.850580529 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.8500413 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.851230869 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.852234376 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.85105027 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.850469677 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.851782452 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.851770049 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.851358032 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.850806839 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.850033158 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.850307014 seconds)
  done (took 116.946282395 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.85133523 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.848718679 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.849511337 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.847465617 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.848248945 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.84905113 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.848763363 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.848014075 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.848408888 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.848569957 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.848593422 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.849306657 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84992878 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848539665 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.849217452 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850132089 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.849493345 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.849756944 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.849166609 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.849263424 seconds)
  done (took 38.763586434 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.84822339 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.849776366 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.847805566 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.849685433 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.848563452 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.847893825 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.849635127 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849311198 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.848800371 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849592664 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.847732792 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.848363302 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849545022 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.847726716 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.848155375 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.848492174 seconds)
  done (took 31.361407878 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.848597185 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.849417837 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.848350449 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.847929562 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.849302554 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.848493438 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.848184315 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.847239869 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.847520056 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.848280794 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.847303461 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.848014957 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.84705764 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.8473349 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.847077285 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.847258813 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.846351703 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.848027574 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.84734001 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.848192655 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.848423228 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.848365441 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.84869323 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.847970641 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.847415457 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.847478391 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.847894275 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.848146272 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.847162019 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.846775435 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.847424415 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.848154464 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.848358365 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.848663666 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.847682332 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.847604717 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.848253123 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.846968821 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.84778276 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.84699161 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.84749009 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.847614287 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.847734708 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.847748671 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.846950154 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.848152341 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.84666849 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.84735951 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.847519805 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.849065275 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.846875341 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.848168361 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.846996575 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.847460661 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.846818587 seconds)
  done (took 103.407374402 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.846988883 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.845630197 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.84635166 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.846718875 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.848950293 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.846499182 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.846891476 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.846556946 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.846342087 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.847523727 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.84710005 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.846550309 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.84590726 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.845416594 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.847216884 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.847120595 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.846608456 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.846748993 seconds)
  done (took 35.020892034 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.846801234 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.847723805 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.846466371 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.846387522 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.845913007 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.847118686 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.846050469 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.847013291 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.846471745 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.847233161 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847379684 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.847624088 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848197498 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.847327994 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.847304453 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.847055211 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.847778649 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.850526352 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.847305507 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.846650226 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.847438256 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.84653611 seconds)
  done (took 42.418133088 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.846541514 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.8477074 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.86120352 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.864255928 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.86548544 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.878530822 seconds)
  done (took 12.942911943 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847240941 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846573327 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.84736535 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847423079 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847665992 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845964694 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846658316 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847040235 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846304596 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847753183 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846240422 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845813082 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846609647 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846492287 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846395076 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84659762 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846703043 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846779446 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846493838 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847311749 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848308692 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849051312 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847089073 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846975212 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846900533 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848349251 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846774789 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846224596 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847046009 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847002193 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846759385 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847650413 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846778209 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848080179 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847161553 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846778901 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847905176 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847983042 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846715974 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847167831 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.846873929 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847777078 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848261761 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846919904 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847609209 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846500635 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847838485 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849213973 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846227405 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847045368 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84714171 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847349324 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848763753 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845630329 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847127389 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846666341 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846344657 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846862573 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847939949 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847089705 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846658351 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84696323 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846686352 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848352308 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846880609 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84717884 seconds)
  done (took 123.690409758 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848096405 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.847866083 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847320104 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847841944 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847188991 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846517242 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846545202 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848205464 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848154026 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847284097 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847527461 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848381754 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847542575 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848952839 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847771979 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847854532 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847993917 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84850075 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849283719 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848449161 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847871203 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848176365 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848231854 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849098276 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848452863 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848099528 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848375959 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847972553 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848691388 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850212571 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84841346 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848723522 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848748226 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.848570122 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849648806 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84963369 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849337094 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849946148 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849052224 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849090981 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84968763 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848806634 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850174486 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850007928 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850175929 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850409783 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849645807 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849841952 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849267177 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850033541 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8503844 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850029242 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849774384 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849694899 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849829749 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849988897 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849850485 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849715695 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849652579 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849805208 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849444406 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850928161 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850448033 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85090824 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850286549 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850294481 seconds)
  done (took 123.813833353 seconds)
done (took 2570.583834379 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.910446923 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.868407251 seconds)
  done (took 15.561833358 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.015540053 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.970016832 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.854265885 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.882565432 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.854413025 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.85818953 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.879849813 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.854427458 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.855311184 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.855041372 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.853655136 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.040131192 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.864082098 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.853734272 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.85502476 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.947521846 seconds)
  done (took 52.082777477 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.85772487 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.85734549 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.866624559 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.858193231 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.857353985 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.869757461 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.886429382 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.860226226 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.890116665 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.869625011 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.924578595 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.868954995 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.856600871 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.906341206 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.870409533 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.871398408 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.946833951 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.931702556 seconds)
  done (took 35.63413749 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.933257073 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.868026413 seconds)
  done (took 10.592879845 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.871394637 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.861032608 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.942245097 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.867265107 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.873941022 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.862628858 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.911436005 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.891661874 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.858506141 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.884756987 seconds)
  done (took 70.61225977 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.861366711 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.858969721 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.856781796 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.855065812 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.853600637 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.858815762 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.855751952 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.858054018 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.515583675 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.894572581 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.864389546 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.861759575 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.856115896 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.857751367 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.85429931 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.878951001 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.964643745 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.854454165 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.854277945 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.862766507 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.857522423 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.906346806 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.869936353 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.857810618 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.887494146 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.516828475 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.865345616 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.861441614 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.972330107 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.854808851 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.858005305 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.042133322 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.86054386 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.338391375 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.168789716 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.862640013 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.869858457 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.863806861 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.855668775 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.972021335 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.858142256 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.862092611 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.780893358 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.150523859 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.967378187 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.898590534 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.203113162 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.872119221 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.858110605 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.884659465 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.860649198 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.858486676 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.872716183 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.371070874 seconds)
  done (took 132.205270279 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.857100124 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.217470091 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.021766003 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.856583791 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.14076845 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.062694316 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.856229424 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.901437762 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.858370154 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.098950933 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.074410244 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.960919517 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.856762926 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.856360554 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.858792479 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.855642598 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.005582484 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.924875895 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.858100971 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.855081488 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.8836942 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.09531752 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.996029403 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.857607607 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.875119068 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.068125785 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.978574981 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.959550883 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.335726558 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.856033796 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.918584247 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.858858497 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.860042082 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.85712169 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.018405659 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.949948899 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938240363 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.85967521 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.855997634 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.855958206 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.522022247 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.053744886 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.952692212 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.986877161 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.005969042 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.063846378 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.637104903 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.857176745 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.597766611 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.018192246 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.084177365 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.106442052 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.977533646 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.859711345 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.375509361 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.857681627 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.858050302 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.109986342 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.000850259 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.955763827 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.860487369 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.856242716 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.857769498 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.097915672 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.859653942 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.952216435 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.859321268 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.857412323 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.954365787 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.956807297 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.996773903 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.068621798 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.886895603 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.601121237 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.084810022 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.103018059 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.924427167 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.109175708 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.861816109 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.857343987 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938541804 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.704572793 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.064237542 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.102113947 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.11476583 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.307138371 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.592122034 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.859085815 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.084804437 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.078984654 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.108603486 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.004850594 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.015643983 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.253884189 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.858616184 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.858810275 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.074688748 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.983264181 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.862030016 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.199161389 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.091745931 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.419029458 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.876754779 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.162642147 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.988455333 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.862912599 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.492150508 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.859531856 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.082283559 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.899827817 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.863269134 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.859282517 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.080598139 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.834452892 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.860012573 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.503177912 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.921722114 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.864325385 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.094322642 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.864022406 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.122157537 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.865931294 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.091669335 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.410320611 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.888984016 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.087062919 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.005042086 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.863177064 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.102958326 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.103533963 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.974184646 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.080192738 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.587061851 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.863876819 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.148304355 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.864482245 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.86035352 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.029892167 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.862235698 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.006931793 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.864992959 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.142274136 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.882207649 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.019217223 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.863966043 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.130492476 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.893773167 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.912378731 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.86408221 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.985989184 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.863912529 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.687502424 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.01801788 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.864591165 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.860880598 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.674145141 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.861642331 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.007825825 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.090137882 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.88424006 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.934415431 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.524196357 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.861952599 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.943327841 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.884443279 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.255492571 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.863103859 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.077407889 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.864948649 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.862585359 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.862391298 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.09901287 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.044660157 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.865457447 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.862523131 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.75725479 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.862606598 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.864700129 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.043889183 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.798161475 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.864440293 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.066955276 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.868231 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.993062897 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.866682131 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.940410995 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.202364375 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.863972261 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.864550826 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.863272299 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.864241923 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.863264743 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.123768188 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.896124147 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.392575556 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.998405277 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.131233506 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.17327118 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.114760483 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.9061588 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.867672391 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.119182383 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.869488856 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.926014994 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.866935772 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.883526279 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.093809293 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.867842333 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.074543918 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.144642905 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.731909254 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.911171705 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.868899195 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.867620933 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.864613438 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.030926681 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.948742015 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.866482771 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.86525037 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.978646824 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.005838738 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.071315772 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.866565585 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.041424779 seconds)
  done (took 900.502843969 seconds)
done (took 1218.977645415 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.866133381 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.865199847 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.869726433 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.86815597 seconds)
  done (took 29.268163576 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.869728704 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.867038812 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.868136075 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.868219961 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.868719312 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.867553544 seconds)
  done (took 13.007399942 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.955398989 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.868687637 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.867881586 seconds)
  done (took 21.49120564 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.938626583 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.24867599 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.015221297 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.277704808 seconds)
  done (took 10.27966287 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.868111406 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.867191947 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.869840622 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.868762395 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.870377873 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.869135329 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.868816259 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.867735506 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.871557094 seconds)
  done (took 18.621739275 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.850345659 seconds)
done (took 98.318270757 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.900760056 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.741890279 seconds)
    (3/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.974010435 seconds)
    (4/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.607861006 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.936157674 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.867815402 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.006391127 seconds)
    (8/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 1.999442326 seconds)
    (9/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.867982065 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 3.56017213 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.276003303 seconds)
    (12/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.284498389 seconds)
    (13/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.990606795 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.875002569 seconds)
    (15/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 3.529372114 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.846252437 seconds)
    (17/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.875464165 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.123478539 seconds)
    (19/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.867118679 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.069493143 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.998010822 seconds)
    (22/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.003112735 seconds)
    (23/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.358617726 seconds)
    (24/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.951062138 seconds)
    (25/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.244566078 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.534191663 seconds)
    (27/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.089394629 seconds)
    (28/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.893305323 seconds)
    (29/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.868659811 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.277439293 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.958361061 seconds)
    (32/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.04677516 seconds)
    (33/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.962874207 seconds)
    (34/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.132679873 seconds)
    (35/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 3.699280064 seconds)
    (36/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.952625331 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.624627945 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.131036285 seconds)
    (39/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.87090461 seconds)
    (40/309) benchmarking ("sort", Float32, false)...
    done (took 5.614421617 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.997887105 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.874234274 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.042771914 seconds)
    (44/309) benchmarking ("sort", Float64, false)...
    done (took 5.651354982 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.976872034 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.869954105 seconds)
    (47/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.065805799 seconds)
    (48/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.288473302 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 2.109917562 seconds)
    (50/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.874563978 seconds)
    (51/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.425255066 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.879649069 seconds)
    (53/309) benchmarking ("sort", Int64, false)...
    done (took 5.595570245 seconds)
    (54/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.87103546 seconds)
    (55/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 3.920794548 seconds)
    (56/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.877121515 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.121148449 seconds)
    (58/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.89336175 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.023627455 seconds)
    (60/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.877845622 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.022203061 seconds)
    (62/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.890887171 seconds)
    (63/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.149200355 seconds)
    (64/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.873491274 seconds)
    (65/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.720024261 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.962575582 seconds)
    (67/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.961604421 seconds)
    (68/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.011484932 seconds)
    (69/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.641710511 seconds)
    (70/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.302794005 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.008437146 seconds)
    (72/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.87263493 seconds)
    (73/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.060958317 seconds)
    (74/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.898399651 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.259110742 seconds)
    (76/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.875596256 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 4.150442759 seconds)
    (78/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.606355754 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.889854052 seconds)
    (80/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.869329655 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.851146739 seconds)
    (82/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.889300492 seconds)
    (83/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.951032015 seconds)
    (84/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.0535758 seconds)
    (85/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.02922224 seconds)
    (86/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.874995871 seconds)
    (87/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.002122984 seconds)
    (88/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.348763751 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 3.636543419 seconds)
    (90/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.874637232 seconds)
    (91/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.004292599 seconds)
    (92/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.025859079 seconds)
    (93/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.822580201 seconds)
    (94/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.977773504 seconds)
    (95/309) benchmarking ("sort", Int8, false)...
    done (took 4.860901103 seconds)
    (96/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.084526934 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.008158261 seconds)
    (98/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.932663414 seconds)
    (99/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.675338245 seconds)
    (100/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.963488019 seconds)
    (101/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.28026644 seconds)
    (102/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.893590733 seconds)
    (103/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.872491783 seconds)
    (104/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.57179742 seconds)
    (105/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.872356404 seconds)
    (106/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.884504772 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.268995565 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.875953484 seconds)
    (109/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.292162417 seconds)
    (110/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.967259847 seconds)
    (111/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.970614632 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.972900968 seconds)
    (113/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.966940255 seconds)
    (114/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.096868694 seconds)
    (115/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.189957618 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.490828188 seconds)
    (117/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.037398496 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.186113221 seconds)
    (119/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.896257881 seconds)
    (120/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.028409573 seconds)
    (121/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.963414937 seconds)
    (122/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.139967751 seconds)
    (123/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.552727274 seconds)
    (124/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.894316201 seconds)
    (125/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.654490784 seconds)
    (126/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.38532753 seconds)
    (127/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.879917192 seconds)
    (128/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.780038105 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.876751288 seconds)
    (130/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.291245264 seconds)
    (131/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.028182288 seconds)
    (132/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.990168968 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.909393679 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.874397448 seconds)
    (135/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.307680057 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.127585015 seconds)
    (137/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.291864733 seconds)
    (138/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.879465094 seconds)
    (139/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.115848124 seconds)
    (140/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.904052042 seconds)
    (141/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.983127136 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.387832674 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.778846052 seconds)
    (144/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.881213691 seconds)
    (145/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.987672204 seconds)
    (146/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.544469409 seconds)
    (147/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.880941737 seconds)
    (148/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.080423553 seconds)
    (149/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.899695438 seconds)
    (150/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.22432364 seconds)
    (151/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.042169875 seconds)
    (152/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.065126364 seconds)
    (153/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.279678404 seconds)
    (154/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.899298164 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.875229027 seconds)
    (156/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.878405316 seconds)
    (157/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.343164772 seconds)
    (158/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.177979147 seconds)
    (159/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.991313997 seconds)
    (160/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.007462655 seconds)
    (161/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.879283545 seconds)
    (162/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.202235725 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.277722438 seconds)
    (164/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.019830763 seconds)
    (165/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.037488156 seconds)
    (166/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.88090176 seconds)
    (167/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.172080356 seconds)
    (168/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 3.089649226 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.895838234 seconds)
    (170/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.986314906 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.229618318 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.184737064 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.204794555 seconds)
    (174/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.971429827 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.001215733 seconds)
    (176/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.170380918 seconds)
    (177/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.940081899 seconds)
    (178/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.236608096 seconds)
    (179/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.78576898 seconds)
    (180/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.897030635 seconds)
    (181/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.879823163 seconds)
    (182/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.112368019 seconds)
    (183/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.09217311 seconds)
    (184/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.967860332 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.901903417 seconds)
    (186/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.263963465 seconds)
    (187/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.946231913 seconds)
    (188/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.231488287 seconds)
    (189/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.538873838 seconds)
    (190/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.96278235 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.882620555 seconds)
    (192/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.331912424 seconds)
    (193/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.497659548 seconds)
    (194/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.110198342 seconds)
    (195/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.012544121 seconds)
    (196/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.195899939 seconds)
    (197/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.552543603 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.847699015 seconds)
    (199/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.892479597 seconds)
    (200/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.212168306 seconds)
    (201/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.884065777 seconds)
    (202/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.970654979 seconds)
    (203/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.428359472 seconds)
    (204/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.994155631 seconds)
    (205/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.970531205 seconds)
    (206/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.008975838 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.881501372 seconds)
    (208/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.375522197 seconds)
    (209/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.889767699 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.136437739 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.169520347 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.192002178 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.948740582 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.214653236 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.662647074 seconds)
    (216/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.976022368 seconds)
    (217/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.134068333 seconds)
    (218/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.964195526 seconds)
    (219/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.4127663 seconds)
    (220/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.187132023 seconds)
    (221/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.349164339 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.198347384 seconds)
    (223/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.918294709 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.11280347 seconds)
    (225/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.145296875 seconds)
    (226/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.074617711 seconds)
    (227/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.250991963 seconds)
    (228/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.135626659 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.544571941 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.200878311 seconds)
    (231/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.180654096 seconds)
    (232/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.754729963 seconds)
    (233/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.075164216 seconds)
    (234/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.367732932 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.884108441 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.498823048 seconds)
    (237/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.948949565 seconds)
    (238/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.319904856 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.67336122 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.907104955 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.004760998 seconds)
    (242/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.883686936 seconds)
    (243/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.996967549 seconds)
    (244/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.904292585 seconds)
    (245/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.007942022 seconds)
    (246/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.187203415 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.752977801 seconds)
    (248/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.337103268 seconds)
    (249/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.247246511 seconds)
    (250/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.899324606 seconds)
    (251/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.884168873 seconds)
    (252/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.882167111 seconds)
    (253/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 8.254800175 seconds)
    (254/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.956119962 seconds)
    (255/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.30831536 seconds)
    (256/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.000250967 seconds)
    (257/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.110596751 seconds)
    (258/309) benchmarking ("sort", BigInt, false)...
    done (took 6.884902024 seconds)
    (259/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.910153534 seconds)
    (260/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.690343535 seconds)
    (261/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.998308446 seconds)
    (262/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.907040796 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.106110118 seconds)
    (264/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.010655207 seconds)
    (265/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.137218574 seconds)
    (266/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.88870298 seconds)
    (267/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.971270195 seconds)
    (268/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.278483423 seconds)
    (269/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.356345771 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.884306214 seconds)
    (271/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.978070047 seconds)
    (272/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.053136175 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.884444093 seconds)
    (274/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.20495446 seconds)
    (275/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.102539869 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.014397644 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.231268089 seconds)
    (278/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.016207689 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.883112721 seconds)
    (280/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.306849109 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.098539683 seconds)
    (282/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.904231856 seconds)
    (283/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.064348341 seconds)
    (284/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.242552105 seconds)
    (285/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.804506794 seconds)
    (286/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.89977579 seconds)
    (287/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.39348752 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.987791686 seconds)
    (289/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.999737704 seconds)
    (290/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.402718572 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.887486957 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 3.483435718 seconds)
    (293/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.902350145 seconds)
    (294/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.010564671 seconds)
    (295/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.962321284 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.732781174 seconds)
    (297/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.331830073 seconds)
    (298/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.765245609 seconds)
    (299/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.143727202 seconds)
    (300/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.0038552 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.920148213 seconds)
    (302/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.962972637 seconds)
    (303/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.036760998 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.015773894 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.926280791 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.008046664 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.094082292 seconds)
    (308/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.891775273 seconds)
    (309/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 2.031549902 seconds)
  done (took 1009.831929785 seconds)
done (took 1011.69230432 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.913529233 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.906299242 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.890021752 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.910609482 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.002066805 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.934741613 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.902987557 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.89248323 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.939227062 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.939731934 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.887953811 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.935130204 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.889352036 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.889399618 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.88951905 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.906599298 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.183852134 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.913395858 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.908674378 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.901745547 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.907108135 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.889725608 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.940078731 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.933521074 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.893906893 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.894927393 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.89592245 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.908946235 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.003033787 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.894258808 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.894926764 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.904051436 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.1807226 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.91200813 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.889526923 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.911438284 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.903999609 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.904831961 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.895961357 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.924140828 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.271176782 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.921291576 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.893037386 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.891225489 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.891994238 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.897818405 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.892045716 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.90017279 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.907293179 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.908211008 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.26608887 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.938687465 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.895380011 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.892277664 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.906122822 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.892677959 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.897144047 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.911375588 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.91130607 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.909116728 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.173092486 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.922199853 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.89645582 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.910644551 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.902220259 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.302321598 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.922501899 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.90199383 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.272210998 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.930140268 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.30223103 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.93403135 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.897052545 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.908952518 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.925466409 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.183955872 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.913678742 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.894232823 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.903256331 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.89177742 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.905163323 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.907699434 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.899129635 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.893493732 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.908902802 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.937520075 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.906687614 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.89468842 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.906538845 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.913776509 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.90240725 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.90650485 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.897402466 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.893072144 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.906905621 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.899000109 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.897496428 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.897551168 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.900435316 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.907835392 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.273425074 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.94092676 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.892448413 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.893335337 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.89476581 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.909946074 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.271723902 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.926460714 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.918460894 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.944848149 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.896384341 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.173918506 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.921341073 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.912994533 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.906892813 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.898297569 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.892755072 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.172862425 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.291559718 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.942553721 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.894797654 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.893851541 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.912726478 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.897695587 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.893921799 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.187169578 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.920192467 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.912020006 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.0186645 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.909793197 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.928222732 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.894065421 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.900390958 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.941550593 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.914516764 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.92863761 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.898864393 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.912694586 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.91400483 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.894367017 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.908922383 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.909400747 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.896857411 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.904935531 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.895055481 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.942179666 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.912438515 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.911858358 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.918094282 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.019842745 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.895286726 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.174204284 seconds)
done (took 297.342741098 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.969946425 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.893679667 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.983426678 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.894899126 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.981368976 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.965814149 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.893981034 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.894992043 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.894497951 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.392563097 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.894725944 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.901521807 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.893474018 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.89479977 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.963782868 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.895295881 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.8943456 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.340754307 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.89534894 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.974493838 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.895915587 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.897031453 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.895494216 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.400960068 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.893887098 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.893119183 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.976430727 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.895559767 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.344792796 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.89354056 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.89579421 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.345884984 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.975720023 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.922872266 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.903409413 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.902684532 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.983268031 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.903570461 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.963019862 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.963553774 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.988523619 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.929299247 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.895869141 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.89511981 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.898936756 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.897714466 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.89612439 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.928455549 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.895692727 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.900381282 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.339829464 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.904371431 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.900900173 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.896763931 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.896038132 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.924551076 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.896505653 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.899125082 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.976036271 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.897465596 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.963578664 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.399197985 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.39567702 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.896997109 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.895636042 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.897259165 seconds)
  done (took 186.992369923 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.963874953 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.974088013 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.963448834 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.900375701 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.947577053 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.964467137 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.901050041 seconds)
  done (took 15.441568342 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.904876883 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.898104348 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.947051796 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.947124791 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.897678182 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.075311264 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.908795418 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.902268917 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.924505076 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.898436441 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.563002973 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.947854176 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.903387742 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.89848392 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.909609539 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.954484733 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.900709219 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.89984032 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.013345184 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.046743953 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.903480119 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.906397728 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.925452942 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.910164561 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.898579121 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.89958607 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.899826802 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.90610152 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.898906458 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.89853499 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.899263589 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.950710132 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.899601628 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.898962933 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.898872659 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.900602798 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.899649188 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.898891637 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.899851945 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.8980947 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.89807624 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.899653678 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.899375114 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.899680456 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.899468137 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.923297397 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.899287041 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.901946015 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.900144552 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.900664677 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.926754226 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.900714596 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.90047294 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.906543318 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.943419582 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.907787004 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.90023733 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.901250645 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.900763075 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.901214481 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.900426358 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.048091856 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.950974929 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.901669185 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.951210637 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.054427662 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.902129326 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.900974435 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.900727975 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.990474404 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.901293716 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.949473497 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.90074082 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.014881908 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.901040317 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.082805805 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.924661787 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.906179633 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.904776611 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.901798047 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.907853798 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.900746433 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.904246029 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.908198466 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.907007082 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.901372107 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.902208374 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.903421515 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.910490452 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.901932327 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.952211275 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.902518674 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.902486468 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.041940139 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.901586017 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.017790432 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.930368079 seconds)
  done (took 208.960597624 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.910729851 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.909651122 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.904637502 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.919384877 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.903849374 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.903774849 seconds)
  done (took 13.284065745 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.905156459 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.905693049 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.902567414 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.903075813 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.902790671 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.904034608 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.903563369 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.905200169 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.905951186 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.903309591 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.90315503 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.905644627 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.903071265 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.903883938 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.903659342 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.903580013 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.903320459 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.903900338 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.90309975 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.904058639 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.109687981 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.902968316 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.903332369 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.907799333 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.907818979 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.902790754 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.915987359 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.903759778 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.90383778 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.912085957 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.908019334 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.904987225 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.90743533 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.90907316 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.907677912 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.908281792 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.907682825 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.906732899 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.904366781 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.904695445 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.906273449 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.904253577 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.904827958 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.906335539 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.906448268 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.91153833 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.910087054 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.917976253 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.906134949 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.907367359 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.907140462 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.904988856 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.905792198 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.907004611 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.910309645 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.911445233 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.90915168 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.906159061 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.905664424 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.909752452 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.9088789 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.907470707 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.907256828 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.909377426 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.912087563 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.908990851 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.909282933 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.910541707 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.907121115 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.905399451 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.907196124 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.906295443 seconds)
  done (took 140.310169235 seconds)
done (took 566.826426207 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.152385167 seconds)
  done (took 8.98751412 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.034309796 seconds)
  done (took 9.211353854 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.705159498 seconds)
  done (took 10.552733889 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.95096456 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.939662447 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.930436829 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.919206926 seconds)
  done (took 29.610365093 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.288597174 seconds)
  done (took 9.136387327 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.942264426 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.916908873 seconds)
  done (took 15.770835464 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.991940186 seconds)
  done (took 8.839699954 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.268032896 seconds)
  done (took 9.1230674 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.923671577 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.925565066 seconds)
  done (took 15.717950945 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.925683854 seconds)
  done (took 8.774401092 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.225008392 seconds)
  done (took 10.097727622 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.93790143 seconds)
  done (took 8.856713521 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.988149374 seconds)
  done (took 8.836699753 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.029303828 seconds)
  done (took 9.876501718 seconds)
done (took 165.230297915 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.937881415 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.918658971 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.920047471 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.918792688 seconds)
  done (took 29.543532238 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.955556878 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.954973022 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.9633557 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.955301071 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.945737367 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.945905207 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.954996769 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.954731569 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.945738275 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.952330009 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.956178058 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.95447882 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.955217208 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.964544629 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.964536535 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.954078785 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.955876373 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.955864508 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.94595342 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.964160541 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.956843466 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.954850604 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.92153725 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.92115387 seconds)
  done (took 48.702609811 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.139559973 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.006101873 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.090051655 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.994856859 seconds)
  done (took 10.079893309 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.921879079 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.997012067 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.991849216 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.978333974 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.981848016 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.039384606 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.990644095 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.063846291 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.051270348 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.057678129 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.930732206 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.945228869 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.947548001 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.977911238 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.037600433 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.923310546 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.921696176 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.041681801 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.999507653 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.11119015 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.923990815 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.000925563 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.981429855 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.991428696 seconds)
  done (took 49.658940863 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.923996165 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.932058326 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.929534416 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.923722761 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.924388561 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.924213013 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.930711208 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.925998358 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.945397292 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.926281426 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.923570045 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.924828009 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.93139297 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.924903969 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.924955308 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.93744434 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.939668642 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.925134357 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.929082411 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.932139524 seconds)
  done (took 40.431200415 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.923032272 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.195044101 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.267759984 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.175636887 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.921579754 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.922325636 seconds)
  done (took 32.257276836 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.936638842 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.93146763 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.924557369 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.982566964 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.068847112 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.9329953 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.924633735 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.935689206 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.973897193 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.991706981 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.9467446 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.955605016 seconds)
  done (took 25.359889513 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.924505701 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.928283026 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.926262287 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.93718709 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.936359291 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.931673976 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.93268805 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.92503939 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.93836716 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.943751151 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.932452571 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.937509789 seconds)
  done (took 45.051407083 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.629410898 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001273712 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.925234207 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.950736362 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.367374913 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.475004807 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.818603072 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.551135453 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.461688623 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.850850533 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.127616297 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.925106524 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.011376317 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.926445272 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195172591 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.229063305 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120455861 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.168603265 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.605214004 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.025358493 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.127635289 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136860632 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.212593388 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926540339 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928365728 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.934791567 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.455023765 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.642316755 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.029186596 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.121654024 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.245247072 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.874978518 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9741708 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.92907808 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.9388507 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928977089 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93113503 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196810397 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.938698098 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125708094 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99755788 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.175674166 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931354506 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.340014003 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.634175434 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.177398775 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.038210519 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.927536762 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930813614 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927391267 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.852884369 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010433762 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.928831219 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932499799 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.62746216 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.927735779 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003444551 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.929552607 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130302421 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.735777994 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.613782294 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.931410065 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930239877 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.488021112 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.922382815 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.11196862 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.59485948 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.378558634 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.342006583 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.025464569 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.930158888 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.930024092 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.115746901 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.969720571 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.587225811 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03520661 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.06501297 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.945496399 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.568712867 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.217203673 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.297275464 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.491507415 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.848100375 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199073652 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.653202483 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.991804741 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145685485 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.759044412 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.855403909 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151769269 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960834022 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933019982 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.195208981 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.589947771 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.110803315 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.944389143 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.36146332 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948346891 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.935051973 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930769553 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.143073548 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.349961334 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.028783918 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.050963112 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946715221 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.013519569 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856392888 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.942409065 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.932450269 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.812220607 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.932680045 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.796161166 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.053816204 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.787164761 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.047443416 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.869312958 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933133146 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.915094566 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0422056 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.879406249 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178414249 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.224367639 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.582240094 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835216615 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.141293455 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.249310909 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163019425 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.93614998 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.146711435 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.457912359 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.3043034 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.981135185 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.213319413 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.988288186 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.216855078 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348104988 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997103172 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.601721814 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.534178595 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.148186586 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94713647 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.936350009 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.935832062 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939418783 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.868444205 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.553970184 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.263553569 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.104129391 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.146887149 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.354882232 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.9919726 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.820261221 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.317965393 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.069330084 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.944521039 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.575877992 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 6.197441862 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.740854184 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.024017254 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.114036912 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.21732523 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.972716478 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94678312 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025067067 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950289109 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.940923739 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.216642359 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.303222579 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.934703402 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.934690276 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.88616888 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938027948 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.936133499 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.456835217 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.902478457 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.941081138 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.944898604 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.807659437 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996421421 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.935882704 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.937291471 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.456516545 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.442231695 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.940378898 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.573379144 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.94883518 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.082141461 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.206760232 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.25911446 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068662232 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.634522261 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.329618996 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.04992922 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.635831127 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.861976064 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.935271361 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.874075503 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939367064 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.93422113 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940411321 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.123855289 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.210414193 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235401365 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.403543767 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.000416134 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139579907 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.574104811 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.964033383 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.937266627 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9417427 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.937256242 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.936000134 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.42969688 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.48003785 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.951410612 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044444129 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.941048972 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063520557 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.947582544 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.862956947 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.937924127 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.938915317 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38309924 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.033771286 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.8949545 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.214409564 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.68844272 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13367169 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985336028 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.94823401 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942012201 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.616533414 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.059730833 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863851158 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386101069 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050488896 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.581139424 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.685002968 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.500229031 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234995825 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.257488872 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.265133477 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.005964141 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.152270166 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.026161635 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.993318568 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.026473511 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.873420991 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.863871833 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.582816282 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268775368 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207083111 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948866222 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155297185 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.578840068 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.242449165 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967677776 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.803167131 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320554688 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.915082722 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954527924 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 6.371399978 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.123053169 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021332401 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.942382979 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.892131174 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.278062833 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981096656 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.643393963 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955156523 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.291677787 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391395028 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.17323981 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.280790332 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157649244 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.946980374 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.286199615 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.174816614 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.05626059 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.94549387 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.911623958 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.16179903 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.521414796 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.775354714 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946318797 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.121901167 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.308893466 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.841501401 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.943415982 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.124802688 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277979191 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939505731 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.262833413 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.326598276 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.056683321 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993047088 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168616801 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.632076179 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325622926 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.488781249 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.409296073 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947121772 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.867726831 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.641851337 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.144060407 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.945998424 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.90619335 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.159824696 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.177911123 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.617614689 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163617751 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.185331429 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.953063251 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.214036357 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013501202 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.040157052 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.223385222 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.40572457 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.18961366 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.16789894 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.498381628 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.160188278 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.388536818 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.094345591 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.946023049 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.148421035 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15906432 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.155947286 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.293706619 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112590458 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.652799618 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.948403402 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.151046343 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239957171 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002931669 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.295572293 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.123211929 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.027763838 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949982933 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019448273 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.949242828 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953251022 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.292677781 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.473608896 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.958883129 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018880037 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.953404687 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.506340332 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.951684183 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.949469876 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.218300774 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302094552 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.274156143 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.928493191 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.944330001 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.953195392 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073324313 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.870108963 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949416807 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214244659 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.94757568 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372659646 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.174514014 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961589797 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.230005244 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.340885767 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.626015944 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.057038638 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950404196 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.170742174 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.261350331 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.164978873 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.138114776 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217397972 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.282066795 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.980201788 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.292289544 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196197048 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948585659 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.970257658 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.949391626 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065937112 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.147725908 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.221993268 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.452682159 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.5867429 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.288746926 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.800302809 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.94896921 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.625025988 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293124602 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.220534709 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.997319596 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023477592 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951799697 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397083714 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.745972648 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077867843 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.832479984 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.874319955 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.960813517 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.225873905 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.189300552 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.656042245 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.951555269 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.221634336 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251306705 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220039828 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.999716632 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.878968227 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164302012 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950422014 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.95863315 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.16632383 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165973141 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.195312529 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950497964 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.953636169 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.754799299 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.87424594 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.949808925 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993072611 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.174013644 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.965658773 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.463023892 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.648416829 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229743504 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997885665 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951007122 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.220253192 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.474700855 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.484763625 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959347693 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162643357 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.870693019 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.329358011 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.952030507 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401199291 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.337889581 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.952780425 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.511337859 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.276623667 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.220185787 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.885621992 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963839709 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.166002439 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.887915252 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.991206796 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.93538249 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409618331 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263178684 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.68656632 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.50906775 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.954413865 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.954664569 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.404913973 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062070645 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414057841 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.051727292 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973440171 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.474457223 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.65236678 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.239681021 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.196530202 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.509877258 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.620783719 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.953656776 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.952276667 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.955128919 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.871628952 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.14034716 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.141604015 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.247279034 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.988353718 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413008384 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.066205339 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.31237633 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080593503 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.144044291 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.071158425 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.474250722 seconds)
  done (took 1698.82171193 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.958644696 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.006862346 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.054513762 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.985853325 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.963992944 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.0198221 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.029261081 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.092265759 seconds)
  done (took 57.992513569 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.953304584 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.087519735 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.959470289 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.955199526 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.008174847 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.954995437 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.108022324 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.967182045 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.959019969 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.959153899 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.955910261 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.956119334 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.271900022 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.976963177 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.955947096 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.955574499 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.958928394 seconds)
  done (took 75.879736308 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.958207168 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.265651734 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.992747447 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.959563535 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.397693649 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.956922676 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.077010659 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.985394243 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.991304916 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.161374667 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.246450838 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.993688209 seconds)
  done (took 90.869521465 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.967608019 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.959129935 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.958465231 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.958620814 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.959427592 seconds)
  done (took 11.694605603 seconds)
done (took 2218.28677695 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.188633402 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.015367162 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.057387304 seconds)
  done (took 5.955801838 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.103644163 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.148412238 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.260752593 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.021857117 seconds)
  done (took 10.42749626 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.269122843 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.322539369 seconds)
  done (took 6.474791259 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.277868478 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.97783316 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.335679391 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.959513866 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.960464084 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.962444714 seconds)
  done (took 22.771029452 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.958035944 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.957492231 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.958340797 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.959021087 seconds)
  done (took 9.717093867 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.95745841 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.676508465 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.95710863 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.967127508 seconds)
  done (took 21.444251659 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.140717564 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.075921878 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.102988033 seconds)
  done (took 8.205541687 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.194608598 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.173387555 seconds)
  done (took 7.252643675 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.100096953 seconds)
  done (took 3.985083983 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.985434576 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.227954789 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.443618803 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.960394758 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.57802021 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.204244258 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.300090727 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.183158499 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.412566815 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.438804843 seconds)
  done (took 26.618891786 seconds)
done (took 138.518137492 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.522605686 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.98662425 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.160226407 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.319746806 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.202030166 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.161021829 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.183869109 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.310849004 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.003915224 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.995216397 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.319800488 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.196536175 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.128361698 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.978786067 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.13277652 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.964717496 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.193437251 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.327751264 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.030241629 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.298968815 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.194201634 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.966859079 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.173807782 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.99877873 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.197902178 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.112591844 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.519492649 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.970087158 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.175639955 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.521349084 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.117523703 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.433623997 seconds)
  done (took 171.686892905 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.963425097 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.962524382 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.961118096 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.963441088 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.390691089 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.962906307 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.963855852 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.961465352 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.394315266 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.392940244 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.963551069 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.381268725 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.963034331 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.963131764 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.962211144 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.962452454 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.547964037 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.964268732 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.963603611 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.962897698 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.961895659 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.21840801 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.964889687 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.223275107 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.544426147 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.964389414 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.963090508 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.965163111 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.964150938 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.964320807 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.964654524 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.964263353 seconds)
  done (took 212.105394746 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.962368166 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.964856919 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.965320362 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.964770824 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.965539507 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.962254536 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.96591565 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.96745065 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.723486066 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.713998669 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.966028337 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.967301199 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.965961753 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.962771761 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.966516529 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.965033662 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.96469031 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.965609168 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.9691605 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.973890328 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.96700458 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.580969828 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.967099103 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.600065987 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.971993771 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.967561424 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.965434543 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.966555144 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.966426735 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.967907928 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.966791853 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.96569809 seconds)
  done (took 223.567134289 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.204743212 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.96734018 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.967482059 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.95669874 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.966563418 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.966365604 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.941806724 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.216819996 seconds)
  done (took 20.085554465 seconds)
done (took 629.340876994 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.358168478 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.198464632 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.122803131 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.990684311 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.226565053 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.036779237 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.985120654 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.051606516 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.816087149 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.063610272 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.659257131 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.01147315 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.760419789 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.018205033 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.095072433 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.045367736 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.54195793 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.642492372 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.123426962 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.035513504 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.144493734 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.904845844 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.067143196 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.857934544 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.680496995 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.958485264 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.018636342 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.54493581 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.999842797 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.128326134 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.694600036 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.277158287 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.002920987 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.986151103 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.040432182 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.020126789 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.21765357 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.00120663 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.090313255 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.700949657 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.051719251 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.722936241 seconds)
  done (took 106.786956904 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.980354838 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.973076021 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.973963532 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.974682194 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.982924801 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.97430994 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.973937648 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.975387231 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.975739542 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.974771691 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.974933156 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.983476153 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.974888992 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.983186056 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.974508009 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.974851195 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.974701886 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.984022482 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.975168338 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.973873914 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.976116158 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.975739598 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.971419958 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.975491939 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.975124924 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.974870436 seconds)
  done (took 53.291451873 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.970577157 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.126219883 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.216079441 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.990833189 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.971113246 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.97280534 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.988956006 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.975533161 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.973086894 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.972626206 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.071899526 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.97743391 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.989774106 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.215895939 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.987016043 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.970018534 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.970556856 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.971994311 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.133056646 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.986874583 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.991581276 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.976959529 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.990374554 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.984432909 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.972731987 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.971516291 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.97515071 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.407166117 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.98166603 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.073689412 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.031301664 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.997426963 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.365951924 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.224759428 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.027099341 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.98118766 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.972114025 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.077796226 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.978828402 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.972821297 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.990651297 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.978537948 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.216559765 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.495258053 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.986755623 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.972409114 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.41717547 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.087254265 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.014677884 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.984974278 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.219266614 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.990569001 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.972965815 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.973229426 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.010760061 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.981099353 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.972443401 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.289915918 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.985057114 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.991535634 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.978546147 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.973346212 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.141822611 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.98265169 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.129772535 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.983200914 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.980564781 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.974385857 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.216943368 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.991467592 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.510807725 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.988652559 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.973224826 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.075307992 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.134510343 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.444705759 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.988045742 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.145049702 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.382224587 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.999900029 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.982938007 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.397411938 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.002842144 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.982367966 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.976918005 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.97646684 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.974280638 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.020875389 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.991639263 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.425836952 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.510727195 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.308767464 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.002157855 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.992340802 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.977020231 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.290231503 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.983095833 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.975226109 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.213712906 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.516015615 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.990450711 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.981493275 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.490771483 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.991121448 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.994680142 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.983815928 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.225703796 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.992508508 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.020961544 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.976153335 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.981614693 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.978033219 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.994432238 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.982528739 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.974753746 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.484080106 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.096968559 seconds)
  done (took 244.452638182 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.976485048 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.976338147 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.975096263 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.981734897 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.975435561 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.977023924 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.974680525 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.974587336 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.976870488 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.976291812 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.975725442 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.978002866 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.977379568 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.976398736 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.983038969 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.977233687 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.58087458 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.976198658 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.975783407 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.975908818 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.619998762 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.981518338 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.977094743 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.976916877 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.978060525 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.976182019 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.980848805 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.979912388 seconds)
  done (took 170.516421845 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.976666295 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.088573843 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.996850733 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.005522232 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.985474752 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.978115519 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.07686811 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.996257389 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.983583923 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.977079643 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.978493731 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.037625985 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.990016353 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.077059128 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.010157553 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.08632725 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.08394496 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.98579823 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.978006568 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.978745092 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.009037792 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.986804279 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.038270467 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.103329021 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.999011294 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.090844563 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.999058977 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.979320002 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.979009175 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.09130294 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.999162786 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.039762926 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.009400558 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.99796494 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.097263078 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.097340394 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.086015268 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.085422393 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.986298536 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.979545727 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.979768968 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.981181406 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.092516504 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.999020599 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.981185551 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.095461487 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.000448902 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.980904254 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.980491175 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.981047206 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.993738494 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.998009005 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.044344524 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.110526107 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.016998296 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.004347181 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.07875488 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.110220236 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.981061571 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.079155922 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.989152941 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.09511173 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.001242312 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.982353409 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.982109614 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.985684143 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.011385072 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.087448621 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.086676742 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.989422946 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.080200127 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.018434871 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.989547383 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.982641132 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.981913269 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.095362678 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.098821031 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.018406025 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.019345945 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.013209894 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.991960836 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.982446052 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.984007759 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.999386008 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.987030009 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.096864369 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.100731821 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.98859643 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.982038003 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.983127586 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.983873637 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.007178208 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.103582057 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.018898419 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.089060842 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.049485374 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.058141608 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.999059967 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.998044655 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.987066766 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.043567935 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.999377473 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.995106893 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.290031974 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.042723857 seconds)
  done (took 214.590493362 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.370487739 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.033951351 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.039854601 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.298673115 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.344423586 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.014552985 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.029381822 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.030167923 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.053432418 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.22017329 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.117596073 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.049525504 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.017238258 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.004418608 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.029706114 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.066812329 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.040995941 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.368647534 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.253493062 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.2272243 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.023385478 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.296048529 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.356495381 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.604787155 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.081266724 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.424538278 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.608477997 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.1642496 seconds)
  done (took 65.086561229 seconds)
done (took 856.618276217 seconds)
SAVING RESULT...
DONE!
