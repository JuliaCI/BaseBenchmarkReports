cset: moving following pidspec: 24529
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.296800013 seconds)
loading group "string"... done (took 0.573608963 seconds)
loading group "linalg"... done (took 7.216673159 seconds)
loading group "parallel"... done (took 0.166300924 seconds)
loading group "find"... done (took 1.15879731 seconds)
loading group "tuple"... done (took 2.003686712 seconds)
loading group "dates"... done (took 1.293167966 seconds)
loading group "micro"... done (took 0.240364512 seconds)
loading group "io"... done (took 0.977913841 seconds)
loading group "scalar"... done (took 40.392223042 seconds)
loading group "sparse"... done (took 12.587995978 seconds)
loading group "broadcast"... done (took 0.989910387 seconds)
loading group "union"... done (took 13.673553907 seconds)
loading group "simd"... done (took 4.653884752 seconds)
loading group "random"... done (took 9.349108237 seconds)
loading group "problem"... done (took 1.961881354 seconds)
loading group "array"... done (took 21.982991899 seconds)
loading group "misc"... done (took 2.000588623 seconds)
loading group "sort"... done (took 3.366676867 seconds)
loading group "collection"... done (took 18.998119698 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.521903049 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.138130944 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117744883 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.134414262 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.18262068 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.130357306 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124753832 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099567478 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.941218157 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148413334 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.136398524 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.506152364 seconds)
done (took 4.924139138 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.195207442 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08626203 seconds)
    (2/2) benchmarking "String"...
    done (took 0.09321748 seconds)
  done (took 0.848397977 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064875583 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125364951 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.064949913 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.081018622 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065687086 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079913588 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066181359 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064481927 seconds)
  done (took 1.224257623 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073350812 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068583595 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084240859 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067403116 seconds)
  done (took 0.970633575 seconds)
done (took 3.984643069 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.91939599 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.236411164 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.198388544 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.448914829 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.14790745 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.192969975 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.661726307 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.321564696 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.210902751 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.075426549 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.122513014 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.401209254 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124245658 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.661968689 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076966664 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.108270357 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.159213638 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.415164297 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080863575 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081865286 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102264691 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127436365 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.093309244 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.087397399 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.15670032 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068406063 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.150762129 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095707215 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067596869 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.294058348 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.187037031 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.672236129 seconds)
  done (took 10.461627129 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09778188 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.119615009 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068530256 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141159843 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.104309452 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085787421 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071200714 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082600021 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093994025 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.163090125 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11763714 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107474021 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082223125 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069708517 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.09898672 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.215816195 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.111296769 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086253484 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086294592 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074900885 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123452267 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.085050645 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095237126 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080215321 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.155002784 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194449448 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113634449 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112525667 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071056321 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084688583 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132266999 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144849293 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.0654091 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081766583 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.145588574 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110308388 seconds)
  done (took 4.572625159 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.09084637 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.17532962 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091147563 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.153964808 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084343261 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113507017 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082789118 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097941793 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.233129637 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.126014331 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.476440154 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126986662 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.097154548 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102321168 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068343807 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068374337 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.086262536 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.511324017 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.110544325 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.141155063 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084446555 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.092786139 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085606435 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.349236773 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082201528 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063642569 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083749147 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058376829 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.151190706 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068419309 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.172822012 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086763856 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088136236 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102388946 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198138343 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097731301 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122592559 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065630075 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068623814 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.160540948 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08693298 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063915803 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065379134 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108247891 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11886946 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.102487782 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083926233 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067551091 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.182542117 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066958461 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.095850336 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.90008123 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.164158998 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091972314 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063838233 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.284430708 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.089394971 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088170012 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064381545 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.25841139 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.175132101 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.108196969 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067388506 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066154843 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083968147 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068654659 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.374019936 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082062151 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.701145436 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07180692 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07748418 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.08028538 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.06903033 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082956945 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074784869 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072600205 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103391083 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065782391 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.085305479 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067440698 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065584303 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.087169303 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.082962038 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.202782882 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08574428 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066973787 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080007416 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088166419 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110756065 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067499528 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065521822 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116433418 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069210421 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.085399191 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.103468808 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085099722 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082977207 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086111044 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127583523 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067806204 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.115979946 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.070771501 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.109592881 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071107679 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114842738 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.09585288 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069012519 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153335164 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064899195 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064360441 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084198001 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065669663 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083849966 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067061687 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078529748 seconds)
  done (took 20.841827004 seconds)
done (took 37.643056417 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.306499299 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.092080943 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.091969129 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075938796 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.092729945 seconds)
  done (took 1.409674362 seconds)
done (took 2.135302477 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.133219802 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118351726 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063479817 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113506306 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063472141 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118537007 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115375945 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081223397 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116971367 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063821547 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112641183 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063865907 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063032991 seconds)
  done (took 1.975889798 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08208909 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084138179 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085036257 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080813618 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062356478 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097706878 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079108884 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103389714 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.07924579 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071066972 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079404282 seconds)
  done (took 1.623183995 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080062526 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082134814 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084795705 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.079641608 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063025212 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095190428 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079272086 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100323164 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079833541 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071374862 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079751404 seconds)
  done (took 1.618993813 seconds)
done (took 5.930918346 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077455372 seconds)
  done (took 0.795917264 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.732893519 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.473877545 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.096988267 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.132736447 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.214874937 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.154195732 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.446039491 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.108976415 seconds)
  done (took 10.253738614 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.09998028 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085578918 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.081766002 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.089523164 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07170997 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068289102 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086659396 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070580201 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087738399 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069891382 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.06953937 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085092013 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07265773 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086958838 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070778996 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084822377 seconds)
  done (took 2.07121043 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.103851721 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.102617171 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091588933 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078491757 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089429776 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072745965 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.091292345 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074101527 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086647183 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073173685 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092416877 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07637556 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090545546 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.071958118 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089632191 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078423049 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087489921 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.0754995 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090526222 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076602732 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.093752517 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065368542 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.091381733 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077737685 seconds)
  done (took 2.855429311 seconds)
done (took 16.7009082 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116769484 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087072397 seconds)
  done (took 0.936303722 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080681949 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.096904848 seconds)
  done (took 0.911262791 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082843648 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081425341 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089748056 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093913176 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066464665 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.081714318 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.102305363 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067146585 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066580116 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081835099 seconds)
  done (took 1.551092844 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068749227 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094865762 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071842757 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096728333 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076081702 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081685355 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075322859 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068420143 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.094866428 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063577113 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.086918504 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100936647 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07230058 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101594298 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.076890945 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.086993897 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072892556 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.086352573 seconds)
  done (took 2.210247275 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066598198 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067616622 seconds)
  done (took 0.870719709 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068009192 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063527012 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082633548 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066278593 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079310141 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063140614 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.07982769 seconds)
  done (took 1.234858667 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.407881845 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108734625 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.263659056 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071331187 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105005529 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.281497122 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.083389898 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070320609 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088435693 seconds)
  done (took 2.253069172 seconds)
done (took 10.706057167 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079461167 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085052776 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109465963 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.418351311 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093321452 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.080274033 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.1306093 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.225408721 seconds)
done (took 1.957744966 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125779415 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.61549216 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.403389784 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212785245 seconds)
  done (took 1.969717888 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.380611693 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089286111 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073054853 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066548393 seconds)
  done (took 1.352228774 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06545712 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070223487 seconds)
  done (took 0.881095018 seconds)
done (took 5.076276969 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06730253 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066708565 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.08005089 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066509965 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.06385445 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079952594 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09922267 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.08407468 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066111068 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063762051 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.083614597 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066759965 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066651006 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080636744 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064046394 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067430451 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081830458 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064433546 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063658344 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079714608 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066904022 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064369612 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079885416 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063948415 seconds)
  done (took 2.513313905 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084932853 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083293724 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071715551 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071824818 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.086917881 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071852533 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.088633761 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067248177 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087736641 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069022624 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086096999 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072096552 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068862599 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087242525 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06935737 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.086681267 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072165314 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083398905 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069480459 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086557561 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072037379 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067599854 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.086564983 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071574731 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087006503 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070741092 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084009662 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067747893 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08787879 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071036835 seconds)
  done (took 3.080707343 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071160863 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063821935 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08050513 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070424535 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06415835 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082034658 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063596567 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064080703 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.08070803 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063648385 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065164519 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.080271098 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064467539 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081816252 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065157929 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067181239 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.09742038 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064771564 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06395342 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080909473 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067687344 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064123614 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.080302865 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064566286 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.0641512 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079987317 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064929111 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080287677 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064978003 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064277752 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.083663881 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068327736 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063751966 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086540898 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06779544 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064025172 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.08464942 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06360607 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065170342 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.079173086 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063932467 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063814132 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080195637 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070935635 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064296616 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.08203974 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064236634 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.081245912 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064545188 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066994366 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080382742 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064657635 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066597704 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081262286 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068018649 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063973954 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081004389 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064074428 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081443127 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064511969 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063360779 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079713485 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066361481 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065084165 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095181828 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070800588 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064219581 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081262882 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065843413 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082206123 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066433245 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077944662 seconds)
  done (took 5.908695016 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.11717236 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092756859 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08266059 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065922917 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062917186 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081053726 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068010441 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08030265 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065700115 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08635218 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065126065 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065577838 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081903297 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080027148 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064942907 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082602254 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071125073 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078800352 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064993581 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068345656 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080391077 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068552192 seconds)
  done (took 2.428108803 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.187846003 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087553034 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.1090462 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091325607 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069775476 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091147487 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071133418 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086661311 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070943079 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085111103 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068996652 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086948045 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068485468 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069144652 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.190206971 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069040915 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086046512 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069676722 seconds)
  done (took 2.413894982 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078110738 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066931123 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106066037 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066405635 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084270151 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069429619 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089144324 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075158002 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085516826 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067450555 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091724275 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069100351 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070029864 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082957931 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069947839 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082678001 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069488056 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066667831 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091523434 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072164168 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08745292 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075611013 seconds)
  done (took 2.474805781 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081776232 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068846646 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101946848 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069341608 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079126022 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066071488 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089630765 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067346866 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088753167 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069053196 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066934482 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081309365 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072251396 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083335875 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072344306 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067020867 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.084874861 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067539977 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08503388 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063505319 seconds)
  done (took 2.285376399 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087239651 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084357303 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068632944 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093361965 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068639086 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068050496 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093253277 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068107372 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083816009 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.108680375 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068648997 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068557928 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092579677 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073341423 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.084131198 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092937962 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077006905 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094569485 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068673813 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084147358 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093010933 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084994586 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07704606 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.084121407 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068725624 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068081742 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084989578 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073215813 seconds)
  done (took 3.022998434 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067018308 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066727809 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080969996 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064453277 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064243663 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080672816 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064525387 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064351 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083075764 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065092152 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066664048 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083050388 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066755146 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067063817 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082534459 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067144417 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066562633 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.080482028 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064692633 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06432111 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08263194 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067331949 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067117251 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.080758502 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064751717 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066815189 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081225884 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064810221 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066899889 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081069776 seconds)
  done (took 2.896974131 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077082851 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073908423 seconds)
  done (took 0.912867002 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065315154 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08162392 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080482576 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070680133 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088073998 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067959528 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091727101 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071635748 seconds)
  done (took 1.378172274 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081588547 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077332234 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084373238 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079585126 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093615927 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082756547 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157693488 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.084946742 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073476967 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065049073 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.096933079 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066435591 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089811428 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067459579 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072782514 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090149672 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064636526 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089111805 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069233027 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066932078 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086453313 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076305027 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088276662 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064425613 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068435583 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094005213 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079162865 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085426063 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070533867 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.091746627 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073526179 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061582275 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084055476 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068155199 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065323197 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.09219024 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083076297 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087167175 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07658363 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0852055 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078508283 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.079347697 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072158411 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073930145 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094587877 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067698417 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084353431 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063873572 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065056853 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.0857753 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063561392 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067249035 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.078719483 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075142422 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086994009 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078257589 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082119479 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069118581 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069885249 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08751693 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07425053 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069432385 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086586477 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067335911 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09125171 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072189872 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093909864 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063023837 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062473896 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082156291 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077400864 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106653211 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073752723 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067935963 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085390088 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065578237 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086663087 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068503088 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07252329 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090633448 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067624777 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089806642 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075312203 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083690159 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070399213 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091522756 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065835826 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069530253 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.081361297 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08432256 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082921425 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065265332 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065436604 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.094736491 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071021333 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.083413948 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065262721 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074657747 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078068242 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068239098 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068746756 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085097114 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07900776 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089387181 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073432954 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093113499 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074018085 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084506491 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070975347 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064531633 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085455262 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067386709 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091431499 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062014777 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070706705 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085038346 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06869759 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093778554 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06584753 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067715357 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091806558 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073319393 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.08203404 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064282264 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070757232 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083852134 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071303939 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092124408 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066907838 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062848652 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079616102 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070663973 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067616733 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087665296 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07328041 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087310541 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062446674 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065774765 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.088267874 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076664069 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084218336 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06860395 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090615637 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069102874 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067406008 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.090387871 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070243145 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083131136 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072863778 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068396339 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079602133 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071279033 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086567963 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066876434 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071698219 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088025971 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070868843 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.085265717 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066295214 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072997268 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085203527 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066645931 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083888666 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066832043 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077581994 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086203706 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063039354 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064380139 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091827718 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065804281 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083924004 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066748185 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070396711 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.08604576 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066381694 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083945702 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069813773 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095573986 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0720834 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068693489 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089827394 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078479736 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084143036 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070446932 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067131351 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08565308 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068121408 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093663265 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07332204 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08902958 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070162637 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064353416 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090748825 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076232879 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083287263 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066050684 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068160253 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087994566 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07367204 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088533763 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069846302 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066031977 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085993028 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071685825 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087363636 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068523068 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067447839 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089876444 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067457929 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091528398 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069800114 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095164778 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07119214 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063492783 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0877257 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066260837 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090660251 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063843432 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066302664 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083659508 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068697744 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067282826 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.08784279 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061927202 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074703352 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092704564 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068663611 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084231304 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.0676874 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073987169 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086142068 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071758227 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087649515 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074237985 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095448839 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06688237 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071063838 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09612317 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068419338 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079045294 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073455833 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066861594 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083788089 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067856056 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065398866 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087652405 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077019757 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093071666 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062339261 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087204257 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067202559 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.0670271 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080551578 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07251077 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070112204 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085188806 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0747447 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086229338 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069684847 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071139159 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084963341 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069118827 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085757083 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070761466 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068570317 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086950189 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067120988 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088254868 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067204726 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066081077 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086121982 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068278639 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067308929 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0910433 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06753594 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08469939 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070753099 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068449961 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08660902 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06895644 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084252329 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071873243 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068752104 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.085131099 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07016588 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062989867 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09277234 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067665572 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093328166 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068565422 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064348699 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089647001 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070132312 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.090354043 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068710913 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.085424644 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.07000593 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067542716 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087838019 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07528656 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082374203 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078373751 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075589771 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08595665 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071072089 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084426531 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069537452 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067274969 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085636022 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069298867 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067360538 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084641211 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071987267 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08714902 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068271153 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069718489 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.085776778 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069056245 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085947444 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062778829 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067227771 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084877468 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068132761 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095317571 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068863533 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067549087 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084358713 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069446123 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083869846 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064997577 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075980489 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093717272 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068417708 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092678565 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067394011 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086779115 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079300351 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.065072634 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083831255 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066642333 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065931451 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093378864 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068895291 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095258444 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068726662 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066703315 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.083455701 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.070281226 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083716326 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06261375 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066429189 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090257232 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067520547 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066983068 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085657525 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071640934 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086595578 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078557666 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084350889 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068926573 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069032749 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.082869481 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067536992 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06774984 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088111787 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069071786 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065097881 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082791068 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067698902 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085617159 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069315404 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06758052 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086562604 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075560155 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085330629 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070839881 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071520822 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080442439 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070933779 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085198814 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068254683 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067845083 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089367352 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072361437 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085790837 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077448348 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067369406 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086121392 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069001944 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065542105 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085600405 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067614031 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085046635 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067384871 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069183963 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093972123 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066092907 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.08820244 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068019341 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068358645 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093071455 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068926594 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08766933 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075515637 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068228935 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087220044 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076760302 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088624179 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072585312 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086805539 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06989174 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07375945 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084427197 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07442853 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.086301664 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069124225 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070451581 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083085287 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068690388 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067532379 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085061913 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074651821 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.086155687 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067473979 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067907108 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.08362877 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068708778 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089200812 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075375076 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070142171 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088964113 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064332521 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06514246 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08742438 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066822034 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086696309 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071810124 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073929822 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088110241 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069324466 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084470394 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077504153 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0731457 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089849383 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065733989 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088658699 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069342785 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070039656 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087335575 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06846455 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086813574 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071759487 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069985844 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085487566 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075296815 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089193651 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069825997 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069131437 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.086463566 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068455018 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062489697 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.086187889 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070603173 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090355691 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070811138 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067901831 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096612281 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066058009 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085716685 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071923261 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067486975 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.090605719 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064018891 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.086909632 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070644337 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068992583 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081821912 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068052883 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.0831313 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071469656 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06759209 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081463262 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079772627 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095943673 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072228496 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067196723 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084733335 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064208395 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063074432 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085207353 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069976851 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.086991413 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079382609 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067060519 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08573477 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064247339 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085933196 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071253442 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071828129 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083054023 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064366993 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066742444 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089644783 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074907807 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083908915 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067957452 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071484482 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088515113 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067297708 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088821107 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066404168 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071198735 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09949572 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068751292 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086502034 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074516171 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09372798 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06911674 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063499974 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086442481 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071317256 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086137531 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070109152 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069823869 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102661841 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071274163 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.08509312 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067509881 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070255361 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084961131 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077116766 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086734672 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070405461 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07263172 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.087535916 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076625484 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088560356 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076281167 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088512762 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071588031 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067246325 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087358154 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066904671 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066927324 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.087100252 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069470519 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091453977 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076996834 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085417024 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080532355 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095160547 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070829979 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064782691 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.085939844 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068342758 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063879332 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.086787649 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06692643 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.084094477 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066961834 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067331485 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.086703676 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074192781 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068661602 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086796726 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068500692 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081170116 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070188245 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071098104 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087108656 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065966229 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06793604 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086682747 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073071168 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089223184 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066647556 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069739215 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087506761 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069205234 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063156101 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093455631 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067460128 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089325308 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068176235 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068157325 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.087187114 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072127341 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092160707 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070322391 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088491088 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076906085 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070517867 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.083261999 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066494769 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073224254 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.084401222 seconds)
  done (took 46.610616291 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109415255 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083772071 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064491349 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081928364 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0763898 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083367474 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064008189 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064524119 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082311218 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067943904 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06338671 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081974983 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073747974 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105526677 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09495292 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068553781 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081071962 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065512643 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063628496 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082541419 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07419786 seconds)
  done (took 2.431727218 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.088847733 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.102169947 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079988958 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10061418 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073614935 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098390572 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096310075 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080781541 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100083741 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075373778 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.09993375 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097302386 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075988849 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.09328883 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075889303 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094722286 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082854046 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091927617 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.080388654 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097264062 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077021401 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097607002 seconds)
  done (took 2.759361461 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069754284 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067492043 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08719328 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063971341 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068398835 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081691038 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072214393 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.072514714 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.089253025 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066657219 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085001832 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066875481 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069111974 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.081704054 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.070161768 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065539448 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.133607441 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.089361164 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067842052 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.086886451 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063949483 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069690366 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.082222727 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064263698 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066230721 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089375088 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069064469 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083945274 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06832124 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06673245 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086393889 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066178457 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069638469 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.086499904 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067435196 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066506991 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085625036 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068295539 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.081160028 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065801262 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068214844 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.081825815 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068765782 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069156044 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084421746 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066037156 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069480743 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085798608 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063690114 seconds)
  done (took 4.480200066 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086566778 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.142125092 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088669288 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104005776 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.102846042 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094367059 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072946036 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.122784458 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066560569 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085532735 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085665947 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.102536717 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068201735 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091587926 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071822524 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086235612 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069642783 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085021639 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072613083 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085575034 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072843203 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.092242979 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083875421 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.100005289 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072189475 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086003154 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067911182 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.089756921 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081683059 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.09103865 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07256597 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091535638 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08457886 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.088168897 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067587504 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087975863 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085044231 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.087003902 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.07078378 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.08346057 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071014968 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089904088 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075346281 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103653475 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068852882 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.091129064 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068432989 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064948896 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.099835999 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069613705 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.094746846 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100820639 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072186458 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086457488 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073996152 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101553817 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068639857 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084641412 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071372933 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098627452 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066675516 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071599831 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.101405276 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087719843 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.0761311 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100048164 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074334485 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090339312 seconds)
  done (took 6.689114585 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077291445 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09274317 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083653184 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101875793 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073785294 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.093773227 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092692219 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074670139 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092475378 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079770469 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092860813 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.095755076 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.089605786 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077256549 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.094199276 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093342053 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075907202 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092779326 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076752597 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093364596 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075578534 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.101268053 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075258442 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102686887 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122740928 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070376865 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09241923 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074698576 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102555055 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074242337 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106125791 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.093100439 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.0748481 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102013399 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.104347838 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074688106 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066383235 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092926425 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.093675702 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074869566 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068520915 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102177413 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092125391 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070281717 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093738317 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07487019 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101506131 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.105507438 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078075531 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097524461 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075543117 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10234912 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074053995 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09386247 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101678344 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107755586 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101951111 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101533245 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075832353 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101786306 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10085719 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.090424866 seconds)
  done (took 6.338338204 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089569503 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095920799 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.07955963 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083298474 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066867207 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091619701 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067015251 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065758896 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09623122 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075865911 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098693213 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090430046 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075438699 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097908451 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071648633 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094438297 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072190519 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091025717 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076981741 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090933625 seconds)
  done (took 2.48446913 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077373204 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105240377 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069885086 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074615683 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090424356 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074796587 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.08963434 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071829278 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087391648 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072028568 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0977819 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079004031 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069145428 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093619333 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096541251 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075926583 seconds)
  done (took 2.139300018 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080670865 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097641318 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082436794 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088035067 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067267307 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064699333 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.088169174 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064453807 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083709056 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.08397549 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087265217 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071157467 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06808833 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.086751941 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066272165 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089397926 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065483346 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065788963 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.087346531 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082654278 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.098067843 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067853245 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.08755968 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070363924 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068460374 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093967574 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068267533 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.085370829 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067498035 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.087677127 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069520352 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.094036802 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066789228 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067505286 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.085291297 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066333937 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.085863755 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069260258 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071020298 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.087399092 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068012077 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.086194624 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069351336 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068801625 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083434637 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069969932 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.083649187 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.07542512 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066503973 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087209544 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069189085 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089394478 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070163836 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.097241001 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072552649 seconds)
  done (took 5.103730347 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082605419 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071239239 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083879066 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067059281 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090093102 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070402264 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072076503 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089677522 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071029663 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084927721 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071015629 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072209223 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089315022 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072507329 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089031223 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073729551 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064146058 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.088933444 seconds)
  done (took 2.225677806 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074599754 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068687082 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094869784 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069281627 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086940178 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071347282 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065257339 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086304211 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067426239 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068725195 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087741644 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071595486 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085720399 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071550658 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068295797 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087329739 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071778345 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067096626 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087552986 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06455787 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089130593 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067459811 seconds)
  done (took 2.491739898 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073799225 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.094291014 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.165430051 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.109029887 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084507608 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.099995872 seconds)
  done (took 1.450880697 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092709716 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101977772 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069698907 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089465871 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096569807 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069152798 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090041751 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069736919 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100193566 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102391155 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071000763 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097673913 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07983116 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100345286 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094819486 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077146972 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088383595 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070993667 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068326471 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109339729 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089485071 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080470063 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089057974 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070945244 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089318252 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078836499 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098406269 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102797084 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070901418 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098708563 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076586942 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089335432 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080154768 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104147983 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071280264 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09970695 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088337928 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089528634 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094794316 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079481582 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09070472 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076001917 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099774277 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093966353 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080456654 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089043606 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075517198 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088790939 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071773526 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114179727 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094394731 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080180165 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09521907 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079689415 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099028173 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115214161 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083845475 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098332408 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095155384 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085157205 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098853381 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094514982 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080212484 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103023373 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077020909 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098820604 seconds)
  done (took 6.666030681 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084661867 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107023513 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071085895 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103258418 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079293076 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09129941 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069527401 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089922591 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070042793 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089206604 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131573348 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071475535 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098038072 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078990941 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089847808 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070151594 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089920664 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097540248 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070809659 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11495871 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070234754 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098430524 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098052305 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079158109 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102981071 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076445657 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090569397 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070272442 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08941802 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070567939 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094968547 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071104994 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098708509 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06939292 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098487901 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089343283 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071319222 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093916602 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071778409 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095135931 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080116695 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108549603 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089117498 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071355167 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103910384 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071403685 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089788317 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07078757 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089414393 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070842302 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102764348 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083711407 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104402215 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098954593 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071191411 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090259054 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071935288 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089170379 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071472996 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09505786 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07979517 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089475856 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115033604 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071582389 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089844101 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080297428 seconds)
  done (took 6.547337311 seconds)
done (took 128.481068123 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208392864 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.197803593 seconds)
  done (took 1.23238922 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071296103 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096100955 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098902667 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131008378 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088453175 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102539102 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100002957 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09994451 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06963031 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087598943 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069451396 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070616354 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.152833574 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069395968 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068450572 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.089904386 seconds)
  done (took 2.302587757 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.095472253 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196932779 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.082893692 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.087330612 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.072994292 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.091148139 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067225229 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.073515446 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.091987344 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068535827 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071071035 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.088285998 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067795177 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.068574179 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.092239811 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071442117 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.086160346 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072033321 seconds)
  done (took 2.381168183 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.096017074 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.116085328 seconds)
  done (took 1.045623888 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.206441082 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.12469229 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.211047224 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.421862278 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.247737032 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.28014383 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.177852261 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.178504954 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.158616704 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.172183357 seconds)
  done (took 3.011889152 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101674213 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.161992293 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.276313217 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.137197116 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.111115569 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.088443118 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138117975 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.113556577 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084948703 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.103546756 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084383651 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.101560207 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098987198 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.097135187 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076376539 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.1018807 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121651086 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076515653 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077306417 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.098541906 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.094940724 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.088120189 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078602313 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095401464 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081496677 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.099998629 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069077182 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068001377 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.097671471 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077381361 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.094905802 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.084640354 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.101005934 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.132025319 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.106273561 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.134443453 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079082902 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.093210576 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07766427 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.093688268 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081546812 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099111166 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.08874334 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100320374 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069033759 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097048619 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068783848 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068699767 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.096126148 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.081915514 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.095999404 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076763301 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.13257276 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.100473916 seconds)
  done (took 6.18747865 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.758761847 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.115157887 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097434834 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.826490886 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094939472 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108492662 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.719838112 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116562695 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.211427419 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.720375227 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112766725 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.081272778 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207247763 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.216145109 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.937180029 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.275581983 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.612107304 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.084134422 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.133278615 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.135244835 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1005368 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099815301 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112980364 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.417779497 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.078037162 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093622971 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.080764388 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100400193 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.140427875 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.086120169 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095754262 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.157113144 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.230361716 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.162163478 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097618164 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073487561 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092631864 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.148583137 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.22221906 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19330699 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.154116707 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07122391 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072250911 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103957184 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09263169 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091556607 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.144455411 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.155205103 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.150444123 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09670155 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.081741449 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102040879 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.082483902 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.145320652 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103770078 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.270618754 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.287972754 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093285255 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.083510447 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107580334 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.217588056 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105033759 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.181641487 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121182263 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.169722524 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.094163224 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.735798004 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.149449087 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.094986451 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.078054318 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.101779366 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077487597 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103740412 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.14820804 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.371378798 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107125257 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075796837 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094402695 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.187284546 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.106846754 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073967711 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.142687514 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.097588919 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.082840717 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105899838 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.086310779 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.14880362 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.212569718 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.105881829 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.079177504 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098375815 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.084872752 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.09842884 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.191818697 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.196036369 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.144424771 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.19032516 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.083928106 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.142528195 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169823629 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.082284144 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.15135305 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.102933796 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.085639595 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104332783 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.172431326 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.126652846 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104892089 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076811182 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.099901846 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.127778275 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088537892 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.100493 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.152395649 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.442478057 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.148701853 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070214054 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110895953 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101416107 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.142524392 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.079269057 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.234657862 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.083781595 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.14830888 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102094671 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070950477 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10231209 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.143255864 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.083157967 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103668438 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.083308086 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101374885 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.215639704 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.173007801 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104466283 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.193084879 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.158416217 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.099722324 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.150392407 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.082061651 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146998161 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102625312 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.080818457 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099197431 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.727401818 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.106995516 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.080165157 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098994309 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.171595548 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074083849 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105328659 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085721854 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091421969 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.730865327 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108746279 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.083016304 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.106645123 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07918726 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10286179 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.080256511 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097700981 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.142358068 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.185233793 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102580542 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.080441452 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.107323544 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.142045296 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.07661241 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.107391991 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.105779283 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.087091288 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.103827264 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077233253 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10653262 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.149646463 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.144304619 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.175468476 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.513150339 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073191447 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.106834185 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204878514 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074065312 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.270671456 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.081675803 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.203737415 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.143903047 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081831279 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.293136467 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.146447137 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.170669827 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088186517 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153213688 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091868986 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.079700442 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.144000025 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.095325944 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079061927 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.142256678 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.107597429 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104110485 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.91678695 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09421092 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.20690876 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.071868112 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.151780463 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077746565 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103821869 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.269167701 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073892614 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110123677 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.144876632 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076782223 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.107164288 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.868451074 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.106859303 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.083975538 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099485886 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.178335117 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.14375561 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10337871 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.080166192 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102347607 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.142849953 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.191774986 seconds)
  done (took 38.858868971 seconds)
done (took 55.853108552 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.236143638 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.198925539 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.227509138 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.153425896 seconds)
  done (took 1.770284594 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.131593965 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.131884083 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.125095491 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067822265 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.132158127 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068486732 seconds)
  done (took 1.51896368 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.318815104 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278838895 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.20541114 seconds)
  done (took 1.66856887 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.269101604 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.227197596 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.448567038 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.294019128 seconds)
  done (took 2.230783228 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.188493206 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114372945 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.070778617 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107250475 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.154343481 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.22308028 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123557385 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.156819764 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.104693595 seconds)
  done (took 2.147576079 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.157583057 seconds)
done (took 10.359272468 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.265919011 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.134118497 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.167547013 seconds)
    (4/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.136895107 seconds)
    (5/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.21536824 seconds)
    (6/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.093988947 seconds)
    (7/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.21125509 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.107714856 seconds)
    (9/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.225834654 seconds)
    (10/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076733042 seconds)
    (11/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.10267104 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.083804373 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.17864557 seconds)
    (14/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.131334055 seconds)
    (15/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.192491768 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075493242 seconds)
    (17/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.10412486 seconds)
    (18/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.23412181 seconds)
    (19/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06732166 seconds)
    (20/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.120288276 seconds)
    (21/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.221555673 seconds)
    (22/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.162100975 seconds)
    (23/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.098268191 seconds)
    (24/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.252869583 seconds)
    (25/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.24637981 seconds)
    (26/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.230984016 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.172647918 seconds)
    (28/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.061138866 seconds)
    (29/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.084640564 seconds)
    (30/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.117667855 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.095127837 seconds)
    (32/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.24177031 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.152626071 seconds)
    (34/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.138156557 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.149476236 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.096723731 seconds)
    (37/309) benchmarking ("sort", Int8, false)...
    done (took 0.177991701 seconds)
    (38/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.108477567 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.079179985 seconds)
    (40/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.196188037 seconds)
    (41/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.098665662 seconds)
    (42/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.08780931 seconds)
    (43/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055773977 seconds)
    (44/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.167167335 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13919896 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.1765595 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.155624341 seconds)
    (48/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.094232299 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.115349972 seconds)
    (50/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.079542489 seconds)
    (51/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.237603974 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075880062 seconds)
    (53/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.10891786 seconds)
    (54/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.21306489 seconds)
    (55/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.056446588 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075680712 seconds)
    (57/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.095972732 seconds)
    (58/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.20599795 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173752688 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.09015927 seconds)
    (61/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.220839193 seconds)
    (62/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072296829 seconds)
    (63/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075124493 seconds)
    (64/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.077485444 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069997623 seconds)
    (66/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.082630412 seconds)
    (67/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.078143098 seconds)
    (68/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076424731 seconds)
    (69/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072029828 seconds)
    (70/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.18648333 seconds)
    (71/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.090704707 seconds)
    (72/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.223907901 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.075877817 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.115660625 seconds)
    (75/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.098880247 seconds)
    (76/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.080240746 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.077577225 seconds)
    (78/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.077640405 seconds)
    (79/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.118616999 seconds)
    (80/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.161613106 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.069948628 seconds)
    (82/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.137424466 seconds)
    (83/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.140223395 seconds)
    (84/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.108155818 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.111662846 seconds)
    (86/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.064394086 seconds)
    (87/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05616893 seconds)
    (88/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.196505563 seconds)
    (89/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.079889927 seconds)
    (90/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.131250074 seconds)
    (91/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.152176231 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.116988262 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.120830674 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.151415446 seconds)
    (95/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.121402083 seconds)
    (96/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.082459933 seconds)
    (97/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.13477987 seconds)
    (98/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.141413327 seconds)
    (99/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079636079 seconds)
    (100/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055698597 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.099086546 seconds)
    (102/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.092382427 seconds)
    (103/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.084450839 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.143319162 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.116935444 seconds)
    (106/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.150102627 seconds)
    (107/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094767729 seconds)
    (108/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072752863 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092943287 seconds)
    (110/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.077046512 seconds)
    (111/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.079171874 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.12838241 seconds)
    (113/309) benchmarking ("sort", Float32, false)...
    done (took 0.13284139 seconds)
    (114/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.096934013 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.150136595 seconds)
    (116/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.092815846 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.101223834 seconds)
    (118/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.126332776 seconds)
    (119/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.141843239 seconds)
    (120/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.164811156 seconds)
    (121/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.169088836 seconds)
    (122/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.363769201 seconds)
    (123/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.07773718 seconds)
    (124/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.094689385 seconds)
    (125/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.054617693 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.171314644 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.102485859 seconds)
    (128/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.105482781 seconds)
    (129/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.092336245 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092394722 seconds)
    (131/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.084451697 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.10004724 seconds)
    (133/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07674627 seconds)
    (134/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.135344796 seconds)
    (135/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05570911 seconds)
    (136/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.069688176 seconds)
    (137/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.08812438 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.075132783 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075685767 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.112384861 seconds)
    (141/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.082844498 seconds)
    (142/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.077048245 seconds)
    (143/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.083872977 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094267538 seconds)
    (145/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.102993427 seconds)
    (146/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071481557 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.099885729 seconds)
    (148/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.054530713 seconds)
    (149/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070984202 seconds)
    (150/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.086704078 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068583654 seconds)
    (152/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05583473 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089968984 seconds)
    (154/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.071363582 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072772189 seconds)
    (156/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054367195 seconds)
    (157/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104367999 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.075531337 seconds)
    (159/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.164199882 seconds)
    (160/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.080785459 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.094470572 seconds)
    (162/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.05559712 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09646556 seconds)
    (164/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.088550394 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.079734898 seconds)
    (166/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.163483634 seconds)
    (167/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054486719 seconds)
    (168/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073187671 seconds)
    (169/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.105003466 seconds)
    (170/309) benchmarking ("sort", Float64, false)...
    done (took 0.128972748 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.092373546 seconds)
    (172/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.095628109 seconds)
    (173/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.140827 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.095708827 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.114554041 seconds)
    (176/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056630164 seconds)
    (177/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.136129252 seconds)
    (178/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.055462095 seconds)
    (179/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054340445 seconds)
    (180/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.100570069 seconds)
    (181/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172778965 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.0913707 seconds)
    (183/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05472008 seconds)
    (184/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068446578 seconds)
    (185/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.099791349 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.099240063 seconds)
    (187/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.129710638 seconds)
    (188/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.07127753 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.145505116 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073264988 seconds)
    (191/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.16354576 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054884477 seconds)
    (193/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064394928 seconds)
    (194/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.053991579 seconds)
    (195/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.12476019 seconds)
    (196/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071073958 seconds)
    (197/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.129412499 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069693496 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071839246 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.106546962 seconds)
    (201/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.069510783 seconds)
    (202/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.168660818 seconds)
    (203/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054984571 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078613341 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.07000007 seconds)
    (206/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.065759844 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116666132 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06969366 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067850921 seconds)
    (210/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.090724629 seconds)
    (211/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.065995717 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.069123806 seconds)
    (213/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.09049937 seconds)
    (214/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.05573568 seconds)
    (215/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072089753 seconds)
    (216/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.076098402 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094486413 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.112998883 seconds)
    (219/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.109435407 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.12228638 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076936691 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077911959 seconds)
    (223/309) benchmarking ("sort", BigInt, false)...
    done (took 0.212066656 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.159347459 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.201777867 seconds)
    (226/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070932889 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.118011675 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142639495 seconds)
    (229/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.095237848 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.068616004 seconds)
    (231/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.070169271 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.202268614 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.079557342 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.090410552 seconds)
    (235/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121999408 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.091049826 seconds)
    (237/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.068205058 seconds)
    (238/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070223957 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.091934924 seconds)
    (240/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.112388448 seconds)
    (241/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.125755251 seconds)
    (242/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.071030637 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.165519702 seconds)
    (244/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.066393412 seconds)
    (245/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.065434261 seconds)
    (246/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054440333 seconds)
    (247/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.0778908 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.151341318 seconds)
    (249/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.07711382 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.069270766 seconds)
    (251/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.070193606 seconds)
    (252/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.07853293 seconds)
    (253/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.069484292 seconds)
    (254/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.056652184 seconds)
    (255/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.09115325 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.069112319 seconds)
    (257/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055866098 seconds)
    (258/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.054813885 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.17368892 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069272594 seconds)
    (261/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.105209331 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072629795 seconds)
    (263/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.125245268 seconds)
    (264/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.055156983 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.055345912 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.100119428 seconds)
    (267/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.055375868 seconds)
    (268/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.055621918 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.123019785 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069722741 seconds)
    (271/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071619937 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.126364688 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069286139 seconds)
    (274/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071618967 seconds)
    (275/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.099629448 seconds)
    (276/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.095391871 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.11739518 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.169382369 seconds)
    (279/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.056510664 seconds)
    (280/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.055497523 seconds)
    (281/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.104684047 seconds)
    (282/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.056167379 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077497574 seconds)
    (284/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.093756527 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068078119 seconds)
    (286/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.05643012 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.090254945 seconds)
    (288/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.065349937 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.194434196 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077316534 seconds)
    (291/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.054974925 seconds)
    (292/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.092974982 seconds)
    (293/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.066296455 seconds)
    (294/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.064551761 seconds)
    (295/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.055583696 seconds)
    (296/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.07806006 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.108533572 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091327621 seconds)
    (299/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071545249 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.070391314 seconds)
    (301/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.092147325 seconds)
    (302/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.055217852 seconds)
    (303/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.055461923 seconds)
    (304/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.091530581 seconds)
    (305/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07349724 seconds)
    (306/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.056472079 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.09051089 seconds)
    (308/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.064459654 seconds)
    (309/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070738715 seconds)
  done (took 33.866159523 seconds)
done (took 34.727696961 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083914314 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09475652 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.102741855 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094264805 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.106455763 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.081629397 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.101198256 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082439332 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.105213657 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085454823 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081467736 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.080326956 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.08124224 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.103412268 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.081447134 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116986436 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083301199 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076298926 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.095980246 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068588823 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.095726701 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069092715 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070894787 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05759529 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102611598 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.078726643 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.097396712 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.081402751 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069125069 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.092923207 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06921205 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076459862 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091322298 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.084660618 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.097315541 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074829548 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.081771079 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.101158125 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071841986 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.091745657 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077470324 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.070228623 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.098438301 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076968483 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070702608 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09100626 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074712815 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.106320666 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09437621 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071677912 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.100737242 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080027176 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.102925654 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076093911 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069395603 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.098592142 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069390668 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.119671561 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074225053 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072008522 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.101866152 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07719258 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.0678715 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.096578557 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074398805 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103868874 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081814425 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069007221 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.10322802 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075226837 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.0916729 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074311106 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068912731 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.092329186 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078601458 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080345709 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.091049646 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071445354 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07584468 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.096652275 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068828655 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093773054 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.071401175 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071684865 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093725624 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.058378445 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068689744 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.097802818 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.069142428 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074341364 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.098257559 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076314041 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071477632 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.104731284 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069259747 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.068820747 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.091949663 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070057285 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.092907913 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069191974 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069583385 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09383229 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078603026 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070997108 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.09357925 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083691022 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069170999 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.098582193 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068916144 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068725394 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.109527086 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.080115013 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.092094094 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072288919 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.0691275 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.094959362 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068908159 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069369712 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.092114543 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070217382 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071396652 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.091738906 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071375077 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071301725 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.106947584 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069642297 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.091855928 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071923652 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069714554 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.096949356 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.070089947 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06922852 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.093987627 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065977846 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071984139 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.091971657 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07134005 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073743267 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097309931 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071120165 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073796985 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.096564101 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072014775 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.068715703 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.091038129 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062620527 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071853134 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093512171 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071305646 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069651911 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.094216198 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.070580555 seconds)
done (took 13.471806485 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070080221 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.163946115 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.107085327 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.121511388 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.11349512 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069589579 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079570344 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.124374757 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.07139697 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123489606 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091637651 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.112471112 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.104581846 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.0921774 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070360868 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.097121194 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071198165 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084519041 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.12619804 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090856647 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.143654505 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.09178549 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.102781492 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.116980586 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.078810599 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.120054854 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.071185282 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073258159 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.096477929 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.085682629 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.11313226 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073360586 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070023428 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.114904399 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.086970132 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.101090191 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069699199 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.076324274 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.092842077 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070137552 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.120215246 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09137839 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.098147403 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075959499 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.096825747 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.072798694 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071202921 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.101644271 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.08136662 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.074282129 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107647221 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.13531092 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073073471 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.102445331 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068639412 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.080749231 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.10186801 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072107291 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.093066515 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072624726 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069797839 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.096533735 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085028486 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.121758681 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074368029 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.102215814 seconds)
  done (took 7.094697162 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086246205 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096243968 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.10992637 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088080172 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.0932332 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070778797 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.09348905 seconds)
  done (took 1.562797517 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070541603 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09138005 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116056306 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092832303 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.111960502 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091028856 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103326544 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070630352 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.087442593 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.094984606 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091100084 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.132379235 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072212412 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.101677394 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094469856 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070532808 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117970123 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070604647 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.096823405 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094092048 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073716379 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.114433574 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.0732557 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.094160843 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084619978 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070952235 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142390841 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075530826 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095701304 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073834252 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.092226024 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.120450683 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107601727 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081341071 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09410835 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086324876 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085401749 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092374715 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086501893 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099622164 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08484957 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071341698 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.095592823 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069117093 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076263233 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.103965262 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071942479 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071738011 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.096863305 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08970383 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.094459332 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084309087 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070965574 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.098228548 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073332111 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100143963 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081097202 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071886534 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.113142553 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073311309 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.110063305 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087139811 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084148131 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110635723 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073513283 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.107250637 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084365169 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073332362 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096212992 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074672216 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110715611 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069334491 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072496598 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.104313424 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073402951 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094361494 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.116822258 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072427797 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.104773919 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.07136743 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071402109 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.095514983 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094137659 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098006579 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07189277 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074626668 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09802473 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068914012 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.07029889 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.098184283 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069449488 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072957542 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.097584215 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071912169 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073840173 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.109880223 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071952383 seconds)
  done (took 9.539117272 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072708388 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072856603 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.097138725 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073558772 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072250872 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.095381246 seconds)
  done (took 1.418698361 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094964651 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.097042321 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085861248 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.077358202 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.136148476 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085979852 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.108189811 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07912602 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.113944651 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.084215512 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.108806725 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086055782 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.115027534 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.078194777 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10914895 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.076867482 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.109168757 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081658013 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08322518 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10226658 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.092661916 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.101648861 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077696701 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.110347833 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074895541 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.101445892 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082235347 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.108295558 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083664432 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079203019 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.101493048 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074620489 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.099435641 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079349605 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.108802875 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07687573 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101294248 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076465201 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081908259 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.099748205 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086010268 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101945148 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.083304925 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.099588185 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079462158 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.099519854 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076435174 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081758412 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.107863373 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07614327 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.099285137 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.077360948 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.098081335 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075947849 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076476218 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102478201 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075979733 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.109427562 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.078473129 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.10040364 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074297624 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.098838117 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079550725 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075228768 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.110268682 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076503038 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.100284782 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078188767 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101634877 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.077518271 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076235633 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09859183 seconds)
  done (took 7.490947698 seconds)
done (took 28.027276756 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.654783559 seconds)
  done (took 1.588322158 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.701800059 seconds)
  done (took 1.639747896 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.296102574 seconds)
  done (took 17.233801214 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.467564462 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.537195951 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.7896743 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.157109663 seconds)
  done (took 2.887479518 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.881365271 seconds)
  done (took 1.838002078 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.224198245 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.210934267 seconds)
  done (took 1.376080892 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.743068479 seconds)
  done (took 1.690833544 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.314847154 seconds)
  done (took 2.260146436 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.311158034 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.142396735 seconds)
  done (took 1.404040552 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.531478354 seconds)
  done (took 1.48029119 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.867497091 seconds)
  done (took 7.816817311 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.21231444 seconds)
  done (took 1.171008307 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.2682885 seconds)
  done (took 1.22320632 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.363863861 seconds)
  done (took 4.318740277 seconds)
done (took 48.869909205 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080614829 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083942235 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106795257 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081198627 seconds)
  done (took 1.303322261 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082389703 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07730576 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106385192 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077062392 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.106566024 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07762681 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079326498 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10645153 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077773119 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.102245968 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.078096478 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076548306 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.103990965 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.078758079 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09910009 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079801728 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.105822608 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077209855 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080373678 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.101879864 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075118056 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.103883941 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.081091275 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076556707 seconds)
  done (took 3.072176237 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080672452 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07581216 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101586871 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07560456 seconds)
  done (took 1.293548007 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081425062 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.097713142 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.119343279 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.081295978 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.122348409 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.116411088 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073945497 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073662249 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.100027479 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.081363162 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072473919 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.127885236 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.118021279 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.081651744 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.083329531 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.095304863 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.073678765 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.117194522 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.0823906 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.082295571 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.099385652 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082121619 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.07232439 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.119577085 seconds)
  done (took 3.217083642 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081827792 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106698582 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.107755789 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095585041 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.12332667 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070173376 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.105643456 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097470175 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.157708536 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069934842 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.099907388 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.070787451 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076757361 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.094379664 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081284729 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.139302918 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.117607423 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.097309929 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099802109 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070333897 seconds)
  done (took 2.925408121 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079347038 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073390337 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094203754 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.073157479 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.080463219 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.100950916 seconds)
  done (took 1.465813285 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073079641 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071148207 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095584441 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071010809 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075708948 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095899749 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.071096421 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071116064 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.095740742 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071862883 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070759185 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.094547173 seconds)
  done (took 1.919462143 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.499989653 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073975714 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.099057155 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070656233 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.10014853 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.071148604 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.10976451 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072822879 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096530996 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.096142441 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.071134599 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073195563 seconds)
  done (took 2.395711583 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216012471 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105031043 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240340885 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172681194 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138529376 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15136037 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135546781 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143436897 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.186854039 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14048931 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183884637 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175882122 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131518278 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174783899 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118820392 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.108804607 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202175246 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20536031 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137372225 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185658679 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208473549 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123535588 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161245338 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131973492 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120795967 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150361534 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076797184 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085500704 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211724831 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156087705 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166055184 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14267758 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127452444 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191251717 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225679446 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176031768 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17114005 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115368056 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.162746253 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.152785278 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219142963 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118196423 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185869017 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141152895 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085402416 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203328702 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14802579 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.157046497 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.130184442 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094263349 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173452382 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217816217 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.182072898 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118239731 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117095645 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140755924 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.147488375 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134598906 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230909803 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182069032 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163863485 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075961532 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128597731 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173774494 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16392413 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.148085952 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.168773352 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128992327 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172038158 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170129712 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149983112 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171160092 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.188481444 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094053493 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154229296 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153203932 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148753512 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234732268 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160832485 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076161422 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147197255 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130423974 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084934664 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.173889568 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079704361 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222753092 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130925554 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.100463252 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144716238 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139780214 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11514922 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20330731 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173673042 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127262531 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070955744 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136484003 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.110461762 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165794883 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119948837 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138378401 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141998901 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.08372583 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155529392 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.104463064 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160267973 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.081834562 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154021516 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166730311 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.107248127 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115827724 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130564162 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.132036054 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154895112 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18057095 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119611174 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087549388 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183670867 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157926121 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.130315076 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15830353 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179590931 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.132673474 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128307894 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18107735 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197526832 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119275613 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185165708 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135302171 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088871427 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.118159172 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161920281 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135356681 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.1405493 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086672857 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.164548706 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213075494 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079583732 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118354266 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172388766 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086801896 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112367224 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141921006 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103272186 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.119158271 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.127081704 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.106902579 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159285665 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161250525 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134904297 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144991805 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130013611 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228065334 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09265442 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.132177197 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101975494 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.100367967 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.179130033 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178517926 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111118043 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182477371 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.156656048 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13736032 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154266835 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08903442 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157194567 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109699277 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074617276 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172731648 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149295113 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141128371 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.174947207 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136428487 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.169307333 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.165346013 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151406337 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152025068 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.145830688 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137897065 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092600477 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14298188 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144845859 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077338129 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.118534417 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.087412559 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135581196 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123942817 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086918554 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203032208 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147317096 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103918372 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142114391 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127879192 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162808044 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.081989742 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154592526 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.160139311 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12836331 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.177994721 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174165481 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171061974 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122020037 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175011448 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.100215767 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079443214 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.12265032 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156849895 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087471114 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114733092 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146694135 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161942405 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162617364 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155617094 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143593443 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153913708 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144695579 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.10255827 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.121065604 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189451003 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158626283 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.139097225 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119079298 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.104923595 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157961451 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135733919 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233863196 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14990418 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160657817 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188039009 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.131913154 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085842056 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130876316 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165842342 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134420674 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16764416 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100775997 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120696455 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139561783 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.087837196 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13869801 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186412479 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11461274 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19366085 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.104661609 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160088462 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108549642 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145597011 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139994933 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117771217 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.094238844 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152594313 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181398098 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127087766 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147881172 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169427564 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084732309 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.159551329 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213932482 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171992166 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091300548 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138046854 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142578083 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142645743 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150907045 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13087603 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138769354 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168334424 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140140986 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.116793698 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093703206 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131399361 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130139876 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.092227898 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.128318818 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.158425158 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092873974 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191568422 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141914284 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11311302 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154798317 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.129601019 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.099350818 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129723471 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192492563 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156293972 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216230388 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104259349 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.163192902 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211412366 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080060154 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111572949 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.086053198 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158619977 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116064857 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175494128 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.101608841 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138057292 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164198449 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170585363 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120008476 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073491949 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140029466 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152711763 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145262329 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130993128 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.111452403 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20924663 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.098490458 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11074913 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125626343 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137259437 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127442513 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174356165 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06686804 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130109746 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080913059 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113310333 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116546238 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20955726 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.11397747 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.135916715 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153586551 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149614138 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143917406 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104560843 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130132893 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14657417 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18004901 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161307485 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.111402166 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109107088 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153591021 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198700859 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112812611 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.119975358 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181361635 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173162357 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.213427672 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.095300418 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151202103 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150374951 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139455574 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161559413 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087041739 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210895145 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0873624 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200916454 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13390065 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096865611 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168874247 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.128883494 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0933124 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18990445 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1537412 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088536165 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111611503 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14584019 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159155463 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108116636 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.106938414 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158302929 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.077667084 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20116704 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21013926 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112240907 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108767162 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125385428 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113557712 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135898166 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110622485 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119219835 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.12069712 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204030427 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.092522418 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166357409 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197145322 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146912787 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151880646 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096427703 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.672971409 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.1107324 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174795818 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132988582 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185004478 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128620417 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15416153 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114575826 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146418873 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172973666 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136451267 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.20872842 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169420134 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.158999538 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110791989 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136765646 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141209002 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.097090541 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131456751 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149430346 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137852266 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.106304122 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.159365784 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149018523 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.11325948 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092769429 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203933923 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107248539 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163013324 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157927221 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118300311 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153971498 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160886501 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112342048 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.168290958 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183734756 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122868417 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102897749 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.113238922 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134529752 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231806574 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.081063518 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176198345 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157775357 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141406169 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150115538 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.130584501 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174760848 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137856846 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159351112 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120600139 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.116152096 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136843866 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116364668 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082690676 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136497231 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143819777 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.104089017 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137253364 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.143105114 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172250727 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077060427 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124088911 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10995708 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193411601 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194499786 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.121001534 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088247371 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141326362 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12961865 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.156980924 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159139221 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.087350123 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114195374 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.090064422 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.149509396 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.124835355 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111924922 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136838029 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143364092 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185951484 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.115542009 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.231916035 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120223308 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135971136 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075742318 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.085133239 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129384865 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127453229 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136763579 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105268616 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234544669 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.125991876 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.086406668 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131499009 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076626045 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115599589 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117845112 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142082658 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158439516 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126466308 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067541524 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13883739 seconds)
  done (took 69.197728042 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.151965119 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.125901004 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.137356949 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.196175155 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168861419 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.262599008 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.202735059 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.249026549 seconds)
  done (took 2.527344946 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074628073 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.122668108 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105643235 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.114267933 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.071580832 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.098523762 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.308444983 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.110103959 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.072584452 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.095513479 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.150055051 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.075501824 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.61422354 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070726754 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.099637203 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.090634641 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.072453557 seconds)
  done (took 3.384454912 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.421332843 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.649592679 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.475916408 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078255085 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.991592396 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112997963 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.521299836 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.169968976 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.097641997 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.442227089 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.734170869 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.141098177 seconds)
  done (took 17.878563595 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.08114133 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07427101 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.114058492 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.088485558 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.076506756 seconds)
  done (took 1.482186649 seconds)
done (took 113.013601175 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085312008 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.372289692 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.058735962 seconds)
  done (took 1.508754564 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088485086 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088759892 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.116992054 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08765782 seconds)
  done (took 1.434245934 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078738024 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07908796 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.11617073 seconds)
  done (took 1.322423055 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.304703913 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.145173473 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.120688113 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087515175 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082380551 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.109510255 seconds)
  done (took 1.328508664 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077664297 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.0795613 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.104893973 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.081745535 seconds)
  done (took 1.388613985 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080174842 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05728883 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059453046 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.086628094 seconds)
  done (took 1.334444757 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.09428896 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083319666 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.111667807 seconds)
  done (took 1.332226136 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.112848698 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.119762759 seconds)
  done (took 1.279083639 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086733754 seconds)
  done (took 1.131077587 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098267548 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.148945589 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.172596145 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.150987328 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.185948046 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.142758271 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.121586862 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.102119946 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.113331458 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.123475499 seconds)
  done (took 2.407427749 seconds)
done (took 16.168383469 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083864785 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.494294303 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.366497882 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123843199 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.675065521 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361585665 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.011432128 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097496872 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.141330971 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0727307 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116561828 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653075268 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.03747198 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.41871279 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.024894148 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324539456 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.657274054 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100445289 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072876768 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072581382 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.995213389 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07245017 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099472823 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074184906 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.656534954 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.403176704 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073546749 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.355586784 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073423204 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074491984 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.386984618 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07398302 seconds)
  done (took 16.286062141 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076296643 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.149863202 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080280414 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088635874 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.103368983 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075067749 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.103515761 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.075513158 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153661633 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074156633 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089639773 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.100856451 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077417589 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.101049789 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093394485 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072655593 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101013818 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073992387 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.099742422 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074961606 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09194977 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100164236 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074646826 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073961015 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.100934013 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085569106 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100068129 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074063109 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073600009 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102647665 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076527882 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074245805 seconds)
  done (took 3.945212549 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121413953 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.15836639 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080605964 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13552916 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119815609 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.103193311 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.176618175 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098844526 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.157509814 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074092812 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117011696 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07379793 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.132440472 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075290001 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092632658 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.101735287 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074621149 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.099893757 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074794476 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073580378 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118856314 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073558215 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100130981 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07489696 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073670089 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.113992977 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074322739 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073880977 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10058658 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075452606 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.102993846 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075221239 seconds)
  done (took 4.253405465 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077714059 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.0797557 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.115186974 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089299795 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074781997 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.103925104 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077297813 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.102017286 seconds)
  done (took 1.775833037 seconds)
done (took 27.304377462 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084160416 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.074770514 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.105284511 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086206468 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077726213 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.109567993 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071660563 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.10617642 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.080559768 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077835089 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.108070983 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.072688085 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.075035267 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.099476181 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079545037 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.074034277 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.111170917 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.076048537 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.110153971 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083985373 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074858104 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.108516951 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.079146003 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.109971555 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083619047 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082777818 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.113034937 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078669021 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.100900899 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.075972972 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080191457 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.115476486 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.07352925 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.110505063 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.07414238 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.073176048 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.100503186 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.073783404 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083259503 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.107637468 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.075713329 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.107067132 seconds)
  done (took 4.796744208 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092452455 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095558865 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.116695012 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067527971 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.072312781 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.094131584 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.092829927 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.092418693 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.06774133 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.091975131 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.087247694 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063489272 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.064473425 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05842095 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.090036636 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.06184553 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065107702 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.060987002 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.089808838 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063851995 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.064718128 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.085977134 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.067993567 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064175268 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.060829808 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.09384145 seconds)
  done (took 3.086843178 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080259273 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087985315 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.120870143 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13335189 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.139223339 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079478739 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.111473495 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090719406 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.115835347 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.072935799 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.077160824 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.126360269 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091442769 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.107679008 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.073007928 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086936272 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.113899192 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074477721 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.080088136 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121009999 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089186099 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.110776783 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093929827 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084385852 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.099783413 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074617426 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.105210791 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086606095 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.078955573 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.109732033 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.076723719 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.104127477 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.075069592 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.08430074 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.105070088 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074469571 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.12013114 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083618744 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082187309 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.101348269 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076737711 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.073655467 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.122517001 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.11871593 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.1001647 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.079979685 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.080535502 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.110547557 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.072680938 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.118726504 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083051371 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.072837798 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.103872267 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.073079813 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.073160178 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.114211414 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.074355711 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.103353388 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.082319373 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075711329 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.112524106 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076844303 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.115474674 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.07347093 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080139335 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.099854453 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.073965666 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071225042 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.12390526 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075295722 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.141979206 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.074185976 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.073867942 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.109910166 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080324896 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107165584 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.073752971 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088297313 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111083564 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07724722 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.109521025 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.077603281 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.0762866 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.119455066 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07668567 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.074173277 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.102279038 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.079375074 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.076293227 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.102028199 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086022772 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.100805963 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.076970224 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.090493327 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.101067445 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.074701638 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.107159653 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07866496 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.072684595 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.114464623 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.078386712 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.101291922 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.083375912 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.073003168 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.104360221 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083825776 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077752852 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.100405997 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.077917726 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.107008911 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.074428275 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.074901717 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.104426654 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.075084466 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081498309 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.109477452 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.079307643 seconds)
  done (took 11.823750169 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.20467072 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.194374741 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.076381551 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.185977106 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.084532907 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113369334 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.18993149 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.103954786 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.102467069 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074390584 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.074294154 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.142103411 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105596375 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.144934815 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083376933 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.101175573 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091325908 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.142936499 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.190841674 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.18278458 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093564808 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.110799501 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075880373 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074487685 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.104166092 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.08334891 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.119746039 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.085735401 seconds)
  done (took 4.410591558 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087455744 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.134019753 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.080218038 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094486557 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.126237929 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.073757401 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.106746217 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.075998227 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085393342 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.113725259 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.07333332 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.108348405 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.08112032 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.110815394 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074897958 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.082938023 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.11174895 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074505461 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.076844589 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.105874307 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079791236 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.116431115 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.078222305 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.10089853 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.080846069 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072202485 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.099544666 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.091577103 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.102125387 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094917756 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.100762893 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.080182856 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082957309 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.103018827 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.073399344 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.075599811 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.104290065 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.075536056 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075366407 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.100856613 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.072796061 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063284754 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.101743993 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.086770299 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.107518446 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.065673234 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.079773781 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.108032567 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078561485 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.07089087 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.10501267 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.076334573 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.077094644 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.109512603 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.078648511 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.106559504 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.077136622 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.071529996 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.108426755 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.075993711 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070516654 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.100859694 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.078102637 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.072399771 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.109943769 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078187166 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.072416051 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.104243019 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.078048803 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.107729569 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.076446107 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07575422 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.099931524 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.076198677 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07834543 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.107180155 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.077281745 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.072415492 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.101987194 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.074157797 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.060964311 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.102787086 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059951958 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07656904 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.100154917 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.072796664 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.075898843 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.107784189 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.087166888 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.103626905 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.079804428 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.074272551 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.100668865 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.078048608 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.097633314 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.077551809 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087649004 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.1197613 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072982714 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.100253919 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.087102111 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.078640464 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.101949469 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.06244706 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.080695159 seconds)
  done (took 10.329282043 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096073327 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.098113522 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.104335293 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088329106 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.128317735 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.097145517 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.110118091 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080704405 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.075543493 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.119725837 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074383868 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.081348384 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.106723488 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08270216 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.124918104 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081820557 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.075498658 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.11181438 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.081888082 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.137362498 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088268603 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087943761 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.11372281 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.074107862 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079461301 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.114939151 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.099378196 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.113234981 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.083311501 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.08814934 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.112855821 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099739176 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.117761216 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.078505485 seconds)
  done (took 4.397125494 seconds)
done (took 39.896907888 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.16990614 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.360239402 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.133016298 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.047303873 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.189709398 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.159061348 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.163218108 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.137086074 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.727602855 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.141941838 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.394801036 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.765111026 seconds)
done (took 59.468062299 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.265722836 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.277790288 seconds)
    (2/2) benchmarking "String"...
    done (took 1.410572553 seconds)
  done (took 3.774981621 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.488823452 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.396759862 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.386651177 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.136585129 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.152329787 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.429163659 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.729641477 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.456857837 seconds)
  done (took 27.755650473 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.148381001 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.516483183 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.640894416 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.634306659 seconds)
  done (took 18.016677985 seconds)
done (took 59.379826698 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.152796935 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.191119181 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.150448993 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.120751407 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.239652357 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.157167019 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.19842076 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.197884836 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.141757948 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.127650137 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.152048928 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.147843483 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.143509196 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.264567959 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.140689049 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.140263766 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.173871832 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.788879938 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.529898793 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.141058724 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.133805007 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.1728101 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.142200138 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.143682005 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.139754855 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.149742085 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.142305976 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.140102485 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.527341065 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.14251304 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.241833616 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.567226982 seconds)
  done (took 188.015364505 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.136913175 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.05910724 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.160868771 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.1944073 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.514773355 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.375151004 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.29163475 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.588418286 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.155872025 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.159362553 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.348896484 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.138140457 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.418966023 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.165968639 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.144019233 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.242027147 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.448399958 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.407293108 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.147401405 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.404556176 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.150386138 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.466272963 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.395474121 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.306861116 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.187045881 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.19315169 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.146066262 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.164539392 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.330288236 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.383123473 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.149869426 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.15657098 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.731848244 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.000094399 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.157233769 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.155633049 seconds)
  done (took 147.652383666 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.44231315 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.139590728 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.134251727 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.139204138 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.171135453 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.140763858 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.685076527 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.697115704 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.686270487 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.464402461 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.20151924 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.349515179 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.135610283 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.135622743 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230469514 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.147743044 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.140624728 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.150859842 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.164057714 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.13595437 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.139500829 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.690506455 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.157591667 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.51599493 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.149496286 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.141241862 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.171575058 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.535183416 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.13802777 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.170805829 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.45458073 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.182545482 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.140791398 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.429244217 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.474655067 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.243067457 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.141474664 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.171518041 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.143564318 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.40965233 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.137924797 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.137070339 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.138055741 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.142661986 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.688538734 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.136246693 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.681473803 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.135023795 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.038881161 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.138670365 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.142497504 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.703452882 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.604371566 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.136886443 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.13764744 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.143090945 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.140808002 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.143064009 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.171615907 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.530458502 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.240998085 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.138535622 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.139236486 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.139469504 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.169816953 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.14137801 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.183143397 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.145418973 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.102782417 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.196982917 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.357877208 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.138427767 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.699103033 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.141812431 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.231976243 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.260523846 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.138637104 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.142519952 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.143140858 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.142063917 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.249195642 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.141032187 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.560341322 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.145133482 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.145372303 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.201869103 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.235509943 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.140542379 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.439593276 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.142718266 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.139702488 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.835852964 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.23280182 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.140432324 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.141158883 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.147039296 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.568388019 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.69695469 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.335039588 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.14631486 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.631920024 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.146347041 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.575904404 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.700722397 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.701372145 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.143708538 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.248696814 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.149383498 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.147382767 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.146642547 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.174654563 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.139979658 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.200008252 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.140163711 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.543481903 seconds)
  done (took 339.535177664 seconds)
done (took 677.717092643 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.840475507 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.784897371 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.91902187 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.805726785 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.784550119 seconds)
  done (took 10.213680667 seconds)
done (took 11.29961002 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.329656191 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.324470539 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.201271126 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.323335335 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.172292424 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.34570193 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.30475742 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.165326341 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.247649998 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.224741877 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.241117687 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.191609608 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.17119606 seconds)
  done (took 17.321931257 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.466181846 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.456374969 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.211368931 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.471685178 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.18830397 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.455212529 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.345723998 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.349984045 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.34108455 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.157324774 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.160497267 seconds)
  done (took 15.689752539 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.459948486 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.463813681 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.213813768 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.463829068 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.192409817 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.467731227 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.369411405 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.354797006 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.34108351 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.161209321 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.16188159 seconds)
  done (took 15.733231706 seconds)
done (took 49.828307447 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.15261867 seconds)
  done (took 2.233353143 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.190496073 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.351409216 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.163017102 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.157060425 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.156298629 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.159129185 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.162529024 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.1526978 seconds)
  done (took 10.57755695 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.15474909 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.153336988 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.155066981 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.157550905 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.157362406 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.152481347 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.154371115 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.153220863 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.152930905 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.153665729 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.15076527 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.155320866 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.152987008 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.157716338 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.153949068 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.152160723 seconds)
  done (took 19.552067088 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.153066995 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.150664981 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.150376419 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.152248591 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.153575084 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.1519927 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.155497116 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.154558986 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.153555724 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.152301033 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.153421827 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.15502525 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.155004361 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.153204197 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.154662201 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.156789534 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.155900717 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.153938629 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.156918563 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.151645988 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.152088779 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.154899377 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.157412453 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.155786125 seconds)
  done (took 28.777506197 seconds)
done (took 62.225714049 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.241905197 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.804817423 seconds)
  done (took 9.131954985 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.156111228 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.155866224 seconds)
  done (took 3.399863681 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.153018598 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.158225102 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.158259118 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.158777628 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.156271048 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.159189519 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.159973387 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.157707034 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.15511649 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.160245057 seconds)
  done (took 12.659085387 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.15837639 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.156963004 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.154138825 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.158428534 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.158275884 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.153785491 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.156035532 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.159285119 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.15968284 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.156190305 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.161078931 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.155741549 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.159112367 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.156025508 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.154930366 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.155279331 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.155068779 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.154674036 seconds)
  done (took 21.905947709 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.157706482 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.160291481 seconds)
  done (took 3.40906517 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.154270304 seconds)
    (2/7) benchmarking "second"...
    done (took 1.156084383 seconds)
    (3/7) benchmarking "month"...
    done (took 1.157970595 seconds)
    (4/7) benchmarking "year"...
    done (took 1.154586048 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.156463412 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.155120769 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.155501402 seconds)
  done (took 9.178160404 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.157828843 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.346151536 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.425835845 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.789433876 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.159734737 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.15973688 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.022457794 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.161388623 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.164220189 seconds)
  done (took 13.475438141 seconds)
done (took 74.24128735 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.16531151 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.150248788 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.038663329 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.160076014 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.168872665 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.494307579 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.182032134 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.281461192 seconds)
done (took 36.726038813 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.171945335 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.903792354 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.903119511 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.168250364 seconds)
  done (took 11.061011807 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.142039692 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.067874623 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.137312277 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.179783019 seconds)
  done (took 17.613788332 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.180194531 seconds)
    (2/2) benchmarking "read"...
    done (took 1.489565668 seconds)
  done (took 4.759361129 seconds)
done (took 40.698757751 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.161764202 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.162491366 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.153337362 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.161569608 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.156897314 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.155213552 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.161232186 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.157817407 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.157822814 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.158738454 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.154876715 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.158212919 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.157162745 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.156704522 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.154709762 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.157803127 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.162767316 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.1567422 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.156564552 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.160241805 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.159594453 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.158619939 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.15843825 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.157912909 seconds)
  done (took 28.885977357 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.15987682 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.159141328 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.161466648 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.156017703 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.15640889 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.160928573 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.156797111 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.155863806 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.157230532 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.157978335 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.154634809 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.157474584 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.161388401 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.16111707 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.159080829 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.158828698 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.164686238 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.159810842 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.162315158 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.157528751 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.159457776 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.162243451 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.158049433 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.161474786 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.161638995 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.160377664 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.161734877 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.159351913 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.161914261 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.161109383 seconds)
  done (took 35.873193407 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.166525467 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.174064999 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.163576782 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.161981335 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.165259378 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.161523772 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.162118144 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.162982196 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.161705756 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.164080968 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.160721022 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.163409455 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.163016986 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.163086251 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.165493029 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.16134532 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.162347693 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.164162681 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.164689672 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.163210725 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.164593312 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.166874849 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.16233795 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.161964777 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.162143946 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.160692019 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.166293583 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.164689272 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.162432539 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.166666157 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.163189495 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.166628031 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.162480016 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.165437444 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.161225712 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.163841387 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.168990817 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.172928669 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.162682602 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.162706374 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.161322443 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.161670868 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.163548217 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.164406156 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.162854925 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.165168291 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.164425588 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.163729597 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.164604272 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.167198307 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.163874528 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.166761706 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.163164135 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.163589328 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.162380463 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.16529246 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.165322615 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.162661248 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.169063141 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.167260749 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.164747548 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.163906603 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.164882165 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.166853233 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.165305421 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.167256428 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.163831076 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.165594535 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.168001822 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.167727594 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.164205911 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.163227773 seconds)
  done (took 84.927637023 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.164354544 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.161870346 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.161319686 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.162724883 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.163487048 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.167286074 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.165190711 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.166630375 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.164572346 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.167074991 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.164565705 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.162321999 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.165210016 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.164679703 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.163107143 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.165163744 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.166514315 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.159266419 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.166854034 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.165515547 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.165547589 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.162835099 seconds)
  done (took 26.709674839 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.166700103 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.162966562 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.166679352 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.16683871 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.163009942 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.170770075 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.166442021 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.17223122 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.166399519 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.163740035 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.166071342 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.168088777 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.164364053 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.162271311 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.163618949 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.163928006 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.168354855 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.162262726 seconds)
  done (took 22.078314715 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.167428143 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.163924956 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.167253475 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.162248102 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.164485457 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.167588275 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.165425441 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.170818801 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.167885686 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.166333674 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.166829373 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.169811512 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.170565157 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.167182367 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.170260367 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.164369478 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.165721533 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.166968105 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.168061502 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.163163168 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.167012252 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.16754441 seconds)
  done (took 26.767437523 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.170058557 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.169730917 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.167954777 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.167998325 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.166319114 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.165819522 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.168512017 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.166002317 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.171437015 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.168376586 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.16630018 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.169808232 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.167147199 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.165551482 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.169770117 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.165712976 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.173286502 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.166658082 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.170825765 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.164100798 seconds)
  done (took 24.455134429 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.169697188 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.16656312 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.166647861 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.16624762 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.168431415 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.168213336 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.171342785 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.16944971 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.169442078 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.168682971 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.170225174 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.168305654 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.166297078 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.168479633 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.16781215 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.168293663 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.171409494 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.167665161 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.168018742 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.171942496 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.170062459 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.169868129 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.16889578 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.172396272 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.168629153 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.170320999 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.171299334 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.172810585 seconds)
  done (took 33.834119867 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.165942389 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.170007387 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.168102431 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.171833943 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.16725442 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.169313294 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.167373239 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.168893598 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.167843835 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.166649131 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.171667007 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.171925359 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.173441746 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.174208172 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.171663307 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.169941015 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.169741693 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.16943806 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.169970979 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.172511288 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.171464829 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.172507839 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.173021417 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.17167246 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.171143051 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.173328636 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.167391883 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.167876966 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.175785622 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.165313291 seconds)
  done (took 36.203869206 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.189910901 seconds)
    (2/2) benchmarking "in"...
    done (took 1.193399278 seconds)
  done (took 3.478967087 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.168351194 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.173093372 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.170046263 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.169271103 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.170330942 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.171640144 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.171649576 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.167154899 seconds)
  done (took 10.46421451 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.171365062 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.170743082 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.171904777 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.175094466 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.171992525 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.170616021 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.179050327 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.188559502 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.175980122 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.174892647 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.17901934 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.184071287 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.17694658 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.172946673 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.176083538 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.178904816 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.17027329 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.174182341 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.173261565 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.176725197 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.174929738 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.17526753 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.176087458 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.174304051 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.179157009 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.190071707 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.178220572 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.177220105 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.178391647 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.181396582 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.171691669 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.17333994 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.175740316 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.176391906 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.17619727 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.174148177 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.186988541 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.192896862 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.182447788 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.175317339 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.174971783 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.174909976 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.176618078 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.179155987 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.176285056 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.175272857 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.173006588 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.172669466 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.177625598 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.179588182 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.185033523 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.175613086 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.174249446 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.180498785 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.174577847 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.183563073 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.191082653 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.179768378 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.186058653 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.186198844 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.186462064 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.184276168 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.179596439 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.173993169 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.188589097 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.205233696 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.184907435 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.187440553 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.174583008 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.177676921 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.182044934 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.190157779 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.187722424 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.177139001 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.180152722 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.179032757 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.180251745 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.177511862 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.185926542 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.198183485 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.175154901 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.17959633 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.189553314 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.201706131 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.181487122 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.178133225 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.178844337 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.180533171 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.179004051 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.189119352 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.192389258 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.176866322 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.175558387 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.181642652 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.181165995 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.179538212 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.17863461 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.180802078 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.17891144 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.180590301 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.180513597 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.1795747 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.189030572 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.176347206 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.179897914 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.181814602 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.179006038 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.181360739 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.187221066 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.175191787 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.180100633 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.182998229 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.183577703 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.180246389 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.184855738 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.187194662 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.179938696 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.181111716 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.182282748 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.179816406 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.18856818 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.207499803 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.180228869 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.17844078 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.187864224 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.19541538 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.181559406 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.180469993 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.178993726 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.180407621 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.179426468 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.183072452 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.179368991 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.182626706 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.181378701 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.180340306 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.180021014 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.183307099 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.180497113 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.183821796 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.179059597 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.181066981 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.181669785 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.184364069 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.178401376 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.181244499 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.189038744 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.180706407 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.184389973 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.18393983 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.182943942 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.181153025 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.182842032 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.185354345 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.181250751 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.181386739 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.183153276 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.181503289 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.184650941 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.184484397 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.182089562 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.184149693 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.188990775 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.186086692 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.187241189 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.180284765 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.184095843 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.1851123 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.183402019 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.185332847 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.183053675 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.181213415 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.186341774 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.192317145 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.180690616 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.185960519 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.188841207 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.185660698 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.18418019 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.182633312 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.184713717 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.190445807 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.18425828 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.188478653 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.180217907 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.186489375 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.186140555 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.185629301 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.185645885 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.183873526 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.188581204 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.19241067 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.194002376 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.190912575 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.186946888 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.187081962 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.185550956 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.187844693 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.185140052 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.181654919 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.185206657 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.184840936 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.182119318 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.184811856 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.184386221 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.186725325 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.17921308 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.184632662 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.186410736 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.186040434 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.187831099 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.183862268 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.187669039 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.185666782 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.186753947 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.182210989 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.183898451 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.184715956 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.184451306 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.187571604 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.186476521 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.186113823 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.19092015 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.182259772 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.182799974 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.185878426 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.182354847 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.184845371 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.188308258 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.187607296 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.184670126 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.196079558 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.19879928 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.189847991 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.194635114 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.199984405 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.187385208 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.190834729 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.185683638 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.184010152 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.189870984 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.196765448 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.187929557 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.186651675 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.184703909 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.186774656 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.188218281 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.192098637 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.183235122 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.185164814 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.187353939 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.187110824 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.18741211 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.189127204 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.186524857 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.190405385 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.189472106 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.18442935 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.185741228 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.186468237 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.188691938 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.185109454 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.187120071 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.190607941 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.196985787 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.192935306 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.190883178 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.191863738 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.188118692 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.191691764 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.186921544 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.190754381 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.186523578 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.200631484 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.196140981 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.196106939 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.189614227 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.190368918 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.194506338 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.190989278 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.194224502 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.191742944 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.188998913 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.189944015 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.189767814 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.187074185 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.189442552 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.19181483 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.18828937 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.190010164 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.193964506 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.190843411 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.189812347 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.19103975 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.191188071 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.187929579 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.188352147 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.192604602 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.193639983 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.194881245 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.186147214 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.189775283 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.197967576 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.205173229 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.188992537 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.191062988 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.191069723 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.191154217 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.19351031 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.191339121 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.193996281 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.199332766 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.194358903 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.203140736 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.191695569 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.20263012 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.191539345 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.195711245 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.200885625 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.188099708 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.185400454 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.191216473 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.193339562 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.198777881 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.207752828 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.194360226 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.195440643 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.189211595 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.191622702 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.188413324 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.191683159 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.190352156 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.189742411 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.199966769 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.210757171 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.198831043 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.195097007 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.187389254 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.194093531 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.192264627 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.191092254 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.194746637 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.189744203 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.190439737 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.194674762 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.18984491 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.193960727 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.189780058 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.189932213 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.191946463 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.19132162 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.199383604 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.210826418 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.197103396 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.194492435 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.203121344 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.192353629 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.200251557 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.212520153 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.194807442 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.194210092 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.193388304 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.193097114 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.193913408 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.197734148 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.192696446 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.193370492 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.198198657 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.195371228 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.194106684 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.192739045 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.197423652 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.192675609 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.209824243 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.220383039 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.196192396 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.201624742 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.192129654 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.193656387 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.1969756 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.195328514 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.1916935 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.198753766 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.207685785 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.203952429 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.196038749 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.196205704 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.192008195 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.196129073 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.193849273 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.1964498 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.195023827 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.194951465 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.195567268 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.194808216 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.198631454 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.194202875 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.197677045 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.195094458 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.198051198 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.205680968 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.196799492 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.197934572 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.196896078 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.198032619 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.196517341 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.200203787 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.197312213 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.197580747 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.195474656 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.196033968 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.202960463 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.206249394 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.197365727 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.191612134 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.195909869 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.194594049 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.198088802 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.197909214 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.194911998 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.194895501 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.195828188 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.195417684 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.192460706 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.196647731 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.196400812 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.197533857 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.195991393 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.198906553 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.205157411 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.196788877 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.195727047 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.196818791 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.194358511 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.197690986 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.199122841 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.207098769 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.201443549 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.209844288 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.20727864 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.204739639 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.198339427 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.203696726 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.206760441 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.199297366 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.199250814 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.198009318 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.196670431 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.201391499 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.203908668 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.197426237 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.205431416 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.196644617 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.201481709 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.208734158 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.21252279 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.196044768 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.197741166 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.200402408 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.196182996 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.196262747 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.198468977 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.195460881 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.203308816 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.214746728 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.200582301 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.199521492 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.196391966 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.198717941 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.203081656 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.199604858 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.197954534 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.193987614 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.198998446 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.198411319 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.197855085 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.196334527 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.199195231 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.199795044 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.204716358 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.210085076 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.195655026 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.199122861 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.194531605 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.202204041 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.198891053 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.197702073 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.195735833 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.194926238 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.19804169 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.201983624 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.200030533 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.198129135 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.194785839 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.200713729 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.202208352 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.198997987 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.20128271 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.209247116 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.209213523 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.199360541 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.198312528 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.201731266 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.203734179 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.198454357 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.198856232 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.200375737 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.19906821 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.201322382 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.2022182 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.198727069 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.202176575 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.217347087 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.216922045 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.199934753 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.198959018 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.202174382 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.196493018 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.198394086 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.2014007 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.202846127 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.199680944 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.209803362 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.201069865 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.20911743 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.215925306 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.20226711 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.205071619 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.205476955 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.212078628 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.207850431 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.202432183 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.202333921 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.206835307 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.218196579 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.200712792 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.213653794 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.234447407 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.220772229 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.204151273 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.205222484 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.204193476 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.201571517 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.203950584 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.202474923 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.202707046 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.203462305 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.202735713 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.203831613 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.208754074 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.204034108 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.204731645 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.206595695 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.204203605 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.202773331 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.199759408 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.204665725 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.20357935 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.200965308 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.201260013 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.203102543 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.205462956 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.217072667 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.216286476 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.205510398 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.202415402 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.201194938 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.205590476 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.206744222 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.215917565 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.212089239 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.203056767 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.200959561 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.204624586 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.203123511 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.200971297 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.203907943 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.204381092 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.20512643 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.201112672 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.219776835 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.212476505 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.207438896 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.202980368 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.207206258 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.204067297 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.202170192 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.206208724 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.200228716 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.202252983 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.209694932 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.210251394 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.204818687 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.205710253 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.209832156 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.214294795 seconds)
  done (took 711.59536169 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.204703441 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.206125833 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.206187132 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.202503504 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.203587256 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.203343906 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.202405094 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.203223226 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.205153481 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.204176747 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.206041484 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.204197407 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.206315164 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.201662773 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.206129363 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.202997703 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.207256787 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.207130522 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.203857033 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.203065991 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.204613284 seconds)
  done (took 26.425516779 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.207080948 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.204443922 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.203835967 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.209324284 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.205259322 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.208091644 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.205471044 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207799051 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.208868822 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205186612 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.20828507 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205384278 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.207807016 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.207698852 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203704525 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.206446376 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.208029929 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.203405108 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.209150404 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.206009515 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.208081079 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.20876703 seconds)
  done (took 27.683718149 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.208622169 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.211485894 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.208516866 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.205732751 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.20977942 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.205335376 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.210087787 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.204606717 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.208954878 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.20791572 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.207658891 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.211714704 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.216392137 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.2163219 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.211397224 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.206720924 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.351726954 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.208679284 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.20882576 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.210022593 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.206079056 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.213560116 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.207695115 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.209273038 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.209121815 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.208492432 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.207693639 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.209909518 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.209924687 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.208471971 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.217946639 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.209467019 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.210551741 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.210866525 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.209778005 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.209753339 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.214664751 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.206768655 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.205808276 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.210910273 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.22212423 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.237269292 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.21253938 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.21797242 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.21196678 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.212608593 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.215696888 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.219126659 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.211322127 seconds)
  done (took 60.627400417 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.210178722 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.213181646 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.209001791 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.211835356 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.213028875 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.210998159 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.212491249 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.211148468 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.210330674 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.20991393 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.212770096 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.21027083 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.211644956 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.211632297 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.214628361 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.21207682 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.20650814 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.210527331 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.210364478 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.209119598 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.210488561 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.214740018 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.214685143 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.211555616 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.211861195 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.210897937 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.208970248 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.214558565 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.210446757 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.211528149 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.214643362 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.213630687 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.212166549 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.211556351 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.207908357 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.214049661 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.216859562 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.210764387 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.212470647 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.212774462 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.214885537 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.213217588 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.214282221 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.214179559 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.20941239 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.215513747 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.209237009 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.211063179 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.208771724 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.216109773 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.212785871 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.209723526 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.215678009 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.21005019 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.215632605 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.212738598 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.209864156 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.210481752 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.213773816 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.214679105 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.21595646 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.213993363 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.213390504 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.211626951 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.213048525 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.214906197 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.21231261 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.217895384 seconds)
  done (took 83.576320589 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.217291731 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.215987186 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.214373378 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216854692 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.216827528 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.217858251 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.212448521 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.214700992 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.212734068 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.215042272 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.214430944 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.218219748 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.217312172 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.214027664 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.217338288 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.213827157 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.212974749 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.215911476 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.211089835 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216482655 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.213722673 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.217591111 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.212587836 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.215346131 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.213244851 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.215323726 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.211503511 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.214834926 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.216770801 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.214377074 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.216816038 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.214043319 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.214860733 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.216353743 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.21721024 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.215278778 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.21456997 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.217268343 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.215066557 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.214876305 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.214411928 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.215204714 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.218616924 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.214487239 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.217490146 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.215182153 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.217749195 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.217236716 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.215500853 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.217328437 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.216990791 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.21636727 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.21642228 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.217920914 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.2134929 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.218206771 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.216301326 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.215233679 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.215506314 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.215356306 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.217298356 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.215081875 seconds)
  done (took 76.509932132 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218050288 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.216984052 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.216074953 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.215648654 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.214797711 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.217386117 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218229726 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.217767583 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.218933952 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.21709616 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217318345 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217495255 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212785989 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217633636 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.216080264 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215724626 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215838762 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.216613758 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216342285 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.216469817 seconds)
  done (took 25.480845842 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.21589441 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.218269562 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.21678148 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.21638101 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.217127993 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.215190337 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.215358738 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217499327 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2159404 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217670517 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.218928572 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.216749001 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217111462 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.21611215 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.218019307 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.219080285 seconds)
  done (took 20.620549227 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.216543753 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.219309687 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.221834817 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.219825735 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.21397802 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.217623292 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.218878743 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.218084434 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.216786061 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.220989922 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.221786042 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.219272944 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.219491079 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.219684988 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.215135921 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.219815075 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.218778349 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.217878169 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.219236251 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.217367219 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.218560065 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.218619888 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.221791584 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.222122499 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.215953256 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.219664317 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.219700654 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.217434644 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.218971293 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.221546333 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.219186155 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.218806527 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.220267827 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.218516854 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.222518639 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.219314018 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.219325318 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.221761873 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.222369405 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.2237333 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.221971916 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.220867861 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.225607645 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.224342999 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.220523444 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.222409402 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.220577097 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.222176712 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.215604555 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.21694343 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.22280612 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.223337496 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.222380003 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.223951165 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.221857704 seconds)
  done (took 68.245462188 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222832186 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.223341968 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.215582268 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.220687376 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.221314235 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.21939397 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.22136728 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.222189125 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221054754 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.22368367 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.221175223 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.221280555 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219103889 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.220855947 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.220913818 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224624924 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.220240436 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.221120862 seconds)
  done (took 23.132243899 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.221140502 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.218118864 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.222398473 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.219192969 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.220717014 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.224961398 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223158106 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.225233025 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226485921 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.22445714 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223900347 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.225285458 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223452557 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.227447304 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.224319404 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221584236 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.229044871 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225552733 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.225020793 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223343139 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.227441388 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222893785 seconds)
  done (took 28.076197328 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.222496412 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.226822197 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.241176391 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.267148414 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.257725153 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.226185099 seconds)
  done (took 8.595194822 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225080494 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22657831 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.222874509 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227742783 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226292005 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219914747 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224851456 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225576284 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227104331 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225604441 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.221653429 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226438331 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229133718 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223957328 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223108193 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228456449 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223940004 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22545727 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226471003 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22787358 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223432631 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22975199 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226479966 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225758101 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225607302 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226980428 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229626589 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227603626 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227582934 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228168641 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22989884 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227137945 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228640463 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227640603 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230253016 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229974871 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22766632 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226935965 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230460263 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225952093 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.227008042 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229381255 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227783669 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227156201 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227837718 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227316766 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229302345 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226416262 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227183224 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228788337 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230559443 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224973576 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229913331 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230404738 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22985563 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231862346 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228367616 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228905353 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227982017 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22807543 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228384424 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229895605 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227128276 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226181487 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2313138 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227418602 seconds)
  done (took 82.156469574 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228374843 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.227515583 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22724079 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228655384 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227718093 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229089481 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227302863 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228900211 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23015948 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230203904 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231711798 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229111206 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227666171 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228407052 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228341055 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228428549 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22951127 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229538917 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227855242 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230380034 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228008334 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229749883 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22740118 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230674253 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229842764 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230867024 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22713988 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229347635 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229321049 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227522278 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227783072 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228009379 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230880851 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.230196167 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227616467 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229883845 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229138591 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230110058 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228586357 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234488872 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230444858 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232986639 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229868981 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226969082 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230451206 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233143939 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23192572 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232400603 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230301949 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233302604 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231480857 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233682435 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23215497 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231469702 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229944781 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230235906 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230393955 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23275327 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229313042 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234532194 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233434766 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229895148 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236234909 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231796027 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233269452 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231018063 seconds)
  done (took 82.344146267 seconds)
done (took 1659.84058562 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.305861061 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.270954612 seconds)
  done (took 13.73446238 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.394840636 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.350397433 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.232628241 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.255933421 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.221969765 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.247985865 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.243874295 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.227053649 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.224454966 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.226498973 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.229263168 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.414883024 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.225818991 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.222567755 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.226193437 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.319840684 seconds)
  done (took 41.427126722 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.25843385 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.237941865 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.353937673 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.252345678 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.260233981 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.426494571 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.294136674 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.2380626 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.41943729 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.276958478 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.866955056 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.258840181 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.238292931 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.391199918 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.251441774 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.426792365 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.49961121 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.869230756 seconds)
  done (took 28.976950669 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.710252621 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.240338723 seconds)
  done (took 9.10720071 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.245637325 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.271060175 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.22382268 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.251586779 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.244934366 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.239901423 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.300579188 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.311224456 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.235094915 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.230501458 seconds)
  done (took 63.72141596 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.256557412 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.237323258 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.237443976 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.238134363 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.22993783 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.224922547 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.236415054 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.242113156 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.03836961 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.37171027 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.248098422 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.244473818 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.237975036 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.240443419 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.236253198 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.277497343 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.375616644 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.234278337 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.232832141 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.243750071 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.240082862 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.34528904 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.282390092 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.23589133 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.368495307 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.058150661 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.24224969 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.246440841 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.355522451 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.238008999 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.237679376 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.239206287 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.240418109 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.815047306 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.702865802 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.243613015 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.25782972 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.249476452 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.237428513 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.363905876 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.241595213 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.245249663 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.237608599 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.675656875 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.402227919 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.352567792 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.514375025 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.236417913 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.240842262 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.305731488 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.239726869 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.239814882 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.270257957 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.008898392 seconds)
  done (took 106.458329568 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.277935286 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.718302155 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.399978492 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.25225953 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.990205848 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.899594789 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.232763763 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.539863167 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.273790995 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.231704232 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.518231637 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.763962887 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.239110428 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.300802915 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.406745042 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.232733566 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.235018474 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.052158632 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.227884905 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.231344736 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.666480899 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.248673264 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.231103547 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.293045016 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.274712485 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.71503817 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.82712466 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.805536391 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.230473154 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.229860463 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.718577053 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.230159074 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.303200958 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.233398497 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.519896274 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.605512428 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.582197973 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.235853347 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.251798167 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.231268873 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.242184847 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.709877385 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.590047914 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.231112556 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.241595576 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.712256981 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.229633747 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.23974943 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.235609713 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.446591192 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.246418423 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.237590015 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.830392187 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.236709246 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.591701844 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.291071735 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.27009915 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.740732039 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.233616538 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.39689692 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.239167763 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.235345476 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.239153447 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.236650109 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.23181446 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.59582185 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.350987387 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.233046166 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.598031509 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.708769581 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.232796022 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.796415881 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.087273132 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.265672955 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.398126694 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.236796154 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.860415654 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.738819407 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.255098961 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.232320174 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.581704845 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.23327721 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.524143809 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.246954341 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.232677269 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.67207203 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.254040982 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.260481318 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.236824037 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.240593601 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.013257996 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.238321227 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.52281025 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.293440275 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.234243825 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.237354625 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.244327375 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.233660939 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.25099544 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.243727395 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.786857202 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.235407976 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.771526904 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.256158039 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.246278297 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.240613301 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.238392011 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.238786923 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.465800243 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.914291996 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.243837898 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.237903052 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.233781953 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.240716346 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.486532762 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.237151795 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.557110126 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.236340532 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.234482305 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.239011773 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.083521684 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.273578693 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.245477957 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.23779379 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.033385722 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.44805939 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.260615683 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.235660127 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.239288731 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.246279258 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.651786361 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.236247644 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.290746447 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.242163512 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.96415458 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.24117589 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.279374599 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.898989416 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.243914867 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.24049761 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.243440714 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.239204192 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.550006216 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.528087376 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.293450698 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.239529343 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.241469112 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.943057087 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.278909908 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.385508019 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.265036748 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.255803502 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.439697933 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.379271755 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.240712286 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.79605532 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.243152374 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.462745461 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.241041493 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.574476096 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.75224912 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.235779258 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.238088276 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.965743174 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.96092991 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.891477871 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.240553685 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.530033027 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.236154434 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.691283433 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.241599689 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.243133332 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.827704945 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.243313468 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.23696398 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.241690668 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.242687762 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.548983921 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.420897946 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.441155189 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.24274737 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.721580229 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.298366002 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.236099 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.247200605 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.236435053 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.584257812 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.266705968 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.244232616 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.265413792 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.239673801 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.244248962 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.725496026 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.197192852 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.245933819 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.398535172 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.904815651 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.238203159 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.244158702 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.074871441 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.468770822 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.765260579 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.292893311 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.567514579 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.245673831 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.284299034 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.908715125 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.252087415 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.769150425 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.242331608 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.244020913 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.860778545 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.240690338 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.687259068 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.239094505 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.249193771 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.798385662 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.239025046 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.250024719 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.735254152 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.244270429 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.507967417 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.245100384 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.275146179 seconds)
  done (took 1092.023551917 seconds)
done (took 1356.606837639 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.245832686 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.244795757 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.232882749 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.245664618 seconds)
  done (took 26.140897934 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.253084172 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.251011341 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.250763843 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.249691738 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.250980304 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.249768761 seconds)
  done (took 8.679107502 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.540339187 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.245536524 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.24610427 seconds)
  done (took 19.204313823 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.48804485 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.569240436 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.652091416 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.549867994 seconds)
  done (took 10.434097862 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.251746674 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.251850882 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.253095562 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.254739963 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.254499974 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.257008586 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.254119038 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.252981628 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.256176691 seconds)
  done (took 12.459853947 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.454655433 seconds)
done (took 83.548059597 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.285674285 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.29891987 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.271690494 seconds)
    (4/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.350264682 seconds)
    (5/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.675625867 seconds)
    (6/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.25578291 seconds)
    (7/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.240987025 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.505852863 seconds)
    (9/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.258811858 seconds)
    (10/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.320937825 seconds)
    (11/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.270856783 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.28744556 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.615609176 seconds)
    (14/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.278161621 seconds)
    (15/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.837174681 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.326282817 seconds)
    (17/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.333042583 seconds)
    (18/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.662597784 seconds)
    (19/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.329903649 seconds)
    (20/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.328612656 seconds)
    (21/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.761616536 seconds)
    (22/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.867051123 seconds)
    (23/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.519438248 seconds)
    (24/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.247841852 seconds)
    (25/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.380045366 seconds)
    (26/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.853901337 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.358230995 seconds)
    (28/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.185123792 seconds)
    (29/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.372360639 seconds)
    (30/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.262484867 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.617215672 seconds)
    (32/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.994511147 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.324519918 seconds)
    (34/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.692300492 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.800071847 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.194263432 seconds)
    (37/309) benchmarking ("sort", Int8, false)...
    done (took 4.272351025 seconds)
    (38/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.818253468 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.378041921 seconds)
    (40/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.754764599 seconds)
    (41/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.829342073 seconds)
    (42/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.899352028 seconds)
    (43/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.817494947 seconds)
    (44/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.231546904 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.297329315 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.291086566 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.235277769 seconds)
    (48/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.621029257 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.645790796 seconds)
    (50/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.479015273 seconds)
    (51/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.538025092 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.437528911 seconds)
    (53/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.705804695 seconds)
    (54/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.80804488 seconds)
    (55/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.236493119 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.519070434 seconds)
    (57/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.30908084 seconds)
    (58/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.765146929 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.249529367 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.319804109 seconds)
    (61/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.234812995 seconds)
    (62/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.333229483 seconds)
    (63/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.142393622 seconds)
    (64/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.693734265 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.254681162 seconds)
    (66/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.335978762 seconds)
    (67/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.989672592 seconds)
    (68/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.312001508 seconds)
    (69/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.315196481 seconds)
    (70/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.981674491 seconds)
    (71/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.068594334 seconds)
    (72/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.211842795 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.781662471 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.235448613 seconds)
    (75/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.379328878 seconds)
    (76/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.361134541 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.243837356 seconds)
    (78/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.348653541 seconds)
    (79/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.500476467 seconds)
    (80/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.660112576 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.49688156 seconds)
    (82/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.189191872 seconds)
    (83/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.64495756 seconds)
    (84/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.251560926 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.998682596 seconds)
    (86/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.826463646 seconds)
    (87/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.267505914 seconds)
    (88/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.250915703 seconds)
    (89/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.252206041 seconds)
    (90/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.246017614 seconds)
    (91/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.588473942 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.363338278 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.252686765 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.372011522 seconds)
    (95/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.279970086 seconds)
    (96/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.251542039 seconds)
    (97/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.66903359 seconds)
    (98/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.499003811 seconds)
    (99/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.25298881 seconds)
    (100/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.256140411 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.090760896 seconds)
    (102/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.478212823 seconds)
    (103/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.353623467 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.236794562 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.48144706 seconds)
    (106/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.588556796 seconds)
    (107/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.313513125 seconds)
    (108/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.317321646 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.410164056 seconds)
    (110/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.763447643 seconds)
    (111/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.388251586 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.325389202 seconds)
    (113/309) benchmarking ("sort", Float32, false)...
    done (took 5.284011146 seconds)
    (114/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.090534687 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.253129178 seconds)
    (116/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.376686442 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.252754181 seconds)
    (118/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.902758489 seconds)
    (119/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.877588386 seconds)
    (120/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.880493757 seconds)
    (121/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.236405313 seconds)
    (122/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.877331095 seconds)
    (123/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.261513716 seconds)
    (124/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.28603206 seconds)
    (125/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.170007495 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 1.765082853 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.27540958 seconds)
    (128/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.148702297 seconds)
    (129/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.304455382 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.893731457 seconds)
    (131/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.003703345 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.547094349 seconds)
    (133/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.313226215 seconds)
    (134/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.561785581 seconds)
    (135/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.80721532 seconds)
    (136/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.273193492 seconds)
    (137/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.581828718 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.082076784 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.513272672 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.401689271 seconds)
    (141/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.264275801 seconds)
    (142/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.739080277 seconds)
    (143/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.447612365 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.866946243 seconds)
    (145/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.257855828 seconds)
    (146/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.334807938 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.383858138 seconds)
    (148/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.45219933 seconds)
    (149/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.322095406 seconds)
    (150/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.27113003 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.67546029 seconds)
    (152/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.206756485 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.101396173 seconds)
    (154/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.49312955 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.312989449 seconds)
    (156/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.491764821 seconds)
    (157/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.008374483 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.171277176 seconds)
    (159/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.080346095 seconds)
    (160/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.251104313 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.980056151 seconds)
    (162/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.877856159 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.150826714 seconds)
    (164/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.604185222 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.278048017 seconds)
    (166/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.693116346 seconds)
    (167/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.769092385 seconds)
    (168/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.317239414 seconds)
    (169/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.279170974 seconds)
    (170/309) benchmarking ("sort", Float64, false)...
    done (took 5.634413293 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.25843519 seconds)
    (172/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.266416164 seconds)
    (173/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.193555567 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.263679349 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.639375345 seconds)
    (176/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.255981169 seconds)
    (177/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.684299015 seconds)
    (178/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.914628424 seconds)
    (179/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.583063477 seconds)
    (180/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.361986011 seconds)
    (181/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.256862441 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.683691464 seconds)
    (183/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.469577305 seconds)
    (184/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.357560105 seconds)
    (185/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.304874169 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.75696184 seconds)
    (187/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.657571098 seconds)
    (188/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.361825636 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.360178418 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.316382596 seconds)
    (191/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.114235232 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.961569353 seconds)
    (193/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.827047243 seconds)
    (194/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.911611748 seconds)
    (195/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.451591949 seconds)
    (196/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.363835812 seconds)
    (197/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.242740897 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.137033851 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.345007767 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.299159034 seconds)
    (201/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.266591549 seconds)
    (202/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.238393626 seconds)
    (203/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.670418196 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.25196503 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.257800508 seconds)
    (206/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.096113111 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.268310927 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.676289544 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.331109653 seconds)
    (210/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.080756209 seconds)
    (211/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.244790684 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.196704869 seconds)
    (213/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.131621848 seconds)
    (214/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.255416337 seconds)
    (215/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.325874429 seconds)
    (216/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.154682887 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.186321912 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.980753361 seconds)
    (219/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.640005851 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.308301832 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.458306363 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.889307232 seconds)
    (223/309) benchmarking ("sort", BigInt, false)...
    done (took 6.257592897 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.258514432 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.274647121 seconds)
    (226/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.285449666 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.841033102 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.360873607 seconds)
    (229/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.319085267 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.278727712 seconds)
    (231/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.423051085 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.257256168 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.887909717 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.292577241 seconds)
    (235/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.257674349 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.259436924 seconds)
    (237/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.285314481 seconds)
    (238/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.258067156 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.928895911 seconds)
    (240/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.06827221 seconds)
    (241/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.930499056 seconds)
    (242/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.283518251 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.259173899 seconds)
    (244/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.245086392 seconds)
    (245/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.749400132 seconds)
    (246/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.786298768 seconds)
    (247/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.430748694 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.25614878 seconds)
    (249/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.211963852 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.739263629 seconds)
    (251/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.255324588 seconds)
    (252/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.557735835 seconds)
    (253/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.260664781 seconds)
    (254/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.372929401 seconds)
    (255/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.426460701 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.487834255 seconds)
    (257/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.222232186 seconds)
    (258/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.456346975 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.261025164 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.931894887 seconds)
    (261/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.738760537 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.31881745 seconds)
    (263/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.484743209 seconds)
    (264/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.40344749 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.695784136 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.649627461 seconds)
    (267/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.693464802 seconds)
    (268/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.459436379 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.308782962 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.693660814 seconds)
    (271/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.342938482 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.284978528 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.271374141 seconds)
    (274/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.32143528 seconds)
    (275/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.756866247 seconds)
    (276/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.256140427 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.979781048 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.262278382 seconds)
    (279/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.579925361 seconds)
    (280/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.661232091 seconds)
    (281/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.268055037 seconds)
    (282/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.874908763 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.383990058 seconds)
    (284/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.268498447 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.393124533 seconds)
    (286/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.990180536 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.422905831 seconds)
    (288/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.73293045 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.378779053 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.105026518 seconds)
    (291/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.707210052 seconds)
    (292/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.271876038 seconds)
    (293/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.917012557 seconds)
    (294/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.660900989 seconds)
    (295/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.25424298 seconds)
    (296/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.964502391 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.336181542 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.301565533 seconds)
    (299/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.345308689 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.292772666 seconds)
    (301/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.755603444 seconds)
    (302/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.188110361 seconds)
    (303/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.261056955 seconds)
    (304/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.275472006 seconds)
    (305/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.277086007 seconds)
    (306/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.263922976 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.279996868 seconds)
    (308/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.676591607 seconds)
    (309/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.38680381 seconds)
  done (took 912.933506758 seconds)
done (took 914.109137189 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.296972941 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.288970041 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.273175703 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.29502191 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.382804767 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.319618771 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.282943266 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.278491016 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.321728965 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.324361535 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.272956871 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.321028735 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.274148892 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.274179962 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.273102167 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.287009852 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.414741945 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.274761215 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.290161345 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.28500651 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.289107117 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.271781352 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.324256984 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.320728489 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.277680251 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.278497549 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.278557471 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.293819198 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.386477106 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.275671411 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.277866414 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.285519703 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.416037249 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.271645514 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.267587165 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.294813432 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.286698132 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.284610285 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.275127653 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.306478254 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.856873151 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.272543483 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.274925865 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.276664049 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.274999787 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.277452945 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.277587079 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.279706243 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.288431654 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.288622883 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.794092263 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.282748054 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.278402515 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.274719374 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.286383783 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.273385047 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.281486033 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.291950636 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.296060854 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.290551126 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.41900626 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.280971662 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.278685402 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.291893608 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.283816511 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.9144511 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.26999275 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.283887689 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.859664349 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.282371941 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.912397299 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.285429538 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.276315834 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.293789503 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.309118727 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.425914187 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.270924169 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.277476431 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.283575648 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.277305102 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.288646744 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.28978246 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.283933448 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.279031335 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.289062533 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.324159895 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.286225001 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.27667557 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.286123561 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.295843077 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.285983172 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.287188266 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.280329502 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.274345605 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.286433959 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.280765357 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.279273284 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.279944432 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.283648586 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.290461327 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.863896105 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.293440185 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.27673129 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.273889087 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.27885835 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.291340696 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.805360409 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.274106812 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.301285501 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.326692986 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.278338478 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.423608148 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.28226022 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.293821703 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.288939956 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.280446756 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.276080562 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.426430318 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.800005703 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.288627398 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.280528064 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.277891492 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.295863553 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.281064335 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.276577027 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.434781384 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.280671299 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.294851543 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.398973797 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.290804278 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.311503126 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.276454333 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.282973253 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.309265564 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.296490267 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.31387805 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.284547384 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.294260962 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.295159077 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.278538621 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.291578188 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.28962002 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.279413525 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.28631016 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.276267826 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.30967953 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.291253223 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.292290996 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.301131163 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.399075274 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.276565424 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.425026945 seconds)
done (took 218.812704621 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.340673938 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.276305837 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.361235398 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.277322423 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.384385394 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.381101275 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.275772008 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.273808969 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.275096509 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.693941849 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.274338508 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.273964871 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.271334978 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.275043495 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.361224502 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.279745429 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.276028335 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.611577967 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.27880517 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.346333652 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.278264041 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.27452492 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.277019327 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.648046781 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.273843341 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.273858884 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.348198117 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.278439557 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.655976351 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.270985858 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.27675114 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.61240059 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.366461894 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.295594106 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.288039165 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.284408665 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.38511598 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.298192093 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.360736872 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.362103323 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.362427123 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.317840661 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.273727111 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.273445221 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.2815347 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.278280357 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.275828792 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.303614957 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.272631172 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.27628312 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.65515735 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.291395771 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.285749255 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.279362815 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.277166873 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.299182932 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.27596078 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.280338057 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.371308418 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.280067608 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.338239955 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.697752355 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.649183501 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.280804341 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.277266871 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.277135247 seconds)
  done (took 144.824356767 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.345442057 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.352720631 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.397674786 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.279378291 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.332882071 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.399812156 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.282826579 seconds)
  done (took 10.591324927 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.28626218 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.279315795 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.328330432 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.331692896 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.280290813 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.428234539 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.281769983 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.292950782 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.277651332 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.333891781 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.28146442 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.282215717 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.289257718 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.275313942 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.330321028 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.292262743 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.397992761 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.285443963 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.282037519 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.440141927 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.27588935 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.28848466 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.331637545 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.290826102 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.282831681 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.290391309 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.853482713 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.283669019 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.27944142 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.280999179 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.279020045 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.318713644 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.282126955 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.282071958 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.279915541 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.397527336 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.283186038 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.28085624 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.284313152 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.281033092 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.283280017 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.282719742 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.283918698 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.282309038 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.282030149 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.305947233 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.28398359 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.284401193 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.282405611 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.284826279 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.33352872 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.285427302 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.279518524 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.281371071 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.338926073 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.290261065 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.284832925 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.282188059 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.283310404 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.281459598 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.441057045 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.333822418 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.283330768 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.334002307 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.284658845 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.28430371 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.281068375 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.285025614 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.338912986 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.28542439 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.332191262 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.283309278 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.440447072 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.307135555 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.28559031 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.286794514 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.289045455 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.284122883 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.284734253 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.289800183 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.282331106 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.286567716 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.292034441 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.280882505 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.281451045 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.386899873 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.395319902 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.282876859 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.29613242 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.29166895 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.284482558 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.337510513 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.285342888 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.28380592 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.336048627 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.400738049 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.338363353 seconds)
  done (took 148.283765207 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.288664447 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.294757585 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.287830162 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.303070045 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.28548084 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.286582463 seconds)
  done (took 8.951584983 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.287190398 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.290687587 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.285937439 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.285920035 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.287151707 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.287417379 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.288457225 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.288382458 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.288647902 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.287696046 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.285731151 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.287089757 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.287040356 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.286783013 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.287169997 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.284130822 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.285501501 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.284178992 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.28656902 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.286885487 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.391326411 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.287400231 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.286610258 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.28483938 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.292899501 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.286149413 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.296724976 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.289193519 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.286672959 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.295703275 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.290336683 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.287212811 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.291105686 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.297196869 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.294263255 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.289901714 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.292425392 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.288537507 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.286295885 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.287823384 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.28993347 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.289047199 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.288298006 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.288231818 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.28925434 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.293675372 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.297684043 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.296593105 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.288565725 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.290376996 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.289918052 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.288795054 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.289785767 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.290412792 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.290154764 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.296339762 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.293336688 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.29092462 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.286194148 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.28979614 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.292325581 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.291750929 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.292396996 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.293458764 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.286617575 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.290704461 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.290074115 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.295121744 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.289187026 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.289749461 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.292048446 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.287141355 seconds)
  done (took 95.156830505 seconds)
done (took 409.007723289 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.789237609 seconds)
  done (took 7.99910607 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.458236525 seconds)
  done (took 7.670584483 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.072582483 seconds)
  done (took 24.291400126 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.30534435 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.338369875 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.290372343 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.283945206 seconds)
  done (took 26.429206645 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.877237015 seconds)
  done (took 8.084961126 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.279716473 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.283407938 seconds)
  done (took 13.770037094 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.40195237 seconds)
  done (took 7.610216337 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.985585665 seconds)
  done (took 8.203269497 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.299392563 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.292251255 seconds)
  done (took 14.052162534 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.277442076 seconds)
  done (took 7.488794245 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.725059171 seconds)
  done (took 8.935683585 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.277396672 seconds)
  done (took 7.488863777 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.278558794 seconds)
  done (took 7.485403203 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.890969361 seconds)
  done (took 10.097846974 seconds)
done (took 160.818890773 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.282389744 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.281149969 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.280569832 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.277153826 seconds)
  done (took 26.331592582 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.355627301 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.324297717 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.357746568 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.332776918 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.345354072 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.322975766 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.312751714 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.313015568 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.79103577 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.321653013 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.323003768 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.322404789 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.355333609 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.312738543 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.325797382 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.354524249 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.352540792 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.324201929 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.31062668 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.324851294 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.287348921 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.353086434 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.344728141 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.286611316 seconds)
  done (took 33.563961712 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.488025469 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.358742022 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.440388409 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.339567519 seconds)
  done (took 6.834641961 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.336609112 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.350045185 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.351698556 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.392816639 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.418421341 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.349189768 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.313916213 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.310020446 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.296575927 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.346017269 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.414965297 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.341318714 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.445780558 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.2890008 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.472010266 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.28872811 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.289973033 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.339556563 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.388929302 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.406007738 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.286504227 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.340926513 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.34150023 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.341085875 seconds)
  done (took 33.65983288 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.287198427 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.298211321 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.292205972 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.286435656 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.286129037 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.288617049 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.295469808 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.287917202 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.310629926 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.289312122 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.288362832 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.288807345 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.285671541 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.288612449 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.289650583 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.300564124 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.300684985 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.288616344 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.292135273 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.296858302 seconds)
  done (took 27.051139013 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.28167956 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.143484605 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.634885149 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.538155448 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.284219553 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.283236656 seconds)
  done (took 27.376447157 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.362530606 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.50752009 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.288255422 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.681168968 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.765998343 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.291104276 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.291119332 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.550655983 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.877082767 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.874577554 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.347824044 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.358517378 seconds)
  done (took 19.405390531 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.289842756 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.28321628 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.288629741 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.302320558 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.350132444 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.298077979 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.301166056 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.281440729 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.355920004 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.356488753 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.298013458 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.354851891 seconds)
  done (took 36.973638681 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372856049 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.521910703 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.381497567 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.113385977 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.555101272 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.498486567 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.165363268 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.727952102 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.290295774 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560630064 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285197339 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376725473 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.544664041 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286193472 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.288862288 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.395271289 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.513607328 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828007008 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288968618 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.520822512 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314907295 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.287317442 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.518651725 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.315567983 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.498506396 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.017922771 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.549216639 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.928985888 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.588763664 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.299099529 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296088767 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.28862926 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562173846 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98207105 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419458253 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296771615 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.151661678 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.290476443 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.306029389 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.472886074 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.303859771 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.287830567 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29541242 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286542123 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.222167825 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.294862572 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.733855742 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.295436547 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.998011992 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.286732743 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.298226215 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38146595 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.290038549 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.445176284 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.407482874 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.106803254 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.286350556 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295650188 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855839707 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.288594464 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.294431975 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.22548879 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.76087749 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.771056006 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990292287 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.391510676 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.291832582 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.293208762 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.223048158 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.570058118 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.30248252 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426609684 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.307092306 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.485939198 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077864294 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.290971262 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.22104603 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930721984 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.293482337 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.222521689 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.517429167 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.92545775 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.222205937 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.235108758 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.226061867 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075515945 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299500716 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.981658603 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.298329392 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.73089355 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.303895348 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304137133 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313882628 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.518170267 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.176563536 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291784251 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.289747427 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426237041 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308488533 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.733121521 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.228977018 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.296355635 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549189587 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.499717733 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.296437449 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.402769053 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.504574419 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29485677 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.304693464 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.290115713 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.301678894 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.898113541 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.306049905 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289642631 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313469652 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.93644743 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109057859 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296286278 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.391753312 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.306215662 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556372695 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.154312127 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.243904636 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.364780332 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.296903886 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.292003521 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.725132427 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298400182 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.243335406 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.296492929 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.299046352 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.304501998 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.292399462 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.228332804 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.285462811 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28991611 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 3.937155937 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.517740791 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.293007801 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.568219257 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.226133296 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430304114 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43346538 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.511770044 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.591503022 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.294310747 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.552629423 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298171398 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.295405859 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.319534209 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32219239 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42413955 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316288607 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.301474009 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.55104226 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.29481984 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.297083891 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.737864571 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.938610657 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298251841 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.299245907 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.226892598 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907985447 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268078273 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.297956253 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.705257622 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.308006482 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.362025169 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.30122685 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.303718527 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.451591164 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.270009069 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.301140615 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.292547641 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.515574647 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.305193571 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.502285758 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370113748 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.501376013 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.918913976 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.309770941 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.227613415 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.003914363 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.990619206 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295160509 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.231032172 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.294944307 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306202799 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.307792702 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.940028369 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.910695278 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.299240189 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.566021126 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.301577004 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.304595347 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.300522807 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296852751 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.254224495 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30145879 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.308385893 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.309171158 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432187418 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.308642809 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.231006789 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.299857853 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.298327993 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.293073507 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.934422445 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326309369 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.564219951 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.807541454 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.552048526 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.122666643 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.309062438 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.563022865 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.326036717 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.291574024 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.304603269 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297913684 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.310875875 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304757898 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.308982951 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.612413054 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.201910951 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857396452 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110118757 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887531454 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308356266 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.299313076 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.246856816 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.743892992 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.23597045 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.545547625 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.500291254 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.750136083 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.478228689 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.501262299 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.602115833 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12472843 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.308295474 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.527069501 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304094056 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.315172073 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.310442771 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.508125014 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331730378 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.29977491 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.240658482 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.504140502 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539973101 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302272345 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374591545 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.747343424 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.303520078 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.948737639 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.300014043 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.739394247 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481159382 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.301463499 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.271535147 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.30718605 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.310131587 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.799395026 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.302047472 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.303416423 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012099962 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.302909879 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.509649917 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.457539454 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.310872554 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.309473369 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.303377837 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.793816127 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.302129537 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.557225529 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.312654194 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.234888614 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.3110211 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866427683 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.150243671 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.304756476 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300103489 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13329261 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.304031672 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.605742954 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.299561564 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.22696307 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305263234 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.231966743 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.236775022 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.992664794 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.304495425 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271688299 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843596962 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.712796034 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.369785774 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.314781508 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154174652 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.558998576 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.314484515 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.920914283 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.523710623 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.233582869 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330623183 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.401847878 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.303766871 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.285061632 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.25140136 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.535969386 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198680712 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.521570238 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.38919107 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.221323361 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.30071596 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.514447701 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.254743127 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.30137133 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.579416346 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.014914997 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.303291051 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109680294 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331111302 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.303074096 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.958366231 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.768715461 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.308190814 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.373765165 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.309840288 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.313752793 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.310798196 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484584118 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306799002 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.30066018 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.314801203 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395393788 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.302316552 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.234318436 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.308048885 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933030494 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097975358 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.927841187 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.317446568 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.304397632 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30641233 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239994478 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439600381 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.307851075 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576886891 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421637199 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.852869834 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325793359 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.311973133 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.301270218 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.518404271 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.577731196 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302777373 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303353761 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318441182 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.252589615 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.314640729 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.517723549 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860123166 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914560213 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.74645086 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.318433479 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.748100863 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580440795 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.340869547 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.30533138 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.478354818 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.313071633 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.731953967 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.306348833 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319804355 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437882644 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.313320579 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010790311 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.311398614 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.494065146 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.821825953 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.856121865 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.563473196 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.863417656 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.320266013 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.934184864 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.05760393 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.569903809 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.377045661 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.316651249 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.423107226 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444950102 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.313204479 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.260672032 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.305751104 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154362869 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.018213903 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.316757091 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93476639 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.574122091 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.302598124 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.316747296 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331995706 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.317756736 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.530972792 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.100524283 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.53575613 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.316295859 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.312408497 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.501778486 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9344581 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.319585052 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.244065845 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.30928456 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557694151 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.541735318 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.330866116 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.823531567 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.019316689 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925296485 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.199368459 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32930029 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.322425199 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.05518672 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934255568 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.248492159 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84576231 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.554206939 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.30629939 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583427202 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.3141894 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.317434414 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.579984177 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.314006342 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.306978719 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.31543692 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.937407475 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142673901 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.314976755 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.621646787 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.246293175 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.169901113 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.004260878 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249976357 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.308549824 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.506013616 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.308060269 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430827693 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.315673291 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.319129961 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322502132 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.022936361 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.797107706 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.309538789 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.30417624 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.296104617 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.315730428 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316534254 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564001418 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316903337 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.982752514 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.667447383 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.566062431 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.322574982 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.295661216 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.3139792 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311815356 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.237073723 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.979100219 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.97083952 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931587053 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.308506202 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.319800806 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.314889916 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.304184176 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.522736704 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.309620278 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.31798118 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313168412 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.321383544 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.225564355 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.783173769 seconds)
  done (took 1580.25583692 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.309871304 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.35546812 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.335247596 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.35069086 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.34716353 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.367916953 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.346310237 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.378627944 seconds)
  done (took 52.028726886 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.314778639 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.470212805 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.338523669 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.316639672 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.322835245 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.316645776 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.798802034 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.310833897 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.319210333 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.321158077 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.323722429 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.318195757 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.026777091 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.318412671 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.319493247 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.300419225 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.320289719 seconds)
  done (took 65.004895258 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.324993484 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.619680077 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.337953113 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.309877665 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.683422812 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.320061891 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.573379495 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.322351633 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.306776736 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.509139354 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.980408133 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.337231304 seconds)
  done (took 79.864190666 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.320154085 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.318830721 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.320026445 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.32202853 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.320956674 seconds)
  done (took 7.840393143 seconds)
done (took 1997.403777605 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.55680614 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.07735805 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.017891861 seconds)
  done (took 5.332692606 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.462367018 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.509817376 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.631814729 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.637681739 seconds)
  done (took 7.48170521 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.59086317 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.699166997 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.507545207 seconds)
  done (took 6.035977978 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.825458213 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.319224163 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.454385378 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.311516617 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.311729654 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.313861581 seconds)
  done (took 20.178074471 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.317562477 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.319112414 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.319112187 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.319367142 seconds)
  done (took 6.515450329 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.299932713 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.015674298 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.305025545 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.314824426 seconds)
  done (took 18.174160978 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.064846356 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.741630084 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.058467137 seconds)
  done (took 7.104704276 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.323385688 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.260417579 seconds)
  done (took 9.823078911 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.63194943 seconds)
  done (took 2.871499142 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.450080594 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.649837445 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.438787511 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.349174735 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.37893617 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.546148234 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.112467922 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.655935361 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.333906181 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.708875178 seconds)
  done (took 30.863926967 seconds)
done (took 127.774809761 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.372587649 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.714321551 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.526059696 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.338180254 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.542506827 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.522105446 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.585491164 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.30520291 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.840469352 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.83363088 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.37857328 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.544224554 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.755352233 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.71373328 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.760488916 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.346773015 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.554499402 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.418575998 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.025063612 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.259954419 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.57809674 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.98251655 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.213251715 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.176036624 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.552260196 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.472643646 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.562715041 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.327774503 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.209331846 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.759568966 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.470787507 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.319837113 seconds)
  done (took 194.203602759 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.316746278 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.3283387 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.326633003 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.310787353 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.325736363 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.316126071 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.309596471 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.313720437 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.325794383 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.310897142 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.312556298 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.31551595 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.313917126 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.327464867 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.31186547 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.312574896 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.314498245 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.312303719 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.312635073 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.313833623 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.311475128 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.317794486 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.32019721 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.312183994 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.334348573 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.316210597 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.330374695 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.313579675 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.317059748 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.317334971 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.332424833 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.333997679 seconds)
  done (took 203.432431624 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.324009656 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.326802467 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.314467956 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.333303905 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.313631044 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.32049565 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.326767398 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.333313906 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.319723405 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.319397263 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.313760832 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.312340697 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.312364386 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.313373282 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.314288153 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.316398259 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.318539933 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.317438798 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.318426404 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.333875461 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.314954597 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.324833722 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.322329224 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.328878867 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.329800984 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.314891272 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.324631965 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.31586709 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.318938371 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.319374928 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.334957959 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.322904392 seconds)
  done (took 203.519510771 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.516980136 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.32888054 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.330404124 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.269963116 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.32958676 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.327710155 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.327052418 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.527579232 seconds)
  done (took 14.201606587 seconds)
done (took 616.598571201 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.748138969 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.456321233 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.537594549 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.348506569 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.172810835 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.342529543 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.350152711 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.532939979 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.283986186 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.538381537 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.656777045 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.341461882 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.837045649 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.34837983 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.624593925 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.447693102 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.243796516 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.365876937 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.696478723 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.938028033 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.622934805 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.914325935 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.536743361 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.286658363 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.839622778 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.91723968 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.159571121 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.24195146 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.34326262 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.701109429 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.132351657 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.427070387 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.413771255 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.393960244 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.455114681 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.436756389 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.398596978 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.393952552 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.540565208 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.672613044 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.963704205 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.095502826 seconds)
  done (took 92.944583232 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.318459262 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.322002567 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.315536735 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.315841584 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.32235366 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.316376138 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.320238289 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.318461506 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.320888387 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.314378548 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.320387847 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.32401696 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.319598116 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.323740086 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.318078399 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.320954675 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.32364173 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.322038901 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.316609489 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.319449257 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.317564604 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.32044395 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.319237463 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.320709544 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.320476019 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.320221708 seconds)
  done (took 35.561849813 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.332895908 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.592932334 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.774342585 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.339611208 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.33365053 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.334503602 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.41675513 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.329729936 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.336238013 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.337409186 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.50881882 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.336751549 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.373420824 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.794013037 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.335499259 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.335221482 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.334535403 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.335767439 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.600765494 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.342845582 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.417130389 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.330557626 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.418376263 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.34507572 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.335898366 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.332785346 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.336909913 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.861401742 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.3351099 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.506426917 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.179942888 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.41432448 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.846950624 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.784496171 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.18148257 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.331449809 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.335387943 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.51121323 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.330626103 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.331800124 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.417675061 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.334809021 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.785797017 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.995473127 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.349484841 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.333588543 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.888114897 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.50551589 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.604237149 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.344351431 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.80733579 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.339819192 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.335850869 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.336903761 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.60443491 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.340733706 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.3357001 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.946441001 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.351186106 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.419131653 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.337423166 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.335129455 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.611081272 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.33529196 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.59762919 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.335420332 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.3456397 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.33485987 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.787816984 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.340210241 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.002509848 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.347277935 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.334228418 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.506638194 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.589700995 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.908242278 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.334814743 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.614088667 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.857609578 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.418307689 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.337148757 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.851720903 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.423739353 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.340273674 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.340860847 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.340280913 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.337585638 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.385045653 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.416831974 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.940619254 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.001486812 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.956089485 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.43357743 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.350898523 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.337388779 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.941148177 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.3470947 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.33814822 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.778676665 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.002211127 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.349093363 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.344478317 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.98958578 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.350095669 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.423190898 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.342106396 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.791166732 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.338213245 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.386043118 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.337475399 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.349026423 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.339368114 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.423465699 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.342157952 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.336901277 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.985220847 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.529800172 seconds)
  done (took 176.953803402 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.330404883 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.326131027 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.33161885 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.325872303 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.332823457 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.338504121 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.33191577 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.334370901 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.33669834 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.333360255 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.330548595 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.334929079 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.334007692 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.345908222 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.337887432 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.338694073 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.843174589 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.334203105 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.340196085 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.326433996 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.122692681 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.333083163 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.334855982 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.329279359 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.332622302 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.334079938 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.340345389 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.330251449 seconds)
  done (took 151.898698172 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.340124437 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.950142004 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.332999804 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.482133713 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.362748287 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.339911025 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.476629836 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.403148076 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.341659939 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.338677743 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.338651341 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.66995604 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.337159078 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.890338404 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.535127781 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.484446468 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.903914131 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.334772748 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.339109594 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.339630408 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.485520519 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.348691186 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.667371425 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.965993674 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.340388735 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.973646958 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.331550907 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.341912508 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.340532345 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.975848506 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.336880811 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.681444917 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.424975013 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.405490033 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.975340875 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.908856047 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.897135691 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.491995426 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.344257173 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.338281712 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.338321147 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.332510398 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.974534685 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.344439831 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.342546264 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.967072527 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.355876791 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.341917071 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.351039387 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.338495149 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.406557135 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.407125964 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.684250755 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.979148709 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.426412255 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.363936702 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.487298566 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.742974891 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.342978935 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.917896701 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.332398854 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.972348229 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.347066429 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.33038417 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.340449024 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.348113607 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.504260382 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.485161687 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.918379436 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.344808533 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.922468755 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.506510694 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.339814841 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.340283138 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.345625283 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.98144959 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.923689736 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.50435172 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.490015813 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.551440993 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.336511711 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.344034497 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.330998234 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.428332129 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.340122979 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.981101152 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.925332844 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.345436728 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.34304097 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.343308812 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.345304076 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.533422547 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.983538102 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.430602922 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.917771808 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.690246311 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.671725917 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.34082139 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.41090335 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.342198701 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.679088277 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.340662391 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.405672136 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.809199732 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.676179408 seconds)
  done (took 161.949186947 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.602498119 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.623166987 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.439616992 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.462527566 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.910486188 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.926304399 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.653714091 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.471364336 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.453204131 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.595269529 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.60457119 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.448532261 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.532608404 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.428901229 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.109571732 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.414318888 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.444145446 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.478414895 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.442603215 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.404686252 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.987739559 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.6384419 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.526311446 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.340564782 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.436136865 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.159625733 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.92315881 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.866882879 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.522686707 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.733922403 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.906858666 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.501804588 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.380339775 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.032586162 seconds)
  done (took 65.665246766 seconds)
done (took 686.219578602 seconds)
SAVING RESULT...
DONE!
