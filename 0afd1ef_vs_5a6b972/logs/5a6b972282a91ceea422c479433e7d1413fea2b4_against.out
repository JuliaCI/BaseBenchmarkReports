cset: moving following pidspec: 17903
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.300168919 seconds)
loading group "string"... done (took 0.574322988 seconds)
loading group "linalg"... done (took 7.28547457 seconds)
loading group "parallel"... done (took 0.169673862 seconds)
loading group "find"... done (took 1.16732023 seconds)
loading group "tuple"... done (took 2.028863371 seconds)
loading group "dates"... done (took 1.296998743 seconds)
loading group "micro"... done (took 0.24068998 seconds)
loading group "io"... done (took 1.117461763 seconds)
loading group "scalar"... done (took 39.901013459 seconds)
loading group "sparse"... done (took 12.828115881 seconds)
loading group "broadcast"... done (took 1.015164105 seconds)
loading group "union"... done (took 13.778269418 seconds)
loading group "simd"... done (took 4.675233814 seconds)
loading group "random"... done (took 9.37870324 seconds)
loading group "problem"... done (took 2.007640557 seconds)
loading group "array"... done (took 22.280635132 seconds)
loading group "misc"... done (took 2.047242495 seconds)
loading group "sort"... done (took 3.409681195 seconds)
loading group "collection"... done (took 19.621171202 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.548641121 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143977556 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.121704505 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.140124276 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.189939398 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.133281635 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12967481 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.104093109 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.960073257 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.168862497 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141314771 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.496625486 seconds)
done (took 5.040671334 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.245077455 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089629602 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097673247 seconds)
  done (took 0.879089837 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067345412 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12974529 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066504714 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.084928241 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068159935 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082070931 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068588546 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067098976 seconds)
  done (took 1.258251825 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076212602 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070017737 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.087017561 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069276732 seconds)
  done (took 0.99608974 seconds)
done (took 4.145712621 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.945772192 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.251389591 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191900782 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.456972775 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.155092095 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.197452491 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.749392039 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.347731336 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.207906375 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.073907315 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.121854939 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.380294603 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.126554404 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.694256371 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075061581 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107474408 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.171104202 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.465405732 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081756289 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082521886 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104201386 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130278507 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101935365 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.088955127 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.157787116 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.072019124 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.156273612 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.099632617 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068116136 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.258864286 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172963855 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.721687174 seconds)
  done (took 10.751012911 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101361692 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.123140626 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070710883 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.144225448 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.107144831 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.089497681 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07336437 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085298986 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09590453 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.166567075 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.119271538 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109930511 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.084365596 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072351596 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102754473 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.217287157 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110195421 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.088902922 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088364436 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078096203 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.126385233 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.086446882 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.097730125 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.083051382 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.155572802 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.196347191 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101095076 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115318986 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071920013 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.101359325 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131228285 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.135161462 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067409673 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.086834825 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.160814272 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098202271 seconds)
  done (took 4.651752179 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.108141365 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.180357763 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093535877 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159656727 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.088223274 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.115905974 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.085613111 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100708664 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.238219888 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.164014861 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.48647359 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133219546 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.089285742 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08875731 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071878214 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.086357075 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.549615165 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.147284301 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.123062848 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084814933 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091366366 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072067858 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.116079965 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068360088 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066257597 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087518085 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.100164317 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.672326844 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130756705 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087592177 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.183099194 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.110358347 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069020352 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123942661 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197249901 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.109041747 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095669092 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122182432 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066531562 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.084240077 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162841356 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075441912 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067661544 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108279365 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120753442 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.105580616 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085007231 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068792663 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.183564553 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066843684 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102429623 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.932201362 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167478392 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.093881899 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066920057 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.295635285 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085189946 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086766798 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065239554 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.271467324 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.180112471 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.084028104 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.07412132 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06897794 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085974405 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070243835 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.719400902 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068079137 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.076428258 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084089886 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077958924 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087530712 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068238567 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09172288 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074265248 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101908279 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068405697 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068645805 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084021711 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067219736 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068371688 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.1021277 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.204330134 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070568292 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08589851 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066532661 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103458582 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098553876 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087077736 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067472903 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117990662 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071144694 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067728728 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.121162209 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068110822 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.101755898 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065998241 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.130560804 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085299287 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068267825 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.122952895 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069145121 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.114772333 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072820992 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117840911 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.09921241 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073732434 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.157065364 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06556501 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06508961 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085436099 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06581458 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086468896 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069645285 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.07834284 seconds)
  done (took 22.319809829 seconds)
done (took 39.52391738 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.31576437 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094324695 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.09391657 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076883263 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.094371878 seconds)
  done (took 1.445235969 seconds)
done (took 2.186239555 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.13760494 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.123980471 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064815276 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115078785 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064069648 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.120063661 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118088394 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083563622 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118523341 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065681285 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114620527 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064981039 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065539354 seconds)
  done (took 2.027333422 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085467602 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087622715 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088416828 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084539214 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065111373 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101381419 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081772715 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108583828 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08201669 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072664876 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08398116 seconds)
  done (took 1.677690999 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084665605 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085183917 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088649259 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08338193 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064955752 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099740164 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081395259 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104740797 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082748441 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07481204 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084287477 seconds)
  done (took 1.672518856 seconds)
done (took 6.10618404 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080260944 seconds)
  done (took 0.811572465 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.750633169 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.760625718 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.100945787 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.136288309 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.216161638 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.157368543 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.457827027 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.112446133 seconds)
  done (took 10.604873088 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.104145787 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.090607511 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084840738 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.089985376 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073088353 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074389168 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090280716 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075837081 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.089081846 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074822072 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070333017 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.090743532 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074581338 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090583378 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.074030006 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.08750261 seconds)
  done (took 2.139535769 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.106461406 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.104310373 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092586824 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076736256 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091561837 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073733313 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092998689 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075479636 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.08853272 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074172022 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076798821 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.092100969 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088805977 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066957399 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07606986 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.093810467 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072365773 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.091851547 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077398196 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.093696627 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077416627 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.082323799 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073317752 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.092505097 seconds)
  done (took 2.878556561 seconds)
done (took 17.171309413 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.121406613 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09145047 seconds)
  done (took 0.953354477 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084861712 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101794112 seconds)
  done (took 0.932796848 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.087360315 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084868825 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092952201 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.098125044 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069417535 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083577728 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104012416 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068189864 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067634749 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.083605642 seconds)
  done (took 1.585781659 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072842515 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098416178 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073657864 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.100343358 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077324424 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084512857 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.077875611 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071473823 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.097037102 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064167561 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.088969822 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100650826 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072246253 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.102561837 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074948952 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085985034 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072733445 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.084890797 seconds)
  done (took 2.244344653 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069924739 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070226219 seconds)
  done (took 0.884183754 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070767764 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066611931 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085822539 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069210083 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.083406733 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065981786 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.08299388 seconds)
  done (took 1.273928204 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.418417089 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110668914 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.268582053 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073822444 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.109521288 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.288851791 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084595028 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07284648 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092465546 seconds)
  done (took 2.309092693 seconds)
done (took 10.925988714 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08281228 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088299134 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114738065 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.434459666 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.096579681 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.084307479 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.134445526 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.233680722 seconds)
done (took 2.019858737 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.130780959 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.638462536 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.41038326 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.21812063 seconds)
  done (took 2.020209477 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.389078862 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090998546 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076386005 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070550139 seconds)
  done (took 1.38118403 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069957515 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072618401 seconds)
  done (took 0.898149381 seconds)
done (took 5.183538836 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070087902 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.115650059 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067794834 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065078423 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.083341953 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067325625 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.065229365 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.084095071 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067666202 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06769613 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.085432062 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.069131769 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068530647 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.085542831 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069333103 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066783463 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083576145 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069939069 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067113489 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083485166 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06689167 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069209852 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.083380995 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067008259 seconds)
  done (took 2.582043612 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.090107245 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.087151635 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075446499 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.074899074 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.091387228 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074683438 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092272571 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.070039606 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.091547442 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071774361 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090397378 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073921129 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.071938128 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.091190434 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071672526 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.090753839 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07525858 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087218998 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072116531 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.09049153 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075263753 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069687981 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.090633776 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074407137 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.091805679 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074800093 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.088497445 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.07004321 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091348934 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.074042412 seconds)
  done (took 3.193380927 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07476571 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06652976 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.084763046 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07446008 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066592323 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085637945 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066824764 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067399213 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.08589161 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066507496 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068393951 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.084690219 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067154937 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084969362 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068411676 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.070159804 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.101789246 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067945586 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06717347 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.085111996 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070003914 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.067038631 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.084926795 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.067196574 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.083894685 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066479222 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067490653 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.084160545 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068299916 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066721471 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.086830695 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070521612 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06707446 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.090556628 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.071048419 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066640916 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.088845962 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066836078 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067317553 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.083930968 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066924994 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066817043 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.084151167 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074217276 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067077512 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.086771928 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066989502 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.085476491 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067834469 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070579147 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08435151 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067111803 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068787704 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.085213199 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071531447 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.083219076 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067452161 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066540568 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.085087327 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067312404 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066316842 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083539352 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069377974 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067213337 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.100194797 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073941535 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067056007 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.085611859 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068701356 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086391734 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068500497 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081313692 seconds)
  done (took 6.155030669 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.12381092 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096236072 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.087107319 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069014717 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065212409 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08529054 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070515084 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084312327 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069772638 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090753935 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067572784 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068754278 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086044359 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083450313 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067587755 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086629373 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073791808 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082974859 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067892921 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070724756 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085179411 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070769432 seconds)
  done (took 2.519834239 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.195113876 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092342919 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.11295779 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095500375 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071925484 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095695705 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074082344 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090920792 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074451519 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089065343 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072223402 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090623769 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071977853 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07186014 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090103953 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071538602 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.206972821 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072125304 seconds)
  done (took 2.5065274 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081852536 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06968574 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.110581197 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06723912 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.086594331 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071062787 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091488797 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077683703 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.088735339 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06951966 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095126519 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072195576 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.072170175 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087088643 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072528723 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08691341 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072561949 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069644916 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095774071 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07509578 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09201414 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078308935 seconds)
  done (took 2.552167623 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085150826 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071400885 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106318421 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072678415 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083446659 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068449549 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.09407033 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070158671 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.093375524 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.072038949 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069670949 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085422511 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.075127305 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086817344 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.075022908 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070198257 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.08961075 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070233092 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088747354 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065821015 seconds)
  done (took 2.364060003 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090658797 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088910003 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071635811 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097754779 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072078798 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070555037 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097704393 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071186762 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.088834552 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.112806896 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072064717 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071086939 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098202619 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092558296 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071036346 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096650377 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078226295 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095025499 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06983296 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086799182 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.094446523 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086216617 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077698329 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.086230497 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069074121 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069282054 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087457008 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074266451 seconds)
  done (took 3.111007071 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071079441 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070012321 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08549029 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067691155 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067905602 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.08524847 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067313408 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067425812 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087953194 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067849796 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.070013041 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.086863819 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070240756 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069742799 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087317732 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06989591 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069702226 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.085328306 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067910329 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067647717 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08731754 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070326964 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069607829 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085188638 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067793941 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069084863 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085553538 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067716038 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069861939 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086287745 seconds)
  done (took 3.013831428 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07935381 seconds)
    (2/2) benchmarking "in"...
    done (took 0.076533883 seconds)
  done (took 0.929242025 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.068048456 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084832939 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085361412 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074069254 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.093205315 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070871696 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.096609497 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075051956 seconds)
  done (took 1.423128742 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085718878 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080962535 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08960556 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.083474142 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.098584879 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086667813 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.164627218 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.090303149 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077454344 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067911054 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.102833197 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070590282 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.094447325 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071014416 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076627756 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095299105 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06872911 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.093883553 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.073303347 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068984122 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089506332 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082253196 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090537472 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.071099492 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.07152004 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097766291 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082808219 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.08948933 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074280649 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.096720078 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076452704 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064437822 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.088371618 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.071618841 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068107927 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.098289038 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087070633 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09153746 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.080485593 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09047928 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081166957 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.084030777 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075299013 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077625611 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099681826 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071035638 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.090088004 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.066124038 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.068949576 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090722709 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066503993 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087594124 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065874603 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077575951 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091659528 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081720463 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.087631516 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072517564 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073287611 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.092679686 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07768407 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.089826948 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073373718 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.07113901 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096157782 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075158327 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099573964 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065840796 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065296981 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.086569202 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080817194 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112249669 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.077102363 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071144653 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089754521 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068573194 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091999476 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07187528 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094227529 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076376767 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070448403 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094621486 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078407643 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087977795 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073088553 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.095969748 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.069046572 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072896772 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086343942 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087550866 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086935449 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068675441 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068535493 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.099407365 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073863178 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.08805471 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068316698 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07742023 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.082730915 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.071059637 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089290052 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071065126 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.081481402 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094078753 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.076547644 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.098888548 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077916732 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088592769 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.074067246 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066953123 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089690493 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.070639241 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.095512124 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.064782765 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073191415 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089517365 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071457751 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.098595012 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.068887182 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070554007 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096702214 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077041329 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.088265948 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067529855 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073818499 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.088803814 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073786146 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096403389 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069514647 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066176001 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.084045383 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073834692 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.071432621 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.093114872 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075599645 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092086769 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065705318 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068297343 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.094151958 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.080255854 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089454295 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071017272 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094917302 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072532818 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069496862 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.096116478 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07341883 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.088245376 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.077255113 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071564395 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.084104264 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074107095 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.091256881 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069490223 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07490271 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092899812 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073955176 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.089384208 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06932808 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076581792 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090345486 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.070039161 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089107778 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069849884 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.082095426 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.091125879 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.066025074 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.086240201 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078905012 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068693347 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.088608131 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.070717542 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091223871 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.072116935 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.069643541 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.089224805 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073314053 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10086214 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.075915156 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071957861 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.094818309 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082530625 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08948097 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073968993 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070824625 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091838007 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.072205956 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.098224348 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077462215 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.094503032 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073660076 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.067471099 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095610976 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079304952 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.088424598 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.069590436 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.069300513 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.092406215 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075799217 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.092103812 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070299041 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066834603 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088284562 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072761006 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090303826 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070054487 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067720482 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.094430592 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.070601856 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.097008635 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072422689 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.099860775 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075014856 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.066765514 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092813953 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069664697 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.095577072 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.066747547 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.068370892 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.088149202 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.07224612 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.070421314 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.092988805 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.065452341 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096869786 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079421208 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070939586 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088423757 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.071065134 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096745935 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.073166411 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075607409 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.093069268 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.078310066 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100232117 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.070977858 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.075183009 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.101015453 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071575411 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.083746585 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076689139 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069886949 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.089391398 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070463574 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.087038513 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074135023 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079672822 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09796424 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065257476 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.092639306 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.070352682 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070033585 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.085624847 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.076040915 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.092338927 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.072426111 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078182237 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090671549 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.072487783 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093799066 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.071683033 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.07273723 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.091472328 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075146022 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.09089573 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.074128727 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.0707114 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.093373753 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.07094173 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068469812 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092027607 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.072097577 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.089240841 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07797904 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070534387 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090402454 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.074097836 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.090014234 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072655664 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071981925 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.090015338 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075808222 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071201742 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.090680234 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073836233 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.085123122 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079301251 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070769773 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098118877 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.072393073 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.086352466 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.077331782 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073974384 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.095813246 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.072187636 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.090553274 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.073684263 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070466415 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092991494 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077882556 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.087326685 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.083082879 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098580449 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072263699 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074472735 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.090193007 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.074072156 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06947624 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.092192739 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.072217234 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.090604162 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.071982044 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075838927 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.093580255 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071545234 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091676374 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.072620027 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071998193 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.091548497 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.066444606 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.070044772 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089926053 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.072397772 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.100814878 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.072536864 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089363415 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.071041018 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072770119 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.089031201 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.068497685 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.098168265 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.081346197 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.071779345 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097981769 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.070579891 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.091484794 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082402249 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.068077355 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.089348793 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.069436417 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088201118 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079639983 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.072458669 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.101024828 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071901255 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088864464 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.069238937 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.072199577 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.089105354 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.066290802 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.069167333 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094197901 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.070981824 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089234808 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.071794648 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.074445389 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091607369 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082603295 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.089402288 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.072523437 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071400299 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.087616903 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.071382365 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070666042 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.093752745 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.073013075 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.088139445 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.069452484 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.07164399 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091249806 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.073785003 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.071335858 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092758097 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078756194 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090563355 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07504399 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094237101 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06695706 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074891062 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.090032846 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.072219177 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.071155311 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093900653 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075691167 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091287442 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.081059041 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070768274 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09192155 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07195068 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.088392761 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.071791881 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.071184903 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.090272759 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.071405141 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.091623444 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080080755 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.069187005 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.094026886 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071874007 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.071664139 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.098218403 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.072797561 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.093770234 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080055929 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.090514792 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.073954603 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.080019325 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.094603842 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074938489 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091949802 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.074006607 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096070429 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070798055 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.077785817 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.090921125 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.073125459 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.073038825 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089239674 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072025571 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.090316602 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070490074 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077604898 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.091672262 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.071645923 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.089934278 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.070346355 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072873857 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093802218 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079849909 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093354762 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07510353 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.067626184 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.087919381 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073389543 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.069438346 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092667463 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.075574807 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096987844 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.075390782 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.072192598 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.089970601 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.081734483 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096801577 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.075986688 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.069280939 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094516007 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.073073268 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.093299579 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.072966412 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.072287779 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093014689 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07675573 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.09252176 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.071551028 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079024466 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.094422396 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073407041 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.09206808 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072902946 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.072089786 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.086020024 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.072640667 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.073597883 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096236809 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.074595694 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090678678 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08366431 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.068771964 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091331782 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073897682 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089281067 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074585897 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063994998 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.090266991 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071134697 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089027936 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06513783 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068743495 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.085453891 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071845056 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068092937 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.083439142 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080641774 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.098224019 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.073559805 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088498244 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071229369 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066956059 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.085894691 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.071960899 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072529274 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.09385486 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.083784451 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090157341 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.071656828 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.067084318 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091902041 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07603804 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.094002799 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.069118262 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.067238636 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.090148946 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.076135797 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077167351 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090262223 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.071921414 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094403718 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.075354434 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.069921101 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094811932 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.069307438 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094410111 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085725236 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.091183073 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073231145 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.078652853 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099490046 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.073088426 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.086123703 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.072494525 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072577405 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.088482614 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071127485 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.089291579 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08583145 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072178281 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.08791363 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068701506 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.09043202 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06906509 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077193371 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089296123 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070512754 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092610243 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072234384 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095900557 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073184882 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07739745 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091557418 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072880795 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086751145 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070911128 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067063001 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.087899237 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070944638 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.088319557 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074013713 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.095536097 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.070023374 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080628107 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098226424 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072507933 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084956693 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069408712 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068759391 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.08348244 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071225522 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067884864 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.087305971 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068356944 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068290733 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.089533028 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07532569 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088707349 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070614943 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068893588 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.08283115 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073038363 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.090533572 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070798637 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066419258 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.088825836 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070536715 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073050489 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092954987 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067960468 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089984941 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072031157 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069288084 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.083831995 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076820185 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087108571 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073088365 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069572411 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088113066 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071164997 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072578874 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094435579 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070075965 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090380804 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.079052777 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090323789 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.067442807 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067702805 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.0937171 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.0681864 seconds)
  done (took 48.824724742 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.114657427 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088838532 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06771862 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087054242 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080228131 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088243505 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06771277 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06852645 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088267134 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.0708414 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067547625 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085706594 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074063573 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110213999 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097776721 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069408702 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08553334 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069656591 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06700787 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088272998 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076986084 seconds)
  done (took 2.533606554 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.092798132 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.107738946 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083375801 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10661587 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076812484 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.105142196 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102200732 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084663007 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106208311 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079310037 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.106474501 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102847496 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.079395777 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.098726275 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07959116 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098521802 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084740222 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094840426 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.081139224 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100562029 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078280815 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101632998 seconds)
  done (took 2.871070203 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.072656423 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.071386391 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.093006176 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.067396522 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.071353894 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.086741449 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.075922696 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.068873054 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.093442955 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068389073 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.087122463 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067974922 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070239867 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.096420772 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069813035 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.067353031 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.135690457 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.092456239 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.069935787 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.089309483 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065765499 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071132519 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.084281728 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065533988 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067580656 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.092693331 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070120747 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.087211064 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.071140337 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069962989 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.091193433 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.070362461 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072543822 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.092339447 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.071221195 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069939823 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.091873974 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.072128091 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.086845391 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.070284666 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072899872 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.087833841 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.072656054 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072546135 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.0894702 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.069688573 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.073038337 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.092421486 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.067090593 seconds)
  done (took 4.667527949 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.091368425 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.148973804 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.094957071 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108131178 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.109212653 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.100599618 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074882744 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126495584 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066492742 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.088389077 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.087064451 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.105069919 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069561055 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.09472805 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073476108 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088794589 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071723342 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087445981 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.074326808 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088210646 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.074171511 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09513562 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.085890458 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.104600378 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07615776 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.092126306 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072037475 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.096501345 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.086421143 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.097302131 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.077087011 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.096802702 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.087817893 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.098182345 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071456639 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.094563701 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.088466978 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.09278106 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.074557789 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.089782746 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.074451876 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.096404863 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.079589756 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.108495464 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.072203345 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.097077189 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070840161 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067804009 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.10382159 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090048864 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.078664256 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.103817511 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07312982 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.088753426 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074559245 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.104849355 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.070081258 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.087558863 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.073662955 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.101936463 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067508856 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092538882 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.084333887 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.090925776 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.078186621 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.103400142 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.075216529 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092209446 seconds)
  done (took 6.95388688 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.081823368 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095073735 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084026057 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10399801 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075231633 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.096225297 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094168716 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076563798 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094924882 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081863465 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095676191 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117621619 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.07171015 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078403828 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.096553329 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095113788 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076761339 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094959632 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076058374 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095532392 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076275116 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.102670826 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075971145 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.104328353 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125405206 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071068813 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095308227 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076394783 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104002344 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07553994 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108449065 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.095575518 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076610989 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104844279 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.107484951 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075708732 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087503925 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076483062 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.095010529 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075895967 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.089889046 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08515097 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.09529329 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.07157254 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095511726 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075731502 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103319979 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.107392957 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080155122 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100058464 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076710736 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104588178 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093946742 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076611595 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104026279 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.110715874 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104091747 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103289438 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076443232 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.104427857 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104571492 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.092902243 seconds)
  done (took 6.474996375 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094544783 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101880665 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.080741294 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.085647345 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068111552 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093806327 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067831484 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.067406936 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097996187 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077738298 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10144102 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092705177 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077459518 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100677176 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073368921 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096865076 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072524811 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09372515 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077800263 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09365308 seconds)
  done (took 2.546827251 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.082181592 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.111122582 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.07352814 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.077383462 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.09341545 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075842821 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.092647283 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073415033 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090205142 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073349352 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100345111 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080737093 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070928508 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096909015 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09939043 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.077557013 seconds)
  done (took 2.200463719 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085580657 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.103949619 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.087351254 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.09361031 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071122755 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.068563643 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.094168597 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.068239436 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.089420007 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.087669803 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.093505212 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075662668 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.071957678 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.092669118 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.070026451 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.095725486 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.068472389 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.068021479 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.090294417 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.084520465 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.101465976 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06926453 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.092821829 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.074611521 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071606962 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.096975821 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069416171 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.088171561 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.068343739 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.089781731 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070492523 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.097932581 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06759248 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068149692 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.087995525 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067271373 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.091544587 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.072627913 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072046674 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.09261424 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.071539958 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.092911692 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.072536286 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.07295892 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.09007723 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.073501924 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.089344957 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.079062717 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.070335154 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.094015869 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.073042339 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.096207297 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.073802033 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.103068813 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.077046531 seconds)
  done (took 5.335623393 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087157125 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075515465 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089858265 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.070731728 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.095375136 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.074825301 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074086262 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092771915 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072041403 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087334149 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072463107 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073082648 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09115602 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073968283 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091302402 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074743353 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064923553 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.091610829 seconds)
  done (took 2.291847037 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079120069 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072893822 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.101464159 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073248839 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.091496856 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074295874 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066382969 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088780756 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068974125 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069883327 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089801504 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072984054 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088299386 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072753781 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069590034 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089193464 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072586572 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068496423 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090298693 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065738859 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091705385 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068646211 seconds)
  done (took 2.560144918 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.080117958 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.099840164 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.174239223 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.116188523 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.088423183 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.107630952 seconds)
  done (took 1.504616515 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098858891 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108031508 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074128224 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093805114 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102488584 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073970744 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097228167 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074306391 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105085628 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109806811 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075266653 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104857767 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083963868 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107797645 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101010674 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081733452 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094056715 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074401569 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069497107 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111593325 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091142751 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080963575 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092189561 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071945163 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092311948 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080723198 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10232025 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10571585 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072994965 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101318537 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077835818 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09224057 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081733743 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106063032 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072433203 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102087845 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091000308 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09095067 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097661719 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080154337 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.093343665 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078161404 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101422898 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096663938 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080881445 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091783363 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077044539 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091620809 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072373273 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118567124 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099099393 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082617758 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097779886 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081925891 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10222738 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119393258 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0880931 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104885865 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100555115 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08893751 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105250715 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101061111 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084194341 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110086307 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081211515 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10513035 seconds)
  done (took 6.92275552 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090651173 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11439313 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07556922 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109693228 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083130587 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097284278 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074411303 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096184548 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071972331 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092119229 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136180139 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072967939 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101781258 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080159404 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093012725 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071792018 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092617791 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100588302 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072551637 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117096241 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071754911 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101277886 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100717371 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081070985 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106784767 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077850817 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092261737 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071928915 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092197984 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072312619 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097643285 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072780713 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100175701 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070040342 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100854095 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091678332 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072434291 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097358923 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072390127 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098137953 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081026854 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111845158 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09196828 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072264887 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106100111 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071901833 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091673945 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071953531 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092312907 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071848648 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106234668 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086245408 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106453632 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100280039 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071853589 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092025925 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072773078 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09163517 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072271403 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098918537 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080590384 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092427988 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118282225 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07282936 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092625059 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081048266 seconds)
  done (took 6.731151493 seconds)
done (took 133.524609794 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.229810954 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.288646899 seconds)
  done (took 1.360083552 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076259157 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.103168659 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.107573029 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135658556 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.091662399 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104310203 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103130246 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.10319384 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070779215 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.091115459 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.072787301 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072165589 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.156918369 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070933266 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.0706439 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.09313678 seconds)
  done (took 2.375372113 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101758104 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.210135958 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.084291402 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.090606666 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.074680639 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.094081486 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068753441 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07481377 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095320156 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069699923 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072238977 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091235523 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06916278 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070225175 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094438295 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072787669 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.089006146 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073305042 seconds)
  done (took 2.442753371 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101811278 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.117700557 seconds)
  done (took 1.072735998 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.21289312 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.12654221 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.21093417 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.439598006 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.254658818 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.287530641 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.181890551 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.182245497 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.167892308 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.177279647 seconds)
  done (took 3.090648138 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.107471751 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170291363 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.281442982 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.14086064 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.111627555 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.088413137 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.141250372 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.113872475 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085679118 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.106540647 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.085379756 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.102376832 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100977655 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.100239336 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078115968 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.101666918 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104093423 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.098625414 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078048014 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100102661 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100863424 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.090975987 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079755269 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.098117758 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.08240699 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.102638511 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070147535 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069160689 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.101797214 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078677388 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.097815154 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.087225426 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.103532509 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.133921513 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.107229742 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.136162405 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081357162 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.094852216 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079754326 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074853645 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.103457411 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101694182 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.087939793 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100869496 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069795754 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081446315 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.090288266 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069659017 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.097921024 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.081587582 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098144904 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076140643 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.134650728 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.10163845 seconds)
  done (took 6.312311682 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.777785718 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.116090823 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100032709 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.845798919 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119276989 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087527031 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.73415168 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.121489116 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.213643273 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.735552063 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116933936 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.081314595 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.212146536 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.219588432 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.934419388 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.272918512 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.619745028 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.109302626 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111461714 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.137248855 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103320679 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098912619 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115819446 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.440646561 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.077046226 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097066153 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.081055056 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104023578 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.142651777 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.087247988 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.099475611 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.160143651 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.230767241 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.187420775 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.078636377 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073049823 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096081143 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.153611132 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.226968571 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.199032169 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.162774672 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071327474 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095170317 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.085049807 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116174181 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071873923 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.145609853 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.157262329 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.152309625 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099422369 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.08118415 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.105373597 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.082910561 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.169765854 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.084474099 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.303297647 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.270562584 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097648937 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.082976712 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111406166 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.222413401 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108455694 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207510651 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10273104 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19349429 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.074907933 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.758416953 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.153290461 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.074208073 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101309498 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.082665684 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099992301 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.083200198 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.151338838 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.374992583 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.085130373 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.099492115 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073680198 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.232084889 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087687504 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07323779 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166698438 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.078068017 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10442649 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.087212387 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108525641 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.151216496 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.218784116 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.083837873 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.104224857 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077562507 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10973954 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.077485907 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.193871107 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.202264454 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.14428712 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.18971628 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106119638 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.147266998 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.151647218 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102962406 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.155635775 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.081647249 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108033309 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084701313 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.199222662 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.127949829 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085273897 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.100273403 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.080937966 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.132614682 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.111077812 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.081360207 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.153117891 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.486103304 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.151004306 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072023811 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111181841 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0824525 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.144668749 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100934658 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.219553109 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10652978 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.151680378 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.08160826 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.092694703 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.083416048 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.145995424 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106186192 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.082787545 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107315539 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079981323 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.22383345 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.199198868 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105222741 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.203044525 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.167339201 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.079863285 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.15327664 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105650738 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.149408609 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.082074899 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106064791 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077269136 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778587385 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.107373715 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.082963691 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100110381 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.157844493 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096432763 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085542708 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.109282233 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071489938 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802569891 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088861614 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105257378 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.085396992 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10254452 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.082158991 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102882817 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077643956 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.143137987 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.211450004 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102719793 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.082190397 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.107608376 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.143941573 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.078011313 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.108215505 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08586954 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108956265 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.082715265 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.099724329 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086498765 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.150861422 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.166941307 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.180030555 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.57249226 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074877413 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.108493864 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.186141676 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095761985 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.247060448 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104756914 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.1848579 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16786069 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083459912 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.290235736 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.148522862 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.179486639 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089298518 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.155522049 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094416047 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.081488492 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.146427689 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.096404403 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.081250454 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.145014925 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109769662 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.084473366 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.941098264 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074405512 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.207731267 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.094520604 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.154609427 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.078155808 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104702159 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.274538798 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074546147 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.089136771 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.171139129 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.078491488 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.108862376 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.67836307 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.086064788 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.107090223 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101902732 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.180051673 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.147476601 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.104675195 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.081098167 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105281333 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.145989624 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.190318153 seconds)
  done (took 39.421461186 seconds)
done (took 56.9246915 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.251681072 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.205478653 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.232146524 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.154506327 seconds)
  done (took 1.821504014 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.139225836 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.13901102 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.133139831 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.070386402 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.134283702 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069156157 seconds)
  done (took 1.561745588 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.335636372 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.291881416 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.21327672 seconds)
  done (took 1.717664071 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.281749132 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.235228639 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.468101222 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.291607036 seconds)
  done (took 2.289149121 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.197448957 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.12057325 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.072990487 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.110012056 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.156738897 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.226562461 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125522044 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.158656786 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.105081193 seconds)
  done (took 2.200179839 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.155708678 seconds)
done (took 10.623093088 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.239624482 seconds)
    (2/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.231606823 seconds)
    (3/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.23687426 seconds)
    (4/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.22137036 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.131805426 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.107481038 seconds)
    (7/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.127320057 seconds)
    (8/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.229708446 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.099342778 seconds)
    (10/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.124228818 seconds)
    (11/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.237343195 seconds)
    (12/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.102893232 seconds)
    (13/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077422185 seconds)
    (14/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.221141503 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.08201067 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.129980575 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.101626364 seconds)
    (18/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.075379496 seconds)
    (19/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.153408601 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.131447916 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.240010544 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.105294629 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.192811919 seconds)
    (24/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.119224745 seconds)
    (25/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.106110698 seconds)
    (26/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077556001 seconds)
    (27/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.10371099 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.127179507 seconds)
    (29/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.105823692 seconds)
    (30/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07655852 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.15449684 seconds)
    (32/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.240308316 seconds)
    (33/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.079670482 seconds)
    (34/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.097323899 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.106942751 seconds)
    (36/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.081278027 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.194770979 seconds)
    (38/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.099273242 seconds)
    (39/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073697539 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076326154 seconds)
    (41/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.194527941 seconds)
    (42/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.192389177 seconds)
    (43/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.197898049 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.09744506 seconds)
    (45/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.156198094 seconds)
    (46/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.079671139 seconds)
    (47/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.134826146 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.10783796 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.118953656 seconds)
    (50/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.086345463 seconds)
    (51/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.20214742 seconds)
    (52/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055730352 seconds)
    (53/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079033137 seconds)
    (54/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.055562968 seconds)
    (55/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068084008 seconds)
    (56/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.199102602 seconds)
    (57/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.080675913 seconds)
    (58/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.118870452 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.098569475 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.100200307 seconds)
    (61/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.148304211 seconds)
    (62/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.103888066 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.076779826 seconds)
    (64/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.204561657 seconds)
    (65/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.075757873 seconds)
    (66/309) benchmarking ("sort", Int8, false)...
    done (took 0.178626551 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.115467341 seconds)
    (68/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.186226085 seconds)
    (69/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.109014458 seconds)
    (70/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.224245615 seconds)
    (71/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.184055898 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.07138617 seconds)
    (73/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.211573085 seconds)
    (74/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.111584822 seconds)
    (75/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.161318344 seconds)
    (76/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.175344942 seconds)
    (77/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.076088503 seconds)
    (78/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.102292115 seconds)
    (79/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.160051352 seconds)
    (80/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.095608231 seconds)
    (81/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.147426117 seconds)
    (82/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.162668153 seconds)
    (83/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.069620662 seconds)
    (84/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.138216211 seconds)
    (85/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.054742224 seconds)
    (86/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.060789355 seconds)
    (87/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.078182607 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.070458438 seconds)
    (89/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065724211 seconds)
    (90/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.13759994 seconds)
    (91/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.077743381 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068995396 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.124887713 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.120887324 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.069709358 seconds)
    (96/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.056173643 seconds)
    (97/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.125234002 seconds)
    (98/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.064409358 seconds)
    (99/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.144029287 seconds)
    (100/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.183401368 seconds)
    (101/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.100791215 seconds)
    (102/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075609536 seconds)
    (103/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.056984094 seconds)
    (104/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.199020544 seconds)
    (105/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080806689 seconds)
    (106/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.101331604 seconds)
    (107/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.055229115 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.169261903 seconds)
    (109/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.144553754 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.124286031 seconds)
    (111/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.085640438 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.069109157 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.101428515 seconds)
    (114/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056637982 seconds)
    (115/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.195696954 seconds)
    (116/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.141605426 seconds)
    (117/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.176428762 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.173835186 seconds)
    (119/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.05554624 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.179298806 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.151224635 seconds)
    (122/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.165967192 seconds)
    (123/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.348097936 seconds)
    (124/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.059364867 seconds)
    (125/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072689449 seconds)
    (126/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.102209263 seconds)
    (127/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.141822206 seconds)
    (128/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.079670684 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.163458614 seconds)
    (130/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.071943492 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.081772092 seconds)
    (132/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.158957807 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077451151 seconds)
    (134/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.095866701 seconds)
    (135/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.071108663 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.093168345 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.121815183 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.075099012 seconds)
    (139/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.103271799 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077878109 seconds)
    (141/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079940258 seconds)
    (142/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.119042669 seconds)
    (143/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.187409858 seconds)
    (144/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073227312 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.09470407 seconds)
    (146/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.070647159 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.078110558 seconds)
    (148/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.100487463 seconds)
    (149/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.081349696 seconds)
    (150/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.103256011 seconds)
    (151/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.104300524 seconds)
    (152/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.070040411 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.09427374 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.07012173 seconds)
    (155/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.055856849 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.101011656 seconds)
    (157/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.086815072 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.069280909 seconds)
    (159/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.136567886 seconds)
    (160/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.061301304 seconds)
    (161/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.095898073 seconds)
    (162/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.070423016 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.126337088 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069537827 seconds)
    (165/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.085243526 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.102166216 seconds)
    (167/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07556856 seconds)
    (168/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.071085916 seconds)
    (169/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.081130236 seconds)
    (170/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05568707 seconds)
    (171/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.056496769 seconds)
    (172/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.101416613 seconds)
    (173/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.056656184 seconds)
    (174/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.113061732 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.118491298 seconds)
    (176/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.200660852 seconds)
    (177/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.054876875 seconds)
    (178/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071232982 seconds)
    (179/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.197249865 seconds)
    (180/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07573902 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.093699836 seconds)
    (182/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.072380531 seconds)
    (183/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.198497252 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069456879 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.093204592 seconds)
    (186/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.114270812 seconds)
    (187/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.119025926 seconds)
    (188/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.123443309 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.163296465 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076690957 seconds)
    (191/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.101803347 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095187461 seconds)
    (193/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.083057302 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.104569662 seconds)
    (195/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.069034558 seconds)
    (196/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.056030522 seconds)
    (197/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.07855478 seconds)
    (198/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071091206 seconds)
    (199/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.054880209 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.092877479 seconds)
    (201/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.119942885 seconds)
    (202/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.073828001 seconds)
    (203/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.118376524 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.124170733 seconds)
    (205/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.05548075 seconds)
    (206/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.141188182 seconds)
    (207/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.091392999 seconds)
    (208/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.055403446 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.076638829 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.101403957 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079366651 seconds)
    (212/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.176221734 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.09091323 seconds)
    (214/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.079187789 seconds)
    (215/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.055501203 seconds)
    (216/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.070709312 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073986038 seconds)
    (218/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.080628189 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075782882 seconds)
    (220/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.070809599 seconds)
    (221/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.128120935 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.070663479 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.091947221 seconds)
    (224/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05548469 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138052451 seconds)
    (226/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.080802542 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.146094356 seconds)
    (228/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.081164572 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.129578557 seconds)
    (230/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.094543431 seconds)
    (231/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.056685137 seconds)
    (232/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.055450341 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.124976002 seconds)
    (234/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.065577813 seconds)
    (235/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.055411124 seconds)
    (236/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.05566517 seconds)
    (237/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.079258981 seconds)
    (238/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.085153354 seconds)
    (239/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.109871882 seconds)
    (240/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.056458309 seconds)
    (241/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.087697241 seconds)
    (242/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.079414767 seconds)
    (243/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.057267033 seconds)
    (244/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.055195379 seconds)
    (245/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05518298 seconds)
    (246/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.093183979 seconds)
    (247/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.071723127 seconds)
    (248/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.065647425 seconds)
    (249/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.118786951 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.070078214 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.095395665 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.099271372 seconds)
    (253/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.095800308 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.102448464 seconds)
    (255/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07667957 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.134527461 seconds)
    (257/309) benchmarking ("sort", BigInt, false)...
    done (took 0.21692061 seconds)
    (258/309) benchmarking ("sort", Float32, false)...
    done (took 0.157773533 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.077091149 seconds)
    (260/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.056354987 seconds)
    (261/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.055447328 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.094141493 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078933391 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.142113098 seconds)
    (265/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.05541526 seconds)
    (266/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.176897084 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.135352724 seconds)
    (268/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.094163183 seconds)
    (269/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.055681488 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095621757 seconds)
    (271/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.097796431 seconds)
    (272/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.057750776 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096162066 seconds)
    (274/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.108123034 seconds)
    (275/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075818069 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.121521244 seconds)
    (277/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072858794 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.069592892 seconds)
    (279/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.100668613 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.149506802 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.103119065 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.069579345 seconds)
    (283/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.064710253 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.092743364 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.056352987 seconds)
    (286/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070362175 seconds)
    (287/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.080409204 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116778426 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.10182239 seconds)
    (290/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.076807904 seconds)
    (291/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.05694885 seconds)
    (292/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.071726553 seconds)
    (293/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.09966918 seconds)
    (294/309) benchmarking ("sort", Float64, false)...
    done (took 0.131326908 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.115382859 seconds)
    (296/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077666612 seconds)
    (297/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.056050872 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.099831662 seconds)
    (299/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07377616 seconds)
    (300/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.093391068 seconds)
    (301/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.078629103 seconds)
    (302/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076642647 seconds)
    (303/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.079460175 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075544669 seconds)
    (305/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.056942503 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068962081 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.09311464 seconds)
    (308/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.056644465 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.205387178 seconds)
  done (took 34.367148764 seconds)
done (took 35.246784317 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087534811 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098440433 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.103559163 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093693255 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.106666462 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079575991 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.100745808 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081512344 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.105703473 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084493182 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080651298 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.082538269 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079564626 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.103212989 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.080208767 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094762822 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.107530146 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076758934 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.102205215 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069974455 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077735166 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.094292368 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.072349628 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058323819 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.105041805 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077587467 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.099265544 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079499237 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069831953 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.094226896 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.074215161 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077295121 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.093620095 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.084006663 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07591544 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.102163542 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.080624866 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.104200823 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071902662 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069911751 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.101933357 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.070075105 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076104709 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.101385008 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076430417 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.099087852 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.078094596 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.082116622 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119170299 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072730873 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.102417399 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080524484 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07914122 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.100936903 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073538454 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.101842876 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075022357 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094295637 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.103088227 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073100706 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.104233872 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078154668 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.076186749 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.104589637 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.078620268 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.106241955 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.0806857 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075139645 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.104552877 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076066344 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069466747 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.102259893 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073810859 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.093982556 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079921325 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081159402 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.093673963 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.076363501 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077395964 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09959084 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.069679787 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072013774 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.096093484 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.077111286 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072004486 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.082938034 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07448157 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075690023 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.092948819 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07975038 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.099782037 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07823103 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.072284548 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.105606576 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069724049 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.075795658 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.09519189 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070342279 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071620312 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.09841546 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069944899 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072288092 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.102912231 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.072010459 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076386987 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.106885745 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070373386 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.099754548 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.070088339 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06934338 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.108741588 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.081070575 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.09417581 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072451494 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069510075 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.101163136 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.07019257 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069950875 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.094159477 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070359914 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075834835 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.094953369 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072467579 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077763647 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.10821083 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.070795208 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073842125 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096433589 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.070455628 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.075343463 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.094591405 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070324641 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.095633333 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.067003883 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072004373 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.094236438 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.078175591 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07540301 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.103098074 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.07169438 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.079210199 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.099130756 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076257235 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075479438 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.093334371 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.063431807 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072617727 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096636904 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.072106471 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.070288769 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.095481835 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.070910442 seconds)
done (took 13.785941356 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.074600902 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169847149 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.109204172 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.125374754 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.115834073 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070548319 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.080446371 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127576406 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072437928 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126039932 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.093193899 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.11532291 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.106736878 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.094889992 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070490088 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.098527971 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071727889 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085830683 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.129461095 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.09107332 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.146302041 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.094450313 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.10399085 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.118773136 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.080236504 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.121948069 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.07139209 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.074115637 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.098020612 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.086212092 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.115281602 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073773477 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.071332807 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.116996292 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.087749302 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.103681002 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070509165 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.076503311 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.095066122 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070630912 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.12351166 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.091518291 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.100113895 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075846067 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.098607929 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.073346877 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071854887 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.103691452 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.081167544 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.074831974 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109253177 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.138887467 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.074129316 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.105627948 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.070151309 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.081089604 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.104702979 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.073012012 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.09471679 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072898108 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070366481 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.097961469 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085737408 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.124279558 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074408873 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104454843 seconds)
  done (took 7.21141884 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.091976615 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.099812347 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.113196111 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088590006 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.094571283 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071304853 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.094967387 seconds)
  done (took 1.593980183 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.075738844 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.097054914 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.123000575 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093393954 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.114772769 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092279362 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10598049 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071622596 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.088683211 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.097479196 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.09177925 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.135125607 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073198108 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.103330246 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.096086185 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071439337 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.120392673 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.071070895 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.100010881 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095262809 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073659015 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.117120787 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073465316 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095946296 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085885761 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071335861 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145775241 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076061976 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09785328 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074844063 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094528768 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.123013508 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.110965678 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082545814 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095950235 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086823062 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085684089 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094517686 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087625573 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.101890455 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08602999 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.072340372 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.097976972 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069781287 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076047408 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.106561952 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072348497 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.072365206 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.099972624 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091357988 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.097521012 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085772819 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071946048 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.101136196 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073162674 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101780443 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08145105 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072441254 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.115812008 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073254585 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.113526823 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088034105 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084796357 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112416608 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073827027 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.110096703 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085737224 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.074351148 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098184576 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075378826 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.113245454 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070186471 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073259569 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.107084852 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074213546 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094660733 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.12029787 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073342938 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.10751842 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072293853 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072107355 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.097257353 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.095477989 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100144368 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072005999 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075970971 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100530249 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069778498 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.0713001 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.101104228 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070186409 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073592429 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.099646469 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072893704 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074530957 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.112751959 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072138921 seconds)
  done (took 9.710028747 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.076967739 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.073886011 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.098682888 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072788816 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072936451 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.097827435 seconds)
  done (took 1.449371251 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.100438551 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.099314939 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.086914865 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.078210546 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.138665853 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085770758 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.112395087 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079840726 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.115219395 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.084780841 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.112495634 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087809295 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.118996217 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.078127046 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.111220638 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.077833056 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.11255899 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081781337 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.11050895 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07964224 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.118478536 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.079047477 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078888133 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.113089396 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075272857 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.103523536 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082331445 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.109917104 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.084972568 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.106310725 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07889702 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076173577 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.102514895 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081026689 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.112574496 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.077241932 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103574922 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076585491 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.107762686 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076473672 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087105979 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103970861 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.084257445 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.101280217 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080552489 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.102401005 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07612897 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.107464099 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086687029 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076648442 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.102183123 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.077471857 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.100541588 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076943441 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.102713712 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079837843 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076514609 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.112195427 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07871758 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.10223175 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.07545005 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.101126452 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080233703 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.100558725 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.086679134 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07673682 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.101806692 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079422903 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104042428 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.078388566 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.101917796 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.075427215 seconds)
  done (took 7.626596567 seconds)
done (took 28.529687562 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.675726923 seconds)
  done (took 1.626207507 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.768153425 seconds)
  done (took 1.719329852 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.817385447 seconds)
  done (took 18.770987257 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.496105234 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.56531593 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.789389415 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.161677779 seconds)
  done (took 2.963958905 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.920307218 seconds)
  done (took 1.891147936 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234728665 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220530364 seconds)
  done (took 1.412623571 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.769091137 seconds)
  done (took 1.731437485 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.354050372 seconds)
  done (took 2.313359864 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.323614509 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.145220726 seconds)
  done (took 1.434790109 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.542866732 seconds)
  done (took 1.511999484 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.212228879 seconds)
  done (took 8.181062656 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.222268903 seconds)
  done (took 1.200944894 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.277460339 seconds)
  done (took 1.251472703 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.652498128 seconds)
  done (took 4.619768219 seconds)
done (took 51.588512251 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.085654261 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084647083 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.109700028 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081997376 seconds)
  done (took 1.325736662 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.087826666 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.079058189 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10787723 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077524222 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.109199516 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078603146 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079807813 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10862245 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07762524 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.105558873 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07788494 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077380521 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.10603682 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079791351 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.100922367 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.081225289 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.107734277 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078716336 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.081481379 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.104035067 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075513376 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.105087037 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.081153368 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.077437602 seconds)
  done (took 3.122064447 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.085122745 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076968514 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.103661947 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076032942 seconds)
  done (took 1.319844352 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.086693226 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.098475682 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.120680499 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.082860802 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.124308516 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.118527509 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074581932 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074243579 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.102288326 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.082339618 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072883112 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.130932279 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.120284318 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082378838 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.084038963 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.096893516 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.07433705 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.118963881 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.082620854 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.083951844 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.101680383 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082074757 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.07309464 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.121118035 seconds)
  done (took 3.267448149 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086313435 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10795743 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.110348366 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095413856 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.124758563 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070558808 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.10767434 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096722529 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.158973576 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.070923774 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.101548597 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.071467003 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.077106555 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.096414502 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081831054 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.141992256 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.118613206 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.099565275 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101841909 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.071328487 seconds)
  done (took 2.96943957 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.085146828 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074434489 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.096147193 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.074086 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081397487 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.103487499 seconds)
  done (took 1.496768593 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.077484238 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072366834 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.097745243 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071824442 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076842528 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.097851007 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.071125895 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071711393 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.098250954 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072146237 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.072036426 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.097139928 seconds)
  done (took 1.952587136 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.509024924 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.07477949 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.101209051 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.071237475 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.101929676 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.072079175 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.112246835 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073644271 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096933294 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.098655208 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.072127569 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074006 seconds)
  done (took 2.432502487 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224960221 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107908235 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243371605 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17097508 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142587371 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153689368 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134154398 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120053246 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.205836614 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138936572 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188565307 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177963296 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134050826 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17306411 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120389935 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.105513167 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180470542 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225046635 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136782579 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185912968 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181482139 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147047566 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161158302 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133064999 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094536982 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151731446 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.103766997 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086992982 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216795005 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158929078 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170603816 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146073242 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12857202 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194393974 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231943099 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176617447 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170247457 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119593406 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.131620495 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.148842534 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248151569 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094691966 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215648088 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114160236 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11466271 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17499593 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149345143 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.156769204 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.132079818 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094923634 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203596097 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194682093 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.173240588 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121549548 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142791869 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116386051 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.148024535 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134664724 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230662768 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181374956 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162292203 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076774933 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128090082 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171919654 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163214719 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.148384273 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.161410413 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127827289 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172013206 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169653154 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14920795 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170556938 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.192151249 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094593942 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153240595 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155708176 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151550025 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23603145 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162686968 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077857179 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147670642 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131941667 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087024444 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.176068425 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080378047 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194248394 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1311445 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.122103136 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118273788 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141699011 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142589583 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177405932 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171027837 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128485043 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.07085028 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136580805 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.137978115 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168206575 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121062328 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115290957 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141960053 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.111258629 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15813635 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079464608 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1565167 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.105359697 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156346162 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163984599 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082768105 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140270366 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133516948 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.104467016 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157771413 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17994268 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122924763 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088788864 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213829908 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15659083 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104743258 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159642612 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207135951 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103028555 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132482577 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180357189 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223733299 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095350893 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182954508 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136028942 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118011513 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.093868742 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159620731 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136088442 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.143491581 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087142737 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.188374418 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190810145 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.080460992 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120862557 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168709534 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08786706 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113909874 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140710791 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129475478 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09411558 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.12876601 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104755569 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189715922 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16008278 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107519614 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14668632 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132989137 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232086741 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09474477 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.130989993 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129244243 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075910948 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.171858511 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177591774 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113546384 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182411295 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.151541569 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136613166 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151313108 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08964187 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158169147 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083891633 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.102700635 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174262243 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147759041 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143624603 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.175975827 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135859993 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162719432 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.16208731 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152442083 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154875016 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.118161375 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139960441 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.120642816 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13947283 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119008951 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.105698057 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123235017 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.087945364 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138120773 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124583513 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088513101 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178024331 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149094913 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130045611 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139272692 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103527805 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161118458 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.109692309 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156620245 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.157748696 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101107755 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.204671545 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172689605 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167011644 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096922275 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214631347 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075612887 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107427426 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.097618136 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150591969 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115835003 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089663318 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150583977 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161192019 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162042195 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157271414 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144483411 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156588906 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171025328 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.077407048 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.150783926 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165514329 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155263475 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.142355884 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119628276 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.132913742 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15720252 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110087492 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233931351 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147790847 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157416589 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188288221 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.13123379 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086830291 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13144367 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16463586 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1365094 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157704841 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128801207 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094658629 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142079543 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.114121901 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140275487 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164028423 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143269997 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17025477 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.103904276 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191243878 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08228164 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148200452 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139795873 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145940078 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06935677 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155227415 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182002982 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129090457 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151353241 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172880106 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113165323 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.130332148 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218730793 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17590217 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119739994 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112677114 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140265979 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145674678 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153857098 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157741565 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1419764 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169713722 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111235547 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.11866471 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094027208 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130549936 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133078609 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.092357013 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.129540017 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.155469794 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.120267695 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16851423 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140802653 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110844116 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152479811 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.13245429 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097909253 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13150418 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194177253 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15489189 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219677555 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102735872 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.158690108 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211984669 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080606419 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113598068 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.087441164 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158649081 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089476525 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19608302 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.1011815 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139029395 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159809693 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171234323 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121333087 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.07515408 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13820849 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154449978 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117455259 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133261875 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.139463809 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185347254 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128819138 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086556852 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1511639 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138021315 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101432083 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204170256 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.068073174 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101201098 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110393975 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087464494 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14569821 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212054092 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.09059294 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.162620228 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152842291 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119893192 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146052815 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132941927 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129894136 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119664898 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210315793 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164545399 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.086265546 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138230569 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154836368 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174391542 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14225693 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.120485401 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184512489 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173083751 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.177877502 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.123159338 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14864421 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120928425 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138317345 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162335082 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117545052 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184113249 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11608688 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178229685 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135717053 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125053962 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154474133 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.101697082 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122551906 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168800644 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154258765 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08904364 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133770221 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149331786 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158998992 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13708773 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.082279662 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159669851 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.107462907 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17109683 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209551662 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116096151 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133853262 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10071852 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116709342 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137739241 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111249371 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121188878 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.120140593 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208430395 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087981601 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170355927 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209378499 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149449099 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153903474 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097131756 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.673134148 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.112925439 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173125068 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135388027 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185499391 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130952253 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152437448 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111135022 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149221985 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175384817 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138963777 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.21200961 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17094635 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156327435 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114352584 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138455125 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142221218 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.097710797 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133208798 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147429645 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138867274 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.105338581 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.156767946 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148026067 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.115532376 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094224054 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177081181 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135960551 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163454761 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158929025 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120182987 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152440406 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164531423 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087322043 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.159159324 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215163727 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094740136 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132013822 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.114350991 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.10791768 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238580076 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078606136 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207913487 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154884881 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110886445 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146376372 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.127644882 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168617464 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140147131 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156889885 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126781233 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.139679442 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108360897 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119384129 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.083085499 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135705245 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146269859 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.128834326 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111110421 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.145126438 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172439013 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07785924 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12623381 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136489341 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169208918 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193300466 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.12304118 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089114547 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144191512 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131727274 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.154248105 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157032123 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.088951833 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117289606 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.089793213 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.143089693 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.099023423 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136003644 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108900964 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144258608 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213851967 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.090618536 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.261768187 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092829863 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135845223 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.076610091 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.112911808 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13179616 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098970544 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137926011 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131022142 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211212234 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.127861752 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.086474927 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129480923 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.079893708 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118160445 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146794318 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146014724 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159922205 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098823383 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.095587101 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112388552 seconds)
  done (took 69.375944388 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.202113303 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.190625707 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.148077853 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.20127551 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169231111 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270696131 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.213619316 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252176387 seconds)
  done (took 2.703527139 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.079635073 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.126172846 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107670379 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116590779 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.0730369 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.09949208 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.310466348 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.113098621 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.072739027 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094622555 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.153813069 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.075338675 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.629889939 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071592453 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.102246161 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.09381857 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.073743874 seconds)
  done (took 3.446780155 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.447536138 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.695523525 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.478188886 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078676349 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.135018829 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.115693994 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.80038144 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.176610243 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.098233268 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.467884408 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.743556813 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.145737874 seconds)
  done (took 18.439341637 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.085820139 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07873949 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.120930145 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.092285914 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.078059198 seconds)
  done (took 1.520021841 seconds)
done (took 114.336775165 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.091001071 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.381015289 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.058515249 seconds)
  done (took 1.534798322 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.094534759 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.091912951 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.119131074 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088053536 seconds)
  done (took 1.460796273 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.083151129 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080184831 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.117728175 seconds)
  done (took 1.343892975 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.303743897 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.140490837 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.122212426 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.091490599 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083118415 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.11141852 seconds)
  done (took 1.346258476 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.08259549 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079929586 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.107046416 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.081641679 seconds)
  done (took 1.40999548 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.085025305 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.057329251 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059557302 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.088563645 seconds)
  done (took 1.355480112 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.09850725 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084115573 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.113386262 seconds)
  done (took 1.355465482 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.116640306 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.123462441 seconds)
  done (took 1.304201414 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.091921603 seconds)
  done (took 1.152191353 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.104978809 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.154931578 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.171943976 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.14476348 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.180586295 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.144377219 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.093730982 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.123273778 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.111874771 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.095350473 seconds)
  done (took 2.392890019 seconds)
done (took 16.375716719 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.089591165 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.402721433 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.367474986 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12550885 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.676064855 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.362036995 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.015310074 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097592406 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.143670905 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072489974 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118142743 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.65545814 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.001316821 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.328976828 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.987671055 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.327854708 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653311615 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101928038 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073655324 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07310681 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.994889406 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072817125 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100589339 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073718746 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653089361 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.40605017 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073364575 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.356765352 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07376658 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075410264 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.388668723 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074014914 seconds)
  done (took 16.071239018 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080546185 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.151755834 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080208586 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089119081 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.105740326 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075330735 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.105447575 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.075193086 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15626923 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074164627 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089690712 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.102109085 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077245133 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.102424157 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093871208 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073341804 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.103157749 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073984283 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101056994 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074532568 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091383828 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101189692 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074901506 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074091426 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.102086299 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085597333 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.102070075 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073987817 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073529489 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.10450526 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077331399 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074708533 seconds)
  done (took 3.993058348 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.126585812 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.160448631 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080413338 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13761122 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120256337 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.105096687 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.178461079 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099311102 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.161326178 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072935005 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118728363 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07446851 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.135523291 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074537907 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092561595 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.102281998 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074629809 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101848158 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074079636 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073392088 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.121540963 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073379611 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.102259454 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074895225 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074208616 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.115835768 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074946711 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.101439397 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075153278 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075341832 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.105480182 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074661946 seconds)
  done (took 4.309722642 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.081921706 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080708951 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.117163266 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089201736 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.075320038 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.106929561 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078178476 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.103729974 seconds)
  done (took 1.807836275 seconds)
done (took 27.248580677 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.088940111 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07470966 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107237441 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08733235 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.078772439 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.112630209 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.072497375 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.1084644 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.081585033 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077851133 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.110504153 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073388792 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.076690115 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.102030917 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.080943119 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073504899 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.113332183 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.077156205 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.112879105 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08505138 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.075569253 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.110176702 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.082402047 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.112482719 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084984341 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083622636 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.115028737 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.079159437 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.102693915 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.076168335 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081466762 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.117533286 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073783957 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.112617408 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.074950947 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072799489 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.101728043 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.073665322 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084233504 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.109453827 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.076527723 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.108663478 seconds)
  done (took 4.869419394 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.097811917 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09945691 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.1216144 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.068222127 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.072077574 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.096266542 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.093484661 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.094497213 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.068195005 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092323754 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.089605965 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063840872 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.064989334 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.058564637 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.091808629 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.062354398 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065354073 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.06132727 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.092055476 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063668702 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.065338069 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.087607824 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.066156318 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064584992 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.061312132 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.096173768 seconds)
  done (took 3.133654549 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.085450538 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087595548 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.122880739 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1355426 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.142078658 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080580098 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.113379603 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092158461 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.118696332 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.073356183 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076288589 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.130930818 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09165836 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.108609581 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.07378224 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087758951 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.118066773 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.075155323 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.079267607 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124732215 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089758444 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.113206853 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095743043 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085230627 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.102142852 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075261066 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.106215129 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087901874 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.078551851 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.112297821 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.077557361 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.105719611 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.075576811 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084732541 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.106684652 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.075503128 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.122835244 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084132533 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08196214 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.104102285 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07707528 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.074585371 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.123869243 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.118003827 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.102029055 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.080091642 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.110297518 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.083482301 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.072842167 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.121475759 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083141174 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.073877645 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.105817645 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.073279464 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.073036618 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.116853808 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.075020535 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.105120705 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.083897348 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076799192 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.115810315 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.077313393 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.119208474 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.073982299 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080557462 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.102542405 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.074727574 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.072533351 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.126278605 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074895589 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.145116225 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.074270314 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.074602684 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.112178166 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080123461 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109913865 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.074588461 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088372523 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113732121 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.077650397 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.112876413 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.078362576 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.076566331 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.121209934 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07596001 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.075571281 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.103992502 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.080472303 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.105725567 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.075028311 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087059888 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.103528759 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.076683129 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.120081109 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.074058176 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07498483 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.109050122 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.078747648 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.072359735 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.116471769 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.078624195 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.103785012 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.083542228 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.073645274 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.106279589 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083403873 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078714283 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.10234544 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.077914152 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.109541187 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.074842558 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.075184867 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.106457935 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.076138217 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.082763019 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.10973851 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.078176542 seconds)
  done (took 11.982855843 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.214703545 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.198415382 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.077027671 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.189767122 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.094610179 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115874578 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.193056654 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.10539698 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.104765759 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.075090898 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.074409615 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.143387645 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106814573 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.146713839 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.113017557 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.074295712 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092666121 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.144894556 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.194398076 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.187218028 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093342918 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.113767349 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075994532 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07463967 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.10641572 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083658388 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.120530914 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.087155389 seconds)
  done (took 4.498332697 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.092086563 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.136919664 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.080750251 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094713207 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.127629348 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.07343066 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.108339694 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.076252335 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086191914 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.1153786 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.074489725 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.110468535 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.080883638 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.113627879 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074517064 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.083604668 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.113779136 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.075097585 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.106971842 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078830605 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079654722 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.117869844 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.078415674 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.102939318 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.081464652 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.07284665 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.101556015 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.091981959 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.103932748 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095882579 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.102716818 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.080683858 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083417904 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.105717046 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.073979731 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.076121191 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.106443005 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.076261892 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075768825 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.103484026 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.073760944 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063312893 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.10379449 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.087149483 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.110573876 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.065904357 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.079454951 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.109634676 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.079808749 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.071909907 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.106884865 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.076755592 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.106437932 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.081578969 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.078432807 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.109350566 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.078152684 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.070962094 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.110480525 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.077185062 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069685498 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.103265912 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.079218231 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.072607031 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.112360495 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078361522 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.102354242 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.076939803 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.078430023 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.109810206 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.076763236 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076557712 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.101814528 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.077139208 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.079094697 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.109171611 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.077787907 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.073597912 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.104055399 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.074416608 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.061427597 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.104193446 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059705243 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.078066894 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.103092068 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.07353829 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.076595126 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.109636602 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.08783866 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.105362587 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.080600559 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.105413712 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.07387625 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07789301 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.099124324 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07726761 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088723313 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.121444161 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073888712 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.102663977 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.087663773 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.079660511 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.103058565 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.062573678 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.080796246 seconds)
  done (took 10.465726927 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.101639712 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.100167747 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.10673304 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087886672 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.131541976 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.097496286 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.111570499 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081078981 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07545299 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.122786446 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074748772 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.083135351 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.108992762 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082642328 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.128046288 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082523866 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.076027833 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.116757805 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.082373424 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.140086735 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08776955 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.088811758 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.115162696 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.074526496 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078647986 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.1166713 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.100270535 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.115356203 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.083271364 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.118998235 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.085016885 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099621197 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.120587987 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.078388881 seconds)
  done (took 4.459790028 seconds)
done (took 40.475260797 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.179261859 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.406124591 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.152342185 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.10567857 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.18459273 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.177559593 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.168064557 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.168411262 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.215413211 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.158657859 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.421523299 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.85638054 seconds)
done (took 58.2902776 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.284069166 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.295080842 seconds)
    (2/2) benchmarking "String"...
    done (took 1.425641482 seconds)
  done (took 3.831943257 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.509996127 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.245806981 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.436889565 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.153180063 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.151326059 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.613937557 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.888610388 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.58286609 seconds)
  done (took 28.166656517 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.16157326 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.563251191 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.036060804 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.035661669 seconds)
  done (took 18.892386511 seconds)
done (took 60.780717369 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.145615691 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.154083591 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.161242074 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.138950039 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.267988757 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.187839841 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.707825015 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.208804576 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.152832707 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.138431664 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.154019737 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.156985912 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.175903913 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.347361192 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.161690837 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.156841686 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.209976211 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.811835969 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.596074456 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.162787474 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.171744785 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.173663286 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.162812784 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.15520606 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.216674954 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.162437248 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.152746189 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.166902399 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.866131518 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.156852112 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.174620736 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.346264081 seconds)
  done (took 189.198625661 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.159085907 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.300514266 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.386533038 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.192383098 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.444293878 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.359145741 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.27440674 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.673929947 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.176044307 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.187463809 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.37227108 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.15970512 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.477618075 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.144169609 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.166840312 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.262645494 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.374442462 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.468225927 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.175212029 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.400851387 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.180495879 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.509274665 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.448192815 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.32837672 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.201992571 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.238134425 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.179716061 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.155155228 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.346183585 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.287553177 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.203065383 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.156504034 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.813705607 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.015117019 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.178318564 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.182359775 seconds)
  done (took 148.676608452 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.449699607 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.159274176 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.159013422 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.157609435 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.193076035 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.158225666 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.772239851 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.771664706 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.679159349 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.515970406 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.220900301 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.553126928 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.158778486 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.258297443 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.167563606 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.155088094 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.174001712 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.186371533 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.159400073 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.158904174 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.774733194 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.173618726 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.157177639 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.16585285 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.158132713 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.194575169 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.554138034 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.146880467 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.157088983 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.192749505 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.557258768 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.207038516 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.155914002 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.549731442 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 15.479570377 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.161825335 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.275087825 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.158839391 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.195710739 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.156510166 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.437484713 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.156759944 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.159256394 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.163505232 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.830182979 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.161380156 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.775533775 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.160952827 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.172750414 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.159542532 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.160273111 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.391963608 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.815032874 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.160401447 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.161604848 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.165605841 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.161573197 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.1621871 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.195606478 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.426110043 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.258957818 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.161039494 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.162634406 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.165318744 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.19690834 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.157448351 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.294745047 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.157256646 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.221840592 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.219292031 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.372094449 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.776349623 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.161397783 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.260315937 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.281824937 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.157948979 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.160483297 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.16111968 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.162135836 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.272159298 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.157737584 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.616568015 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.163817448 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.159689404 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.224281458 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.25795701 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.15924454 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.561301054 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.163795311 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.160338921 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.972030935 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.258422886 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.159998382 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.162911145 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.162995966 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.616973781 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.160182999 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.41936286 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.782137087 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.164252114 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.548747829 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.163007613 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.629443307 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.748303192 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.825129103 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.161288399 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.274459905 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.163114096 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.164382202 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.161876913 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.192529917 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.164687693 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.226312595 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.159652717 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.565966574 seconds)
  done (took 344.809553881 seconds)
done (took 685.228587956 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.855627179 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.797169896 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.936250158 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.811166496 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.794512705 seconds)
  done (took 10.297301972 seconds)
done (took 11.39973877 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.360658243 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.356986701 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.224126348 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.362859584 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.192000982 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.383502258 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.338125303 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.184444197 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.270693264 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.246479227 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.271648017 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.215704841 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.191431422 seconds)
  done (took 17.702368815 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.490299989 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.495499516 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.227857997 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.485835705 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.20516039 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.488567292 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.373667358 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.380769461 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.374681959 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.177789821 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.179267187 seconds)
  done (took 15.986547654 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.519038856 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.488624398 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.233322336 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.491424165 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.206732567 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.501787808 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.374513133 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.384230658 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.374716177 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.17924544 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.178097372 seconds)
  done (took 16.037988252 seconds)
done (took 50.82960064 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.174967452 seconds)
  done (took 2.278722396 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.209238664 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.376208282 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.189940815 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.182261171 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.175723289 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.176549399 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.181690194 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.175784644 seconds)
  done (took 10.773783395 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.172974215 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.172021641 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.173158685 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.17127678 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.171823563 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.174161015 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.170759864 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.17430216 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.169792991 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.172438099 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.173004147 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.173920215 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.173698894 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.173970476 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.173941795 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.17120006 seconds)
  done (took 19.869799855 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.173825441 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.173240941 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.170872801 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.172152369 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.172160048 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.173990929 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.17471986 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.172132747 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.172676026 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.171604739 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.172602921 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.172592727 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.172813417 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.172501881 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.171492622 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.172238758 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.173467571 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.171793576 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.177380358 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.173487012 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.171021832 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.173295544 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.173862191 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.174003149 seconds)
  done (took 29.258504492 seconds)
done (took 63.283864988 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 6.177309208 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 6.171164722 seconds)
  done (took 13.454665468 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.17573459 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.175012291 seconds)
  done (took 3.459555863 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.176306998 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.175208136 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.174322324 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.176985221 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.174439077 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.176756321 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.175067807 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.174851683 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.175495645 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.17524929 seconds)
  done (took 12.862995694 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.1750664 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.174995469 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.174016215 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.174252768 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.17581303 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.171089678 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.175405648 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.175808635 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.17659625 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.174459497 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.178174753 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.172237728 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.176888055 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.176406271 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.176971078 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.174795909 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.172796092 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.175036148 seconds)
  done (took 22.259661308 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.174705792 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.175790887 seconds)
  done (took 3.459511905 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.173926962 seconds)
    (2/7) benchmarking "second"...
    done (took 1.173792741 seconds)
    (3/7) benchmarking "month"...
    done (took 1.175610716 seconds)
    (4/7) benchmarking "year"...
    done (took 1.175675383 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.176171806 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.17380288 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.175489217 seconds)
  done (took 9.333863031 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.177932167 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.367267387 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.493881692 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.75782911 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.17965279 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.179152853 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.056434082 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.18134258 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.187014043 seconds)
  done (took 13.687877391 seconds)
done (took 79.622884412 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.214008681 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.16776635 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.159000322 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.182891919 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.191160857 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.473914113 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.210797023 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.315950285 seconds)
done (took 37.023720723 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.185546051 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.161964831 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.167926504 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.183173145 seconds)
  done (took 11.623117795 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.156976593 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.175376021 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.161417611 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.232692367 seconds)
  done (took 17.836868478 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.284273076 seconds)
    (2/2) benchmarking "read"...
    done (took 1.506456332 seconds)
  done (took 4.898564658 seconds)
done (took 41.652554541 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.178860926 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.177152853 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.181083488 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.176275907 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.176807934 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.178383464 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.176561342 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.178146348 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.179970845 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.180678304 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.178852079 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.179054544 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.179496845 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.178952365 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.180007146 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.177646855 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.175130114 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.179212933 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.176890784 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.177782763 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.177945227 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.1809436 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.175745019 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.17789281 seconds)
  done (took 29.390137744 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.178852073 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.179020098 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.180674478 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.179487548 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.178046472 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.180340281 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.180908122 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.177887923 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.180406551 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.180115799 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.178806192 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.178245868 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.181407991 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.178655315 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.179630568 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.179059577 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.180402226 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.178825016 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.179660206 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.1778648 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.17985052 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.180611165 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.178169904 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.18023196 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.181749787 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.179028651 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.182995855 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.179569987 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.182395125 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.179275287 seconds)
  done (took 36.505206223 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.186625568 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.191550562 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.182448586 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.183847285 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.181708998 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.181691339 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.183017396 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.182476141 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.181350394 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.182146858 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.181949332 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.182986154 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.183162766 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.181716689 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.182891269 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.181820269 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.183930391 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.181051588 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.182130633 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.183999141 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.182471146 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.182595937 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.183947716 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.180710137 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.181333763 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.18197352 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.181371075 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.180613185 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.181703664 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.181832802 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.178323723 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.178717669 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.181726558 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.180588285 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.182848388 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.181205751 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.184674168 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.191537836 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.180521407 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.182186475 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.182762729 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.180235866 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.181756589 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.180815515 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.180603182 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.182167888 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.182705047 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.183602713 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.183395973 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.18301002 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.180021491 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.182934563 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.181816776 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.182436658 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.183455965 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.182689779 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.180305071 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.182939957 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.18175842 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.181680153 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.183464201 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.182987409 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.181165185 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.183485705 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.183246871 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.1829528 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.182228632 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.183630869 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.182825732 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.183964837 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.183041605 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.18300148 seconds)
  done (took 86.255973722 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.182181995 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.182477769 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.179090175 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.178608201 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.181010159 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.181616657 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.180958445 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.183090088 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.18249534 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.183601232 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.183192286 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.182279777 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.18301969 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.183120682 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.184233832 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.181622422 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.183523549 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.180911937 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.185116506 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.185488349 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.184816414 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.1833846 seconds)
  done (took 27.133327944 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.186626579 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.185030595 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.181799603 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.18433732 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.182304814 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.185732223 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.192024255 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.184605333 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.183569726 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.181508655 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.182767031 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.18513948 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.181575644 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.182737483 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.182931245 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.180990528 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.184697017 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.181751107 seconds)
  done (took 22.429076967 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.181319949 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.182619248 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.185915313 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.184188906 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.181647805 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.184317694 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.182932384 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.18721826 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.1855949 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.184354121 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.188151052 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.186163635 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.18550513 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.181772471 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.187060053 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.184440984 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.187422524 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.184599962 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.185096338 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.183174501 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.183987662 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.185279566 seconds)
  done (took 27.179596378 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.186509047 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.185415661 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.184036619 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.184156985 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.181812378 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.186263375 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.18582928 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.182374618 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.186917768 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.18785073 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.184521581 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.186718085 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.184276417 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.186893661 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.182914737 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.186051547 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.186932581 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.184005461 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.18732368 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.183086463 seconds)
  done (took 24.823755883 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.189283155 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.188051506 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.187254896 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.186534772 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.188359431 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.189299961 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.189768299 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.188572063 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.189541713 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.18958078 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.188814819 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.189889653 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.188946098 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.187371276 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.188094052 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.191226699 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.188130519 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.187186119 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.189475683 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.188947685 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.189715474 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.189466623 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.188713015 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.189491767 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.189933588 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.189939258 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.191679979 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.189568526 seconds)
  done (took 34.415109024 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.189584624 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.186812721 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.187059535 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.185924588 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.185570296 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.186545578 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.186893294 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.189216058 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.190894249 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.187979596 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.189190834 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.189044828 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.190712023 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.191618185 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.1890175 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.191039919 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.191491497 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.188585003 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.189519098 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.185786755 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.191255994 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.191713898 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.190770987 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.189290076 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.189048734 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.191099344 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.186338508 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.187494988 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.193010812 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.190471891 seconds)
  done (took 36.795629731 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.209425086 seconds)
    (2/2) benchmarking "in"...
    done (took 1.209589307 seconds)
  done (took 3.542185651 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.185176589 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.189790976 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.190739491 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.189768934 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.19476205 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.194826602 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.196007546 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.192880479 seconds)
  done (took 10.656847778 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.194604928 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.194298695 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.191504724 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.190870253 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.191768356 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.191568012 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.198306335 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.20799392 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.192179367 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.192057895 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.199588342 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.199022319 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.193087172 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.190755929 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.190582449 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.193160965 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.191810258 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.192107403 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.191795646 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.18949896 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.192335458 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.193105494 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.193795472 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.191792658 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.193616194 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.204814141 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.196131395 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.193430002 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.192598963 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.196961356 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.193493417 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.19015484 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.191952823 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.192736949 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.192666147 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.194500705 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.201127199 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.210849048 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.199973189 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.194334869 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.192805291 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.191363644 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.193681044 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.196993394 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.198031608 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.196486856 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.195676514 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.19243241 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.194263487 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.198184968 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.201897956 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.192149018 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.19086706 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.199265924 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.198181805 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.199770611 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.210422608 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.19781614 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.202770939 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.204094797 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.207091285 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.203923208 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.196274011 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.196570603 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.205407282 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.224587411 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.205229185 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.208877479 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.193269595 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.191593249 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.202466163 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.207442332 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.2059038 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.195744676 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.193524274 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.195296338 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.194637325 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.194957528 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.202757888 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.213214138 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.196975914 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.195124913 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.206593803 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.227177665 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.199071705 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.20081476 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.195381137 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.200368936 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.197838878 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.209114733 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.21073694 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.196923804 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.199852641 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.199314649 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.202905875 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.196885745 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.196404129 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.199699447 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.195310949 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.195197941 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.198485188 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.199275071 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.205789434 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.196816842 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.198049671 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.202972218 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.19875841 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.195219135 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.202933582 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.197774532 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.196513123 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.200838046 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.202557227 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.197161834 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.201725817 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.208946762 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.198350341 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.199225001 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.199565697 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.198430918 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.207152894 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.2300992 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.19992998 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.197627743 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.206224813 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.214974778 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.198380838 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.200636801 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.198124924 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.198944198 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.198130319 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.200877183 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.199371121 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.201114371 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.202476818 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.202874807 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.197433997 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.200129575 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.201951563 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.20088742 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.202233637 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.200685064 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.205094952 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.200953028 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.19892169 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.198489196 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.205550792 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.198250969 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.199867798 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.202164548 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.197128451 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.199452653 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.200216198 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.200016892 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.19997984 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.199084145 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.197208207 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.197923912 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.200088883 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.200658026 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.199979267 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.200683561 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.203495757 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.201248257 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.20431939 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.200921466 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.198288998 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.200083595 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.202634067 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.200641648 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.202004438 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.197753651 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.204640871 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.210506783 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.202844297 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.201152271 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.204617386 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.200419839 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.201516712 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.200682087 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.205040674 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.21143537 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.200164635 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.207854333 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.202158494 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.200670479 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.202674578 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.199780834 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.20194201 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.20202892 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.206134962 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.21195255 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.213754856 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.213883734 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.203873022 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.206025633 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.202897052 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.208411556 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.206424721 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.201452097 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.203456156 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.201415109 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.200313141 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.202072651 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.202472387 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.202625207 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.200027841 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.204152729 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.203212837 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.2020588 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.203366429 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.203110299 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.203519509 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.204265874 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.204715937 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.205289692 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.20325761 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.202742483 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.205272841 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.203446808 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.204058709 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.203337609 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.209499058 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.202804541 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.205094521 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.205745042 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.207943428 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.205006371 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.208674363 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.208971202 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.207974205 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.209793848 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.221501933 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.203017299 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.210300257 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.220967498 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.208662813 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.207883178 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.20545511 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.2045547 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.208107946 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.213335187 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.205160977 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.205419977 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.20653874 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.202382555 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.207036679 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.210070015 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.201657013 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.203357154 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.206828003 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.206367689 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.203022943 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.206079406 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.206323112 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.207250098 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.206465811 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.20513953 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.204598792 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.206739703 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.206138571 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.204012242 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.206203254 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.209254136 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.214997924 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.211003727 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.203082796 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.206025415 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.207554926 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.211559675 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.206102668 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.206558381 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.204546884 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.220044836 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.218375109 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.213170395 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.206415326 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.206996823 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.210993761 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.207663875 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.210452971 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.20865775 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.205560695 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.205627832 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.20716746 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.202594577 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.208544546 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.207277514 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.208696851 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.207103631 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.213447747 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.205867859 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.208728088 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.208369292 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.212774339 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.208649826 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.20968103 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.20737277 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.210222974 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.212646575 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.207345687 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.208216515 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.214463964 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.224832726 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.209359837 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.208937297 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.208550422 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.207698647 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.209533392 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.207967808 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.210420134 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.21540368 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.211191084 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.220057633 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.2110295 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.218464249 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.210977436 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.213588767 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.215950611 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.205018109 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.208152758 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.213140762 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.213088967 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.217439191 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.228569414 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.21114824 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.21602698 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.210425332 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.209962497 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.21085159 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.208911681 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.211068971 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.210294316 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.218694657 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.224777977 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.217950655 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.213350423 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.207625667 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.208376405 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.213211468 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.210754636 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.215117946 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.211680827 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.212049016 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.212928542 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.212563028 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.214067672 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.214162546 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.211983007 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.212169282 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.214206248 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.217843224 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.226914706 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.218783093 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.213323843 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.219604213 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.213319236 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.219057373 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.229516494 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.214521106 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.21147908 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.215855303 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.212265998 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.209860201 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.212255497 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.212240148 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.216152953 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.215646004 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.21363006 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.214965654 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.213230461 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.216154622 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.215720292 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.226608545 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.243879878 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.213700648 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.21863021 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.21115598 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.215446702 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.218164438 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.214491503 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.213569136 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.21899056 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.225652729 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.222793465 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.211605319 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.212939631 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.217406484 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.215123716 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.211883783 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.214168911 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.216162593 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.212058293 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.212757947 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.214485193 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.217300203 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.211582638 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.214165029 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.216026061 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.216459753 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.22195762 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.214391221 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.213220637 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.212841111 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.211824351 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.212978625 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.213931452 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.212295012 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.213274279 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.21365199 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.216075951 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.223351338 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.222706658 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.215353875 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.211345511 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.214344186 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.214311554 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.216004695 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.215985726 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.213783811 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.214883141 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.21609761 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.21484785 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.214894354 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.214899287 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.217915053 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.216166227 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.215338017 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.219984054 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.225080579 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.21571773 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.212042015 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.214913628 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.214746025 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.214120021 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.216908748 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.221640587 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.217201881 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.228044932 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.227290655 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.221662514 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.21386952 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.220374067 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.22423475 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.216532269 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.217875708 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.215500579 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.219048926 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.218288252 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.221585714 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.216975538 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.223098464 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.215522275 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.218053546 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.227695418 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.234276564 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.216496807 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.223623975 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.225482426 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.21952361 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.218550925 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.221591164 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.220301412 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.227161726 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.238340959 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.219193953 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.222772772 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.219062267 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.220038537 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.223657052 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.217584628 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.225480682 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.21436843 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.220598119 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.220983298 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.220603248 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.219332467 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.22134641 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.218118632 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.224607534 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.228173487 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.217795379 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.219260627 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.218978962 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.219302491 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.217539211 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.218262503 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.217961728 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.216015529 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.219075983 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.217649647 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.217620403 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.220656474 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.218585879 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.21991026 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.220660487 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.221698493 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.22003148 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.232578291 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.230447972 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.21628645 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.218683759 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.220613244 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.222905439 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.221236672 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.217204635 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.218537955 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.220813676 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.220139664 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.218891028 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.219291658 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.2227337 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.23631604 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.238571068 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.220804345 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.22086666 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.222049994 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.220454378 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.216378065 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.220638607 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.221332103 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.223378967 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.229718387 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.220987336 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.226886259 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239126721 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.22114603 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.226639085 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.224897243 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.229841148 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.221834345 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.22191047 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.221493502 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.225904835 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.240900255 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.221066115 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.23323969 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257697652 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.240336604 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.222784347 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.219375882 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.218209508 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.220757448 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.222818245 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.22319677 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.22221811 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.221538979 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.221792963 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.221682136 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.22873784 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.221755273 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.221017182 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.220411177 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.219492863 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.222467328 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.22128332 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.221229699 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.223037326 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.220462368 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.221257565 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.223528003 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.220817659 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.232379495 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.234738423 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.223901196 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.220814308 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.21962105 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.226326359 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.224070461 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.23483487 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.231678248 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.221458176 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.220163017 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.225493777 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.222294894 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.219380852 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.223339394 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.22179963 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.223888371 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.220691804 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.235232485 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.234067636 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.225243345 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.223309707 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.221474925 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.223179193 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.224298891 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.225091757 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.224655877 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.223218312 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.225445929 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.225700488 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.223554126 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.224148938 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.227573799 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.23385919 seconds)
  done (took 722.768552459 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.221992652 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220780072 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.221563896 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.223084518 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221263751 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22188678 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222426016 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.223551128 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.223713767 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.220105594 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.221640707 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222145533 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.224604088 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.222544453 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220998078 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.221828232 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222223252 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.223033848 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.224265726 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.225461956 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.22424262 seconds)
  done (took 26.825954091 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.224819906 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.225124077 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.227188515 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.228839268 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223158591 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.229390556 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.22695235 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225158565 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.225995272 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224385199 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.225532445 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226365657 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.225307388 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.223707461 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223973571 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226562117 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.227574794 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224402838 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.224410446 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.223694711 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.226904643 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.224323897 seconds)
  done (took 28.118335664 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.225815663 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.226048714 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.225450222 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.225434647 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.225502676 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.222784579 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.227967745 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.227751062 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.224323185 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.226055691 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.226218108 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.226410181 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.233558201 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.235105928 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.229390238 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.228303822 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.371281155 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.229036561 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.225972843 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.225215209 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.226163649 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.233209004 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.224517413 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.224217055 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.227965505 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.229918128 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.228106996 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.229267586 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.228847352 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.229288045 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.232810394 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.226480802 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.227479896 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.230834865 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.224727859 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.227984398 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.234683803 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.230137246 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.222868835 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.229149421 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.239151458 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.256031031 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.228142247 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.233666973 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.228383307 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.226202301 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.232694237 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.23900959 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.225055801 seconds)
  done (took 61.5242678 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.231569713 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.227864225 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.227824673 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.229769464 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.228557519 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.229055573 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.230089763 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.232881871 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.228556386 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.228852295 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.229019268 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.228130002 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.226213151 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.2301994 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.228841476 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.228651771 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.228283536 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.228231793 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.227226601 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.227200257 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.227567724 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.235141752 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.232112035 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.227522626 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.229814303 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.228355163 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.227420504 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.230564021 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.228098339 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.229480549 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.232272227 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.230649347 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.230696961 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.227524692 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.22837615 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.229618227 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.227752655 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.229369216 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.228909167 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.228923313 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.231384682 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.229936865 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.230141586 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.230795681 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.228530416 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.226399512 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.228521842 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.228431224 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.229149627 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.231222049 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.233083427 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.228667625 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.235031632 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.231554353 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.231922506 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.233027509 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.227788484 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.230484876 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.230743785 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.230722104 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.230856357 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.231919244 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.230606452 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.233121435 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.234216229 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.229692418 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.230899464 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.23375306 seconds)
  done (took 84.789188965 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.231141898 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.232200266 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.231200095 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232964962 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.231211268 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.230040155 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.231298266 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.231759943 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.23264309 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.234402243 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.231410886 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.234075878 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.231980018 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.232982142 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.233178442 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.231057322 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.230215058 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.231859249 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.231307512 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.2340426 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.232075459 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.233954672 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.233550735 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.231831838 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.234661921 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.23067997 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.234503342 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.232996883 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.234257749 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.233257891 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.236081967 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.233522258 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.233824347 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.232449518 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.232161082 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.233313248 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.23329597 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.233371642 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.234767548 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.2337907 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.232654056 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.232434314 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.234136765 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.235635984 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.232494093 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.233208711 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.234484743 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.234670152 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.233676317 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.233798574 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.234839841 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.233840965 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23475595 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.233880734 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.233341455 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.232313973 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234494544 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.234115362 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.234268855 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.23386791 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.23552907 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.235108692 seconds)
  done (took 77.622026195 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235191302 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.233179691 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.233397887 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.231670028 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.236142074 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.234518976 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.237160014 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.235962676 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.235474035 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.23642071 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236130062 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232712834 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231432566 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235622885 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.232915405 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232990334 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231539706 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.232799897 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235828345 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.233992035 seconds)
  done (took 25.846577105 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.233828528 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.234916927 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.232457379 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.233656345 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.234832379 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.233993756 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.237412804 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235667978 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234079528 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235995487 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.237009743 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.238466755 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233482296 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.232348391 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.237212809 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.233668786 seconds)
  done (took 20.924807403 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.2330876 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.235716832 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.236619244 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.23669571 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.233591251 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.233976308 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.237378014 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.23559552 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.235051684 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.239375481 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.236796055 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.235314242 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.237572892 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.235742668 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.235638662 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.238139779 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.235021398 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.23727556 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.23769326 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.236298521 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.235879082 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.235580662 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.240272171 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.238853857 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.235003727 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.237050799 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.236980136 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.235133708 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.237267022 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.238658046 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.237328139 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.23509998 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.239394004 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.238161368 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.239738806 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.237670605 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.238656802 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.240770212 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.239478667 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.239921415 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.237864609 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.23677837 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.238306312 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.241294441 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.236963016 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.238429255 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.23695589 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.236206406 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.237577941 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.239796399 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.240038393 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.238530063 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.239228715 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.23903752 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.241136407 seconds)
  done (took 69.225941976 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240296849 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.240667897 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.235916076 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.240516648 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.240167266 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.23845392 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.240720796 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.237344468 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.239304138 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.242121579 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.239016367 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.242262657 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239546313 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.24312781 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.239934281 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241456929 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.238248153 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.240351423 seconds)
  done (took 23.487423437 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.237888077 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.239121403 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.241507704 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.23996006 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.236932816 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.240327277 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239574418 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.240152086 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240313522 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.23965788 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236513466 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.240496064 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240984034 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.241084753 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.239690283 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24018809 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.243230226 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241132181 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.238142078 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239601685 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.242485115 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.242122185 seconds)
  done (took 28.449069686 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.239346978 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.241631521 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.259312991 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.288834577 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.278078365 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.240110456 seconds)
  done (took 8.716350099 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.242648873 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.243428834 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.239541292 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242470874 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243266798 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.240011961 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.24128273 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.240502568 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.24264636 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.241288693 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238705472 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.243172385 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242023593 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.241506992 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.243344928 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.24426252 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.239843311 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.242009148 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.240781936 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.241788585 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.242514388 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.244075324 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.240237093 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.242121789 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.24340407 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.240078313 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.245161531 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.242699478 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241487098 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243804185 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.245070819 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.244501488 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.243962162 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.240238314 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.245348049 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.241886872 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.237771119 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.24670916 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.245324827 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.242805418 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.245560439 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.245212166 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.24385035 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.239825966 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.246777026 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.243825702 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.243742368 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.24419818 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.243225287 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.245643906 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.245552517 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.242262501 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.248141529 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.245467791 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.247443966 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.248811701 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.244930287 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.241820722 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.246156586 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244596948 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244304192 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.245328784 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244443816 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243522444 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.245285468 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.243805556 seconds)
  done (took 83.230560854 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.244238286 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.24413997 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.243695296 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.245903477 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.242097961 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.243741283 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.245738475 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241544509 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.246275862 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244869626 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247245589 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.244566437 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.24504037 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.242654147 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.24400528 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.244929815 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.244192917 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.242431397 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.242229691 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.249229937 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.245808179 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244007545 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.245810446 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.244062593 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.244214792 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.249093772 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244082693 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243553391 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243385483 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244890857 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.244705962 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.245127338 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.245054412 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.245305451 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.245352816 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.246751833 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.24684101 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.246079065 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.244276176 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.247941246 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.245049827 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.247330022 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.246684359 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.247747897 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.245344752 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.246719551 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.245100441 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.247755853 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.246659401 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.246065357 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.247219404 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.247924302 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.248823919 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.246936065 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.248025754 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.248076637 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.248400094 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.24606812 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247847532 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250756586 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.246827455 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.246639175 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25014509 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.247757131 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.247069772 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.246068869 seconds)
  done (took 83.397149707 seconds)
done (took 1685.163575784 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.305459198 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.258638121 seconds)
  done (took 13.742016568 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.410165755 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.36458875 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.245186268 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.288885976 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.244604445 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.253840788 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.247301182 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.245106459 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.250407208 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.248924409 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.249120029 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.437499435 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.292371379 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.245147664 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.248049589 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.342917403 seconds)
  done (took 41.799697112 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.281018022 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.255109099 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.38214934 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.270558188 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.28113443 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.460751536 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.309892636 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.255272319 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.450772416 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.296882316 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.008003237 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.27663068 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.255731593 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.496273701 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.269921546 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.458818705 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.533755473 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.011377172 seconds)
  done (took 29.732715857 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.773969906 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.273607855 seconds)
  done (took 9.223832892 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.24872279 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.277668802 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.260302152 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.262024629 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.268485387 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.271267891 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.289352335 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.326235547 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.291461613 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.289561613 seconds)
  done (took 63.979129035 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.274601818 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.255854783 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.257639561 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.253366983 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.245790978 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.242151128 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.252502493 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.250300607 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.436320318 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.399957475 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.272085455 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.260832801 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.254524004 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.255766854 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.251846132 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.293372875 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.438480577 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.253948511 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.252494106 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.260844328 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.254898477 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.374256793 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.29854364 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.255103414 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.398084719 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.456389271 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.255512815 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.262354872 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.417246518 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.2539163 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.250068918 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.254945443 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.258547903 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.839474438 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.732570786 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.263400566 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.279644651 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.264153615 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.254073537 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.399124867 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.257294199 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.263948716 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.247849985 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.703394215 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.421228466 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.383785362 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.631045139 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.250127624 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.258308404 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.328381457 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.254479985 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.256055213 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.291173503 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.052418637 seconds)
  done (took 108.462976898 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.258044687 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.746368977 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.422627614 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.275801872 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.161036902 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.077698585 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.2444004 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.573786275 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.254666737 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.24678371 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.547206534 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.793855208 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.254277283 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.301668531 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.672158831 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.315287983 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.246758724 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.199526361 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.245568387 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.251904571 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.684041145 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.262321431 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.246685307 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.280168095 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.28711572 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.755397561 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.886686306 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.717946554 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.245825098 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.247057476 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.773766422 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.253599223 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.268917532 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.247510676 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.544523457 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.645740096 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.61952025 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.247898109 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.251281201 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.251672854 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.270178669 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.751064719 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.631412144 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.24595611 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.247185155 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.752002826 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.246982327 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.259369929 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.256997414 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.468104664 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.029375003 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.250149684 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.895715451 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.247193872 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.548532424 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.253790479 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.251056906 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.780984375 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.246738948 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.365600401 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.29644531 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.250629852 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.259058266 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.251892094 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.253769583 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.633033557 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.599754576 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.247601003 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.640714563 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.755474363 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.247742204 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.842619139 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.145283891 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.269102089 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.297018875 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.254151235 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.015117129 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.812255938 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.26600908 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.248477881 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.650787654 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.252290667 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.560761289 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.264240464 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.264544636 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.69719315 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.276282526 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.308257908 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.252979745 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.262055776 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.035806989 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.258484661 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.545006733 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.27645775 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.251223494 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.253000465 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.274402243 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.251779904 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.249529188 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.256554488 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.826217113 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.259257452 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.420774279 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.275054482 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.267349795 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.252958581 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.254995361 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.258701039 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.483650009 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.771707675 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.257740613 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.256743644 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.249409758 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.256176787 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.502064999 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.255735011 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.599620914 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.250760051 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.255280154 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.258975559 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.124652061 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.272177571 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.247927729 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.257075454 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.125282281 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.46770423 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.276086781 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.273276095 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.258302262 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.276914919 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.7769872 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.251326245 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.305496775 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.255276242 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.001925928 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.260904674 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.274966161 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.687119356 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.265058294 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.270103567 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.248470339 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.256059579 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.57250051 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.56310835 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.545934052 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.255968367 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.288033651 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.993040025 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.266758361 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.405742358 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.274811627 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.257642703 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.459128347 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.474776877 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.252475502 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.827506422 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.257393349 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.481126944 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.270373533 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.586089381 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.793467225 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.251165864 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.25426098 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.008540637 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.918250147 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.056211537 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.259693807 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.563262825 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.261724777 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.704396206 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.257404464 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.257341762 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.843796705 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.256897642 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.254799853 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.254656982 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.257491763 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.315791963 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.430511405 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.548704356 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.254501327 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.759788864 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.266601518 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.253236852 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.260560471 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.258463729 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.611931223 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.304812702 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.259560794 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.291831199 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.256263384 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.261547896 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.77197901 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.162353092 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.259399253 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.416846425 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.937184858 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.252016156 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.271214949 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.944597324 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.45707584 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.846998332 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.269272534 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.60885635 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.256013411 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.301505096 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.097280007 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.273466305 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.816391228 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.255164014 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.253895142 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.897356872 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.255266779 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.346321405 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.255799251 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.255170768 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.830677265 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.253837053 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.258139799 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.783033397 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.254724478 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.517294538 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.257795312 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.274760455 seconds)
  done (took 1096.378875862 seconds)
done (took 1364.494562366 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.25925368 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.25937446 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.246300413 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.261626505 seconds)
  done (took 26.216772059 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.273902842 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.264713057 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.2660368 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.266166586 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.265633614 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.267044431 seconds)
  done (took 8.798096093 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.578235548 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.262244717 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.259578403 seconds)
  done (took 19.294230528 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.515545648 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.666358308 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.673673522 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.748047155 seconds)
  done (took 10.795960588 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.26655334 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.266337857 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.266089654 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.270183402 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.272475044 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.269957133 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.267821241 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.270466637 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.272864951 seconds)
  done (took 12.613367575 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.724519673 seconds)
done (took 84.633817238 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.272374181 seconds)
    (2/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.941950899 seconds)
    (3/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.115377818 seconds)
    (4/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.862105778 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.262330676 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.681388624 seconds)
    (7/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.278644378 seconds)
    (8/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.860924402 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.531544591 seconds)
    (10/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.474305857 seconds)
    (11/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.927122368 seconds)
    (12/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.283408689 seconds)
    (13/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.269732422 seconds)
    (14/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.03895569 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.298216946 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.900116392 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.282430552 seconds)
    (18/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.327013224 seconds)
    (19/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.278220514 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.027610479 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.25876359 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.099853497 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.364796008 seconds)
    (24/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.985312012 seconds)
    (25/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.278425772 seconds)
    (26/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.287183671 seconds)
    (27/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.287548354 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.265415138 seconds)
    (29/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.261929817 seconds)
    (30/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.321455498 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.246390332 seconds)
    (32/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.599096076 seconds)
    (33/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.388861411 seconds)
    (34/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.342458098 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.309941712 seconds)
    (36/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.32209646 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.403478005 seconds)
    (38/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.3887737 seconds)
    (39/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.327235779 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.363838906 seconds)
    (41/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.267283395 seconds)
    (42/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.958931837 seconds)
    (43/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.246131223 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.556993762 seconds)
    (45/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.262213435 seconds)
    (46/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.272946429 seconds)
    (47/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.671437405 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.638970205 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.586439712 seconds)
    (50/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.026559134 seconds)
    (51/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.180982363 seconds)
    (52/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.850850755 seconds)
    (53/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.293077164 seconds)
    (54/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.466663029 seconds)
    (55/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.256226706 seconds)
    (56/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.281831992 seconds)
    (57/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.293451374 seconds)
    (58/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.292357447 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.982945707 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.372321397 seconds)
    (61/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.250715197 seconds)
    (62/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.349538604 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.518968901 seconds)
    (64/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.274491373 seconds)
    (65/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.1425162 seconds)
    (66/309) benchmarking ("sort", Int8, false)...
    done (took 4.327032214 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.166509731 seconds)
    (68/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.254191211 seconds)
    (69/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.607565845 seconds)
    (70/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.786115485 seconds)
    (71/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.602294291 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.321088177 seconds)
    (73/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.82985161 seconds)
    (74/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.970297144 seconds)
    (75/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.271048593 seconds)
    (76/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.463598939 seconds)
    (77/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.87775621 seconds)
    (78/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.270913661 seconds)
    (79/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.80369025 seconds)
    (80/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.329216291 seconds)
    (81/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.287404298 seconds)
    (82/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.28031819 seconds)
    (83/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.277529919 seconds)
    (84/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.817183891 seconds)
    (85/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.623883088 seconds)
    (86/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.015804512 seconds)
    (87/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.78594151 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.595325723 seconds)
    (89/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.30314198 seconds)
    (90/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.493250872 seconds)
    (91/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.291278718 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.702027808 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.281199116 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.264356639 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.285324814 seconds)
    (96/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.858832155 seconds)
    (97/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.463760187 seconds)
    (98/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.654802813 seconds)
    (99/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.788969256 seconds)
    (100/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.872409439 seconds)
    (101/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.368503917 seconds)
    (102/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.292005482 seconds)
    (103/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.614022536 seconds)
    (104/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.232731346 seconds)
    (105/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.287750665 seconds)
    (106/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.291420964 seconds)
    (107/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.764375654 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.263879187 seconds)
    (109/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.124846007 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.898965491 seconds)
    (111/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.392444893 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.238428411 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.476718567 seconds)
    (114/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.251813218 seconds)
    (115/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.856423599 seconds)
    (116/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.409165548 seconds)
    (117/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.610865662 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.357211523 seconds)
    (119/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.964596046 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.368835612 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.265272678 seconds)
    (122/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.268804506 seconds)
    (123/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.351263 seconds)
    (124/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.461031284 seconds)
    (125/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.376987526 seconds)
    (126/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.27523987 seconds)
    (127/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.250272886 seconds)
    (128/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.704234122 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 1.794148416 seconds)
    (130/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.321377225 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.2896851 seconds)
    (132/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.252892097 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.594071824 seconds)
    (134/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.284316709 seconds)
    (135/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.290752174 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.138854335 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.280667421 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.167090899 seconds)
    (139/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.351169083 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.52478065 seconds)
    (141/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.355417796 seconds)
    (142/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.350053716 seconds)
    (143/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.466415682 seconds)
    (144/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.328446434 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.269625236 seconds)
    (146/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.288906212 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.373403022 seconds)
    (148/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.292930295 seconds)
    (149/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.350288903 seconds)
    (150/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.393998197 seconds)
    (151/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.975469575 seconds)
    (152/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.865426221 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.262344827 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.163986666 seconds)
    (155/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.508351452 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.290632992 seconds)
    (157/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.050069476 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.964873696 seconds)
    (159/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.977384923 seconds)
    (160/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.944921453 seconds)
    (161/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.282099724 seconds)
    (162/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.346258271 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.13321645 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.293761933 seconds)
    (165/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.889854201 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.293726098 seconds)
    (167/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.797238524 seconds)
    (168/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.272698015 seconds)
    (169/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.249694579 seconds)
    (170/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.259531784 seconds)
    (171/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.267049432 seconds)
    (172/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.292351745 seconds)
    (173/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.612883444 seconds)
    (174/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.181664384 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.600426081 seconds)
    (176/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.264498126 seconds)
    (177/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.692303071 seconds)
    (178/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.397197751 seconds)
    (179/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.269336708 seconds)
    (180/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.397365845 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.238360333 seconds)
    (182/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.429044881 seconds)
    (183/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.271153561 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.997906542 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.062783613 seconds)
    (186/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.747822707 seconds)
    (187/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.282465275 seconds)
    (188/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.340122179 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.266972628 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.312420672 seconds)
    (191/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.280638193 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.15425757 seconds)
    (193/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.370706754 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.314053665 seconds)
    (195/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.35552113 seconds)
    (196/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.49287398 seconds)
    (197/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.92557104 seconds)
    (198/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.271363817 seconds)
    (199/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.954221453 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.326716156 seconds)
    (201/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.193106977 seconds)
    (202/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.463595101 seconds)
    (203/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.298982905 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.270568706 seconds)
    (205/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.26889303 seconds)
    (206/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.686875336 seconds)
    (207/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.873113365 seconds)
    (208/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.282819027 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.191931061 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.48887122 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.911665234 seconds)
    (212/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.271848607 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.750718917 seconds)
    (214/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.736004244 seconds)
    (215/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.69305432 seconds)
    (216/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.273042698 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.541171948 seconds)
    (218/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.996465837 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.29451853 seconds)
    (220/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.313147155 seconds)
    (221/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.006652143 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.136616165 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.306354644 seconds)
    (224/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.793699778 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.267419413 seconds)
    (226/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.2724528 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.291556601 seconds)
    (228/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.920256739 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.29372878 seconds)
    (230/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.271142771 seconds)
    (231/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.604354146 seconds)
    (232/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.448525747 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.318918801 seconds)
    (234/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.669738369 seconds)
    (235/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.200350794 seconds)
    (236/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.976762522 seconds)
    (237/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.714270004 seconds)
    (238/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.016772391 seconds)
    (239/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.811705344 seconds)
    (240/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.263224688 seconds)
    (241/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.071880832 seconds)
    (242/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.653015328 seconds)
    (243/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.954531363 seconds)
    (244/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.640721659 seconds)
    (245/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.734720948 seconds)
    (246/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.83464562 seconds)
    (247/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.37317491 seconds)
    (248/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.787688628 seconds)
    (249/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.276090209 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.516077623 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.326804048 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.19634629 seconds)
    (253/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.40882138 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.258848301 seconds)
    (255/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.34356587 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.348381574 seconds)
    (257/309) benchmarking ("sort", BigInt, false)...
    done (took 6.275112973 seconds)
    (258/309) benchmarking ("sort", Float32, false)...
    done (took 5.327671032 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.298112143 seconds)
    (260/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.625883521 seconds)
    (261/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.038583896 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.715006991 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.674279802 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.347274102 seconds)
    (265/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.4700995 seconds)
    (266/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.296752234 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.383715523 seconds)
    (268/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.177856659 seconds)
    (269/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.482037977 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.171106288 seconds)
    (271/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.072056429 seconds)
    (272/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.269612131 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.323956996 seconds)
    (274/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.912393643 seconds)
    (275/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.361945808 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.026140734 seconds)
    (277/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.379850513 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.663198566 seconds)
    (279/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.317330352 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.296763818 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.3612992 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.359539285 seconds)
    (283/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.694316374 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.386230077 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.272042985 seconds)
    (286/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.51643494 seconds)
    (287/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.298552272 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.353492452 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.104802917 seconds)
    (290/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.214173601 seconds)
    (291/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.488512577 seconds)
    (292/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.396523619 seconds)
    (293/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.39786342 seconds)
    (294/309) benchmarking ("sort", Float64, false)...
    done (took 5.6855276 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.728102577 seconds)
    (296/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.315793014 seconds)
    (297/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.035134962 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.31624216 seconds)
    (299/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.294712073 seconds)
    (300/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.207474489 seconds)
    (301/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.301379203 seconds)
    (302/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.302208177 seconds)
    (303/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.243967385 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.298245851 seconds)
    (305/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.081721598 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.710342162 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.348700067 seconds)
    (308/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.162395171 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.277370828 seconds)
  done (took 926.4943301 seconds)
done (took 927.687335821 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.312634532 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.305092617 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.289893841 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.310128695 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.401766171 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.317987709 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.302414508 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.292382456 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.33736564 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.341741136 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.285910051 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.316471005 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.290517893 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.289482325 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.290045044 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.303669024 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.448100105 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.28418779 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.304736645 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.300967932 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.306729309 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.290513904 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.338986146 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.317513943 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.294499292 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.292846034 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.292342859 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.309217726 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.400672816 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.296018607 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.294700221 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.299493355 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.449025357 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.28562538 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.285868965 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.309668356 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.300632256 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.298777905 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.292219368 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.321341223 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.906509596 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.285834492 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.289517214 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.294995153 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.292025321 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.2938822 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.293354153 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.298484465 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.303451943 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.304734712 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.899629884 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.301919988 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.294076435 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.294111355 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.304318443 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.290441378 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.297420385 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.306900721 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.310323132 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.30834836 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.439752943 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.291866716 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.29558988 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.308991108 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.299709153 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.940193909 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.287032335 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.299038476 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.914449909 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.29340714 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.943015647 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.294290431 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.294791289 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.306540596 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.321903148 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.456186624 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.284787063 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.294407015 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.30119316 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.290838029 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.304534762 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.305803914 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.298554051 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.296773544 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.305922904 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.322144974 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.30514899 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.293123391 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.302970537 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.313719975 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.301184327 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.304001335 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.297597337 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.288126395 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.305726029 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.298911155 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.295654347 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.297267192 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.299082197 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.305251341 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.916743295 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.305395301 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.293339214 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.291733889 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.295316222 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.306497324 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.912602455 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.291079192 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.317802559 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.344378921 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.297273359 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.445201895 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.293661105 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.310657697 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.305641554 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.298103988 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.293157611 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.444500769 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.906334333 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.304509163 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.297770962 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.290110447 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.312010004 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.297737074 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.29542207 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.458030567 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.293116918 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.3093612 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.416674189 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.306672068 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.324071649 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.293529627 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.297923663 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.323534085 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.311240073 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.327369875 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.300763272 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.310806468 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.311830508 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.293622358 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.304788556 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.308891759 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.301249316 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.303614071 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.292198259 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.328431531 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.311154261 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.306190566 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.316008291 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.417418333 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.293211132 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.444874759 seconds)
done (took 221.659924041 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.3520266 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.282600056 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.382310293 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.293894785 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.397075553 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.390651213 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.29189296 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.289131045 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.290590817 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.668625291 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.291748146 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.2894216 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.289614963 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.288057061 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.372417137 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.290484247 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.288458296 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.628646556 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.292569235 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.36268403 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.285244839 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.290661012 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.291919636 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.671808332 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.290247234 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.292792862 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.362726501 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.293441854 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.636174338 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.290558093 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.293332368 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.636432685 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.380323544 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.310170877 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.303323779 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.301582315 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.397441391 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.314032411 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.374811577 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.372548176 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.385024785 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.332880304 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.293374831 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.288812965 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.294398245 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.293507637 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.292896528 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.320306083 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.290671263 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.292523574 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.636105376 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.30207177 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.303044218 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.294500013 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.292785765 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.314004113 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.293430046 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.294047908 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.384333676 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.295078929 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.357213109 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.674195783 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.668867647 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.295957207 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.295150296 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.294079026 seconds)
  done (took 145.71968811 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.358511894 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.368395506 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.416749193 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.29622994 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.345195873 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.421027525 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.295534322 seconds)
  done (took 10.722740375 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.299029692 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.297356901 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.343649127 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.346143214 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.295444198 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.442684956 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.295762195 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.305009483 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.296781744 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.350367483 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.297201755 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.297025033 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.303942302 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.288822295 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.342231931 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.308128804 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.409613784 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.295760742 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.298028945 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.452685444 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.293697865 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.304965918 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.348955623 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.308161249 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.301860698 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.303262932 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.864639055 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.297026395 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.296287544 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.29821274 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.29710293 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.337421354 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.298492531 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.298579641 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.295598566 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.412714403 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.298374666 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.297225826 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.296824832 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.293576126 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.296630131 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.295454385 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.298994859 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.295787724 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.298212157 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.322571404 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.299524904 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.298186981 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.297467823 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.298824424 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.346008274 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.297667641 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.29582398 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.295853483 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.354193271 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.304834942 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.297700365 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.296218266 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.300656775 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.297593203 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.454152819 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.346278086 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.298927633 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.346615223 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.298454068 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.301029319 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.299386714 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.29946091 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.354478152 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.298263855 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.346360041 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.295808886 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.454951051 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.321482114 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.301610638 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.30127964 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.303247816 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.302847193 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.298298597 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.304195973 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.297042539 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.301525876 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.304902527 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.295241363 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.298262259 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.401942207 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.407755407 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.300147374 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.315175921 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.307391356 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.29544879 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.354630143 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.300264672 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.298627566 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.353450126 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.414264998 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.350932742 seconds)
  done (took 149.740958357 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.306594548 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.309460481 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.298453119 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.318712511 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.301255281 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.298488224 seconds)
  done (took 9.057381707 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.30304561 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.304898194 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.300938308 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.299810821 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.302117589 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.302932869 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.302364446 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.303494466 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.305550907 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.301559185 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.305288581 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.304270374 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.303995965 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.302739587 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.303310463 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.30238853 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.303235564 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.298947465 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.30215489 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.301454073 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.406285659 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.302264041 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.302210976 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.30385974 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.310900514 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.303398379 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.310955804 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.302008877 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.303609107 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.311019118 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.304955027 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.302416723 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.323700179 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.309209687 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.309837708 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.305089819 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.307496737 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.305938395 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.30218956 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.306030807 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.302789582 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.303240593 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.303326822 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.307220996 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.302677558 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.307109088 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.313050193 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.308388512 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.305582758 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.305756382 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.306240089 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.305730125 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.304956421 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.305807929 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.304964755 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.308698166 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.311481491 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.30433611 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.305726754 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.304697033 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.307653389 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.305755162 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.307497163 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.307961385 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.302457071 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.307679431 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.306437548 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.31149665 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.303754266 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.306930527 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.304314329 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.304504357 seconds)
  done (took 96.311089158 seconds)
done (took 412.763028886 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.568668129 seconds)
  done (took 7.796784456 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.819813934 seconds)
  done (took 8.051177453 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.603704566 seconds)
  done (took 25.840826796 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.394362701 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.374636518 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.31091221 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.293932381 seconds)
  done (took 26.60426373 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.77723837 seconds)
  done (took 8.005645461 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.29823569 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.294694925 seconds)
  done (took 13.824217054 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.604538754 seconds)
  done (took 7.831351723 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.505018137 seconds)
  done (took 7.743533326 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.304144107 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.31299031 seconds)
  done (took 13.864540969 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.281357587 seconds)
  done (took 7.512256892 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.164235884 seconds)
  done (took 9.397549704 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.308513301 seconds)
  done (took 7.542268458 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.361958416 seconds)
  done (took 7.589908636 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.581887084 seconds)
  done (took 10.81176302 seconds)
done (took 163.642164119 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.2958187 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.300068148 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.297144334 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.300760223 seconds)
  done (took 26.420756455 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.342429772 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.341692022 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.342090759 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.352613456 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.343554387 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.340161529 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.822273379 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.335234576 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.353248401 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.344519582 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.341592821 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.34206167 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.340102421 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.331243723 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.343538865 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.345012927 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.352983778 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.344580362 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.332648249 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.342303487 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.306760849 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.351500222 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.344241195 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.308953695 seconds)
  done (took 33.877725843 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.505552514 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.380543906 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.460720172 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.359755641 seconds)
  done (took 6.933664399 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.359437416 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.361961643 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.377788111 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.421546952 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.438023155 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.373014209 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.335977547 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.329023682 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.315347402 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.362179138 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.436405156 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.376410144 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.448672668 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.307825078 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.496749819 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.30926384 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.308366312 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.361621652 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.411809727 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.449461943 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.310303801 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.360072706 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.366302092 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.379261171 seconds)
  done (took 34.22845656 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.30561603 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.315709727 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.316902234 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.310521777 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.310151737 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.310413866 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.313548231 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.311184514 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.331207943 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.31120978 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.310723417 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.310665148 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.308730724 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.309679502 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.310504026 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.322698545 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.323496579 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.309745041 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.31140223 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.316756047 seconds)
  done (took 27.500599575 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.305229984 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.154816199 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.653314712 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.558766161 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.302028228 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.302829672 seconds)
  done (took 27.51046209 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.390512607 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.551611664 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.307584431 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.730057332 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.801854796 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.305112982 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.309118921 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.595637842 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.940877058 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.958843784 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.375155563 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.385600479 seconds)
  done (took 19.887345006 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.316133119 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.303336754 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.307183701 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.320381141 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.375575178 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.313111288 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.314774019 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.302963548 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.375955292 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.377715902 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.311781601 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.37610442 seconds)
  done (took 37.229195532 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392388653 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361508791 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.520920722 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.205965574 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30607449 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.517205367 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.221317234 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.768407351 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.312404466 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.581779105 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317500891 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392476921 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.56405927 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30880838 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.306065239 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.470053175 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.535676493 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887635698 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308487356 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.770804847 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335347194 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.319625246 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.966358423 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.337268253 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.517939863 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.170862245 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.569850021 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.690557058 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.643335816 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.321529453 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319147964 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.309764209 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582273298 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049671916 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406207325 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31802683 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.203864276 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.862692423 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.29829883 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.799265431 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.315932008 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.31347208 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320114449 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310029486 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.245081005 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.326110835 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781846561 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.316757823 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.021370792 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.310727196 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.320295508 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404688293 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.314797965 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.795754161 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.417348396 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.307217245 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.30881734 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316517704 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879467726 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.381408606 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320477879 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.246239496 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.809065985 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.865410365 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048724502 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.412071853 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.313464573 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.31364144 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246741486 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.858583376 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.324930047 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448236898 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.325953681 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.972047863 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105185302 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.325531128 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.242307263 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95871342 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.318864343 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.240703419 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.539775177 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311727257 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253657247 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.255030721 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.243818099 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.161699118 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3205625 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.865042128 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.318834843 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.772501253 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.322844976 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328260176 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334744059 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.537349882 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.195804849 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313749841 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.327807688 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44831839 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328313943 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.777147144 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247058323 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.313128689 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.567832017 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.524707373 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.313976322 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.477152236 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543583105 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330104654 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.3205384 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.314145776 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.318311882 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.985186254 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.325807235 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.394896345 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328579311 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.699640558 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196684092 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315157222 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.41171786 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.332670921 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590257114 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.224285783 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.795931322 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448064633 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.31918533 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.313100989 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.882212941 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.085980979 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.312806181 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.316306416 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.31529102 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.323225698 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.314510681 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275078628 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.308695392 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313093942 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.714442939 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.537600334 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.331539248 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590304011 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249098031 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451594413 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.409992016 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.532577174 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.666676125 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.308987357 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575006145 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330598428 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.321830554 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.325513137 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332635641 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411370001 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338272653 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.315640594 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.572392466 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.318759891 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.316748604 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.910753429 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.760263478 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317053453 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.316518877 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.236312543 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986087675 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288204687 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.31425847 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.209176245 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.330882486 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44459609 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.323490354 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.327777497 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.472853824 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.306379992 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.319133417 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.311318463 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.540426604 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.327125089 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.821457318 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395929639 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.539920468 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.005696008 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.332531994 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.248871858 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.026922557 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.009190137 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316215643 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.25269367 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.317560821 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326471626 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.325158578 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.989348001 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.992966192 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320851156 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.827846572 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.323315699 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.326476085 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.324726971 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317891728 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.413466195 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.412805099 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.326464989 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.329833861 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460005153 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.331478547 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.25132149 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.319815364 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.323167404 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.313403962 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.688474262 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353144102 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.823037616 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840389333 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.573564752 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.173845979 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.330242893 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.021202734 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.349205892 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.322248273 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.328875985 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3272968 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.337239993 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327184359 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.328746096 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.912583645 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.818670264 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878803844 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195610574 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95537746 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433439993 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.321479372 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.940782732 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.788804237 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253148819 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318768805 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543928965 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.789338079 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277529324 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.542728075 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.739121988 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.22261984 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.328775646 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.546213861 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421265193 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.321333259 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.333417631 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.531694715 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377122087 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.333344739 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.250553432 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.60156531 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575636326 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.316073392 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403354006 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789495187 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323570878 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.705798748 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.317199529 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.871438388 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520150142 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.680299021 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.031244731 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.330216492 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.339801286 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.830663125 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.319791239 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.32289252 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047237325 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.335915817 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.549190676 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.259219869 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.332299988 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.330972303 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.321512058 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.990372264 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.328039057 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.57730802 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.333810714 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254875657 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.336164615 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937709535 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.176672214 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.327223082 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321373617 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219384022 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.339166368 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.659507622 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.330720824 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.467349178 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326891204 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.254059712 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.258971219 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.01298635 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.33212465 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291849863 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919489333 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.767169655 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.458861474 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355949487 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170893988 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.582239236 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.337992285 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.005397849 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.550630182 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.295030096 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346955132 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.423169108 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333835727 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.313686304 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.942696314 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.560185645 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251357438 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.543401628 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.565145103 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.233062439 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.325240911 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.53688577 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.943891654 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.332470433 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.611476442 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.034737901 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.32409681 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193975732 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351453666 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.32805368 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324663746 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.820242642 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.332085801 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440692238 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.33466303 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.337261956 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.333455368 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525165352 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33895216 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327668678 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.338620942 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420373922 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.449290066 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.479124763 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.328755656 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013176897 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201311229 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.014227301 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.339190493 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.325445736 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323057588 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.258873348 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468970992 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323240654 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.599260419 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443668884 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.897968537 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347700992 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.340042828 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.332364759 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.537030097 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600799817 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.202357363 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336394851 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.963728768 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.945475152 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.337039513 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.538178026 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932022355 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00573716 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452661251 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.327133946 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.794116294 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603576885 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.993669892 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324358621 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.921705915 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.336959052 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.889048628 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.33359956 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337209897 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475776525 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.338567569 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076159476 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.336672754 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.482710225 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.101991125 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.865971895 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.587317705 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.983495137 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.340130948 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.021013411 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.156425304 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.592860464 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444872739 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.339033902 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.445343744 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473459806 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.327626393 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.951008073 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329216542 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180357487 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.03896717 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.339349151 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015455483 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596617448 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.325275909 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.328202187 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35240541 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.341736251 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.553279363 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.18801853 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.557680552 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.340105678 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.329957387 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.811495142 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.019988368 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.342710059 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263105111 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.32925037 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614563092 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.566627393 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349784828 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.777415626 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.040162902 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991557959 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.306588032 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349647268 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.336780067 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.153912814 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020215456 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.49042224 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923160258 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.331476801 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.327547793 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604735214 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.336866121 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.333754596 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608834541 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.333764153 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.331251273 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.34474438 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.020105235 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246672609 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.34591696 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.878924848 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.26758334 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.678550519 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.048611462 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267218432 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324163431 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.546713553 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.331456118 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450903045 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.336381615 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.345489047 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33056111 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.085947188 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.624582426 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.330634941 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.335435839 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.317083389 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.348616401 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335972873 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623123073 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332233223 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.005430021 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.683071408 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.58885415 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.344698236 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.315373515 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.336464906 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329463665 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.329142788 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.252882165 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.012524576 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011216163 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.344232573 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.343907665 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.337027055 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.548978934 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.544447018 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.350798322 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.347168601 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350377885 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.348101827 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.242212097 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.332450992 seconds)
  done (took 1609.399449222 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.370080124 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.368222863 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.359776948 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.418078764 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.395990848 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.343750942 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.375606632 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.40937088 seconds)
  done (took 52.302957157 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.334030439 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.489803161 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.364515197 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.331854805 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.340777497 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.346966222 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.875010045 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.331881211 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.335544241 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.344300582 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.334023705 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.325751455 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.079619897 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.343487592 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.343688395 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.328033588 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.335956974 seconds)
  done (took 65.456874121 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.341661802 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.391944833 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.401645626 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.335304235 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.291628006 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.337247543 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.206694429 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.420868728 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.331689172 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.529397826 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.003916226 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.360370924 seconds)
  done (took 81.214719252 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.340126361 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.342616882 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.341751564 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.342899635 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.341609232 seconds)
  done (took 7.964830229 seconds)
done (took 2031.154794076 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.663635645 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.181104752 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.104489872 seconds)
  done (took 5.546852698 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.484367608 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.53275972 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.700744079 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.675449232 seconds)
  done (took 7.655552421 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.613315021 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.720676273 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.531866868 seconds)
  done (took 6.128383927 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.012070781 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.344831339 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.465006636 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.334074661 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.333755287 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.33455909 seconds)
  done (took 20.269882214 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.339692878 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.342298507 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.340612754 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.34502617 seconds)
  done (took 6.633716513 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.319273573 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.049170027 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.321144635 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.339083784 seconds)
  done (took 18.29126416 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.086782687 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.098785013 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.08409588 seconds)
  done (took 7.532446628 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.338216166 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.182947046 seconds)
  done (took 9.784454712 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.659194345 seconds)
  done (took 2.921486808 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.474087691 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.673460467 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.569396774 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.486671502 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.597747747 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.068621859 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.368663153 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.845200061 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.478635054 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.024492245 seconds)
  done (took 30.852597768 seconds)
done (took 129.361144815 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.732034358 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.370045117 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.543651775 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.701324781 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.588814316 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.545986187 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.637570018 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.661830197 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.200980778 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.186310867 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.697173588 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.562881646 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.587442048 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.357903394 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.584036644 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.36613414 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.567414308 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.783946605 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.347957483 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.330737185 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.629256197 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.337050575 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.52660404 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.373534239 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.560987307 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.497945399 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.929704505 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.366828822 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.346813547 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.265305333 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.499539056 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.347011989 seconds)
  done (took 198.299300552 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.338004741 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.331370256 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.331388849 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.337740757 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.345384229 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.33840716 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.337071626 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.35074717 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.355376781 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.347917622 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.344298946 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.346524139 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.332252336 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.343902501 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.333852744 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.332295517 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.346130382 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.332202606 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.334207425 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.330075769 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.333656353 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.341371272 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.334369336 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.363744847 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.335553094 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.332838111 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.349671829 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.332860848 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.334411262 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.347963284 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.356274408 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.333662424 seconds)
  done (took 204.153148156 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.345215916 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.338906388 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.335137497 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.338202781 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.332331956 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.335713673 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.337601762 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.334811431 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.353067767 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.336888339 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.340270086 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.337008707 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.358908988 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.340671247 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.336722854 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.333596573 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.340885724 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.340537154 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.351144062 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.347179274 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.336976536 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.335784277 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.362315175 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.336270068 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.348404021 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.335544712 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.337693815 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.35344676 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.337021997 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.335549754 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.350826073 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.336106964 seconds)
  done (took 204.186071367 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.54612266 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.348983009 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.350991649 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.314690628 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.352928193 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.351240753 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.34912041 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.542502512 seconds)
  done (took 14.422103361 seconds)
done (took 622.322299316 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.849188607 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.534928442 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.566192837 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.369697001 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.226754833 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.365732121 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.370772548 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.562529033 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.330511591 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.564184589 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.735034369 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.361727659 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.88442449 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.36249843 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.649932705 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.473037113 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.310274438 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.424819787 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.711894203 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.979363012 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.652656887 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.965212147 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.555099174 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.314864494 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.885815006 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.965350893 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.212088258 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.309848206 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.363776612 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.720823561 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.227388568 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.481673001 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.439677303 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.419660882 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.478671885 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.461807643 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.454750206 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.415012271 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.572089201 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.730303839 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.984284374 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.130461111 seconds)
  done (took 94.644980395 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.337439835 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.338553081 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.336856115 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.339146059 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.338091178 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.337203112 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.33709498 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.337847605 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.339107514 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.337727305 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.337168056 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.343439713 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.335798635 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.341445812 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.338156153 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.340145618 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.338165068 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.342643209 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.337811704 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.340063469 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.339099653 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.338374702 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.337479036 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.339068404 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.339946605 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.340856907 seconds)
  done (took 36.079648291 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.350498439 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.62587639 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.80402547 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.354037181 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.353560013 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.357287292 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.447688443 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.354228456 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.358484606 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.355960627 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.544532964 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.349815841 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.395826813 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.855385217 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.357662357 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.355067379 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.356913253 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.355943505 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.645481141 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.364094044 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.447758763 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.356075524 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.451100825 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.366937381 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.357663081 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.353281382 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.358761354 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.92932168 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.358432686 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.546028607 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.297634385 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.44616044 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.889432071 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.820208018 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.293678892 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.356211804 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.357434786 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.545914303 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.353214884 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.354902281 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.446020385 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.352672406 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.825366597 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.027333887 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.366311752 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.356983442 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.951468417 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.539086381 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.656241486 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.36332015 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.848728224 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.356738583 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.357942291 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.356958924 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.659989484 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.365509367 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.355872023 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.978964752 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.375087179 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.452877249 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.356075042 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.359355345 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.64665495 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.352959444 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.635184392 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.352070564 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.364793738 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.357454339 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.828757263 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.355998306 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.059344833 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.372111796 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.357663413 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.544251316 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.63642454 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.992093503 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.363313583 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.65777677 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.904857628 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.448909188 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.364038114 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.922368802 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.456001264 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.362001874 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.358952196 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.359822023 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.357076358 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.421339777 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.452455084 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.984398307 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.053337287 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.008529595 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.471076054 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.37255032 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.360385155 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.995656546 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.378470445 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.357529562 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.838737575 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.064052241 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.373467402 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.369688613 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.045570393 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.378420814 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.453656905 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.363170034 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.855704109 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.35848651 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.42543264 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.359530763 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.3679022 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.363224781 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.454551318 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.363178775 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.359343663 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.037084939 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.574358876 seconds)
  done (took 180.842769872 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.353879968 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.345940182 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.360006642 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.347231956 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.364620322 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.358849696 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.350639808 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.353392336 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.358888047 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.352874593 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.353229849 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.355810977 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.354259929 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.352240488 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.377027571 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.360517604 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.967615604 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.355813499 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.354127778 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.347977025 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.19111365 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.355037614 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.351725603 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.347476481 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.355741561 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.35450835 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.356386175 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.353580906 seconds)
  done (took 152.669987636 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.362555219 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.06728377 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.362284619 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.522572212 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.383309692 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.361775097 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.522066869 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.432487036 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.365689903 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.35817344 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.363351028 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.741373199 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.361671918 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.009635118 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.589595807 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.525406491 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.011800723 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.364580905 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.360185075 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.360747164 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.52437778 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.371523243 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.743522193 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.071579071 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.362859893 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.049611852 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.345607315 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.362899721 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.362229178 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.035940055 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.356451278 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.747196519 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.457162146 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.436521199 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.075241899 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.975110026 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.008860454 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.539760564 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.36258497 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.360447724 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.36234313 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.350696182 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.076181427 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.367432889 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.363584286 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.0710088 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.382873702 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.366364075 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.372849223 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.362423809 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.435333908 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.437429387 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.749868202 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.082019807 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.458295495 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.38458742 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.524429823 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.777062141 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.361252011 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.016136911 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.35016074 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.08045052 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.367667703 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.351989231 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.363243992 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.370113469 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.546435996 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.526818222 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.974194343 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.359797539 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.972683339 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.543905446 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.362560725 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.365087255 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.363975583 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.046116666 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.971035152 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.542879194 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.525723217 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.597770871 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.350985346 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.362901237 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.354556173 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.458133895 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.363351644 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.053258844 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.970937815 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.360404936 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.36577219 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.366621509 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.36854874 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.577627662 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.040748649 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.453772907 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.967727512 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.73626645 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.718909852 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.362713917 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.436457686 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.365116916 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.731085682 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.362821038 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.434902328 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.843867453 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.721939103 seconds)
  done (took 166.278005275 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.6543715 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.757878205 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.467325501 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.495143686 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.014705949 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.977638862 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.734660706 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.493022575 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.488586638 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.639887958 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.745461118 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.456977587 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.582961791 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.452772715 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.132986238 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.441147955 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.472455143 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.503355749 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.480736871 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.508128478 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.042553123 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.679661614 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.569596622 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.525597131 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.474801955 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.240862179 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.968206626 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.980346716 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.573331432 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.888684314 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.949232727 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.592020377 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.424482735 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.103171198 seconds)
  done (took 67.799285961 seconds)
done (took 699.580355038 seconds)
SAVING RESULT...
DONE!
