cset: moving following pidspec: 17349
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.302997126 seconds)
loading group "string"... done (took 0.585477084 seconds)
loading group "linalg"... done (took 7.170201014 seconds)
loading group "parallel"... done (took 0.170598782 seconds)
loading group "find"... done (took 1.119048618 seconds)
loading group "tuple"... done (took 1.742624878 seconds)
loading group "dates"... done (took 1.214402074 seconds)
loading group "micro"... done (took 0.226527355 seconds)
loading group "io"... done (took 1.023494747 seconds)
loading group "scalar"... done (took 38.806619738 seconds)
loading group "sparse"... done (took 12.796608945 seconds)
loading group "broadcast"... done (took 0.987488037 seconds)
loading group "union"... done (took 13.254555406 seconds)
loading group "simd"... done (took 4.503589742 seconds)
loading group "random"... done (took 9.077593892 seconds)
loading group "problem"... done (took 1.962419658 seconds)
loading group "array"... done (took 21.579333756 seconds)
loading group "misc"... done (took 1.966427343 seconds)
loading group "sort"... done (took 3.261207817 seconds)
loading group "collection"... done (took 18.219415824 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.546580645 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144117956 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118378536 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.140961749 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.188616809 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13408497 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145277419 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08662151 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.120213128 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.16780329 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.14237994 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.479728799 seconds)
done (took 5.277723486 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.203702571 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087942247 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097974929 seconds)
  done (took 0.992326935 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067602442 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127878361 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.08254012 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068975186 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067436369 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082863276 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068300621 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067073479 seconds)
  done (took 1.377474677 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075746042 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069242696 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086530658 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069245971 seconds)
  done (took 1.111814855 seconds)
done (took 4.575494463 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.903469389 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.237048496 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189849812 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.453563288 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.149770647 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.190030292 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67053233 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.327674604 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.21185995 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102751239 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10645515 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.381540421 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108225954 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.669785502 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.08020938 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.108205934 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.159807033 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.425098756 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083190285 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083685776 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10553131 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14355969 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.10648038 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078590117 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.167485256 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071002366 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.149014039 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096804667 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069310295 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.246356012 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.191008469 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.68280279 seconds)
  done (took 10.599956538 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09913293 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.119567933 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070768654 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141807562 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.10266232 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087950769 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072608719 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085803943 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092311133 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.161291427 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116665093 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107416428 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.083964402 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071733199 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.103661947 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213751191 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.113084128 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.087138771 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089763226 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077875284 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123770127 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084617805 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.096892731 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080462525 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.154630398 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.19639556 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113192407 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112708515 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.07079979 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082502822 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133899633 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146209723 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.071504439 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084148791 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.142376216 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.112345692 seconds)
  done (took 4.728649758 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.069772404 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.16253551 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092863168 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.154621497 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.087312308 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110857468 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.085357517 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101567314 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.249239306 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.080068416 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.462793857 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130663045 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104113703 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069697558 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086301578 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069644799 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.530338966 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.14739311 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102483281 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104215449 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.090501091 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072393429 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.361027014 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069993402 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067815629 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086811875 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061643066 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146489322 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069406506 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.2204701 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.089174912 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.090042265 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119697797 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.186069028 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099942061 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124164792 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084086681 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068518585 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.171585323 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074619086 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.086220528 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.084039321 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.091085587 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1207837 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.105507641 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.086147807 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069664248 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.181907745 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.110687944 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06827671 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08312409 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.91240278 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.172620234 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.080740585 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067877696 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.28607139 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102289628 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068910005 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064703955 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.083444553 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.251205624 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.169305118 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069605949 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067265799 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084596144 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069407302 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.370849293 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084517892 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.718722097 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072998012 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077524204 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086492671 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068347655 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090334468 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073819212 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102139473 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068571039 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.069704242 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084848808 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067209453 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085570187 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086441201 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.204992602 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.087856772 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069279242 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066379351 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.08289931 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086149386 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114018888 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071407724 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.083268923 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115574494 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071305245 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068554734 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.120793628 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068257984 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103331655 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085308772 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114818484 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083853451 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.133603319 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.070164997 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.113371821 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073623624 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116354621 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.096010614 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06958933 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.155880748 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066209775 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083935057 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06855509 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06607104 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086587306 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069290185 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.09957755 seconds)
  done (took 21.187746705 seconds)
done (took 38.397341414 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.294862297 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094814731 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.095123545 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077374434 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.095310379 seconds)
  done (took 1.552506395 seconds)
done (took 2.412326614 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121483949 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120238128 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082043127 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097898465 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065196879 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.119818662 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116636772 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082293075 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118577834 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065822231 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114189816 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066351439 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064766486 seconds)
  done (took 2.130862144 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086469755 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087727921 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090644578 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083094849 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08165976 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084836435 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081693916 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107649622 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081676618 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09057363 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066283983 seconds)
  done (took 1.797019278 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085470794 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085166626 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088022689 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083061858 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081484258 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083364748 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082922188 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105915058 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083164325 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093000663 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066147043 seconds)
  done (took 1.794279815 seconds)
done (took 6.571399193 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081584914 seconds)
  done (took 0.93374934 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.714171012 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.685760748 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085534374 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.135838665 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.223897319 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.156500888 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.448386683 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.111459243 seconds)
  done (took 10.598447037 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092392189 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101912636 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07449324 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.088836521 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071518303 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.089987898 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074599107 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070433318 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.090268163 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07129052 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.09078917 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072515927 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.086412216 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072809542 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073149826 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.091077347 seconds)
  done (took 2.229276203 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095283504 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095316272 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.094478753 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078496486 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.092747987 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075235146 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.095281304 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077642141 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089952933 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075543892 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.094350478 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.0765465 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090907886 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068828401 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.093312157 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079534765 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.090350257 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07741578 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.0945715 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078162458 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.094730367 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068225128 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.091189829 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077420024 seconds)
  done (took 3.009401715 seconds)
done (took 17.627514163 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.13612239 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078284384 seconds)
  done (took 1.071222705 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084991746 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101112931 seconds)
  done (took 1.05154402 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086058889 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083888323 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091782924 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.098353133 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068410198 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.086087324 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.105916015 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069189218 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067063646 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.08620701 seconds)
  done (took 1.707734145 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071759643 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096253135 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073825337 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.100236882 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07598309 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084114739 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076096366 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087171811 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081324554 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082207247 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074339487 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.102784545 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073754937 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.104495363 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074673624 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.089118731 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.09002953 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071611433 seconds)
  done (took 2.37604402 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069192643 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068564203 seconds)
  done (took 1.005459789 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.071031162 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066129915 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085840357 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068884997 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.082767028 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065064816 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082776361 seconds)
  done (took 1.389241205 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.407182484 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11039712 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.262491485 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074433001 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.106933495 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.265790726 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.087128743 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073696957 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091079037 seconds)
  done (took 2.385452349 seconds)
done (took 11.84957236 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082250642 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088264577 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114492122 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.427762627 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.112196381 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068762046 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.144329529 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.211578616 seconds)
done (took 2.117835237 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.126901939 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.627118913 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.40950528 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.215345794 seconds)
  done (took 2.124258172 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.387642317 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.095043546 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076613843 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069685288 seconds)
  done (took 1.505249304 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069093151 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071655572 seconds)
  done (took 1.014631392 seconds)
done (took 5.643984047 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069690068 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068636288 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.082681147 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069573023 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.065550747 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.082821209 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069004004 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.106769778 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068968805 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.067723076 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.086787285 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068646572 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082937799 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067338853 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065803642 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085776542 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066610298 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065912479 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083693738 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066863376 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067776371 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.082605119 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065997844 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068760606 seconds)
  done (took 2.684860136 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088087423 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.086018763 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074948069 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090594391 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073590399 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.090265178 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075277904 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068103747 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.091518478 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071382156 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089815118 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072512143 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.087702344 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073987392 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087162457 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073806445 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090562028 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071658063 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069936849 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.090595876 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07355592 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086372199 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071928729 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090953 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072896041 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089873519 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.07100984 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.08591313 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074708831 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089250671 seconds)
  done (took 3.299728398 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074170659 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065716378 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083793858 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073743167 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065304294 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085633207 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066132623 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083248448 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068211876 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065951878 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084912096 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06672806 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065438961 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084881676 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066587098 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.0859883 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084031785 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066037099 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.083688706 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066624481 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068572511 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.083843393 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066338273 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.082717478 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067373073 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065425827 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.083508919 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067235281 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.0665439 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.084117046 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06948241 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069100191 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.084118098 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072445624 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.086815192 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067033361 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069870864 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082776688 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067152485 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065315086 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083760587 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066747303 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064562853 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.091160149 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065698363 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.085331157 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067030333 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066530528 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.084338001 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069630529 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.082437996 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067153824 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06817055 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.084809609 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070416998 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065500962 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.08471915 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065972175 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.083228357 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067531235 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065881659 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082729111 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06942017 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066489838 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.098611505 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073196641 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081878311 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069035076 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067169899 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085896136 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068682061 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079787063 seconds)
  done (took 6.235116948 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.12182563 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094866256 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086417905 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068689212 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081691611 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067923103 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069268758 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084283995 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068171773 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089333344 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066952892 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067599839 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086498229 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078327026 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083767238 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068950356 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088717199 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065375483 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066072745 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087683065 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067756389 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087302236 seconds)
  done (took 2.632645811 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.191864309 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090726896 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112325056 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095054993 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070440907 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09535534 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072398993 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091255458 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072798997 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090582515 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070858362 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090857279 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070420428 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089519924 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071017093 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088294875 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073704682 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087904972 seconds)
  done (took 2.507435281 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081477074 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06865489 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.110312471 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067822987 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.087384125 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071386334 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092036257 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077761183 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.089582723 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069452614 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.094740965 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071568613 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.088084972 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070031404 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071268609 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.086549716 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072207607 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086957291 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077794284 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091509852 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074144409 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095251832 seconds)
  done (took 2.679318803 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084805505 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070200499 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105894862 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088068821 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066709992 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066499523 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.09362664 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069009951 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09219067 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071593278 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067465342 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084834061 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073971914 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086874071 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07452847 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086678425 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071278304 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067844695 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088874272 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064874523 seconds)
  done (took 2.460652595 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090231973 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087574293 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071106572 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094984973 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070655464 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087167618 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079041225 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087033389 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070942972 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.112593947 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070611575 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087402792 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07870083 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092036566 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070186587 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095358628 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077181959 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09590601 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068964417 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088771282 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.217344172 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071342493 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094460107 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070870805 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069480489 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089367435 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069150684 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092940314 seconds)
  done (took 3.340580742 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070855472 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067558389 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08363163 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067150929 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066349862 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084033342 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067355123 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065820756 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086566117 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066408488 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068105472 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.086496481 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069235531 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085437555 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069881212 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069589387 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086014892 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067116815 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066153949 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084396555 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069149548 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067775998 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.087077584 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06683668 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083056897 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.070891428 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066321983 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083527928 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069462443 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066166827 seconds)
  done (took 3.097851447 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07993356 seconds)
    (2/2) benchmarking "in"...
    done (took 0.093733497 seconds)
  done (took 1.066226977 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.068515421 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083230619 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085450993 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072277499 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091669725 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070346457 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.09450909 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073326915 seconds)
  done (took 1.529076278 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086377377 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078805 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.089677383 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079507655 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.098257583 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084813754 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15815884 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08823586 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075309768 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084472442 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083232573 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067177069 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09340759 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068830745 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092654764 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075940707 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067110422 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.092657297 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071631292 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.085612596 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070654827 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097097978 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071988032 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064796931 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.088517524 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076902143 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097815569 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069728745 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090092423 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076323078 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073387848 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.082249174 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068596047 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086875704 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068171141 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.095383272 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084933196 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088223749 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079206005 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069701833 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097855734 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064079584 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091120932 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075575434 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09596575 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069923794 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069167687 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.083173943 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066849035 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088382199 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065282427 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068953963 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.081754789 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075873709 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.08961991 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079164929 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067528541 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089137272 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071722765 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090516376 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076277685 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087772565 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072907791 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068681613 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096673336 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073634594 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09597676 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065270984 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063073059 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.085111772 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077665184 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11005539 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074732322 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.087999619 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071106171 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066075521 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090876772 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069784578 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092969112 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07508122 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08785697 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075636163 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093100646 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069607576 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071087578 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.095323954 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067185615 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08881716 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066856174 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102292142 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068344325 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06597965 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085336954 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078953177 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089671243 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069411546 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065744396 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094201786 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063211138 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.087843911 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070782451 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068756069 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.097998254 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090906539 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075022859 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093911155 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077977922 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068611968 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089658005 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066013607 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087009108 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068661914 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075251442 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.081387653 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071901776 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086775635 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.070804299 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076771411 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085851139 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068973245 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094087984 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074991093 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067181792 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.084239506 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070899315 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086686492 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072479763 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093999951 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068556841 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064301582 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082731904 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072463966 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085832836 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.073291115 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073257623 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090253158 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063976422 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.085101926 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073892464 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094947033 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068956194 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068614593 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092692808 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069788162 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086488356 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075631 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087592367 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06949652 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073974586 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087871692 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064419621 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08925739 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071922648 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067214815 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090151602 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072136357 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089167737 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070595582 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06784211 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.092707195 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069765634 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08586663 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068733926 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067041751 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.097719439 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06994858 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.083291898 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06661559 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093649771 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067183703 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067719276 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086251123 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071500101 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087699998 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068005209 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068671397 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08907122 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079570489 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091748854 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070069873 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091749787 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080340494 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085430823 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072526201 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068477481 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087924208 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070513087 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094527309 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074653586 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09103083 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072655333 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065763973 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092357658 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076002683 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085633911 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067867277 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067910861 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090382322 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074106582 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.091219889 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.071222336 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06688263 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088361745 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072309982 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089822851 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069365363 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084739627 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075038381 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067564351 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.094915821 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070259492 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.097583563 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072226538 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.08260381 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072622354 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066076194 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093366387 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064382193 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084507647 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068892785 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070300474 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.086285155 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.0714703 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.080487962 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077039492 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075205283 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.087859836 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068212811 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086528142 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075196915 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069294295 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090725297 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072008612 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093235218 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079320747 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086677282 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073056453 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.077677607 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.088822555 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062781592 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091835168 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068410152 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067681029 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.086664112 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066860406 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090190563 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07736012 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093552694 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064028577 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070444428 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.086506755 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067849724 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081975415 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073492055 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070544662 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088695349 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075529242 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088308003 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070629484 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071994457 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.088310262 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069493527 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088262973 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07158116 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087541962 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072171814 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067581221 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090314964 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068028936 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084382735 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071238281 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.0689257 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087735023 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074208214 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085990858 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069637395 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07061996 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088113559 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068939854 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086847568 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069401171 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070904729 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088063255 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069204188 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088647033 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065098458 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074665485 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.088018253 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075444614 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086332066 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066889899 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073178902 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089663249 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073208491 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.088216641 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070416624 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087630455 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069737267 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070727585 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093969129 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066645958 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.097358862 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07631718 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086651649 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072544601 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069525429 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089358706 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068340197 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086108808 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071347546 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068420963 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086911528 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073533442 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088203451 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070525635 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069952673 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.089066009 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069012097 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087442185 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064838468 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068158509 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086812289 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069130462 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0959184 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070298603 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068217991 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.087335412 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069372205 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085999207 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066618206 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093169443 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078268418 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068856597 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094469479 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067944752 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089143994 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078652151 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.083926215 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068154253 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066393316 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.085439952 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076568674 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088075648 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078770616 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067935006 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087519155 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067186884 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087252875 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069574354 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063635554 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.085788489 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072762553 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067096615 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08796965 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.070070126 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.090874532 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07077356 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096239463 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069414716 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068404099 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.088396088 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066497574 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085636807 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068816958 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070981005 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.0882635 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066888146 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065674587 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.088184484 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069181954 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088383672 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069364051 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069679358 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094756972 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069102028 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090641124 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072649446 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.082143416 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073200586 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068857169 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.087324105 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068163858 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090540008 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073093684 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069923379 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.096774078 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068812248 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087859717 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069907947 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065990976 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.088357894 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068015474 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087586081 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068443415 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069278813 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09606471 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066698683 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089860848 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068912436 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085448851 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076942204 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068680717 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090616476 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076317 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.088526354 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07087645 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094404137 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073457498 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071074284 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089732814 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069756084 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092826769 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06819532 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092805046 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069652609 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069855312 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088966218 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067181639 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068007847 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.088376451 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068292014 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093139484 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070072384 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085337766 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068931949 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066928825 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088484237 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073301193 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094054846 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072033321 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070970188 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.083226955 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066940031 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087953405 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068313909 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069823104 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.090674015 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074712714 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08950553 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070059032 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067300514 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096818245 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073815789 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090904346 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06722735 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071201011 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.090150271 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07002966 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.088532285 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069472045 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087966291 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073597276 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069997831 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087697821 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075979012 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08997219 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071092438 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069952617 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.088755033 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069664827 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082366407 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071263689 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070213139 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092829246 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070380091 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087549581 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078809957 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065164612 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.088841858 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071891173 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087698075 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073132883 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082054308 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071087266 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069622854 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089606454 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064338404 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085971676 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068329352 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070792819 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086664066 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065027194 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096941262 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078711995 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070761805 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087040451 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068347282 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.082597749 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065377463 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06768799 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08876027 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.07083857 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097594901 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068841425 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067207969 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.08375413 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069020079 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090550829 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072169547 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066075205 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.084136749 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068479726 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089503978 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07527 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067413617 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.088303282 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072274654 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089540229 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068077474 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07157187 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.085391975 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071730186 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099793973 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069851673 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08739651 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07540914 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093238363 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071557426 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064179118 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08860121 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073024383 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086410071 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.07195713 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069621882 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.1032148 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070468877 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087181772 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068821685 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089128719 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069406032 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07643902 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089501268 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069626595 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091909755 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071701951 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094613643 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072429753 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075543388 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091169049 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072242649 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.087328325 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069724986 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066875429 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.087397645 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070694824 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.089076427 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074883444 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.095272299 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06917454 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097305454 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07924138 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071141272 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.085589549 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068666107 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086195005 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.066003867 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070783303 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.086875007 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.069089386 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066570616 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087677981 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069820304 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093844121 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070246113 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069580755 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.089214305 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063492773 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089701368 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071942983 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069120827 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.085295923 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069261059 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088840103 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073648308 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072187715 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086148263 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070599986 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.088389954 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070197838 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064401383 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094008053 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068394066 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090279139 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069291924 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068781119 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.089647199 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07211812 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09291003 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071513227 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089611597 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078300527 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070183027 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085859719 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06633838 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092317212 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068112968 seconds)
  done (took 47.756031127 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110322961 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085814209 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064600543 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083544546 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077724449 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085028787 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065077705 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064949859 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084923381 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068067299 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08333983 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065328186 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091932949 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089467823 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096336868 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06834232 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085064062 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065404364 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083039346 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066125172 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092284557 seconds)
  done (took 2.614552829 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.078789679 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.092242849 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076484853 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098658897 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070089197 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093626246 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074753585 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093581667 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097499609 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071892912 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.097991558 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074464099 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089283183 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070964327 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088044378 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075137843 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.098834809 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070479584 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.093170953 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076000598 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092901105 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076299926 seconds)
  done (took 2.78489186 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070462382 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068177515 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088907066 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064676136 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067805494 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.083242684 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071587171 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.092858926 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072434227 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066945562 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086868503 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067773703 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087856909 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.068137649 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067384203 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085447375 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.133905051 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072613433 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067060488 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.090231576 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064261147 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089182904 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065341033 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064791326 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.086832944 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072841573 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.08801264 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067420099 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067981349 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.086479169 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068480099 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083888219 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070607123 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067827142 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08655984 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067430431 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06768829 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.088251384 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06441533 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.084558341 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069928286 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064391439 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.088551477 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069767239 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06669498 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.085817716 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069094672 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086823369 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064130352 seconds)
  done (took 4.681747666 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088456521 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.13335836 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090197079 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090697332 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.105016931 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.096576716 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072263117 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113923527 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066178002 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087540797 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084381365 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.104541937 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088232535 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074068063 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.094084917 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069349352 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068589469 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087714369 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072083799 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08732998 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072671909 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094988534 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.102160472 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082898256 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092058053 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068090105 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086930927 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073818625 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.10189914 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073599164 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.092966944 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073973722 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.103270269 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069915636 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088728616 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070987692 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.104557559 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068558155 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090474916 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065915662 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.09057585 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072790655 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.094554428 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085126127 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088301532 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073059869 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088660576 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065734442 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.100472219 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.07088046 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.096183869 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.10253057 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073525894 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06852885 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093332742 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.102553911 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069507106 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065982726 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091488156 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.100499282 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067474667 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071130042 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.10277277 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088752135 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076980846 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102435986 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074345358 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092160395 seconds)
  done (took 6.89064638 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078982727 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094442999 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084743164 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103676817 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094608834 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075822904 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094218123 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076037989 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094722452 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08042537 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0957411 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11616739 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070760803 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097852992 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076177636 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095878673 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075724718 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095529429 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075795017 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096402294 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.09401843 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083850598 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095746029 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102038678 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106948467 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089925455 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075917469 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.095020284 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083650995 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094782588 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106342919 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075750161 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094113421 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083088426 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.106534321 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094165112 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068401318 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094535823 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075569059 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094514022 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071087478 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102573506 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07423324 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.090745733 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075196169 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094551123 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10319404 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086949019 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097693365 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099453856 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076416616 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103312904 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074158318 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095539934 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102575255 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.109844062 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103190687 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103471978 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076231433 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.103029532 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101891253 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089890618 seconds)
  done (took 6.571319233 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09148986 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097157214 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097720233 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065575778 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066506777 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092508807 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06693626 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085652377 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07923246 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09688197 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080792453 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092406574 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076165774 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100094981 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090985528 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076944021 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092007928 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072684477 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096300499 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072709661 seconds)
  done (took 2.644067362 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078752779 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105522358 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.07139786 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073735882 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.092425361 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074475121 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.092103555 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071917764 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0893947 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07315923 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097972874 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079628629 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088721848 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075568448 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098714197 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074227265 seconds)
  done (took 2.293291277 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081671851 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.099668976 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083714412 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089760278 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067692687 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.085977037 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069651083 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06504857 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085717148 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083207923 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08990353 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071327086 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.088654492 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068567968 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065235897 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092100216 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065004806 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085889011 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069064742 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102915524 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080617312 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086527439 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070580824 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06933548 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.089756206 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073998878 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.0895355 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066062552 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087649091 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069639229 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088670705 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.077384817 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08386241 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068940144 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066384168 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086117203 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06885684 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087807614 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07283714 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067839412 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.087198349 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068413513 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087952099 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070539294 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.0841616 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.071133241 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065121848 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.094615015 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067278833 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088657232 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069533076 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089144013 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070610767 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.079468817 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092275947 seconds)
  done (took 5.307858534 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083703203 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071607611 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084700958 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067260438 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091945795 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071706072 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071637616 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091391729 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069992042 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08647497 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07104115 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090738132 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072165855 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071777118 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090869927 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072236174 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083909502 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071760421 seconds)
  done (took 2.375175714 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075855798 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068834159 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.098178251 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068799898 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088022623 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0719566 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064435969 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088031129 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068023518 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087189069 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070195269 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.07065755 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08760201 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071967393 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087659684 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06986915 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071408282 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087651343 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068634509 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083083803 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072159081 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067239128 seconds)
  done (took 2.647992108 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075361994 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.094744656 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.164692651 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.110277139 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084221296 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.10233083 seconds)
  done (took 1.59273041 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093758521 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101068525 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070155664 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109294786 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077857767 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090053601 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071471517 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089317849 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080532942 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103615015 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070790691 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099306227 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098616161 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081767118 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096175513 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076502462 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091597445 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070652925 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089131865 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107956278 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072917443 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098722428 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072194679 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089913022 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07166023 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098723137 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079875892 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104204611 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089903783 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079592747 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096147504 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071059583 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099313192 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103623237 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0732929 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098534062 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071120046 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109008683 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075662497 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099002974 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070753055 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097428264 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097525445 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077278374 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098770711 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071091492 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095522645 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070252358 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091390177 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115168442 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076588813 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099436347 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095079752 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081059967 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099228496 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115271082 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08531309 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09945536 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094959553 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085985257 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098949148 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075205033 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099405381 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103555868 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077463457 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099402099 seconds)
  done (took 6.85594211 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084734829 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108140539 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07127934 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105166058 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098743968 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071663363 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090593069 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071849892 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089710772 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071593879 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13139231 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070692205 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100314501 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099222816 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07180856 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089781828 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071487329 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098833103 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070236228 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115888229 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09024339 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080242494 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099658955 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097827413 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084972728 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096652054 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070492526 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090911639 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071010637 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090718698 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075516457 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091849775 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09863692 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071119759 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098475469 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071503008 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090309755 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076650069 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090732569 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076844349 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099894628 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10854526 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071656815 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091506946 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085584181 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090725918 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071141098 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090673975 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071107518 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090856388 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084567452 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104436938 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104822396 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09872498 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072572347 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090394025 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071740362 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090588725 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072738854 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09664528 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080077046 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090898374 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115959091 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072228473 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090837689 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07979056 seconds)
  done (took 6.750800976 seconds)
done (took 134.174485596 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.204554472 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.187874755 seconds)
  done (took 1.354197214 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072496195 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097028345 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101013437 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129993712 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089906557 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101914336 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121244578 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081778441 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06831433 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089428477 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06893299 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089603123 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133884793 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068727758 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.089012498 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071025458 seconds)
  done (took 2.443997603 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105145342 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.198543457 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111704017 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067435633 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101820777 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080210026 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088414425 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079668966 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093999929 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068440038 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079611004 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097828533 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066636226 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098138161 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074016536 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.101035737 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067219265 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100555578 seconds)
  done (took 2.650861645 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.107177551 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145359598 seconds)
  done (took 1.224443678 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.203270748 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.125933837 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207702766 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.421498424 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.210086255 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.282183763 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.178756737 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.177172358 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.162793196 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.175072908 seconds)
  done (took 3.111284478 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101507886 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.173590411 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.315097261 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.140739496 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.089495144 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.119214175 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.140817459 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.10999421 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084613594 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.103927899 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082468735 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099817858 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.118760972 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078467003 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095860985 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080339482 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.123248736 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076527908 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098438517 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078445411 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.120222909 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068896743 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.096222702 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077306472 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.099102832 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081300056 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067868327 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.088279151 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077141538 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.097820816 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080844351 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115687136 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.100552305 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.133576084 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.083923996 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.153107637 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080506113 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.093221932 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079066661 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074653133 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.100298613 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.098439197 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.087464276 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098654136 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069142999 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078905994 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088605036 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068500188 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.10208908 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.080068276 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.1015662 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080349199 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.152471784 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.08094782 seconds)
  done (took 6.435178627 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.750983021 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111493229 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096108614 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.801851737 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08951558 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106696728 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.705461842 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119292628 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.210704599 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.758384712 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.090526341 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099367894 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.179044023 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.215196055 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.89470414 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.28601794 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.628705765 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10420719 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110137579 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.132925022 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138949611 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.174078309 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.147539139 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.408531117 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076482206 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093333891 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.137151447 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076341238 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160020271 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085706477 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094068796 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.154124171 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.224401963 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.155148795 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097154141 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071702357 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092030273 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.146924456 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.215876553 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.188583104 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.15772916 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069697928 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09141852 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140232245 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12902488 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068924186 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138147536 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.151132184 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168265477 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075697911 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096043384 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.140945775 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138948262 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.141375273 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101636454 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.259517203 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.287722953 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090671583 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101648001 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104414891 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.211265976 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104546823 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.197850403 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137063943 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.165958458 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09172564 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.730443447 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.146668998 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092533287 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075494267 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.1200204 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096051786 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.140726468 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.146158716 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.364149163 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.162513657 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074828271 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091123062 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.184015197 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083725069 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093385311 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141427127 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076005842 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121484446 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163002518 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.14551978 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.147512659 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.208091537 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.141945105 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.160225645 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075319514 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12421669 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.075441555 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210209168 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.170353814 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.139586699 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.209004629 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141424547 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.140814327 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.145385169 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097062391 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.150760005 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119391829 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081125458 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13749003 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.189025104 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.123455548 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082934618 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095349922 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.139947228 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.126885715 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085594685 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.160451397 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.148972897 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.431371943 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.145801216 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.089946314 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087343221 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139214053 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160953644 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077298235 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.235414436 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101901062 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.167834637 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120579993 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070287649 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120726133 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.140423891 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078063193 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12309031 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.159789909 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078326355 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.207876233 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.190610061 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078679521 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.213934658 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.161071599 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076472041 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.147873902 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121054422 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145234214 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099579178 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138942347 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076499594 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.745933301 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142824291 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120968818 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094911206 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.145865553 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092175382 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083047109 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.104890986 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06865933 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.766387403 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085401177 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102134279 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103707123 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076083443 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121788635 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13619853 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094232135 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.140205437 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.180339671 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09745096 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119167487 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.082477777 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159562783 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.077629236 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.104241115 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084635588 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104998574 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12259933 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074876123 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104658366 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147127718 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.140512785 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.191324316 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.551274146 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070842541 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.104130839 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.197271529 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071705313 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.258672427 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137740627 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.196002908 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140763647 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.08129553 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.285819589 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.14363493 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.165255976 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106223805 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151488917 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070707083 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.136785534 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.140785882 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092475093 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075202104 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.140158938 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.165409771 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142851704 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.919493417 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073348579 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.205426328 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068995564 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170645837 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077914692 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097430433 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.237584991 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093199947 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147690435 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142311045 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094977986 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084755166 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.818354261 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10598488 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.140004313 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096797155 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.171458909 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16240955 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.136969462 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139469238 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076298766 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.137745852 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.20990167 seconds)
  done (took 40.492969759 seconds)
done (took 58.682070674 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.260456541 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.179966246 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.243776949 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.146429419 seconds)
  done (took 1.897521759 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.152899321 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105129965 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120116768 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.08835313 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.105455686 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088959312 seconds)
  done (took 1.652095344 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.409783428 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.265795102 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.230841773 seconds)
  done (took 1.899923409 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.262935204 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.215431894 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.449408549 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.297954245 seconds)
  done (took 2.349197252 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.176518875 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116873861 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069340927 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.108919083 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.160925166 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.256417705 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.129083871 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.186982648 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.082229745 seconds)
  done (took 2.332014172 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197405083 seconds)
done (took 11.323400279 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.335136771 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.27045098 seconds)
    (3/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.101243426 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.15209631 seconds)
    (5/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.107730847 seconds)
    (6/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.219239454 seconds)
    (7/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074703961 seconds)
    (8/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.09488677 seconds)
    (9/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.215320858 seconds)
    (10/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.131738395 seconds)
    (11/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.197235045 seconds)
    (12/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.202703787 seconds)
    (13/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.115071905 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.08556404 seconds)
    (15/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.204739138 seconds)
    (16/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.246102175 seconds)
    (17/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.078870351 seconds)
    (18/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.098364723 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080736409 seconds)
    (20/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125558626 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089449746 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.099301857 seconds)
    (23/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074533525 seconds)
    (24/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.262393475 seconds)
    (25/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.269002928 seconds)
    (26/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.099826322 seconds)
    (27/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.08687861 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.175344732 seconds)
    (29/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.078252347 seconds)
    (30/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.277688925 seconds)
    (31/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.10049473 seconds)
    (32/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.080776687 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.128415828 seconds)
    (34/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074986433 seconds)
    (35/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.138595495 seconds)
    (36/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.263862936 seconds)
    (37/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.247341995 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075196089 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.111998565 seconds)
    (40/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.065293159 seconds)
    (41/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.053886613 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.118941938 seconds)
    (43/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093134661 seconds)
    (44/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.242387873 seconds)
    (45/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096931813 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.097182539 seconds)
    (47/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.17390773 seconds)
    (48/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.131947728 seconds)
    (49/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065537197 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.09158697 seconds)
    (51/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.122692612 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068349558 seconds)
    (53/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.166779946 seconds)
    (54/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.102440599 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.271523427 seconds)
    (56/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.081206202 seconds)
    (57/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.129438347 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074955453 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.119364293 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.096555868 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.091645361 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.115123058 seconds)
    (63/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068322046 seconds)
    (64/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076984442 seconds)
    (65/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.214182145 seconds)
    (66/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.258258784 seconds)
    (67/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.255627974 seconds)
    (68/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.098876893 seconds)
    (69/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.09176488 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070597071 seconds)
    (71/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075230751 seconds)
    (72/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.097788436 seconds)
    (73/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.054105936 seconds)
    (74/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.171442354 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.096760436 seconds)
    (76/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.10678656 seconds)
    (77/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137446209 seconds)
    (78/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.126126541 seconds)
    (79/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053118435 seconds)
    (80/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.100759183 seconds)
    (81/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.158877382 seconds)
    (82/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.103034156 seconds)
    (83/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112548266 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.187221524 seconds)
    (85/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.05475361 seconds)
    (86/309) benchmarking ("sort", BigInt, false)...
    done (took 0.212255265 seconds)
    (87/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076080985 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.093583706 seconds)
    (89/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077210556 seconds)
    (90/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.262763298 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114895494 seconds)
    (92/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.224742181 seconds)
    (93/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.101769463 seconds)
    (94/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.114899207 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.152108756 seconds)
    (96/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.098767672 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.092495172 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.110735316 seconds)
    (99/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.091782771 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.191715174 seconds)
    (101/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.075430381 seconds)
    (102/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063139123 seconds)
    (103/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.197505414 seconds)
    (104/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.246074309 seconds)
    (105/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090451903 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.076779926 seconds)
    (107/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.054713592 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.099548224 seconds)
    (109/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.08484708 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068453791 seconds)
    (111/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.053842653 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.098780668 seconds)
    (113/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.06876651 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.192346669 seconds)
    (115/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.250878954 seconds)
    (116/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054943446 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.171521056 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.123554264 seconds)
    (119/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.103658802 seconds)
    (120/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074793881 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.123012295 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.146840368 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091520526 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.093507977 seconds)
    (125/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.115475082 seconds)
    (126/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.054159428 seconds)
    (127/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069355704 seconds)
    (128/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078422698 seconds)
    (129/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.079432074 seconds)
    (130/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.163620022 seconds)
    (131/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071555666 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.158521802 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.098878337 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093785794 seconds)
    (135/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.090067108 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076756074 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.168171971 seconds)
    (138/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.218858128 seconds)
    (139/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.077270054 seconds)
    (140/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.076174397 seconds)
    (141/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.066755151 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.095966388 seconds)
    (143/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076338915 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.096642341 seconds)
    (145/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.05613711 seconds)
    (146/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.054133806 seconds)
    (147/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069755652 seconds)
    (148/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.264587112 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.123009909 seconds)
    (150/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.070560075 seconds)
    (151/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.095241654 seconds)
    (152/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.078336049 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.097362689 seconds)
    (154/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.222481871 seconds)
    (155/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.078782804 seconds)
    (156/309) benchmarking ("sort", Float64, false)...
    done (took 0.129064401 seconds)
    (157/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.138572008 seconds)
    (158/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.243221494 seconds)
    (159/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.056032662 seconds)
    (160/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.242247414 seconds)
    (161/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.055046095 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.138139291 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067951016 seconds)
    (164/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.196418423 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076388912 seconds)
    (166/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.102227199 seconds)
    (167/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.077870772 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067919559 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.129365948 seconds)
    (170/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07914974 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.100016934 seconds)
    (172/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083078024 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.078146877 seconds)
    (174/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084491321 seconds)
    (175/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114327364 seconds)
    (176/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.055485453 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092872915 seconds)
    (178/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.078097356 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.115216271 seconds)
    (180/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.135106738 seconds)
    (181/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082856997 seconds)
    (182/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.076573733 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.145498708 seconds)
    (184/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.161228778 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089985476 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.120147742 seconds)
    (187/309) benchmarking ("sort", Int8, false)...
    done (took 0.372672504 seconds)
    (188/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.054526916 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.090100116 seconds)
    (190/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.21882714 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.112734104 seconds)
    (192/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076962315 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096577096 seconds)
    (194/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077168755 seconds)
    (195/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.074075795 seconds)
    (196/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.089526339 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07790822 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.078245856 seconds)
    (199/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.075936357 seconds)
    (200/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.070458944 seconds)
    (201/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.09990147 seconds)
    (202/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.242366921 seconds)
    (203/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.095506687 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06866283 seconds)
    (205/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071235721 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.138090595 seconds)
    (207/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062837146 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.137538602 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06733211 seconds)
    (210/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.089984171 seconds)
    (211/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.11078868 seconds)
    (212/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.108107958 seconds)
    (213/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.054908653 seconds)
    (214/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120236588 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.091069151 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.14232749 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.09969906 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076153049 seconds)
    (219/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.085593198 seconds)
    (220/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054514057 seconds)
    (221/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.05439008 seconds)
    (222/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.099127767 seconds)
    (223/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076882056 seconds)
    (224/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053703614 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.094895864 seconds)
    (226/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054641025 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.172273875 seconds)
    (228/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.071516353 seconds)
    (229/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074214488 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.129546007 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.06722477 seconds)
    (232/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.096577367 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068751232 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090237883 seconds)
    (235/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.23944679 seconds)
    (236/309) benchmarking ("sort", Float32, false)...
    done (took 0.151726095 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141233845 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.090897626 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067783462 seconds)
    (240/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.053021586 seconds)
    (241/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.078174643 seconds)
    (242/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074382387 seconds)
    (243/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.054374871 seconds)
    (244/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.09617386 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067815176 seconds)
    (246/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073105834 seconds)
    (247/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.090573154 seconds)
    (248/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069828604 seconds)
    (249/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.073880348 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068967406 seconds)
    (251/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090202951 seconds)
    (252/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.248594561 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.200814465 seconds)
    (254/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053287707 seconds)
    (255/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.076398552 seconds)
    (256/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.069653698 seconds)
    (257/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07114898 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.098730381 seconds)
    (259/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.082826634 seconds)
    (260/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.054404742 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.090667922 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090742406 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.098444332 seconds)
    (264/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.056838123 seconds)
    (265/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.053705749 seconds)
    (266/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.07564369 seconds)
    (267/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.057344863 seconds)
    (268/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.054179108 seconds)
    (269/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.053849444 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.090722023 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068946755 seconds)
    (272/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066578583 seconds)
    (273/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.076307176 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067669224 seconds)
    (275/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.069479605 seconds)
    (276/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.077760574 seconds)
    (277/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053824198 seconds)
    (278/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063205296 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.077806875 seconds)
    (280/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055822079 seconds)
    (281/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.193160172 seconds)
    (282/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.05505259 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074978519 seconds)
    (284/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.201373389 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.092233583 seconds)
    (286/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081333863 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066372688 seconds)
    (288/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.092437925 seconds)
    (289/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.053869044 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074525757 seconds)
    (291/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.101212324 seconds)
    (292/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.092125153 seconds)
    (293/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.075903105 seconds)
    (294/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069215607 seconds)
    (295/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.052925123 seconds)
    (296/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.104261378 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073605469 seconds)
    (298/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069275168 seconds)
    (299/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.091515691 seconds)
    (300/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.06249828 seconds)
    (301/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.054476362 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.119662915 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073732609 seconds)
    (304/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.075975786 seconds)
    (305/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093117194 seconds)
    (306/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070961059 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.092647994 seconds)
    (308/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.055215216 seconds)
    (309/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.090822867 seconds)
  done (took 35.495165857 seconds)
done (took 36.502865375 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085797111 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115218229 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077892937 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116433068 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08317677 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102347586 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076102326 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079578472 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.10667396 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084371141 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.104700294 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05587581 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099559029 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077031141 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099877299 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093197254 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102578341 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074935448 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075638442 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.090348354 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075320932 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.090048954 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070798563 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056549236 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.10225459 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075757383 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074107939 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.099663812 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067471044 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089697452 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07198675 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074479267 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.090175196 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080588797 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096002237 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076206658 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076603632 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.101406273 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069449215 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089046743 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076089173 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067314778 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096492676 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07589797 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073029167 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.096181431 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076213534 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.104992799 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093154109 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092752809 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075956645 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100069592 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.0799179 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074206895 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.095189478 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075936894 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09485504 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095128205 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098745663 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071143885 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074977203 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.099344853 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074738319 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074837268 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.100397967 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077456168 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.101430882 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07460524 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.099063758 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074745375 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067130494 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.099220531 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071779432 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067153741 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.100748708 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078467903 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.089361954 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074630767 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074018804 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09686904 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068064164 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068814823 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.093308787 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074274236 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091342614 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057788193 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071944833 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.096089584 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068689167 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075885596 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096549636 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075082966 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06984277 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.102734134 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068587826 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095882602 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068266899 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067433483 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.092893423 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072694763 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066373974 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092488343 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076924228 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090867115 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076216595 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081416013 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090949904 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074284823 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067213325 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.090836347 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083754498 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100612191 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068128248 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091803377 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068812973 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07534334 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089147697 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068915653 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067226421 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089960723 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075033708 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066959386 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092599127 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075229647 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103284132 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.071000206 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071721023 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092802125 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06848318 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073486642 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.090860428 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06839522 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06960409 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.088558963 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069947897 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089701318 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076474549 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069840597 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098802578 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069803033 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075642951 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.096252776 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074245104 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095665319 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068842066 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061091039 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091922535 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070622624 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069470273 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.090421779 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070482741 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067092442 seconds)
done (took 13.567844401 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071005246 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.170501635 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.127445547 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098218102 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111971162 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068699698 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.101638071 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105392403 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.093385595 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.128001315 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092787084 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.108808108 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11643441 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.090049033 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068793336 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071759392 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.092947175 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.090046683 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.126615116 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086893979 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.141138924 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.090268849 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121772644 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093355594 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113842693 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105211466 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.091690045 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07306682 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070933536 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.119225027 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109753998 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073004791 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069052743 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125035338 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.119172015 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087943246 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090417033 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08740065 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089863713 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069483235 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.116329379 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.102634639 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107007995 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08334911 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.095772005 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071012884 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.09157948 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.089356486 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.115285199 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082401709 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.113697658 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135998432 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070502626 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.108147185 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067309889 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.112812974 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.104548273 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.073427876 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068906763 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092797668 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068878652 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071269058 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.114127405 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.117305036 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072562308 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106445848 seconds)
  done (took 7.468856803 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089468611 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.11802339 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08675816 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108424401 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068434308 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068152265 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091566741 seconds)
  done (took 1.695763457 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072031436 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090594201 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114875399 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090626965 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.111570643 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08902525 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102747656 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069723445 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109374165 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070396621 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089873221 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.130560941 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069656897 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099564157 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092335346 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.092867598 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09237615 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092285666 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072691064 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114591832 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073439967 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.088807501 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.095484875 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069412911 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106979734 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069972715 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139435765 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073793233 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069842269 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.096335299 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067691314 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.141093849 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105861749 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080919174 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06930933 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.107113857 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084213545 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090006394 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086915083 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096248584 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084832377 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069849388 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093829023 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068575771 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07301061 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.103494008 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071091187 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092888839 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07261086 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089071956 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092912815 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083687195 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.091757976 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073891385 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069984778 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098385404 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079880939 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.092086988 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090304514 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070145974 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.10914724 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085299567 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.108157245 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085959799 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094796054 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084171786 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.107310883 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072968625 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070003135 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.09587993 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08600941 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.090249258 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071785891 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07948371 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.095247287 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092035545 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.115648505 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071279461 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101804286 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070082592 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069647711 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092392486 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092713659 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095460064 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070543571 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073379147 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095481508 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068024173 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067735898 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.096412713 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068072196 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069719038 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.096732568 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06982962 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09394101 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08661551 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069395387 seconds)
  done (took 9.573370435 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072290399 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070013118 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094691543 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071451459 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070295627 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093356316 seconds)
  done (took 1.548191309 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.101254283 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.095095707 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084722876 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097044061 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10873398 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.106807555 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085212574 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107431243 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087772769 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105731427 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084884325 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107820201 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090108396 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.098771004 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083904171 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097714368 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085187418 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102182674 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082478194 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09742291 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091011523 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.097748331 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077427788 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.0839772 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.097161649 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075153802 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10268811 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081909446 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104533235 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.084851211 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.09883724 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073227651 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096681567 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085104636 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107860571 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073697518 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097820717 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07488434 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101926438 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074493177 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.107574717 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076828641 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.079924728 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097506416 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.106393812 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076665122 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073201366 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103209153 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08322024 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.097451293 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074197642 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.098270551 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073531428 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.09658968 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075903486 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106517437 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075188581 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.107316132 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076870012 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073513807 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.096502228 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07279578 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.107723254 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072583239 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.107106167 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073975205 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096615415 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076990242 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098164324 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075791661 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073519354 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.096022026 seconds)
  done (took 7.572126446 seconds)
done (took 28.917339172 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.649629031 seconds)
  done (took 1.71976136 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.768821813 seconds)
  done (took 1.843860555 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.31341275 seconds)
  done (took 15.389108799 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.612654014 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.759958538 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.810506738 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136539608 seconds)
  done (took 3.39279675 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.880533907 seconds)
  done (took 1.976999712 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239740014 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224820078 seconds)
  done (took 1.543005598 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.755756926 seconds)
  done (took 1.840610307 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.336830028 seconds)
  done (took 2.413184774 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.32650943 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185310628 seconds)
  done (took 1.598795792 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.533718948 seconds)
  done (took 1.619012071 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.007342115 seconds)
  done (took 8.098477741 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.23227194 seconds)
  done (took 1.332825388 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.273639827 seconds)
  done (took 1.362718891 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.076851293 seconds)
  done (took 4.168706491 seconds)
done (took 49.37817845 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082566104 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082874075 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10705673 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081090246 seconds)
  done (took 1.441431835 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081039893 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075155249 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10340905 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074748324 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.103455122 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076634141 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100212121 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081446974 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074327321 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.100232302 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075568392 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097858755 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079269825 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099029474 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073949655 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077389102 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.102379525 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07559804 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101383062 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076443241 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072234626 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100977611 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077636972 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.098398403 seconds)
  done (took 3.17750833 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081175642 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073910399 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099772573 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074529398 seconds)
  done (took 1.424027068 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081442809 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.116331553 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.09213725 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078721256 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.119072533 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111735579 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073665576 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072102661 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.099166828 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079359575 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.09225039 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101163081 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113864339 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079448462 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104139972 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069697279 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070197698 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.113035661 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079002823 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103909062 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07302727 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078371718 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.094598359 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092191445 seconds)
  done (took 3.290534623 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.082953307 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104815939 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.10542293 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090661107 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.118628637 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067060465 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.102907397 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092366651 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.152048578 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067071351 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096602173 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068034629 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.097765508 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069325193 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078126334 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.136404433 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.114347908 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.095583026 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098808569 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.092495053 seconds)
  done (took 3.036769062 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079052252 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071213356 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091065555 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.072009294 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078202427 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.099522113 seconds)
  done (took 1.591058871 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07266008 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068621289 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092380472 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.07013961 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073561463 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092483413 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069006101 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068297212 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093323319 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069748612 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06803363 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092034654 seconds)
  done (took 2.030186996 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.438439506 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070778772 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.093960241 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069780745 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072498662 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.0918042 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08314031 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069410431 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117954131 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068390093 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092757987 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.07146754 seconds)
  done (took 2.445515856 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266246021 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079566999 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32463182 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16856519 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141475858 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156592047 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106657322 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14094532 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198105509 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139467262 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201453076 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227167432 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135012282 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169604455 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116811839 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.10811413 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212237611 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220984474 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107370712 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226079907 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207010308 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15645485 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181132642 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129424238 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136481775 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152505906 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073910783 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107952717 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232798556 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162173511 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202101101 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13899891 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099827942 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232078311 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225112326 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196448175 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163799625 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087961721 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.156114167 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167549934 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257918044 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114902978 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196669374 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135087123 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10728963 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174564891 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146854994 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.147930613 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.138786624 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115674721 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17697205 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241010768 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.165665271 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113880941 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13719781 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143069807 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145547736 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105322776 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240818472 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217345535 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158975236 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097295857 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099396967 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212365511 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1608351 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142884591 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.15490695 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120586082 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169118136 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212603906 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147870046 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175363911 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.183293977 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091423168 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149308319 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195585724 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15820866 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205843651 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178392163 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077881038 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154982024 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131216176 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084574147 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.171193373 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077727928 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235274996 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127165685 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.140657227 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13976099 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112652391 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137344285 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223561402 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20241729 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10649406 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.093254871 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131170088 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.150745371 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179967224 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115218309 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110698233 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173185429 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082759682 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167037338 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.102710803 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153434788 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080029257 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178034435 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164493113 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079251004 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153048888 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130695954 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.12930558 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165410708 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219480416 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092767653 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110752788 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200243022 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180326369 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.109208974 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202377737 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190362731 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.128956202 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132238768 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202800147 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242542815 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094732544 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223530973 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136114082 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086791425 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.11486517 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156154364 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141990518 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150683313 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085414599 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.177424217 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203844802 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.102495258 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097972281 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192195641 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085568968 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109404571 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140786899 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128660386 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098746654 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.128590238 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135996279 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169537819 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15402981 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136036364 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153591825 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127479667 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226309298 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116226698 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.107604994 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131909828 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.09642019 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.166326827 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190475271 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107800642 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224915078 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.156952018 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131484789 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149331872 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085987208 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169949819 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106403648 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073414548 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199262437 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138927866 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113595912 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.210092695 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13160306 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.156937477 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.153390892 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164854557 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161208664 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.185910537 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109685062 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.1154594 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141443747 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15606899 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.099556256 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.099089805 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.110942946 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132086776 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099478972 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111113753 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17214057 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181879471 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100952451 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141504793 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12624777 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179935254 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.104964934 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160972783 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.148187348 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122287046 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.188444965 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216555183 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165503502 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127718985 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175182912 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.098198375 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077520204 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.119132224 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158210721 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110146181 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087559103 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146061328 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205393532 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158934601 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169466791 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139631855 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151465245 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187275899 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.098974606 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119518002 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206043953 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155661177 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.158397112 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094899929 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.127673748 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175427666 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137537348 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243952494 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145729043 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152833719 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209597929 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.131107232 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083714059 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13242321 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168054293 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135139508 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208193797 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127393026 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092509812 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138608844 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.108618004 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132807689 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158213229 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15012654 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164255588 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.14513971 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187501343 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081157414 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149069465 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152057403 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152168862 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.091210274 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149985977 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195306841 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12349592 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146779739 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211593285 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082074222 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.153570577 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236849436 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200036382 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08925189 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138333315 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150199862 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159345288 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148844076 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170072799 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139202802 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190910871 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114270869 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113277598 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114645923 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10145715 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135158375 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.123223556 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.141141491 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.147318656 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.122890738 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162997358 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14126442 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139214771 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149593342 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100840102 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.119239674 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125840998 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209944073 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151451363 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233881729 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.130659345 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.20758207 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201806344 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103973054 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08109064 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.109034856 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170830858 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112606606 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164902254 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.123353152 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109092363 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157109761 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201218868 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097447029 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.096796688 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139124082 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167623412 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140619761 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126819042 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.110420163 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222733282 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.132341913 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082005579 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155068059 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134184345 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131238154 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237163502 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064690908 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125590016 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07911462 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108884105 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160660458 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188631465 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.112133701 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.155412986 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151807168 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151791067 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160776669 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131051762 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099755382 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142692094 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206661897 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160252785 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.116571397 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116518864 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185760093 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19009331 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134956086 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123791805 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232824149 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187841976 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.223113694 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.116958783 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145751208 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145017014 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11513133 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198426068 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110886787 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201578062 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111460036 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167824574 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134495687 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122053747 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15992646 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.141036958 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091029844 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207738619 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15003254 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109460915 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083171303 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147018677 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152945754 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136502643 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.102413011 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171934345 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073966435 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194642348 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20311052 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110496193 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135062601 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09914722 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111303468 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140686456 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132222369 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088753289 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.148223774 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237163366 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.119201155 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185830256 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199778048 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144408649 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168353619 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1295482 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664863106 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080763143 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214498629 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148219101 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238502702 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1267214 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149873918 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140300106 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155500345 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176334763 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135029046 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.206904849 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163644229 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.151000724 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108151139 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132494875 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141831979 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.09516296 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136230329 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145180237 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145897145 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.12953549 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.151203974 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156661123 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.110670647 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098470072 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218611531 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147962388 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173944187 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197872479 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088346934 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149705119 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199001008 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083324724 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.151110919 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216669804 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13848025 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127986075 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083663803 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135663479 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232086077 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075800783 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22258829 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154190971 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139937993 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144620169 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148662267 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190491598 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138496961 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156822493 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124345849 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.142341615 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147911426 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08855961 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.105716301 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135258879 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14332486 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.103433258 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132008035 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.145529954 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18921659 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.098074629 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100573046 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133083178 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175445223 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237771204 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.117960439 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085598056 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149193704 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167700858 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.145110412 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157581388 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084949849 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112241828 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084932896 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.140288748 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.140559801 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145471289 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106982337 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140836367 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227906422 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.112878464 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226909203 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125582481 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137711905 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071599966 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109314615 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123891571 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101790506 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137409859 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127073748 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233062303 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.100913562 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.119649035 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121239778 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076658369 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110951722 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162279172 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140647353 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152851107 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126863152 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066974176 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138965056 seconds)
  done (took 72.093440099 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.136409866 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.108621817 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.121742069 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.17731784 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149697324 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241078227 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.185098618 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.227674237 seconds)
  done (took 2.52432907 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071778617 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.120451136 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103028545 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116811433 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093002574 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070990846 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.298965842 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.110688812 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069015803 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.117932445 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.119506395 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095324021 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.473639893 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06759858 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095377755 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.088919539 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070557421 seconds)
  done (took 3.354416509 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.43463716 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.609726586 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.458083348 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075897071 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.796400486 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.110738191 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.186010539 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.163514925 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094837188 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.419666951 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.724921359 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.154260417 seconds)
  done (took 17.410079702 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078504049 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070181777 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110536588 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085505558 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.098878259 seconds)
  done (took 1.62421734 seconds)
done (took 116.531698386 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083311657 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.349746806 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055066874 seconds)
  done (took 1.619726513 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085845288 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085708931 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.113136282 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084045636 seconds)
  done (took 1.557470587 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077605647 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078195961 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.11265424 seconds)
  done (took 1.45364588 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.281862023 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165247767 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092042841 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086981697 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080070194 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105250938 seconds)
  done (took 1.46041015 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07571139 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076718208 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100666863 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078886191 seconds)
  done (took 1.514480692 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079517883 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054520635 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056272652 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083903913 seconds)
  done (took 1.461392442 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093586694 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.10575849 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083998134 seconds)
  done (took 1.467348286 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110419575 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.112558747 seconds)
  done (took 1.411009786 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08474755 seconds)
  done (took 1.267398588 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095077622 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141145139 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.15698989 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137077783 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.166358174 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.13741434 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088056271 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115915529 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104723519 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090231195 seconds)
  done (took 2.421925071 seconds)
done (took 17.436799332 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081352984 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.386790396 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362965633 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11746188 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670782587 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357430656 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.993635528 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119199417 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1228501 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09585379 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085492964 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.675535295 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.95875022 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.358229633 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.944146241 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319015041 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678556199 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069881314 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068320846 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095728314 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.952809848 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094640794 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070117176 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069060985 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676727306 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372399848 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095210773 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319841629 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068549756 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097321577 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356692458 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094702254 seconds)
  done (took 16.009026615 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073020793 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.143451535 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076167622 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084395125 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098195566 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071786856 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097832649 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071617378 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153214083 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069095068 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111400496 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069485336 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097494821 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071650718 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088104465 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095751641 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070680485 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069279434 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096034272 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070237203 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112853526 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070415139 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069508059 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096792403 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069386513 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106197325 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070674033 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068992219 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095835345 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073116503 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098595112 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071311048 seconds)
  done (took 3.971204881 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118631914 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.15334313 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075587003 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.1298671 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11402511 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09887317 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.171344123 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095174822 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156306673 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069375164 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112901693 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069681669 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128456462 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070962789 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114375272 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070919898 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070478356 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096773925 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069981035 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095169178 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088750299 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068296063 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096017521 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070453124 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095618414 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083535293 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093290862 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073399944 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069376247 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096967858 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073574173 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069594576 seconds)
  done (took 4.255699788 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075924053 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07671656 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110272377 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086214658 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096084128 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074895224 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074766536 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.09704641 seconds)
  done (took 1.887719728 seconds)
done (took 27.314190152 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081184639 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071488241 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.100738365 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083257257 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.099175977 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.08136811 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068943309 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.102651124 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078487029 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074004769 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.104211778 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069203969 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.09879923 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070456707 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07625986 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09710177 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081118534 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.099026723 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081735903 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080426676 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09834389 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079215412 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101549353 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081917177 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105296662 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082332034 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.083711818 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101514569 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070812172 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.097893479 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07963753 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084243643 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.097061603 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080234156 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.095579236 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070564381 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069296628 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09556711 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080827332 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.101642791 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072870387 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101141378 seconds)
  done (took 4.815527766 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091498251 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089410457 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113725227 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.071246882 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098904826 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065334689 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.116620356 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.072562726 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.093368066 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.091925971 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057323254 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.086505719 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.073546442 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.062459201 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.095057147 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059365247 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.059975947 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.083866275 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062714902 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060443849 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.084161134 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057494996 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.062503939 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064244041 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.084325825 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064511133 seconds)
  done (took 3.217345212 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077782926 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086005699 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115316096 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130889539 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135677243 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079394605 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106731641 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089271878 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.11500618 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069209979 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071666031 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.126037511 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089218 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101823564 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068930786 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.112846986 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084613649 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070266195 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102458928 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091990657 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.11282747 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080480447 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120708184 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085412254 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.0683835 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098218153 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074102387 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.107585597 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074850165 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077814114 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100741294 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072881534 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.096606141 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081980434 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073080548 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.100649217 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092216695 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104829182 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080909584 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068848883 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.099881474 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070190207 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.115241365 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.112960222 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.093835046 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077275691 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075815097 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104479723 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069346022 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113486173 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078866752 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068204763 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.099112834 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068527068 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068135147 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109289305 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071327446 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.097864519 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078963247 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071759197 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.108758501 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07351816 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110832958 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069377819 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101298533 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070661149 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07060198 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094011255 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094779063 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070025322 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.138713148 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070119924 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.097691723 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078258418 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103226361 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075305495 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069036412 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111458682 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078328968 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098882354 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078456338 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071969609 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.09861083 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090091134 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.097342071 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073177295 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070666087 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101631471 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072629989 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094887251 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08425936 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069452334 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.098586003 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08610782 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094132489 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072191645 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075371813 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.100181806 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068884206 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105975298 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074840912 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069121957 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103965678 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069227416 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.097000421 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079708822 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073146241 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.094597328 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074172453 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100423394 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070637131 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070217706 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.098586971 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071712794 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.079066848 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.1016694 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074003664 seconds)
  done (took 11.541241875 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.192596907 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.186464116 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073270174 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.179440696 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077220258 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.107344397 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.179270827 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098011294 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.096187343 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071023829 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070275418 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.130689913 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.096754873 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.135969165 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.107768846 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069770255 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.114139387 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.107129118 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.183389093 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.177371421 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.124827719 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079120892 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071641043 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098246924 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071596037 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.105170154 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087914669 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.104055888 seconds)
  done (took 4.410517488 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084485623 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.137616113 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076280646 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093229439 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.121058313 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068576582 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.10237495 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071112224 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.108240949 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083102694 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095616539 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076979841 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076041108 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105343703 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069668321 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105762561 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079956987 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071013604 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.099688246 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075172272 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.107633395 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.083023069 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.099235313 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06986372 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076245921 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.095571476 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066475847 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.114621091 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070294318 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119615542 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069215952 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075006049 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.11633653 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070513256 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.095756739 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.074427011 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072241511 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100049926 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071908994 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068488982 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.095276061 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060163137 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067651536 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.109260108 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075111686 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.088236995 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.0767353 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.099975636 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076083363 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067740117 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098111539 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073390151 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072524402 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.1095926 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074320645 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.100454996 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.075026702 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067980146 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.103370616 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073867355 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065323102 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094505888 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075685717 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.093869491 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.07880593 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073991157 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.094149586 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073837542 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074278597 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102614006 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072957534 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.096876611 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069465124 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072105584 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100938388 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074026507 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073129694 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.095388316 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06972117 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069527221 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.083833652 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069108707 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054887302 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098762217 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068880693 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.093531596 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.075493112 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077968096 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.10988057 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071547498 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.102431937 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070871788 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067972319 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099812643 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065806804 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097639009 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.089875224 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112044918 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070465533 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068240879 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.113857739 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075303881 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.094204535 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059749242 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076930743 seconds)
  done (took 10.089118516 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.100751871 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093899248 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.098787774 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085828453 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124763124 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095201744 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103313556 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077090556 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07076676 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.113685176 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07035122 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.104056829 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071589077 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07833703 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125557618 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077410141 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.097496762 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079589262 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073210742 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136807762 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085235363 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.111076569 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.083678429 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.0956515 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07487622 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080979422 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.125244372 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.082155538 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108039921 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.088480103 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.081813161 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.124839538 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.088366931 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100592384 seconds)
  done (took 4.43754559 seconds)
done (took 39.700551175 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.307635318 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.487066802 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.268736725 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.13934514 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.307907046 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.285040491 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.282016411 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.269958395 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.505980071 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.269838032 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.50712222 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.894592259 seconds)
done (took 59.742576945 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.366790315 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.40837522 seconds)
    (2/2) benchmarking "String"...
    done (took 1.53972832 seconds)
  done (took 4.161904983 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.635364205 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.213331847 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.556020419 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.26979384 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.2690245 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.729760093 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.782990204 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.044264738 seconds)
  done (took 28.078314682 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.27717643 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.600334358 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.363420562 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.35709976 seconds)
  done (took 17.814051497 seconds)
done (took 60.271142543 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.285020166 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.321724864 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.305090299 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.25520857 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.371792173 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.305592327 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.475414485 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.478865871 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.279043086 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.259854217 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.271090343 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.277383485 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.271498119 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.473561207 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.278032077 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.269654385 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.31848417 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.729018886 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.62120322 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.284018643 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.271339883 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.287361532 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.279111199 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.271661305 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.340506587 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.271066486 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.273358229 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.286453485 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.132838562 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.270311168 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.337852177 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.644136517 seconds)
  done (took 193.012668158 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.270867318 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.214556527 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.251919403 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.292323997 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.648389779 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.472320502 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.407437408 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.73838169 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.287527617 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.28903179 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.477966649 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.271992729 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.484061385 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.237747156 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.279945995 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.382355338 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.48567687 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.519608994 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.289453807 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.511120148 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.292195018 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.321362681 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.253202006 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.421756306 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.289182946 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.271367079 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.289343262 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.296005428 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.463525453 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.425576182 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.325653566 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.288594082 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.793579787 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.129246728 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.288395089 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.281656829 seconds)
  done (took 151.459136152 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.549535648 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.271252367 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.271531108 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.272199423 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.298242666 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.271675346 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.740025415 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.742518608 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.765730457 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.506080535 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.332361185 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.446736703 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.275630978 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.361214102 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.28565939 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.276727663 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.287960276 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.298005111 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.276444483 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.273290095 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.742809964 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.289698232 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.413134627 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.270896587 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.264638608 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.291730122 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.654070331 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.265638237 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29174062 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.569732674 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.305183271 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.262927393 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.489959478 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.677649903 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.367702269 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.264227413 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.289225565 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.262402598 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.523904423 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.262147874 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.263066904 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.263188887 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.266179007 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.774381994 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.265518009 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.730742619 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.265166052 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.103365121 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.266013887 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.263666785 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.263913842 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.569047222 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.618891019 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.266339536 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.263546066 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.266935348 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.263143323 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.262580754 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.263610999 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.290094529 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.571508188 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.357696978 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.264431697 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.266561276 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.289830734 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.263565959 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.486493306 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.266774198 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.42081709 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.322992052 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.374287033 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.73349413 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.267491714 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.353040127 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.379695819 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.265932168 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.265021648 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.264903922 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.2640379 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.366894253 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.265573843 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.617865406 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.271415063 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.26522929 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.322390519 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.354482593 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.265068491 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.264912286 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.505828858 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.267544286 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.26468409 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.908011206 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.353281052 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.265528078 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.26558371 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.265324931 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.623421746 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.734591657 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.367418093 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.266842442 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.597392658 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.267413848 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.632372163 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.724411333 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.809115684 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.268193422 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.369271843 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.27024628 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.267380146 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.266775182 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.294320587 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.265625771 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.322776161 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.268304666 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.658587221 seconds)
  done (took 351.06854754 seconds)
done (took 698.306678622 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.919609274 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.907513155 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.019621078 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.910885425 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.887123876 seconds)
  done (took 10.856397762 seconds)
done (took 12.067646102 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.444849428 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.443822435 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.322519485 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.445117624 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.295736751 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.460771743 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.428090589 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.290310618 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.366980903 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.338519067 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.366207515 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.315542656 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.295224598 seconds)
  done (took 19.027810399 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.580217397 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.587964374 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.33226036 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.577516543 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.308452373 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.616108866 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.468310553 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.470590492 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.458625206 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.284523753 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.283502233 seconds)
  done (took 17.182968003 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.579740349 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.580428222 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.335425264 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.588676319 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.310665869 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.57657127 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.465325552 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.483728682 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.455933475 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.284349482 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.283910378 seconds)
  done (took 17.159427941 seconds)
done (took 54.583741928 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.279651994 seconds)
  done (took 2.494586851 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.314015629 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.473382556 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.295254075 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.284467896 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.281083858 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.28052891 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.286036524 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.28138178 seconds)
  done (took 11.7122937 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.277687666 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.279146492 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.278979148 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.277134324 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.276839681 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.279992835 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.280564631 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.277381633 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.279689826 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.277359188 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.28064606 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.276818233 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.276809487 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.276887159 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.280283206 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.279609602 seconds)
  done (took 21.672655191 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.279439086 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.277153518 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.278394817 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.277835934 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.277636653 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.278243254 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.278824074 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.278083711 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.277543171 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.277549043 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.278000289 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.278160967 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.278227068 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.278147312 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.277750997 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.278943017 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.277545479 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.278290048 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.282639872 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.278094366 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.27880303 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.277050903 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.279686753 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.278926984 seconds)
  done (took 31.901275387 seconds)
done (took 68.995894016 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.11014536 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.743298895 seconds)
  done (took 9.071548311 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.281782481 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.280707067 seconds)
  done (took 3.780281562 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.281953643 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.280985447 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.281127619 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.281204746 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.28127986 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.281395195 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.281310464 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.280838231 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.281227364 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.281975501 seconds)
  done (took 14.031885054 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.281660181 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.281191617 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.279243659 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.281493631 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.281218147 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.278973818 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.282876597 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.281288593 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.28180429 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.278448669 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.282399405 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.279915766 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.282369655 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.279234105 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.281709951 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.280054123 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.278957225 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.280953649 seconds)
  done (took 24.273173698 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.283599332 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.282814255 seconds)
  done (took 3.785108183 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.28148151 seconds)
    (2/7) benchmarking "second"...
    done (took 1.280979991 seconds)
    (3/7) benchmarking "month"...
    done (took 1.280460231 seconds)
    (4/7) benchmarking "year"...
    done (took 1.280231715 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.280570565 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.281027573 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.280396115 seconds)
  done (took 10.184943183 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.285152344 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.46393295 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.539641263 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.860412354 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.285026283 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.2866286 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.150496456 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.286692419 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.289077533 seconds)
  done (took 14.667327265 seconds)
done (took 81.011968827 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.251972363 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.276437559 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.050009377 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.284738059 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.288389505 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.613429177 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.284588645 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.39393195 seconds)
done (took 37.663647945 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.281305378 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.958346313 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.95371451 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.27719903 seconds)
  done (took 11.401601529 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.253546749 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.126013907 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.256615267 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.232341529 seconds)
  done (took 18.08187834 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.825302736 seconds)
    (2/2) benchmarking "read"...
    done (took 1.589667605 seconds)
  done (took 4.617455781 seconds)
done (took 41.594366931 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.265832639 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.265309625 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.264416881 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.268210957 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.26687684 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.259338296 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.259879763 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.262456198 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.259939375 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.26176853 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.260614126 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260882815 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.260018102 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254230027 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.255849722 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258517626 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.255099722 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254704189 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.254988633 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.255136303 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.258412823 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.25274074 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.251979707 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.255797587 seconds)
  done (took 31.427035927 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.255362967 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.253155893 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.255180626 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.255599349 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.24853447 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.251165941 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.251546649 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.248796181 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.251581407 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.251573492 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248999598 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.250434045 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.249162071 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.24712308 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248835039 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.246790878 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.250808793 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246696722 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2494507 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.246947226 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.246560235 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244611121 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.243594288 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247542138 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.244092265 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.244481957 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.247434616 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.246240897 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.244926409 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.242090116 seconds)
  done (took 38.652498394 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.248601263 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.251893831 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.244565714 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.24485865 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.245652506 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.243008559 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.244157319 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.242862979 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.244319965 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.243828798 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.242991424 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.244381136 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.245389321 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.242723602 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.243519838 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.243948103 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.243154154 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.242219511 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.242639799 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.242280628 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.243269573 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.242245134 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.241700042 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.24168832 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.2423047 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.24163507 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.242617856 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.241764914 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.242958598 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.240714098 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.241419418 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.242357962 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.240153326 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.240732946 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.241400127 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.241242873 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.24627962 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.245922678 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.240193925 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.240147359 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.240619352 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.240415022 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.240915773 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.24111217 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.240759518 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.24111219 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.23919233 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.238348789 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.239604598 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.239498024 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.238655908 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.239598433 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.238958104 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.239482008 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.23880929 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.238470398 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.238791233 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.238560846 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.23857782 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.239094633 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.238784333 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.240254245 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.238162708 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.238170557 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.238710751 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.238828498 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.237956375 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.238330414 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.238586824 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.238551796 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.237833856 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.238104598 seconds)
  done (took 90.565966461 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.237878042 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.236263956 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.235483397 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.235823275 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235617766 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.23663602 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.234332039 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237763248 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234877216 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.23745941 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237985351 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.235768141 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237347679 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.237938098 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236606271 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.234036224 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.237630003 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234492841 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.23733689 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.237940663 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.237545882 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.234235121 seconds)
  done (took 28.377400834 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23685369 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.236190917 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.234925575 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.237090221 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.234165091 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.23781573 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.237060685 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.236593292 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235897006 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234643246 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23291499 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237081956 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.234459856 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235553896 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233470545 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.234536389 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235941565 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.233197401 seconds)
  done (took 23.414396482 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.234532988 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.235356444 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.236809382 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.233921714 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.233118172 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.236393927 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233095109 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.236459823 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.236045929 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.234169898 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.236537837 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23640263 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.236082415 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233374252 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236586539 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.233390478 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.236243264 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233504586 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236346861 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234305068 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.233032454 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.235068537 seconds)
  done (took 28.346958968 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235413411 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.235553755 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.233475278 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.232878221 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.234156211 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.235085783 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.236048814 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.232702874 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.235878015 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.235902784 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232188066 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.235506149 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.233140569 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.232695466 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.232736601 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233301408 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.234957572 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.233422974 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235673396 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.232883967 seconds)
  done (took 25.858030896 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.237525694 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236887177 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.237402997 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236761745 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238416636 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.238313603 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238580616 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.238152489 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.237637962 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.23809963 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.237109266 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.238341474 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237831432 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.237843669 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.237017775 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238038987 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.237169231 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.236900967 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.237879072 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237322813 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.237636568 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.237720313 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.237734503 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.238497703 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.236916674 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.236954106 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.237338197 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.237654795 seconds)
  done (took 35.828656008 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236083579 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.235766995 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.234289625 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.233559273 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.234647243 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.233414863 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.233726655 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.233808302 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.236022631 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.234242604 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.235546394 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.236147688 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.236033397 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.236457597 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.236055126 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.23623794 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236255295 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.233602565 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233711634 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23337799 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.235480503 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235991196 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.236547236 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.234639356 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233878248 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.237337135 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234041476 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.2345399 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236500409 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.234345722 seconds)
  done (took 38.228065482 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.255728002 seconds)
    (2/2) benchmarking "in"...
    done (took 1.254794657 seconds)
  done (took 3.68552385 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.234488962 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236458296 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.23631773 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.234955689 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.234332739 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.236867179 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.23674096 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234083718 seconds)
  done (took 11.059665756 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.237491159 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.236995459 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.236628383 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.237173366 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.238289148 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.239219127 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247194181 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.252656 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.240252982 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.238401626 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.243234527 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.245274017 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.242412172 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.238513869 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.237609113 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239874627 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.237628474 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.238817116 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.238339574 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.237861433 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23895891 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24111358 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241331316 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.235696002 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.239250846 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.251344097 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.246313484 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.239394953 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.239394025 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.245054211 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.240036208 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.236265077 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.240560702 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.240803705 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.238542494 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.240599466 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250676641 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255267662 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.248815753 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240588486 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240588506 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.236963397 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.241750926 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.243087413 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.241319197 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.24084724 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.240654356 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.2377831 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.238941358 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.241967599 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.244206858 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239314758 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.237312864 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247193349 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.242146338 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249603214 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.25606619 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.243436265 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.247336351 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.252314154 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.255022184 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.247605566 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.243302031 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.242121957 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249838691 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.261559598 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.249453338 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.253848883 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.237876837 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.240986758 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.251527588 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254561888 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.25021362 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.240547866 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242553351 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.2417143 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241563245 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241072187 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250625212 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.261189744 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.241444538 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242674727 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.251160346 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.259611838 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.241253206 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.242984733 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.242813611 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.242636304 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.242622919 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.253448352 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.258080112 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.242337569 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.242298022 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.242174223 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.246059489 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.242995543 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.241730978 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244778883 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.239829137 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.242143818 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243371201 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.244943817 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.251130702 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243206388 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243417834 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.251953022 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.242785902 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243130009 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.253940606 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.243266715 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243517209 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.243965761 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.251258707 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.241017215 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245499915 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.251407512 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.244357187 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.245233609 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.244186763 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.245002745 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.252593341 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.267017603 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.244160091 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.243533047 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.24824242 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.254013391 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244667071 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.248774925 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.244649689 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.240614114 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.239741681 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.244734964 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.242363761 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.244427912 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242371159 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245614346 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.240669786 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.243775821 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.241441669 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.241890473 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.243737894 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.241689337 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.242440769 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.244743916 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.241336819 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.242853421 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.248057943 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.240376685 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.242031352 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.242339028 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.237375447 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240037955 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.242557919 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.239825731 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.239831804 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238618013 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.238708666 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.239290843 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.23948631 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.239250164 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.239154534 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.240400395 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241460383 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.239155302 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.244964667 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.238132347 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.236900625 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.238581338 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.238775138 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.240297422 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.238396129 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.238379798 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.241149379 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.245167538 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.239079491 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.239799688 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.244658113 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240238707 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.239638311 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23980102 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.242397718 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.246399865 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.23879308 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.248853976 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.240046048 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.240108626 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.240287327 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.240545359 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.239900537 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.2402337 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.242647728 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.246661092 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254736305 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249571171 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.240417588 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.244429083 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.242377084 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.243337885 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.24714502 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.241188297 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.240167913 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.241550944 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.243550351 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245484952 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.249384868 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.245321201 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.243575187 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.242631357 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.240795007 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.242021501 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241427244 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.242601903 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243545376 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.238245594 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241412134 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.240930744 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.24057643 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.239239868 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.240866293 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.240720421 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.242005276 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.241530496 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.251990122 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.238715903 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242668564 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243191015 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.242060555 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.240909113 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.242437734 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24440826 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.243087949 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25102373 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.258477646 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.243795823 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250658686 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.258126261 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.241153756 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.24520326 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.242929967 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.240350127 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.245472931 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.249982309 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.242880842 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.243433911 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.242607958 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243903186 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242470122 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.250963933 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.239510433 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.24163774 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.243389282 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.245837471 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.240478062 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.24485509 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.244689935 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.245206545 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.246057823 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.243555798 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.242817188 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.244895125 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.243812853 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.243878679 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.243937547 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245296933 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.250078032 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.25061605 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.244564084 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.247155084 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.244770635 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.246197545 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.244679613 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.244036545 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.24440891 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257661717 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.251608095 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.253038006 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.24739008 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.244203679 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.251847572 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.245503976 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.249455947 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244455124 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246127525 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.245287068 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.244140455 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.242330993 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246465562 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.245251086 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.246567508 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.247041137 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.248463834 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.245312834 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.2448031 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.244957232 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.245349254 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.245412651 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.245027622 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.245217066 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.250135129 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248352149 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.245774565 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.246406348 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25440147 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261056902 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.247726647 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.244773058 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.245566678 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.245808459 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.246144696 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.245840396 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.248014438 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.252600245 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.248576292 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.254830824 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.246484287 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257314469 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.246633902 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.248558974 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.253029758 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.243664631 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.245793494 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.248073897 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.246967299 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256366649 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.262207604 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.247421245 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.249419851 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246708067 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.247181989 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.247094395 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.246065368 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246804388 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.247157135 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.258161565 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.262843561 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.25000746 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249249201 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.244246717 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.247676559 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.247075771 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.246437689 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253162401 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.247367205 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.25041443 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.247528981 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.248239814 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.247011313 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.248035294 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.248040916 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.245139285 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.24835055 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257077826 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.264114185 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.251125056 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.248277674 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.260061993 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.248499616 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258137166 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.263711613 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.24914057 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.248135954 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.248172907 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.252035645 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.24902413 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.250679699 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.248415223 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.249867538 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.250497459 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.249515911 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.252391507 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.248457998 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.249290955 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.249364122 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.257741244 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268750445 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.249518088 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25304578 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.247578047 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.250692879 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.252980628 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.249772536 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.24875107 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.251077865 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257816784 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255576691 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.249989907 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.249254723 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250322352 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.249953215 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.249404867 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.249931756 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.250044053 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.250413188 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.252251836 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.249111342 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256310674 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.250328497 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.251694188 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251851529 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.250856775 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.262345853 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.250323738 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.252054426 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250532982 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.249860405 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.252289402 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.251061575 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.250208393 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252845403 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250529764 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.252525473 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.256155434 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.255011242 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.253504319 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.250949873 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.250328904 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.252342052 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.253667466 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25111489 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.251259126 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250890131 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.251939859 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.251458892 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.253740769 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.250167131 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.251379432 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.252466337 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251669511 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.253692828 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.256171809 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252597838 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.249035434 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.252210978 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.25254503 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.2513045 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.25234945 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.263876607 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254829007 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.260239342 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.258903008 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.255645024 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.252861884 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254426931 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.25995251 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.251725252 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.254429912 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.253251218 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.256042366 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.252897878 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.255381738 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252658043 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.262842486 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.253507486 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.253047632 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264173655 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.269579778 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25311358 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.254916085 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.257540251 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.252833586 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.250400582 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.253324936 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.252803118 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262760397 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.271132442 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253525137 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.255836161 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.252121055 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.254457479 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.257848785 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.253858541 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.254623856 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.250775714 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.253771948 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.253547376 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253449308 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.250704767 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.254461467 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.254342738 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.256043948 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.260565875 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.250431134 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.256197472 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.254211283 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.255562549 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.254108146 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255163353 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.251913751 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.251725928 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.255002801 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254279349 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.25573578 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.25739311 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.255128058 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.25533789 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.255138194 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255545751 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256831527 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.263839817 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.26105539 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.25208957 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.254670636 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.25574734 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.258099757 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254575806 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.25584128 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256842226 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.259080472 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.255134387 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255585957 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.255974409 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.257699722 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272866455 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.271099374 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255472718 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.256163794 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261611464 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.256771271 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.253817498 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.25598796 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.260107323 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.258228999 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.262344421 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.25665167 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.264658593 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.271760927 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.256419864 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.259540255 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.258077027 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.264463555 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.259903254 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256517848 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.257493412 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.260197908 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.27310511 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257058199 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266182096 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.285665475 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.272940364 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.257786064 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.257978494 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256884222 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.257010697 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.260087293 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.25768272 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.256648884 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257235931 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.257309192 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.257790397 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261716365 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.259285928 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.258034925 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.256550582 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.259511103 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.260342276 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.255047502 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.257793335 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.258407467 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.257812349 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.257911474 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.258950717 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.258611871 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271177149 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.268189275 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.258962033 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.258555933 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.255461045 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.263699298 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.260616911 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.267085008 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.2648772 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.25853527 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.259045746 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.260453849 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25849962 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.256484418 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.259947204 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.25887988 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25812754 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.255982119 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.272638892 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267146234 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.26564055 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.260587393 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.259828321 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.259293381 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261090574 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.259270454 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259037087 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.262733441 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.258870804 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.262437539 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.259571044 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.259220983 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.261797237 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.26543001 seconds)
  done (took 745.902535823 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.258114359 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256956496 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.25755268 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.257343861 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256857296 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256420521 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257283772 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.257977111 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.257567938 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.258615151 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.257932275 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257469486 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.258403842 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.258367002 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258557113 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.258215534 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257840707 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.257630035 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.258859255 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257923438 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.257907386 seconds)
  done (took 27.612086398 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.26184171 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.2589614 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.25777356 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.260085627 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.258374555 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.260370674 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.258934598 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26080946 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.262041056 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25869448 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.26120839 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261166155 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.25859893 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.259089793 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258190143 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.261452557 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.261026231 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.259075939 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.260989865 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.258570988 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.260653064 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.259445061 seconds)
  done (took 28.917077489 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.262205155 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.26292686 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.261574952 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.259538241 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.261683065 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.259212038 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.262240917 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.261504212 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.262323969 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.264085033 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.261019241 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.263041842 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.267624724 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.266116389 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.265615861 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.262899828 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.40612015 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.262415158 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.262824387 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.262681135 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.260020047 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.270691989 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.260719212 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.259545739 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.261391991 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.263420369 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.263015629 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.263564693 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.263450311 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.263816934 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.266228708 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.262892212 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.263198229 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.265480054 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.263599111 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.264571003 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.266748407 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.263070332 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.260688506 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.264208614 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.27263701 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.281284776 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.264341189 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.272941894 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.265275208 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.264563592 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.267776787 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.270597125 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.262199383 seconds)
  done (took 63.291145337 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.265313355 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.26567789 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.262700213 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.264182435 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.265175005 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.264461114 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.2651879 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.26391854 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.261940735 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.261766417 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.264570585 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.262691363 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.262103596 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.264873514 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.264239668 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.26240723 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.262551317 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.262051276 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.262185243 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.26246191 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.262384475 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.264842561 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.265226788 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.262391646 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.265537613 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.261974698 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.263083831 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.265274492 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.262864407 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.262738758 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.265567317 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.265325615 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.266003773 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.263610795 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.26279082 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.265832082 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.265956803 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.263205624 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.265751221 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.263556333 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.265959832 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.266002137 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.266173088 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.266765699 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.263865753 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.26406552 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.263793454 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.263370688 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.264662604 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.266590515 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.266604163 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.264710148 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.266237658 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.263950213 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.267379961 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.26663398 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.263916556 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.264741452 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.267199596 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.265039661 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.264367427 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.26693883 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.264906138 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.266613742 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.26775714 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.265680482 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.265914618 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.267959341 seconds)
  done (took 87.197029037 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.268436237 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.268573439 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.267283755 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267543966 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.267654392 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.267810082 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.268392215 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.268164523 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.267878797 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.26806332 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.267966225 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.267859759 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.268448315 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.267582144 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.267908098 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.267974471 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.267485092 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.268234926 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.268220516 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268454403 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.268430043 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.268609137 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.268331601 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.268303541 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.268249568 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.268807818 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.267687167 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.268214983 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.268683874 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.269152319 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.269486213 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.268150024 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.268108419 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.268771766 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.269939539 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.269123091 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.268944059 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.268652864 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.268274748 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.269037617 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.268300812 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.269765714 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.269336124 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.269413402 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.269423415 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.26873605 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.269273356 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.269771932 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.269418934 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.269105571 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.269811614 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.269504754 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269765406 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.269805002 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.26949328 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.270356675 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269023748 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.26944985 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269969285 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.271069872 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.270544679 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.27045836 seconds)
  done (took 79.872183541 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270632783 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.270274746 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.267823117 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.267424483 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.270485364 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.26745977 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.270673554 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.2709094 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.270961659 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.270819603 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273420227 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268980294 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267700313 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271982591 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.268404873 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268802915 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.267882071 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.268123762 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.27048576 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.268972033 seconds)
  done (took 26.599899514 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.269181901 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.271490764 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.2687644 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.269322737 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.271260676 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.26894157 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.271732993 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271577925 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269029014 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271451939 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.272356948 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.271890427 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269178781 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.26969304 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.271919329 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.269630141 seconds)
  done (took 21.536462822 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.2687488 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.271387204 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.271410836 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.272771831 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.26986259 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.268857996 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.271448558 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.269758355 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.269229203 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.272987029 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.272742939 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.272458453 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.271960565 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.271830379 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.270237396 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.273434242 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.269958327 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.269907903 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.272732428 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.27306232 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.271872354 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.270293081 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.272472845 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.272370926 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.270104638 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.27138726 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.270843191 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.270409178 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.269808228 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.273187553 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.27048528 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.271018012 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.270844878 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.270356555 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.273233839 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.270593109 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.273267928 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.273206088 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.273306709 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.27413916 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.273737608 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.271130755 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.273364043 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.273961481 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.270788966 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.274223212 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.27133942 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.272497587 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.271918307 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.272314256 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.273780193 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.275847714 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.274871605 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.274228524 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.274547228 seconds)
  done (took 71.167753271 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.27475401 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.274027188 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.272407295 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.275564914 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.274299802 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.272703228 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.275281132 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.27179585 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273303573 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.274478911 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.273108831 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.275143719 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.27285427 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.276110779 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.273418088 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.275267883 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.272772777 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.272689383 seconds)
  done (took 24.141950117 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.273001066 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.27320174 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.276177665 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.272921015 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.272224627 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.275669602 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.273376188 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.275154386 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27594261 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.273376137 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272994276 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.275672191 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275778949 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.276377399 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.274000296 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273583123 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.276076739 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275407252 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.273995802 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.273146246 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.277350145 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.276842633 seconds)
  done (took 29.254866195 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.275181691 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.275608069 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.292903723 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.315739562 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.302370393 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.276169722 seconds)
  done (took 8.951254311 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274881066 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276715669 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27422921 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277474115 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276743782 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274488215 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274216496 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274661798 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276828534 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27491166 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275236678 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276819555 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276870532 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275133115 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277168267 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276573749 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275195029 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275004428 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275305328 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277280591 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275178524 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27702424 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275527221 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275567313 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275332409 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27592522 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27831965 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276376041 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275655067 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278877878 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277948492 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27513336 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278210412 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27564374 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279645416 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277977034 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276003433 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278529276 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279185509 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276762647 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279253961 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279167237 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279175556 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276954042 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279168822 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276467283 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276667163 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276711758 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276780977 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279070824 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278659967 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276125171 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279537035 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279405564 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278806584 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279562281 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277558733 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276620751 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279488117 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277691104 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276881589 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278739129 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276548809 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277132554 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280444893 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278396482 seconds)
  done (took 85.50171521 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277063609 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277311458 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277768381 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278867177 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277878408 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277662817 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276579926 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277210872 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277367252 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277238614 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28062682 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278444934 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276956709 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278109307 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277514981 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278015828 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277240493 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277648726 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278403511 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28111979 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278527126 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277709339 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278019209 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27814809 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27863037 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280749596 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278498449 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278391982 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278089321 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278160797 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278308075 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278853175 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278662386 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.278992079 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279065324 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279182411 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279606387 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279228207 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27880471 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281233356 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278945241 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282768958 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279358688 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278928411 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279956938 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279261023 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279574834 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279811448 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279034057 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279678031 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280179561 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280626285 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279959653 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279280837 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279107232 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280934037 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279837355 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27958378 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2797169 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282783833 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279951981 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280180925 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283429247 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280213962 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280795052 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279168315 seconds)
  done (took 85.638947824 seconds)
done (took 1742.231574717 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.301503447 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.362409216 seconds)
  done (took 13.882940017 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.443013456 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.395841772 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.281287957 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.310789683 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.281245576 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.279333589 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.296859242 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.28136964 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.281118475 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.281183509 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.281091007 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.47005426 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.336761927 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.281755466 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.281212378 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.373724552 seconds)
  done (took 42.37953929 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.306893752 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.287577328 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.388402451 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.299240321 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.307409071 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.458960905 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.337161189 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.287305022 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.439343126 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.318703689 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.678013018 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.306882718 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.286415717 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.278147049 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.304055397 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.458301874 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.509193475 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.68256052 seconds)
  done (took 29.155498938 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.686189163 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.285847485 seconds)
  done (took 9.193718377 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.298299142 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.318400941 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.314523389 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.28177069 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.301911015 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.325872557 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.311431915 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.323080779 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.328257028 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.308226014 seconds)
  done (took 64.335707398 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.306283521 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.286819619 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.286799264 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.284746594 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.27855927 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.279095431 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.285162019 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.280340342 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.474706962 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.401727651 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.30074982 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.292768956 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.286445012 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.28811257 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.283523609 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.321019933 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.421330255 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.285131686 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.284443321 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.29161434 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.286872902 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.387927439 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.324175463 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.285668962 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.399101168 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.471911576 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.29096519 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.294124055 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.403000782 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.285168638 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.286516285 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.288145147 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.290273234 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.845218319 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.713284023 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.292904836 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.321441914 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.294415559 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.2844588 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.416384338 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.287252198 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.293028478 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.279355979 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.688216174 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.43672719 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.390477508 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.425011634 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.288785545 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.289432737 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.344069281 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.287033384 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.290136208 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.316881027 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.02137921 seconds)
  done (took 107.543911962 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.33071285 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.768852546 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.449620568 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.304825051 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.035334945 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.932795588 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.284640675 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.536102788 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.300833967 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.282552851 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.556835158 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.751164427 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.288583974 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.301865917 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.909886077 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.328718457 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.281216228 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.931968739 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.282795275 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.280679696 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.694055545 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.296727991 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.281042072 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.441513829 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.319387731 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.713702144 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.579458032 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.71284766 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.28383864 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.282679884 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.71575446 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.287987589 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.282196694 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.283970741 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.541075686 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.606350475 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.586575154 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.285696623 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.29901856 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.28499555 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.315898908 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.711123747 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.594750345 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.283405042 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.284203627 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.714848898 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.283599849 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.290097443 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.288739331 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.480933019 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.004999401 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.283028125 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.582916601 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.285084976 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.546748441 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.309222516 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.344896519 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.747276725 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.286312313 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.332058029 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.299370653 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.284602898 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.286231554 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.286736849 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.288878112 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.605452119 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.389047494 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.283628106 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.605560316 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.712672994 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.286561922 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.772485645 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.152795221 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.285305894 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.364473405 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.284002411 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.767806427 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.746113407 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.293169044 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.28145323 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.586703545 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.283458839 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.544911709 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.29467384 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.280475196 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.698499108 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.301675001 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.335709373 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.282874346 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.282884519 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.896303893 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.284984021 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.535608343 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.300053948 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.282900123 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.283655033 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.308641193 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.283394308 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.296432891 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.28296539 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.773414559 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.287999174 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.396878726 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.301426128 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.291974365 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.284184796 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.285929803 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.284127529 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.499063585 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.821417638 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.285337304 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.28460683 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.283731773 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.287064064 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.422894822 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.28947384 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.560942926 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.286037116 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.284244778 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.288474408 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.979048166 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.298559339 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.285192104 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.290076727 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.110212974 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.491035005 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.301626332 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.285519875 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.284167778 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.309460793 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.513011818 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.286437744 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.319467839 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.28652854 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.960011157 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.321594818 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.290004093 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.667319614 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.293335198 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.146537567 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.310261624 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.285780445 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.583919961 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.545035413 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.318824476 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.288565164 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.298969019 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.927680067 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.291610047 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.418124909 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.305210324 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.309247384 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.48352898 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.700967309 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.287982069 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.832979251 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.286213691 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.494399233 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.287225751 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.598438515 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.741172935 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.287088952 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.292895105 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957057949 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.93139369 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.915613829 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.289988967 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.548634056 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.283045939 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.737011859 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.287257727 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.286691841 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.709182903 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.288153715 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.287610991 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.288034874 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.287366114 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.428857338 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.462104533 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.406947899 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.28747186 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.717703977 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.303927824 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.290199319 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.290711155 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.28729901 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.639518448 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.309470529 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.287388866 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.30573219 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.290474449 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.287815534 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.727154957 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.167493924 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.289453976 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.4391368 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.885280831 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.289312388 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.287930832 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.02751632 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.558762635 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.765404652 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.315775604 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.56730293 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.294772843 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.327014971 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.974955954 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.308147078 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.729260199 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.292784543 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.288272616 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.838107503 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.289945323 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.631507962 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.289670609 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.288006626 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.782594475 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.289150521 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.293929144 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.523786137 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.290298863 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.547247503 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.289037338 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.304151768 seconds)
  done (took 1097.326644519 seconds)
done (took 1365.037369198 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.290794661 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.290566032 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.278072358 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.292304639 seconds)
  done (took 26.386141054 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.300424557 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.294360901 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.296499983 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.294878044 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.296505904 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.294965607 seconds)
  done (took 9.0106688 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.336562895 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.288092133 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.291180532 seconds)
  done (took 19.148622228 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.494325988 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.476024744 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.63307773 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.277276728 seconds)
  done (took 10.113525516 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.297136043 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.296752722 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.296801689 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.297894186 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.298391187 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.299118225 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.296927211 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.298002607 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.299360893 seconds)
  done (took 12.912197869 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.905521729 seconds)
done (took 83.710849118 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.489003035 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.831572421 seconds)
    (3/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.375349242 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.124512469 seconds)
    (5/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.065754071 seconds)
    (6/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.303782795 seconds)
    (7/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.398668037 seconds)
    (8/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.354784034 seconds)
    (9/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.644496935 seconds)
    (10/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.603492537 seconds)
    (11/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.038699436 seconds)
    (12/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.27729001 seconds)
    (13/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.303948713 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.531985678 seconds)
    (15/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.591978717 seconds)
    (16/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.637991612 seconds)
    (17/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.399087388 seconds)
    (18/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.319270476 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.333587009 seconds)
    (20/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.001734292 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.610104129 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.319606287 seconds)
    (23/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.984256628 seconds)
    (24/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.52974633 seconds)
    (25/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.708189421 seconds)
    (26/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.490254473 seconds)
    (27/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.11701518 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.900512343 seconds)
    (29/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.314925325 seconds)
    (30/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.672307043 seconds)
    (31/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.321878243 seconds)
    (32/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.377362952 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.557050466 seconds)
    (34/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.420082829 seconds)
    (35/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.632783086 seconds)
    (36/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.280401925 seconds)
    (37/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.868034064 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.436501843 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.593138504 seconds)
    (40/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.071981996 seconds)
    (41/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.474553982 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.688159041 seconds)
    (43/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.313470526 seconds)
    (44/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.004800162 seconds)
    (45/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.32079565 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.149278444 seconds)
    (47/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.860215254 seconds)
    (48/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.066132443 seconds)
    (49/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.897234276 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.058939883 seconds)
    (51/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.293683741 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.318697634 seconds)
    (53/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.302043898 seconds)
    (54/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.419905396 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.516558916 seconds)
    (56/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.40151623 seconds)
    (57/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.294371947 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.408177054 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.119853959 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.156687011 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.295053572 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.582639955 seconds)
    (63/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.98655355 seconds)
    (64/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.295764032 seconds)
    (65/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.755538644 seconds)
    (66/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.067148955 seconds)
    (67/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.280264415 seconds)
    (68/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.476369079 seconds)
    (69/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.403088614 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.35119599 seconds)
    (71/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.320649612 seconds)
    (72/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.308122127 seconds)
    (73/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.051216436 seconds)
    (74/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.993064975 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.634316716 seconds)
    (76/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.580826054 seconds)
    (77/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.297304848 seconds)
    (78/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.886310743 seconds)
    (79/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.080842442 seconds)
    (80/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.395315747 seconds)
    (81/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.280361192 seconds)
    (82/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.295138891 seconds)
    (83/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.296389118 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.419641635 seconds)
    (85/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.563225672 seconds)
    (86/309) benchmarking ("sort", BigInt, false)...
    done (took 6.298861939 seconds)
    (87/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.340000774 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.451220738 seconds)
    (89/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.321546099 seconds)
    (90/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.31592313 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.573845741 seconds)
    (92/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.424143087 seconds)
    (93/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.305003092 seconds)
    (94/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.523205508 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.409542384 seconds)
    (96/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.640143605 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.298746588 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.29691642 seconds)
    (99/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.842008486 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.376019904 seconds)
    (101/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.587249547 seconds)
    (102/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.984886282 seconds)
    (103/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.296562042 seconds)
    (104/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.292850679 seconds)
    (105/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.31476489 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.614856434 seconds)
    (107/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.834581598 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.017361824 seconds)
    (109/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.629325731 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.865716828 seconds)
    (111/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.641680378 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.51104851 seconds)
    (113/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.342495336 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.298363554 seconds)
    (115/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.929491902 seconds)
    (116/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.30828716 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.410539776 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.320132865 seconds)
    (119/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.382683734 seconds)
    (120/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.417218758 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.345508234 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.298334563 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.299373808 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.571531657 seconds)
    (125/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.325010531 seconds)
    (126/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.287829567 seconds)
    (127/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.359064951 seconds)
    (128/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.307261955 seconds)
    (129/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.375647639 seconds)
    (130/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.284096685 seconds)
    (131/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.36258113 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 1.805294273 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.320921711 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.342335113 seconds)
    (135/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.297406644 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.556739566 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.320154203 seconds)
    (138/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.575187379 seconds)
    (139/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.136113593 seconds)
    (140/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.402891653 seconds)
    (141/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.379898413 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.989763027 seconds)
    (143/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.324544879 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.55949088 seconds)
    (145/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.748712715 seconds)
    (146/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.709620757 seconds)
    (147/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.397618155 seconds)
    (148/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.582492054 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.788774379 seconds)
    (150/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.385330956 seconds)
    (151/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.382824583 seconds)
    (152/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.348372231 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.426529323 seconds)
    (154/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.351973592 seconds)
    (155/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.713613941 seconds)
    (156/309) benchmarking ("sort", Float64, false)...
    done (took 5.553019034 seconds)
    (157/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.97512168 seconds)
    (158/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.56712162 seconds)
    (159/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.893678014 seconds)
    (160/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.825053801 seconds)
    (161/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.545270413 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.285868441 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.017673547 seconds)
    (164/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.300257349 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.325428275 seconds)
    (166/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.323401606 seconds)
    (167/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.381802377 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.843910089 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.372718061 seconds)
    (170/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.300717658 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.32535463 seconds)
    (172/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.539706188 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.286676296 seconds)
    (174/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.929823221 seconds)
    (175/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.299910625 seconds)
    (176/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.856889753 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.472358506 seconds)
    (178/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.539960079 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.376834846 seconds)
    (180/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.491160752 seconds)
    (181/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.989603603 seconds)
    (182/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.76466345 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.303472866 seconds)
    (184/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.304060238 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.643172026 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.507075746 seconds)
    (187/309) benchmarking ("sort", Int8, false)...
    done (took 4.306929977 seconds)
    (188/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.470153539 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.005249093 seconds)
    (190/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.615908012 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.647617348 seconds)
    (192/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.341163621 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.326925433 seconds)
    (194/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.327055238 seconds)
    (195/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.499008573 seconds)
    (196/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.548841302 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.356331989 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.688841763 seconds)
    (199/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.471687884 seconds)
    (200/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.303733633 seconds)
    (201/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.880318253 seconds)
    (202/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.459243023 seconds)
    (203/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.715720628 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.357942099 seconds)
    (205/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.321087698 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.321818632 seconds)
    (207/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.629953257 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.355865643 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.699312379 seconds)
    (210/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.431419897 seconds)
    (211/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.462838353 seconds)
    (212/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.526223389 seconds)
    (213/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.878442183 seconds)
    (214/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.304651444 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.100317885 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.409210423 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.534488796 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.834165817 seconds)
    (219/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.469814142 seconds)
    (220/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.893201949 seconds)
    (221/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.918845177 seconds)
    (222/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.302449585 seconds)
    (223/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.327377741 seconds)
    (224/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.556277212 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.32503914 seconds)
    (226/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.07511371 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.303487849 seconds)
    (228/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.387752219 seconds)
    (229/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.328529556 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.374542253 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.342835899 seconds)
    (232/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.328057581 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.641988369 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.327089759 seconds)
    (235/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.830149769 seconds)
    (236/309) benchmarking ("sort", Float32, false)...
    done (took 5.268974647 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.303510906 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.856449011 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.906768577 seconds)
    (240/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.491644724 seconds)
    (241/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.819787455 seconds)
    (242/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.319089806 seconds)
    (243/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.892343152 seconds)
    (244/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.329638748 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.764404202 seconds)
    (246/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.080742038 seconds)
    (247/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.302675699 seconds)
    (248/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.305690811 seconds)
    (249/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.637578149 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.514296398 seconds)
    (251/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.332307604 seconds)
    (252/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.5976744 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.304167284 seconds)
    (254/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.706684899 seconds)
    (255/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.435123798 seconds)
    (256/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.320147265 seconds)
    (257/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.36899751 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.329324645 seconds)
    (259/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.450540579 seconds)
    (260/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.289154038 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.707932949 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.090914239 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.68271793 seconds)
    (264/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.290022853 seconds)
    (265/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.517360137 seconds)
    (266/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.512826413 seconds)
    (267/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.314784219 seconds)
    (268/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.001043336 seconds)
    (269/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.361661736 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.709440851 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.180707181 seconds)
    (272/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.595284552 seconds)
    (273/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.608020842 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.111960826 seconds)
    (275/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.411127813 seconds)
    (276/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.289982417 seconds)
    (277/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.936513038 seconds)
    (278/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.484669697 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.304262034 seconds)
    (280/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.302418384 seconds)
    (281/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.305312013 seconds)
    (282/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.889039963 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.401208738 seconds)
    (284/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.304157915 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.387642258 seconds)
    (286/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.395688668 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.422508295 seconds)
    (288/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.987502352 seconds)
    (289/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.839537392 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.467263988 seconds)
    (291/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.314866912 seconds)
    (292/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.387960617 seconds)
    (293/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.484934963 seconds)
    (294/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.305927733 seconds)
    (295/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.487022888 seconds)
    (296/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.362905112 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.347927984 seconds)
    (298/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.429825879 seconds)
    (299/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.305451517 seconds)
    (300/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.645756493 seconds)
    (301/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.666415885 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.37004082 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.330149375 seconds)
    (304/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.775893219 seconds)
    (305/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.306826787 seconds)
    (306/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.37532151 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.169969852 seconds)
    (308/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.295087987 seconds)
    (309/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.340570506 seconds)
  done (took 902.585184486 seconds)
done (took 903.821155975 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.341584293 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.334880249 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.318591252 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.340725223 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.431241021 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.349070219 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.329598114 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.321824601 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.366699619 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.368697797 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.318090016 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.346434051 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.320299312 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.320123297 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.319091799 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.333076787 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.245780624 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.320462571 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.337356887 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.330123723 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.337245211 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.318791686 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.369677936 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.348744732 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.324500053 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.323169325 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.323965384 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.340210832 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.431490657 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.323766762 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.324286639 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.332341495 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.246009197 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.318928695 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.315420285 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.340056803 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.33290319 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.329523979 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.324123431 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.352764983 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.608010171 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.321170488 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.322492147 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.322686573 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.321872833 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.325233818 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.322523552 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.329161171 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.333961884 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.335068616 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.602662803 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.336213416 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.324701092 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.322323223 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.333268132 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.321817253 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.325246212 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.337016436 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.341103921 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.338143378 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.238863603 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.326844369 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.324298354 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.33898456 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.330436884 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.642903184 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.318128117 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.327261082 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.614652272 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.327468591 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.644543067 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.330844236 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.324293528 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.336571979 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.355571041 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.252271521 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.318085837 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.322064426 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.330272707 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.321735827 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.333298024 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.336404523 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.328932651 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.324345028 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.338067644 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.353221103 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.334422541 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.324599187 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.333536394 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.343283784 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.331134319 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.335375303 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.326230522 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.319365421 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.333396584 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.327236313 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.327352187 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.326952012 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.329416763 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.33612512 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.616765383 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.340566934 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.320984993 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.321718685 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.322814237 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.338307119 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.618782179 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.325606788 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.346139426 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.372911217 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.325886912 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.246020061 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.328853448 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.339571821 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.33379103 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.328521072 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.320528346 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.245208954 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.614586645 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.339806297 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.327481331 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.323330128 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.341159421 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.327339255 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.322155496 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.256332871 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.327554798 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.339831362 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.447250431 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.336791511 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.358003064 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.324434106 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.328975165 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.353844454 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342193652 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.357647448 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.328906177 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.341480595 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.342304396 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.32268043 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.337261764 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.337453959 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.327406996 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.333487358 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.321931887 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.35439183 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.339221108 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.33869417 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.348405167 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.447778044 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.324428143 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.246285818 seconds)
done (took 221.856321866 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.385760049 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.316337269 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.427065899 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.323835316 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.42221937 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.4211081 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.320627141 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.320717977 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.321357765 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.697549624 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.32124596 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.321516338 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.325365362 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.32250951 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.407921328 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.324486173 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.3211154 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.662405866 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.32450274 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.394278384 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.318245977 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.321737032 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.324194401 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.705407643 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.3207872 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.325714368 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.394622622 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.324494234 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.670677642 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.316872661 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.318501846 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.671491202 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.41356606 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.343245944 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.336058992 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.332003503 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.423838819 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.340337686 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.404539481 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.405329449 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.428250925 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.36406871 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.318544988 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.320657804 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.327340342 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.3263301 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.324356941 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.352575442 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.327204516 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.323859613 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.66351723 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.336349418 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.32334474 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.324080264 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.323762102 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.355635709 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.324423954 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.326951367 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.413900008 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.327370532 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.388418136 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.707442379 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.700850383 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.32594482 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.326908432 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.324798916 seconds)
  done (took 147.862639036 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.394320473 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.400352119 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.435063682 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.326891666 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.376028022 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.438510199 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.327333936 seconds)
  done (took 10.960357392 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.332073819 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.326699454 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.377470421 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.375749042 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.326451294 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.474250706 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.327423944 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.337154408 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.324167389 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.380110665 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.327257816 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.327660126 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.334366386 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.32472596 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.375389242 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.338526035 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.442283895 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.328947594 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.328173706 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.48127106 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.325205914 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.334761897 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.379224759 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.339204985 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.326831773 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.333666258 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.894077776 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.328727774 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.325767259 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.327974632 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.324702678 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.366589791 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.328167109 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.328639551 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.326126699 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.443789053 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.329168257 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.326037913 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.330253631 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.323692197 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.329425212 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.329229158 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.329498989 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.327260614 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.328726987 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.351556515 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.328203057 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.329609309 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.329037821 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.330598042 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.380131776 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.328802349 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.326611103 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.32636919 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.385337686 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.337505867 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.329871519 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.326947031 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.330149472 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.326358045 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.483218319 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.376590596 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.329674736 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.377889832 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.32985104 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.331157092 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.330557734 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.329878141 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.384984539 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.330784073 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.379404679 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.327499419 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.484962977 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.354697385 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.330269515 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.334380447 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.334643298 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.330411578 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.325716296 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.336797731 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.328335233 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.332538359 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.337583497 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.328307446 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.328128873 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.433120558 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.438905819 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.328794632 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.343475638 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.338995532 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.327922926 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.383012222 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.330873594 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.330242256 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.385085647 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.446758332 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.384915515 seconds)
  done (took 152.77985914 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.33759493 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.340011143 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.333460984 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.347796256 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.33211206 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.33310157 seconds)
  done (took 9.290271478 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.334790223 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.332866603 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.332915442 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.332347094 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.333209785 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.332086805 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.331719676 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.334182147 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.337051663 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.332454202 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.334306742 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.333005607 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.333304575 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.334660258 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.334065916 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.32954249 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.334110297 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.332247475 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.333960236 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.331845674 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.431956669 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.334124185 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.332268808 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.332047846 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.334475642 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.333977267 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.341891918 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.333991092 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.33449814 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.340399591 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.335768979 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.33444309 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.335954681 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.339782217 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.33729305 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.335235148 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.337207962 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.3315373 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.330918927 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.333099837 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.33271066 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.33318815 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.335028878 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.331024808 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.336501032 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.338577845 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.338013216 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.340534181 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.336227003 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.336310849 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.335992796 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.334149813 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.333341113 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.335675526 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.337767091 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.338125563 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.339941892 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.334884783 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.333752493 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.337656449 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.334491633 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.334484788 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.337459474 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.340515747 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.342272102 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.334423967 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.339437764 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.338997238 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.335853129 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.335939147 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.335390245 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.331800316 seconds)
  done (took 98.494033342 seconds)
done (took 420.646857387 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.517676705 seconds)
  done (took 7.787597769 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.351903261 seconds)
  done (took 7.623777868 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.567691431 seconds)
  done (took 19.84001443 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.375531783 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.449724503 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.337527938 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.328782808 seconds)
  done (took 26.761829688 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.456563523 seconds)
  done (took 7.725212361 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.330289907 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.333023386 seconds)
  done (took 13.936523516 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.766870847 seconds)
  done (took 8.036785016 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.445029309 seconds)
  done (took 7.716384557 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.356895646 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.358330854 seconds)
  done (took 14.237405435 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.31691134 seconds)
  done (took 7.585157435 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.082824981 seconds)
  done (took 8.351659179 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.339228713 seconds)
  done (took 7.609003184 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.408101908 seconds)
  done (took 7.676853763 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.62027002 seconds)
  done (took 8.888698098 seconds)
done (took 155.047506882 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.326610461 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.331191029 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.329700473 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.3283843 seconds)
  done (took 26.583722077 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.367558058 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.366270969 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.368184776 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.377339537 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.370390223 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.368114463 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.359223831 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.359846127 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.378884383 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.370008295 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.370190082 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.371059026 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.3688331 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.361040451 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.371067418 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.370099146 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.37860894 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.370655905 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.360678444 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.371941205 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.335400314 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.379213138 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.37213458 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.336196955 seconds)
  done (took 34.072356098 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.533560059 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.406374354 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.48783771 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.386656904 seconds)
  done (took 7.083848071 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.386025059 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.388375461 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.400762668 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.438063748 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.466728508 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.399569102 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.361352027 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.356012815 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.34242097 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.387785228 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.464295356 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.405460207 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.470008851 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.335081928 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.522148824 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.336550451 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.335771776 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.38862921 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.44128216 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.453483352 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.335741997 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.387875358 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.390608816 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.40518402 seconds)
  done (took 34.868549167 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.336447791 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.341110971 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.341578019 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.336078997 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.336403424 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.335311085 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.342023115 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.336513342 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.357915388 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.337122222 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.334925406 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.335757151 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.335058286 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.337115895 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.334720164 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.349785523 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.348045906 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.336713521 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.339128193 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.342585713 seconds)
  done (took 28.066064413 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.32913314 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.183793464 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.680844527 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.587959537 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.329223534 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.332111737 seconds)
  done (took 27.715090489 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.401027815 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.518142936 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.338541517 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.662335399 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.748259317 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.339544379 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.337491602 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.551057023 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.830095744 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.835255535 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.390090546 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.399788833 seconds)
  done (took 19.624940825 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.338577364 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.333679368 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.344957725 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.347968855 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.385896597 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.342146443 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.344941224 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.331179104 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.390301903 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.392912152 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.344471152 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.389782784 seconds)
  done (took 37.559930778 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41946638 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.375906692 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.141145743 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.13408803 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.7070636 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.545002896 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.101295188 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.779407953 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.335960762 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.606932598 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.251886868 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436719152 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.586998811 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333134606 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.337627981 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.302977581 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.56047681 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809012697 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336805798 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.133270245 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361556745 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.336097755 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.301820663 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.362949895 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.544518085 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.466506483 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.594300474 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.334915501 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597065883 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.347462599 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344193095 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.335110921 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608890816 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958009287 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451557473 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343077757 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.10205808 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.042235933 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.330489427 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.148990145 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.025562214 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.338932569 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346599365 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334388853 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.267250358 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340052132 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790243556 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.339769019 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.04652602 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.335093767 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.344998772 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427847621 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.33876063 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.15088784 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.408327069 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.335304675 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.332936785 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341995899 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911051618 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.62626217 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.340805204 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.271386746 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.787226982 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.214970486 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953183619 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.439783122 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.339100273 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.339291276 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.269995099 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.191037045 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.355632707 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483452591 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.357213744 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.985313821 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036291291 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.267140616 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.27712891 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870324417 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338641813 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.272645832 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.563790883 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335803868 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.268978255 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.291994027 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.268745073 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994010505 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346505357 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.66036625 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.345509244 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.7828434 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.346720013 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353479994 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35929003 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.560947889 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.217770936 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337332115 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.034859267 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476956577 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359115441 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.786783537 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271771405 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.342200731 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593176319 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.548390879 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.748565238 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.295802296 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549159327 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35020285 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.353211653 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.346667047 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.350111997 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.906313145 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.351237545 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.629145732 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356486564 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.336492871 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033459051 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338776646 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.437091139 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.249798912 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583036858 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.064445281 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339198597 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418391564 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336011734 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.336590097 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.226515205 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.853002508 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.336875986 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.339126987 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.348776175 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.348808088 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.336955039 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283172723 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.346888173 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289237225 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.340821655 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.560723381 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.33801685 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614639277 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270974953 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484639111 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.427600736 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.558866964 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.477875008 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.340176723 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.596028756 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338126502 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.340409847 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.350988058 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356889978 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436178679 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359995932 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.338069696 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.59426749 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.341100981 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.342012347 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.232397636 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.342880017 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346631791 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.342843713 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.238507667 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905601339 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317160904 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.346512991 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.227537913 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.352596157 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402104513 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.343692761 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.348540248 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.028425118 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.211594768 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.342560443 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.336131354 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580715428 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.349992096 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.15431901 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421945224 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.542107848 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.908011521 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354372363 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.27340863 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.050009286 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.031465903 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339641168 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.274972303 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.339771458 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348474993 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.350164179 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.914726879 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.91121489 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344735107 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.156911445 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.348468275 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.350546766 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.345820248 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339926646 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.996341199 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.651666837 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345722162 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.354296784 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483255296 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.353411255 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.274432975 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.344133751 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.345520659 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.340793829 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.341238601 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372737816 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.160674581 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.818763237 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.599333596 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.097038761 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.351439127 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.259455193 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.373281221 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.338641967 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.074202362 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371423453 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.357783572 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352922799 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.351700027 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.21411402 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.01577438 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912179763 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102496746 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86929829 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.280878827 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.356925268 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.345365931 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.795607985 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275526663 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.898986704 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.517644711 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.794615384 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285237181 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.548748337 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.483292668 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055710315 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.35451614 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.569872242 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.27947756 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.081798949 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369305661 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.55396652 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376795463 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.353470904 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.272381139 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.627097538 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606276136 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.066296151 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426029643 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.795013858 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.084331805 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.360228011 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.342811847 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.611541652 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507776831 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.055446865 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.515063761 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.349634644 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.311841045 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.831033181 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.342435792 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.567488858 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965582468 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.351982754 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.551879517 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278599102 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.353753601 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.354623594 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.344072123 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.519216703 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.344325791 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.599044239 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.354977059 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278308941 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.348348062 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874447536 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.200136912 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.350090535 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344944788 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044101712 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35546857 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614240629 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.355572596 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.991784079 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351719107 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.278368398 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278395389 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.03774868 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.346569977 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318715087 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819514036 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.769234767 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.436021346 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364029477 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.207499539 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.599814954 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.358425246 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.916953291 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5718926 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.20684746 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367140435 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.446039344 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.132743683 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.346464073 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.345054966 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.580927852 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246626558 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.568637367 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.167143824 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.252331845 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.344817083 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.556195894 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.346707886 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.334804268 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591456086 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.058397737 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.352303265 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047630556 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369928201 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.327018515 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.275599578 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.798581161 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353208409 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42569529 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.35599067 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.356219406 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.357286031 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513211763 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330947374 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.363288595 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.361313104 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441090051 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.680860444 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.001051651 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.353399494 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92320499 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056598909 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.926181461 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360904729 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.346775109 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348578611 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.281223281 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495217195 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.572838526 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620798083 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478950718 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.858017467 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369891716 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.119820217 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369457177 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561269135 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622223371 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.242504784 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347834842 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.360581301 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.348942039 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.359183998 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.559145079 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824323053 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.886288992 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466664597 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.35694028 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.801161842 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621837188 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348708067 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.349803061 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.941427507 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.366099808 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.620511763 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.35285639 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354089942 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499125775 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.358297477 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978411991 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.357813412 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.504781875 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.122600179 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.26938917 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.606069741 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.7676763 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.361126041 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927281488 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.044152808 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611985462 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416977668 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.360004884 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.461189628 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496369025 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.351311957 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.352946894 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.350397891 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193349957 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.060270088 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.358985599 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931191153 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615081483 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.347925946 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.358770751 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376145613 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.359547687 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.573542007 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021180924 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.575419248 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.360667901 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.35251377 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.166798464 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932243832 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366994088 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28517708 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.354524763 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580244024 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.588626966 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371144961 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.803070825 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.062149904 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891113743 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.322813092 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372666111 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.350852626 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.049384436 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930852244 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.029112244 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827837051 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.918515225 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361231465 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62815113 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.35664341 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.355407311 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629718072 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.355868223 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.356849532 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.365266157 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.927399695 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.077264322 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.35607515 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.211550365 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.290468883 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.692260661 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.054413516 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286636424 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358543093 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.534828073 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.352578106 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481005024 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363742288 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.361986716 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361344788 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.109550557 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.626227204 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.358079897 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.338261599 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.176028013 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.357071287 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361344877 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618468232 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354640082 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.018143076 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.705078445 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.606875877 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.358823913 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.339954878 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.355656317 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353318866 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.338796191 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.551827126 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.930361241 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889618163 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.364688961 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.364376003 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.357945504 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.569628529 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.565031358 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.364040591 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.368124178 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3657927 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371921781 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.258248725 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.855343417 seconds)
  done (took 1592.427012381 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.362017503 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.370583293 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.366880326 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.358200536 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.391950524 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.369951309 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.437697646 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.35847682 seconds)
  done (took 52.311140791 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.364534293 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.604277974 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.382679449 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.358087679 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.3656154 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.365391251 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.76965621 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.366386545 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.363958007 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.364602514 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.354895398 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.356072799 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.950034995 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.367037644 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.361300565 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.341490622 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.36478406 seconds)
  done (took 65.698430922 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.357748164 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.689523143 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.432952235 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.373055904 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.115533493 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.364695869 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.71342536 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.394813534 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.355489246 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.498123693 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.004970081 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.356639079 seconds)
  done (took 83.95468708 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.363272098 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.363697244 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.363323511 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.363374629 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.362801099 seconds)
  done (took 8.113203441 seconds)
done (took 2019.344553018 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.728805567 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.022573373 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.953682132 seconds)
  done (took 5.274010367 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.506177042 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.551176006 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.673672389 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.678412589 seconds)
  done (took 7.707010103 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.635179432 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.73011272 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.546955686 seconds)
  done (took 6.210772242 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.655530268 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.363322936 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.480351044 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.35622321 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.359178191 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.360879811 seconds)
  done (took 20.375475326 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.361726317 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.363713402 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.361942712 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.364070785 seconds)
  done (took 6.749003579 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.342114422 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.112228853 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.348157491 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.359732287 seconds)
  done (took 18.459909017 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.111968031 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.120492226 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.105988989 seconds)
  done (took 7.638832635 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.360753493 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.200985726 seconds)
  done (took 9.861271179 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.677818768 seconds)
  done (took 2.977320109 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.49506697 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.629789159 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.394038942 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.283185047 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.41002096 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.898310957 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.847788884 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.468166125 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.29828374 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.333158907 seconds)
  done (took 27.358056182 seconds)
done (took 126.137397003 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.950960973 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.363458296 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.566011104 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.92164723 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.586100068 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.56616345 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.563640593 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.890976842 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.427857542 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.420532248 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.923805068 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.586788469 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.509358418 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.3623969 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.511183341 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.362417568 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.588989094 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.996404514 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.606585384 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.799297147 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.564294209 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.560852211 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.750976421 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.58224224 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.588241106 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.515639913 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.13986045 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.36326621 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.77868759 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.215526226 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.518964041 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.978101422 seconds)
  done (took 186.36309981 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.362044713 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.36273638 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.361843702 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.3626114 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.368018461 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.362411367 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.377345886 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.360077948 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.382508278 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.365124816 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.360695166 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.36143551 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.361065925 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.361679848 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.359810701 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.36365797 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.362761265 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.364116747 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.37553105 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.3621 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.375594943 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.374640286 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.3617665 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.361767894 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.364383568 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.375760125 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.363453178 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.362182575 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.360004578 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.379413555 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.364251591 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.365720905 seconds)
  done (took 205.009339597 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.362757119 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.363686928 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.36227515 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.364285433 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.364278354 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.366198156 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.362070255 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.367966496 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.37165725 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.3779954 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.371692855 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.364330835 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.379765575 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.365463725 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.380345428 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.361225205 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.363472887 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.381842776 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.366500687 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.364781094 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.367193725 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.364029041 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.365803567 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.36470624 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.378281455 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.364326463 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.363955349 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.378458052 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.366585362 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.376259782 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.368304253 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.367061182 seconds)
  done (took 205.092042896 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.564794038 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.370134804 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.371780592 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.32240592 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.372020589 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.371621603 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.366284464 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.567888771 seconds)
  done (took 14.611965628 seconds)
done (took 612.375479635 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.576470513 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.296029997 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.559932151 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.393132697 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.124253299 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.393557649 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.391779494 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.548459582 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.273826574 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.55178018 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.592707038 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.390691531 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.713992666 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.388504715 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.626779832 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.483123247 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.226628391 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.331384902 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.690706618 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.885464546 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.635693172 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.79810787 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.548247891 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.268382714 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.718454908 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.799214726 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.017415486 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.216525136 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.390637864 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.693949034 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.90948939 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.258914554 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.446927948 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.429940267 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.484010857 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.467479216 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.237444922 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.42719229 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.567771526 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.574980308 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.890177727 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.09742515 seconds)
  done (took 91.625313137 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.36285854 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.364698827 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.360374714 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.363256535 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.363004511 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.363272133 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.359909482 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.362612092 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.362023112 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.359797793 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.361409583 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.36256385 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.362786965 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.361775978 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.362897022 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.361595576 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.364217198 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.364597578 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.362792182 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.363480039 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.362366784 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.361093766 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.362383447 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.362858488 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.362441354 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.363097736 seconds)
  done (took 36.73610309 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.374570068 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.602778645 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.765313749 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.379031212 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.37339819 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.378069994 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.445628793 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.374425079 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.377455614 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.377134706 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.519461622 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.377472313 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.404756722 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.773159839 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.378091619 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.376341759 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.375537313 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.375189714 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.610066198 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.383856925 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.446356833 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.376697749 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.446130204 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.387385674 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.37738029 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.375668608 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.379540978 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.858979745 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.376895652 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.521200954 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.098391767 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.4452775 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.817466095 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.77886327 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.09925321 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.376909262 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.377577035 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.524207156 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.378790929 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.377611175 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.447273326 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.378066499 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.773716902 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.989827301 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.396771227 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.378451301 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.884701931 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.528969104 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.607221149 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.387271521 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.797726356 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.382502561 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.380389619 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.379995545 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.605194007 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.386608668 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.378688249 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.895287522 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.384492106 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.447132005 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.381497781 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.378592558 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.622518683 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.382322597 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.607023345 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.382769088 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.384965502 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.379300556 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.78031782 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.383511462 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.00454954 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.397551446 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.379194577 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.524756561 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.612217192 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.912127876 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.385057054 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.626733751 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.831755296 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.450922274 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.385494241 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.851710368 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.454957353 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.384232275 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.381773887 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.379115883 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.38157363 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.425667216 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.445882537 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.936612814 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.001825793 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.912822286 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.455797603 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.391451459 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.37789451 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.899012491 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.382604786 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.38116903 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.774613959 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.012384569 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.397905788 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.384121892 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.994957783 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.399177708 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.453857085 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.387954906 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.786874532 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.384324488 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.426646315 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.382335206 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.38714021 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.385834403 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.453092579 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.386057968 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.379111598 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.982673424 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.549107518 seconds)
  done (took 179.910936874 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.377449208 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.376167235 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.375402785 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.375103097 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.374853715 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.37983919 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.37565232 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.373948656 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.381664101 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.376643359 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.376439791 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.376501962 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.378294312 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.38497605 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.381388278 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.382239966 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.985758571 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.377727432 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.37834724 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.378755057 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.160983978 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.378700389 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.378435201 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.378350168 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.378079589 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.377190961 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.379217827 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.377304462 seconds)
  done (took 153.289089557 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.380783136 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.905797326 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.387691103 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.502904243 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.405194403 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.379934451 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.502564232 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.438845774 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.384958797 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.381602001 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.3829452 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.666681334 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.386671176 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.86101971 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.555307581 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.505854367 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.859446779 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.385185755 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.380563708 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.38206066 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.50459813 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.389380376 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.661545935 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.907097825 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.387838705 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.905070702 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.373871765 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.385874831 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.383835769 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.906811522 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.3842739 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.66554372 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.454711912 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.440293867 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.907209323 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.859700555 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.861357154 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.51980134 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.384176936 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.384362054 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.382202919 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.373281538 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.908795383 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.387324203 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.384909958 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.903494397 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.399395932 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.386831579 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.40196533 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.384176941 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.439722062 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.439475447 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.6682165 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.915430901 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.458282784 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.425624042 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.507747675 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.767275273 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.391261751 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.858958491 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.371684709 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.910118649 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.386209866 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.368068412 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.383400669 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.391686921 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.525232761 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.510086173 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.867014532 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.390348808 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.866974939 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.525337061 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.387258119 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.382247685 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.387430623 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.912916384 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.865890499 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.521172038 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.508128012 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.563319927 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.378306069 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.384375121 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.375405995 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.456214909 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.390034543 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.9125618 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.860389624 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.385191785 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.386495668 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.384255765 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.387146753 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.544922901 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.914063107 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.453447655 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.863865651 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.676581855 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.666258548 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.384297185 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.441848952 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.383379409 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.665477277 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.387046798 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.436547404 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.831520439 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.671339869 seconds)
  done (took 163.454800712 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.614171888 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.488880948 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.469573464 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.492114191 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.909910641 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.921733344 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.507670671 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.497391368 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.481684722 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.611610956 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.452488627 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.476892825 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.555461838 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.451270793 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.071478812 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.446113739 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.471439846 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.50643711 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.483456753 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.349584571 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.975976596 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.654743022 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.539214659 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.344080534 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.471706262 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.101358784 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.899272601 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.888463702 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.535310291 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.566393557 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.883914226 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.438976042 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.257428298 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.001742895 seconds)
  done (took 65.13506243 seconds)
done (took 691.457420666 seconds)
SAVING RESULT...
DONE!
