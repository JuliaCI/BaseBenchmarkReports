cset: moving following pidspec: 5141
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.69086577 seconds)
loading group "string"... done (took 0.583153275 seconds)
loading group "linalg"... done (took 9.708278292 seconds)
loading group "parallel"... done (took 0.180491966 seconds)
loading group "find"... done (took 1.635195311 seconds)
loading group "tuple"... done (took 2.173361639 seconds)
loading group "dates"... done (took 1.496076694 seconds)
loading group "micro"... done (took 0.219990268 seconds)
loading group "io"... done (took 0.619374268 seconds)
loading group "scalar"... done (took 47.297500839 seconds)
loading group "sparse"... done (took 14.646121893 seconds)
loading group "broadcast"... done (took 1.285222127 seconds)
loading group "union"... done (took 11.455960522 seconds)
loading group "simd"... done (took 2.819761834 seconds)
loading group "random"... done (took 11.026523937 seconds)
loading group "problem"... done (took 2.344666528 seconds)
loading group "array"... done (took 26.211550488 seconds)
loading group "misc"... done (took 1.214561285 seconds)
loading group "sort"... done (took 4.058986784 seconds)
loading group "collection"... done (took 20.683403364 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.76726767 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.152930206 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.257451826 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.357714082 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.250487935 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.148249603 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.169910472 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.361021471 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.062184304 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.235413972 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153311902 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.595214272 seconds)
done (took 6.194501977 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.259275693 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.327969028 seconds)
    (2/2) benchmarking "String"...
    done (took 0.174461942 seconds)
  done (took 1.124281117 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.08881439 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.182623341 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108106989 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.09571788 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.111009384 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110925956 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.109456553 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109518473 seconds)
  done (took 1.450420629 seconds)
done (took 3.552484124 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.535554143 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.872886326 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.570188359 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.16419949 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.337952844 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.402586063 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.339665289 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.204890497 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.106499163 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.105983336 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176699456 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.427818527 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.479977109 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.048602807 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.10566871 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093746036 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.128524459 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.806399466 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.075140294 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.1315774 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.581996609 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.215759242 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.109218154 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.115360864 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.194578291 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.115144805 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.176305305 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102305276 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.662192043 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.129263332 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.199457185 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095240447 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.168759718 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.231967855 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.24517698 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.089755274 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67865854 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.199907392 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099158372 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100257169 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.673916954 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.131573209 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.167102543 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.102697479 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.089135298 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.1881414 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.116283734 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.09152783 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.111784038 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085527366 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.166733282 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.473829419 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.090126348 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.167885401 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.089219351 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.702160972 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098476039 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.284715777 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.135569699 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.102187994 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.073290098 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.103498956 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.15582278 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.10754794 seconds)
  done (took 20.801410375 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.159669066 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.169095061 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.089918981 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139863902 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.141288014 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09272282 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.080605416 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.091125068 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125978161 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.235504405 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.141649942 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.169439087 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.087278749 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084346184 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.143594496 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.25029364 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119534984 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104955772 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099147351 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103505927 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122659049 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.110529228 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.10621969 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.108657928 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168789132 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20232438 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10776739 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.119890887 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097703626 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11449925 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.138293569 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146710752 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.088280053 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080728985 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.185975406 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.117755053 seconds)
  done (took 5.289090684 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.22577608 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12254455 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.238226575 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.172317127 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146190653 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.170346582 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.158982544 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.314741731 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.24550775 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.179739185 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126023389 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.093507775 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090813508 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083039383 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.092347209 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.692109036 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.189427824 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148093245 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.151091053 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101718991 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083422396 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.380070148 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09711332 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079313895 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100358959 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.072397143 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.222877888 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100573727 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.230235708 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.081080212 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104867638 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127557923 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19419036 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132694272 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142516284 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079287222 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095322469 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.216818365 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.110355016 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.090950036 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.116169098 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13037559 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13346099 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098596176 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.107936315 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.222115032 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095076516 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124172709 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.155819473 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.213272683 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.170104102 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.078783387 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.337380088 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.113126785 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104382497 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078381077 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.316431288 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131346849 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.093068128 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074980638 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098308829 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073445194 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.172344131 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.091482864 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.442951984 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.095268677 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.166384858 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.868636851 seconds)
    (69/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081847618 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101958947 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098400698 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083045687 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098402522 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.097428897 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.093109623 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074328867 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.093056501 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.073706306 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.099318112 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.116063981 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081387185 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094033524 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15336799 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.093099277 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.112875948 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119684848 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084903466 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.092043429 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124952039 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077009434 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096420503 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.171609191 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104183855 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.101852787 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102041679 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.139973015 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095872107 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.214870329 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.076014019 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094714187 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.079456358 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121841658 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097131171 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123486076 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11436489 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077227539 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09786051 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.072652334 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.093829564 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.154985723 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.077295614 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.093969184 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082832114 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109125537 seconds)
  done (took 23.909555166 seconds)
done (took 50.62144397 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.566500876 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.119442599 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.117926145 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.118907544 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100404217 seconds)
  done (took 1.728665173 seconds)
done (took 2.404241503 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.383773708 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.186665266 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.12615353 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.183920369 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.104296708 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.192648528 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.192884324 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.099772532 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.224668972 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096323338 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.184990543 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.097970226 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087065381 seconds)
  done (took 2.868213791 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095896452 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.128566725 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095631449 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112147455 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073944481 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112352128 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108079811 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109477542 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11035234 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085835441 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092822154 seconds)
  done (took 1.802190269 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09231698 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118178347 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082638635 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107876341 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076758557 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108690214 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.089703065 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.122819834 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106848259 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089088817 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092464773 seconds)
  done (took 1.763978225 seconds)
done (took 7.104850227 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.197169158 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.046915553 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.147615499 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.202633051 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.381105269 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.25034364 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.63380555 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.164310387 seconds)
  done (took 12.913328928 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.179208358 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.082371998 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099565214 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.100243481 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.082449369 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.098082914 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082413085 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.0965697 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.082381791 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.097027977 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.082540318 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.096567782 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.082555577 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09874433 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.097070101 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.081254736 seconds)
  done (took 2.286690853 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.121534349 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.121867601 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107653568 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108783256 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087141048 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10377534 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104200253 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.092072228 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100261581 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.087364038 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.109752273 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10684779 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091498727 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.101693305 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104827886 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.09357288 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.102450212 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104865556 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.09379149 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.105777835 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09187079 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.103489375 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.106669573 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.091831932 seconds)
  done (took 3.234254013 seconds)
done (took 19.111944122 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.177088114 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09684381 seconds)
  done (took 0.958448621 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.146293139 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.147785993 seconds)
  done (took 0.986928609 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111991573 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094868171 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139009585 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.114612225 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081499371 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094815531 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.132885962 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082262431 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095025264 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.0821688 seconds)
  done (took 1.724441043 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.086073984 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10023632 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.093696921 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.16161774 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.095466518 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.100894398 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.085557594 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101188833 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.102689092 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082567317 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106309865 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.122211281 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087504764 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.122638436 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10151945 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.091982926 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.11012881 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.104378432 seconds)
  done (took 2.552274571 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080822591 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097224985 seconds)
  done (took 0.869391186 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.087997437 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096449972 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086179523 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101135748 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096139811 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.081409418 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096181546 seconds)
  done (took 1.337341906 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.569812169 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.277924361 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.38262641 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.120563729 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.141549332 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.404264547 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.14373881 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.113828382 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.098151967 seconds)
  done (took 2.987699978 seconds)
done (took 12.108951733 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.089003086 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.223081547 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.699139275 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.103629583 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.097549437 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.141190108 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.327100639 seconds)
done (took 2.384309282 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348739127 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.155431786 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088729098 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094778319 seconds)
  done (took 1.384145806 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.07600274 seconds)
    (2/2) benchmarking "read"...
    done (took 0.104051905 seconds)
  done (took 0.878393201 seconds)
done (took 2.971806271 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078913011 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.130141113 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.077008606 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.094933666 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.077907678 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.095647884 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.076957987 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095596811 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.078108831 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.093808204 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.078237298 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.09295808 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078201704 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093860538 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0782073 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093191186 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078955999 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092949175 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077580062 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093166945 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.078476897 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09357484 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078434684 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.093301674 seconds)
  done (took 2.83785022 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103278903 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098848558 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.100564408 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085059828 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102287047 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085376147 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101324295 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096300015 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085799082 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09618465 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087335079 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.102596089 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097089796 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086021221 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097198024 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.087074489 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.102949191 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097485128 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081258564 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101875751 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.084411516 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097182699 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101242786 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086959734 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.101723337 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101238224 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083701643 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097106814 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086537339 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.102867761 seconds)
  done (took 3.541408274 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088335837 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.090753524 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080436746 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101149769 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076432884 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095525823 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.075957668 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09355906 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081200278 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.09414755 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081504925 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09465967 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.076220243 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096061097 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.082374819 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097466113 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.091259721 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.09330279 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.075796076 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.097371126 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.080780365 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092401534 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.079876893 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.095259778 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.079260467 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.092550016 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.078982769 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.094826382 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.080052715 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.094134866 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.080543054 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.09820774 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079351566 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.104959971 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082745932 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.094707737 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083509183 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.092465187 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080771375 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.092029698 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.074806675 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095157296 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076497727 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102786492 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.095329319 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.080768953 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091443837 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.082907723 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.095835568 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.084866254 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.09221117 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.077595958 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.098901449 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082766387 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098843402 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076287722 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095269036 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076533767 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096479329 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079265548 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.091910299 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077149212 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097612648 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080814666 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11369093 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086787817 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091676119 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.084339634 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096262125 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083392316 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099340103 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108330724 seconds)
  done (took 7.094186726 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094319557 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107482396 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082028124 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098344773 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080055234 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09681276 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.088570753 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096446593 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096324374 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089621158 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095285558 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082337087 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098240473 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080372968 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096440261 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081992192 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103775418 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097276878 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080405407 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097258102 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081420175 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.105183174 seconds)
  done (took 2.739851597 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.261394491 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087803892 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.150327887 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.115663613 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.119466165 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097478721 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100737593 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103328543 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086454762 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107687313 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107912358 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086337328 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120057112 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107973264 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091961896 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109961378 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102083304 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094443704 seconds)
  done (took 2.761867774 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.098962576 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100276717 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.224948142 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099929021 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.10005918 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083743769 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107348953 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114260984 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083657187 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098968936 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092993362 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10028319 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.083130607 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099484605 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097813718 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08369654 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.097996836 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083338284 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109270151 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109676274 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090614766 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110732875 seconds)
  done (took 2.987233602 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098409056 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099502067 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.133298481 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088177019 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098576104 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082371372 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106724431 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083212723 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105869098 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098354579 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083510409 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097848957 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.092131578 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099382566 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.107649312 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082590535 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098253339 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084038341 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099361401 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081562424 seconds)
  done (took 2.633985562 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.178720148 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098031156 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114266522 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129105941 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098639204 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.114095856 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.128066422 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.097283188 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113043753 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132962955 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097533501 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11389985 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128454792 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122651617 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09883668 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127833709 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128452186 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127578938 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.099063206 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114697938 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.131554983 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097406701 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.127944846 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115195969 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098244701 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115156176 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113533829 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.106769161 seconds)
  done (took 3.986942873 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081292428 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079416761 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.096390448 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.078478827 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.097416503 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.079657651 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.096345154 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.079180572 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095581611 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.078830843 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.096891634 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.080092235 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095261602 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.079904638 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095954646 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.079982107 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09527673 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.079905813 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095501435 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080386613 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.095270534 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080576317 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.096509845 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079423402 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09654694 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.080417125 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096179847 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079889973 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09578401 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.079354885 seconds)
  done (took 3.34105755 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092167682 seconds)
    (2/2) benchmarking "in"...
    done (took 0.124845552 seconds)
  done (took 0.937091842 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.089429497 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118356522 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081582618 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.09761882 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089354519 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097614381 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109824594 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092019513 seconds)
  done (took 1.49514283 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.147470902 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.149745474 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087055503 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113073479 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.150026751 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.143165196 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.143743772 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.087852216 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10154536 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.076318157 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.142031457 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.094035575 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.085425203 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099103802 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.084744289 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107873681 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098355353 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.092650564 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.10734466 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083059513 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104328262 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095036656 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105841499 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.110068658 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.077984203 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.105988872 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.091410656 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.112055289 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0992588 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.088937038 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.101096108 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.082467999 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.102936488 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.087430276 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.099486151 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.149937444 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112127766 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08351889 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.104127037 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088100096 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110117386 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.081915907 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.105134758 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.099861569 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092269953 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.103924124 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.087868234 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.099332502 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.078819536 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.095875482 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.082926604 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09824978 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.081457081 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105912082 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104173644 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094756596 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.102367738 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.079220272 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.097609343 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.081715987 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.10299248 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.09945476 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089380549 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.102444458 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08294997 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.10497229 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086832449 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.099150506 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.083523914 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.099710287 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.102872484 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10208746 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.106226422 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.087967391 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105654598 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099440987 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084091652 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10552221 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087438223 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105581953 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.0860348 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108076407 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100720125 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082404508 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.099860672 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090704841 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.101217074 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085646945 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.093416233 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096178524 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101675715 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082440603 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.096774304 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.101712645 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08254451 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103131534 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079420506 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104778724 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.080364151 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.104889907 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088625475 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096825898 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.107066999 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089208886 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105176506 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.086352445 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.143334526 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101346621 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.081305864 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.103374049 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087878165 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.098748758 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.085459412 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.098488285 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080017047 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.099937071 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.1046744 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.087480342 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.102744178 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.08705843 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101461903 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.088616835 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.101386597 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080866376 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.09897758 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.087244184 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109749022 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106870544 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.085019898 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.09991586 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082813502 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.10480053 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.086472163 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.104709688 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105500589 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086604661 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.099711079 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084807589 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105968646 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.086822814 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099160021 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085057353 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105983182 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.103532617 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085562087 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.105263622 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.081279258 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.09624255 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087958135 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.099444604 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.099560693 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091976192 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.100097556 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085033605 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.100194075 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091839495 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102476185 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.105673943 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084799586 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105438723 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089291567 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.094440187 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084047907 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.10215238 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.088859129 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.100810194 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.083196912 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.099139831 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088896118 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097710741 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.10365548 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.078640265 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.097499484 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.088709687 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.100943578 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.086609128 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100549835 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100472067 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11597475 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107580501 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.085920125 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.104823143 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.087692049 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.103350013 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.08643496 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106830209 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.08879958 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.101287837 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.102573211 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087916381 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.096879449 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.087484349 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.103083374 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087989775 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.095301597 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083190022 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.094320638 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086978882 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108972894 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.10445943 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.089211358 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102447094 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085641849 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111393523 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.082388759 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.104410775 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.078835319 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104558666 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.110755417 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.089029037 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106708657 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.088816756 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103443501 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.082504187 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110942063 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083750499 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.104747228 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.101238346 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079577669 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.097958761 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.088918161 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.103107978 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.091027241 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.099704137 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088488421 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107858724 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101374187 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.079651061 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.104491603 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091964009 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.0996551 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087578748 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.100473648 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.084853688 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115014258 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.096260291 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.083254733 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.108450862 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.086843397 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.100573955 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.083236292 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102863872 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097446619 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102938422 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.085451354 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.1031457 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108733114 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.084721719 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.098448579 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.082230788 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.102838968 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.079916177 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.102272809 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087501615 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.102190201 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.082953218 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110924604 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108020636 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.088630158 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104963992 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.086922275 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.106751418 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.107814785 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.080673784 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.106935889 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.082186621 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.097905617 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.083541717 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.095981345 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084329701 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.100825074 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.088326056 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102792472 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086359172 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.104367698 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105079631 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.083798517 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.107466618 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117461106 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.079744475 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.097429238 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086192425 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104617072 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084422604 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.100869463 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.083716668 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105756098 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08704579 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109584245 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.097663857 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082167161 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106707105 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.082412442 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.10728938 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.088888839 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.108673833 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.082845161 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.106141957 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.083721134 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109858329 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097383153 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.086471168 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105066484 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086080455 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102003216 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.103591251 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.082588937 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.097409312 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083303958 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.108131409 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.080790045 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.105614135 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.084764563 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103956462 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.08087106 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100016401 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.108205868 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.080720389 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.107971627 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.083687146 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.097716259 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.079829485 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105929008 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088249263 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.107736419 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082399288 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.104467867 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089888297 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104114803 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.081548411 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110134365 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109110165 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.08927808 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112438541 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.078855211 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104395688 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111038536 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.082697197 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102868727 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.085022367 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099272791 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089856844 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.10748846 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.088365393 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103036403 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.079278054 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.102316046 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.090188831 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.105182303 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.08763611 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.10350028 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106358422 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08183503 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104247937 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.089571422 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105374172 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089842211 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10645748 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.086280522 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102289561 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.107452501 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.084367507 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.099512789 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08039782 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.102631873 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.089861141 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.097034939 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.089443571 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.105447881 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.083009535 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.103214657 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.08644003 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.10201306 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.103778114 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08765229 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.101895278 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094268646 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.102219481 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.082836067 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.106188051 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.087558588 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.098401979 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.083496089 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100587357 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089886957 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.104388896 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.106205577 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087783609 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10698747 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.085461874 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.105935728 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.088059561 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.108674455 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.079799086 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.109033354 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109156668 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.085349126 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.102573703 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085738998 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.099158177 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.085901663 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.110247183 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.0835083 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111962703 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.108777077 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08766154 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.103271708 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089047678 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103924414 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090535585 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.100147909 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087938658 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.09864832 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.089571665 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.103808296 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.108892931 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.084433787 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.100087346 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087810518 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.106814276 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088150282 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.108813532 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.090600733 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.09973762 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.098752573 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.085319434 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103284488 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095552976 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102335814 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.084798304 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104748392 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.084228318 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.102540495 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090426827 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099815366 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.101236182 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.087916496 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106504074 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.083085826 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.099802538 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.087838774 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.10583472 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087551968 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105960905 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081138113 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.10594482 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.11046877 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.08562532 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.096889941 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083788245 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109094963 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087848891 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103113295 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.081545877 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112428286 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.108387823 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091176652 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.100505503 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087379508 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102794508 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.084694285 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.108515345 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103930471 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087746227 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103941957 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089674599 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112531983 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08097667 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.099794075 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113661904 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089556975 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108095507 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.085229541 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.105215191 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092538623 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112519512 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.085780299 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100024403 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081389838 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.100784632 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.080524646 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.104444391 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112513013 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.087259176 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.103727748 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087331765 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10622637 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.085997182 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.104521393 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.080451011 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110995776 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.083917407 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111472177 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.099593906 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.080028387 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.104667137 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089208535 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101389224 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.082998092 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.103108686 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.086076004 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.10076776 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.084483637 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.110004958 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086520289 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.107519121 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105872939 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.084858036 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.104635861 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094676053 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.10236803 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.084361678 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115798664 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.108648412 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088441343 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.106575703 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09184282 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.110130646 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.08580986 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.109255665 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086164356 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101146404 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.110444721 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.091232949 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117383371 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086229137 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.098810034 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.088696015 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.101159932 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.081378861 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109941407 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110506424 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.091441094 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107666165 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084509796 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112389575 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08643478 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107039888 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105205521 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085824644 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.106248868 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086027462 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.105839465 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084988456 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.11065114 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.090884114 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10752398 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.09302244 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.098948748 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11378058 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.091857394 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.111121493 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084095143 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.100609654 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.081554682 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.105731761 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.091437864 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.108723688 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.087197066 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.106925338 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087583449 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.107751894 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106866161 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085113536 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.110409891 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.089032585 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.102738717 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.090324832 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.101787655 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08232323 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.103876666 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089483088 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.109796825 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088507766 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115843929 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.110555827 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08604346 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104182139 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089134402 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.105951644 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.088529798 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107152307 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.084225766 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10109471 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107977777 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.092581018 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107074921 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09098679 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.113374256 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085927689 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.110196792 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111934159 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.090061799 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.103457352 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089269931 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.105622781 seconds)
  done (took 58.506197 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.162829964 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093646719 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105081743 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.085753305 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133123907 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107300364 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086059357 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106513769 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087110531 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.119475285 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105494976 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086216624 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.129525934 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137934329 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133313695 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.121115332 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086036345 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106824612 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087441708 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10637393 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.126495194 seconds)
  done (took 3.083564414 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.110311681 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.124699056 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123396175 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.127664473 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096805935 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.121990592 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.12381947 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12204361 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10702716 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117295584 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.126875488 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121370543 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.097650998 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.117192091 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118180849 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117759317 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.106791615 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.116086387 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.122851451 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.123408862 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099241023 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.122875215 seconds)
  done (took 3.33364531 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.094338266 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.107459245 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090305133 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.104767018 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.089949049 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.104018353 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.095142081 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.104467074 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.094359807 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.104863854 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.08276543 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.103827578 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086541944 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.104951549 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.083476069 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.103960481 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.114200211 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.089065059 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.11017126 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.085918974 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.121399262 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.08605255 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.105892572 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.083246039 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.118109595 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.111383363 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.087006741 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.108540395 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.081742625 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.109358667 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.085266844 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.107251757 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088784041 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.102053342 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.081300554 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.109072943 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.088752253 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.105185045 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.085614713 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.102777618 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.087480863 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.109419619 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.111821418 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.086457306 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.104939816 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084095358 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.108226285 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.085532089 seconds)
  done (took 5.474148438 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126507769 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164529385 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090637718 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.153062805 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.129627028 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.121097966 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.08944601 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.130496985 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.109857997 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.111862234 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.110227129 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.132571409 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.113279513 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.116712838 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.094238402 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.113036591 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.094899418 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.11207572 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.119045718 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091403638 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.119414096 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.114934858 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.126801927 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.108114781 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114763795 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.111135402 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.09240236 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.116190395 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.126755901 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.100687319 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.117652913 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.119183449 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.128763551 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.094611133 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.112887795 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.092350736 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.131246243 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.112476536 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.113169955 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.089379826 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.111881367 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.096889279 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.11474452 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.131179377 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.095100335 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.116003981 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.112805343 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.087887158 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.127901377 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.113557952 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.101458049 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.130533261 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114477881 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.112718906 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.097036969 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.129087881 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.113683698 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.090795727 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.113887916 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.127486032 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.089795954 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115819433 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.128885327 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.092721525 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.121087356 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.131084749 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.115213006 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09727694 seconds)
  done (took 8.649021467 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122617146 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.117690357 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131117889 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.130801349 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098976332 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.116934126 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.117101604 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.097056082 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116950403 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12604137 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.097348012 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.227390683 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.093587666 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.124584721 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116962662 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098643161 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117285657 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116824666 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097100345 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117139672 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.116894664 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110391241 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.117037765 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.130477618 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133769557 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.093837289 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.117304171 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118398675 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109907221 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118086739 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.132949106 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.117525933 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.096824516 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.129901268 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.133982608 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.116896393 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089375207 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117224212 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.118107658 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.096919456 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.112799916 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129879998 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.098434132 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.112642829 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095370655 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.097253891 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.130719123 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.133835738 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.124790032 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10605106 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.116286204 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.130655739 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11711004 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097264808 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.131413275 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.142331791 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131308624 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131415732 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097306061 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.130946918 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130890577 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.141152924 seconds)
  done (took 8.141960547 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087085886 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086480683 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.107535126 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.086592264 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106764512 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086245399 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105726789 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086568283 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105649974 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.085663534 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105988211 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085767935 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107843385 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086628309 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106205278 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085627993 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106609532 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086286259 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106689044 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086559252 seconds)
  done (took 2.691864706 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.098247488 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.131150335 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089961199 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.119579643 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110098737 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.098680345 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109158365 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090109724 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111207958 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110847493 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103388212 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.122890453 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110135155 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098143806 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.121666358 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117908948 seconds)
  done (took 2.532009057 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.114715775 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.13163708 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.170028924 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.114193784 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.091026079 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.118479879 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.089339133 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.112536821 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.108067986 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.097158494 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.114855587 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.094404585 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.110872923 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.090846535 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.11101665 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.112976314 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.089539517 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.11436797 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.090108138 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.170703487 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.117609625 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.093191524 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.112946141 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.114428941 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.092897953 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.117894466 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.118519938 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.091289023 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.113292296 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.0926292 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.114144576 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.100496884 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.109834856 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.115586461 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.091731043 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.11233044 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.090073516 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.111450332 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.094444237 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.111281644 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.091569651 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.114452855 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.110538815 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.094366375 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.108900403 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.091880723 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.109152493 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.098153251 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.112795306 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.113874526 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.091642384 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.116644098 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.097662008 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.121087283 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.118347915 seconds)
  done (took 6.743006205 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10423189 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112761176 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.104968785 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.107899464 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090887245 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113835954 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.112050153 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093774038 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113479598 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087110028 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114165743 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093475426 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112959874 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.112555492 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093494165 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113100102 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.087804307 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113292059 seconds)
  done (took 2.671973608 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097072902 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111037828 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096599938 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110844075 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089145079 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111161015 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088607083 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.109265399 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088097106 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.110763665 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089831361 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.111638761 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108167826 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.091118809 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110730865 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090080778 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109974352 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090177886 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.110854953 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090227749 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110555673 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08945305 seconds)
  done (took 3.007916317 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.104241807 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.169830819 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.12147053 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.180716461 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.111747136 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.087932535 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.119817511 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.108266201 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.110082134 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.108156122 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.087729132 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.109459973 seconds)
  done (took 2.216301543 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119018622 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152876145 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111584054 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09115805 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125442002 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117915466 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098141504 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11760454 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12914356 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113551206 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118460751 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129056234 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129926065 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13029938 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103519351 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124639249 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118036268 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097464564 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111605845 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141684595 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097221756 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130078709 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117250062 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118524027 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098999423 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130545268 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12841027 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135403802 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097463562 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129417519 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123322038 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118013937 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110143768 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134584377 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111724535 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13043525 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097816911 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141631599 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125239239 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132154155 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091727915 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125059139 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129169616 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125408641 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109812106 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11821903 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125274531 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097354349 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119194279 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149373261 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124430874 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131372665 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102751227 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131789062 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130466351 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.15065036 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134105143 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131743918 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124564389 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135273029 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11114207 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124319772 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130928562 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136086372 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12406219 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110819413 seconds)
  done (took 8.814842562 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137590698 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114042625 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118786256 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135503718 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11102912 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118264807 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118416467 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097263898 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119079395 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113226731 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171484241 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097744978 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132647108 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132013665 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118852113 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098377799 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122041585 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132927009 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093702245 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.150171756 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11860773 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1315995 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133403169 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132751979 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114049345 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125287065 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11808008 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0975769 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12011339 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117555086 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107442251 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119699055 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132538852 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113060507 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112116656 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118673114 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118345479 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106776073 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119314467 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125310579 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132424733 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142319974 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098786167 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119050749 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135814751 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098730298 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119557503 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11436567 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099537447 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114108603 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136327335 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135864092 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136068024 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113671209 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118502224 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118266003 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097974446 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119457071 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118489042 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104220342 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132928718 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119014041 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15128038 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118008702 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100199561 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132716306 seconds)
  done (took 8.74966145 seconds)
done (took 159.671927236 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.153867304 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.17659778 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.15232542 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.148810234 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105688252 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121614689 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.140663011 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.153262342 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.084660063 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.105052471 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.084944116 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.109548881 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.15138108 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.105679919 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.084926213 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.11003542 seconds)
  done (took 2.786698393 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.209483282 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.322814905 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.128256315 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.116609344 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095303937 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.10909022 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.094903765 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.118283374 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110291363 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.10027549 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108622825 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.088115173 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.121464622 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.109368047 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.089246496 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108759842 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.119344465 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087789349 seconds)
  done (took 3.046269994 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115376396 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151220523 seconds)
  done (took 1.079601447 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.125637756 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.194765481 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.33198531 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.159770892 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.137896394 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.134094942 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.141238678 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.127521126 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.205526962 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133408426 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.132718633 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.112307825 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.120004797 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.121330884 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.126080674 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.093018963 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143548222 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.123143814 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.101531379 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116738579 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.139523328 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.094262764 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.120751481 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.123219012 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.196408384 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131146316 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.096602448 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.11432403 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.096179425 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.123071674 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114152986 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.112689544 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.132170836 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.207296652 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.098952024 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.201719555 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.123906703 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.093601312 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.12289726 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092616716 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120497758 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118833102 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.129652887 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.092851575 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.115354821 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.102137928 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.115523523 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.11549802 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.097100769 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.124862341 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.117226986 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.09548442 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.199655908 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.124313085 seconds)
  done (took 7.89430986 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.929372838 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157686995 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09128981 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.079966333 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119441381 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129889366 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.935201167 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117553479 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.281699623 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.93243673 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.129807692 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104278007 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.284967065 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.277001719 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.189289467 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.395499681 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.763427201 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127143135 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.12081256 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.186293886 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10155163 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14095049 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.136550423 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.442501662 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.115133157 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091017355 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122338812 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124814744 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182386052 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.111785528 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09578512 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.226085692 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.284996008 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.230730569 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114808564 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088956742 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11106532 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187844872 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.323671193 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.249005037 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.185653253 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086675361 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111204112 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100012485 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135070577 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107521866 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.186615726 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.215124763 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.195988673 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118681278 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124940581 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10505239 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120237271 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.182557037 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.110325907 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.375508351 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.377263884 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112015682 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121569521 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106789543 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.298250413 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.112644342 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.262206502 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143119306 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.247404848 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109675131 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819361459 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.189870376 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109675527 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098400566 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121924211 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119059777 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.09932235 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179304375 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.416509398 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126225649 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117958812 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089829587 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.252792423 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.110726439 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090776984 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.206499086 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094092921 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121791367 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125493362 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104279449 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.212633639 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.271190419 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12571658 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122150948 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097018809 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127392677 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.114354859 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.233332334 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.254499659 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.200741258 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.235343651 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123208032 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186860345 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.209454843 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098222935 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.213649895 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120625092 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107456441 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121472615 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.251512512 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.15374007 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.112527145 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097477389 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124056267 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.156939528 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.114290618 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.101867787 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.211901113 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.505187249 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.189985868 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.086354362 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.117020909 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123615197 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184101422 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121745821 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.292637861 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124532845 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.191231902 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122045879 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087439782 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123276021 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.185739721 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124211583 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124334698 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099067269 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124309557 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.293415054 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.255503751 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103881033 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.268480238 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.188191504 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120865404 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194564483 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125200027 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.21156646 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103018563 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120940172 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113759663 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81327246 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.107282955 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12312345 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117234173 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.203276299 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090223558 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.112763712 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.089104947 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11039728 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.835471987 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.093404864 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.110847829 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.090246974 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121299316 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122675576 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100520079 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11974983 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.202311684 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.270825828 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124605671 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101859667 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.112437117 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182714401 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115531382 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.091377766 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.112539601 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.090286091 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123224397 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117740954 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093459007 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.216067663 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.181519451 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.256122641 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.565700543 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110920377 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.090876629 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.26647241 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112743784 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.343990499 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122773656 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.262314811 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.209473001 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.088593295 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.37458361 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.211811799 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.203390878 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.093466675 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.215202084 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087324689 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124919095 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.204155448 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091672481 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122086241 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.180965644 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129385604 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125269654 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.199227506 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089847223 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.273626782 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087000451 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.21433757 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094080817 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120484933 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.345023001 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112800768 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.109458219 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.206778268 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118586154 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.097021661 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.870855087 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.090311473 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126833637 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120276848 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.261308847 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.208836541 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.103457727 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124415999 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125992962 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.185223057 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.254755124 seconds)
  done (took 47.766726244 seconds)
done (took 63.378676573 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.327111407 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.286486595 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.342974801 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.235796659 seconds)
  done (took 2.109259234 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.229205933 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163342914 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.192576211 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.112785018 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.201913992 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.111647835 seconds)
  done (took 1.846525724 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.542037709 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.420461274 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.378536467 seconds)
  done (took 2.178415023 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.283465949 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.278367931 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.369333963 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.508498717 seconds)
  done (took 2.416671957 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.257290266 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.135983711 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.128612658 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.185286492 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.223412647 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.223253802 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.15351998 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.170902184 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.114675083 seconds)
  done (took 2.48263654 seconds)
done (took 11.871150483 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.393127497 seconds)
    (2/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.161233597 seconds)
    (3/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.308467955 seconds)
    (4/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.168688804 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.174367194 seconds)
    (6/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.378632424 seconds)
    (7/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.181011502 seconds)
    (8/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.315081372 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.127023379 seconds)
    (10/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.207376586 seconds)
    (11/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.171580374 seconds)
    (12/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.220222626 seconds)
    (13/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.195043203 seconds)
    (14/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.131912454 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.194543582 seconds)
    (16/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.259372215 seconds)
    (17/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.254842899 seconds)
    (18/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.219438287 seconds)
    (19/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.238057713 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.107015889 seconds)
    (21/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.362865469 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.096511204 seconds)
    (23/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.336360184 seconds)
    (24/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.320105683 seconds)
    (25/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.217165053 seconds)
    (26/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.253330108 seconds)
    (27/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.121100512 seconds)
    (28/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.159000953 seconds)
    (29/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.16525892 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.204568461 seconds)
    (31/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.080009604 seconds)
    (32/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.171942537 seconds)
    (33/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.216372785 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.155712171 seconds)
    (35/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.097428057 seconds)
    (36/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.225297199 seconds)
    (37/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.177236144 seconds)
    (38/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.093196468 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.120816993 seconds)
    (40/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.099278416 seconds)
    (41/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.108669385 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.097649941 seconds)
    (43/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.120710208 seconds)
    (44/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.089129442 seconds)
    (45/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.219146903 seconds)
    (46/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.190634601 seconds)
    (47/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.081890565 seconds)
    (48/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.15434477 seconds)
    (49/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.285139173 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.131655716 seconds)
    (51/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.082041689 seconds)
    (52/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.222411109 seconds)
    (53/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.103988084 seconds)
    (54/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.216726144 seconds)
    (55/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.16331523 seconds)
    (56/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.130053306 seconds)
    (57/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.120264685 seconds)
    (58/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.15789476 seconds)
    (59/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.155699071 seconds)
    (60/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.201426692 seconds)
    (61/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.212442922 seconds)
    (62/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.10029452 seconds)
    (63/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.122067719 seconds)
    (64/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.203115787 seconds)
    (65/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.082170401 seconds)
    (66/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.103816396 seconds)
    (67/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.178471915 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.154663433 seconds)
    (69/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.119803066 seconds)
    (70/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.114184846 seconds)
    (71/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.104119321 seconds)
    (72/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.183000061 seconds)
    (73/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.107050158 seconds)
    (74/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.203367246 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.120080752 seconds)
    (76/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.081265838 seconds)
    (77/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.103963009 seconds)
    (78/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.148327922 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.120358533 seconds)
    (80/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.119999228 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.097716638 seconds)
    (82/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.124792832 seconds)
    (83/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.114913106 seconds)
    (84/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.224360249 seconds)
    (85/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.124432609 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.097932865 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.120565696 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.159592618 seconds)
    (89/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.180562258 seconds)
    (90/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.174440339 seconds)
    (91/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.122186074 seconds)
    (92/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.303842304 seconds)
    (93/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.103106884 seconds)
    (94/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.100657167 seconds)
    (95/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.125398224 seconds)
    (96/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.089202829 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.113549946 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.098866261 seconds)
    (99/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.204982392 seconds)
    (100/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.109562602 seconds)
    (101/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.100021788 seconds)
    (102/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.120374354 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.107480429 seconds)
    (104/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.104965036 seconds)
    (105/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.098308559 seconds)
    (106/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.105185215 seconds)
    (107/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.083077741 seconds)
    (108/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.103653366 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.098296763 seconds)
    (110/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.121814705 seconds)
    (111/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.0938916 seconds)
    (112/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.189382998 seconds)
    (113/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.083512581 seconds)
    (114/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.221827307 seconds)
    (115/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.107285398 seconds)
    (116/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.161588331 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.131529508 seconds)
    (118/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.185221112 seconds)
    (119/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.09951084 seconds)
    (120/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.120424509 seconds)
    (121/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.204365347 seconds)
    (122/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.094855437 seconds)
    (123/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.097743579 seconds)
    (124/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.113788748 seconds)
    (125/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.081127861 seconds)
    (126/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.105310024 seconds)
    (127/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.23999243 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.097854187 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.121118392 seconds)
    (130/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.080007575 seconds)
    (131/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.104992061 seconds)
    (132/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.081419945 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.137790028 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.114494833 seconds)
    (135/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.122497689 seconds)
    (136/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.083631634 seconds)
    (137/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.106483639 seconds)
    (138/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.081976064 seconds)
    (139/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.178713959 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.1206377 seconds)
    (141/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.082823193 seconds)
    (142/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.080463978 seconds)
    (143/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.104802304 seconds)
    (144/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.081044863 seconds)
    (145/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.087926797 seconds)
    (146/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.105443338 seconds)
    (147/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.080336167 seconds)
    (148/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.122039989 seconds)
    (149/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.090066131 seconds)
    (150/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.220469744 seconds)
    (151/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.104720547 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.098880805 seconds)
    (153/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.203398858 seconds)
    (154/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117001743 seconds)
    (155/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.082159604 seconds)
    (156/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.114018156 seconds)
    (157/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.097778835 seconds)
    (158/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.099038789 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.121576885 seconds)
    (160/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.080308349 seconds)
    (161/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.104611611 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090828951 seconds)
    (163/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.104163923 seconds)
    (164/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.094278687 seconds)
    (165/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.114294791 seconds)
    (166/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.081110609 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.12154466 seconds)
    (168/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.082814541 seconds)
    (169/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.120083562 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.355122469 seconds)
    (171/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.10451844 seconds)
    (172/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.178536963 seconds)
    (173/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.121962597 seconds)
    (174/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.083821742 seconds)
    (175/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.104152446 seconds)
    (176/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.08867485 seconds)
    (177/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.080671612 seconds)
    (178/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.122224143 seconds)
    (179/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.08810727 seconds)
    (180/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.11323016 seconds)
    (181/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.089478714 seconds)
    (182/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.104768302 seconds)
    (183/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.08246754 seconds)
    (184/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.104916529 seconds)
    (185/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.081221141 seconds)
    (186/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.138184679 seconds)
    (187/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.084059704 seconds)
    (188/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.082286824 seconds)
    (189/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.123462815 seconds)
    (190/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.082161435 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.120136123 seconds)
    (192/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.087428583 seconds)
  done (took 28.209268215 seconds)
done (took 29.05952121 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.231906619 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.105897619 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.124921373 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.124789441 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.184282689 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104150168 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.13629019 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.129049121 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.107828246 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.120629857 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.092208527 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.131418358 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.124756939 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.18392215 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.105211097 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.118055444 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.093164958 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.130496573 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.133079054 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.113242607 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.183649832 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117876144 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.108671529 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.117130263 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.185555905 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093047304 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.124923417 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.125730084 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.108777467 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.121656222 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.10147816 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117672394 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.133708872 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111818051 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113255524 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.098570683 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113802138 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089835905 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.122217854 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.099028602 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.131962395 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.122337971 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.103602052 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.11729397 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.100022401 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.121155442 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0917998 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.128836332 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.114389901 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.102665614 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117829079 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.11269475 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.120260612 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090827515 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.115186462 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.116697672 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.106389343 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114119554 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.109727828 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114989032 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.093602436 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115210025 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.100761567 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115165956 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.120182464 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094565959 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.122193432 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.102111458 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.120593874 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09414413 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113919722 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.097710253 seconds)
done (took 9.414911802 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.098424219 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.179422298 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.182763157 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.189266411 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.14975259 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.133739396 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.138146463 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.123517262 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.134684787 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.140690939 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.154013331 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.123359751 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.194191259 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.131321122 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.133447358 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.10008302 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.131055195 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.124354064 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.193777424 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.118582655 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.152395202 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.130174018 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.15444799 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.112781357 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.123248977 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.147453246 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.124490116 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.100409395 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.12357212 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.117502409 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.143463138 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.122333451 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.101684698 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.137755691 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.13294628 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.107968386 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.134723212 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.101619505 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.121616022 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.121534596 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.112108726 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134164041 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.121530433 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.111780601 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.123511935 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.108174337 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.13304293 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.129963982 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.101438679 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.125330361 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.124201172 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.129406073 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.131078892 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.133505498 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.107967803 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.129026139 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106497157 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.129524911 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.124650637 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.105927226 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.12176337 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.100555324 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126107477 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.150185925 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.124330507 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106574114 seconds)
  done (took 9.419592563 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.122232149 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.160017023 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132510993 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108921139 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.130905545 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.112285429 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.089472041 seconds)
  done (took 1.750595959 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091428611 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.187276664 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.186515375 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.184629404 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.182394162 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.219601657 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.113636553 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.115940657 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.150833611 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.103554909 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.184655696 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.242395411 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.098350446 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.133806764 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.190468187 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090987811 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.214614942 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092333956 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.1281676 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.186898197 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.106832914 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.146139436 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.131194873 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.092390442 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.17986215 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.117563199 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.242931153 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.133237451 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121458202 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.103399208 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.129067492 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.204321424 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.182446427 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.131578373 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096224188 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.184555749 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.181555276 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.129276908 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.195698887 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.120985715 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.181923293 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.103484074 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.129638499 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.129586569 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.104094903 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.168895036 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.133017767 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.104894396 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.125900331 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.191598939 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.131029522 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.182279958 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.100257307 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.127677076 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.104711205 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.130553471 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.135142105 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.104915241 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.188906157 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.130903529 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.184052284 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.184533199 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.183066815 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.183152332 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.138906007 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.184308887 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.181421229 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.101567072 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.126907228 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.129589641 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.183572992 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.102768494 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.129613831 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.171527919 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.132412686 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.185609535 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.185413131 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100238298 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.130096173 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.096403879 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.126012361 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092397606 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.17879016 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.126628562 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.125664616 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113739152 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.131415738 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.128834087 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.098719648 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.143654163 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.12784015 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.107468277 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.132649297 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.104022053 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135024685 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.186165355 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.129797472 seconds)
  done (took 14.841943613 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.093997881 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.117261007 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.100260369 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.118860623 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09681719 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11806683 seconds)
  done (took 1.553868089 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.123646243 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.129767805 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.139349938 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.107320055 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.188363876 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.189492044 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.191125208 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126512823 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.148002282 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.115760995 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.18940527 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.219828001 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.192809234 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.107869734 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.193723075 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.133597567 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.192632736 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.128131544 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.113821786 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126092083 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136902055 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.108454624 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12601409 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.182645741 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.132039322 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.107854186 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.130810301 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.139540515 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.114325628 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.126798449 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.133629828 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.108286101 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.12229654 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.102414719 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.216491675 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.098590317 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125249831 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.11118951 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.133764199 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.132328556 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.194079716 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103261261 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.138458171 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.135138218 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.1019733 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.124273823 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.135075499 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103473162 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.192046353 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.134503732 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.135350456 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.123084139 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.133272407 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.135332586 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.100173464 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127011999 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.135924807 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.193005511 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.10909165 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.124641828 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.13041901 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.108513151 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.127493797 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.11116066 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.133288548 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.135013631 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.099315818 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.131181299 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125969662 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.106333491 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.13567932 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.106825115 seconds)
  done (took 10.688402821 seconds)
done (took 39.144980108 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.155180094 seconds)
  done (took 2.063747936 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.930335471 seconds)
  done (took 1.839266837 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.217446816 seconds)
  done (took 18.163176689 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.580930374 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.650963671 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.0042145 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.172655093 seconds)
  done (took 3.317906932 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.002729079 seconds)
  done (took 1.933348886 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.359355039 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.288612491 seconds)
  done (took 1.561818707 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.713554408 seconds)
  done (took 1.637389632 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.295514691 seconds)
  done (took 3.212251596 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.385572343 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.199323675 seconds)
  done (took 1.515937953 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.697389169 seconds)
  done (took 1.624080519 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 30.385116389 seconds)
  done (took 31.315331456 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.251375937 seconds)
  done (took 1.191485454 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.317801711 seconds)
  done (took 1.247952068 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.604265825 seconds)
  done (took 4.537898325 seconds)
done (took 76.083211694 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.104575064 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.133465402 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108576451 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.130652721 seconds)
  done (took 1.403849132 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.114538104 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.131722463 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.110222745 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.129900329 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.138958884 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.10595568 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.130062906 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.114153991 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.129731043 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.132015311 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.106557139 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.130890092 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.13213393 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.10599245 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.128722327 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.107951829 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.133544523 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.130043926 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.107420471 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.131319965 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.106652663 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.132481561 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.133896539 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.108852825 seconds)
  done (took 3.870428421 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.104539206 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.122897162 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100728363 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.121692959 seconds)
  done (took 1.388430239 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.114833946 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.146978386 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.14476461 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.112849949 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.146242912 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.144892411 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.103217073 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.123975018 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.10356573 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.137825174 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.152939177 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.125154568 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.145294161 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.131564513 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.114406442 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.123579447 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.109189706 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.145581531 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.138832061 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.115241645 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.130168105 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.113514765 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.12731619 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.14339083 seconds)
  done (took 4.031614396 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.218681209 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.118611836 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.154165793 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.18504525 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.163148087 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.102887346 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.157127255 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134020271 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.111777935 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.141224831 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.132413897 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.19301009 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.107278918 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.130630269 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.105307383 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.136904275 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.143408029 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.135998476 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.177570798 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.110416122 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.133889811 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.143047867 seconds)
  done (took 4.075881403 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.105841936 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.122419264 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093887698 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.122094849 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.106013627 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.126979884 seconds)
  done (took 1.616448424 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.099963232 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.116443663 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.096614479 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.117450433 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.097554695 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114600542 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090376421 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116182045 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091161563 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114620528 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.094189916 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113495162 seconds)
  done (took 2.204159549 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.313779533 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.096796297 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.125411127 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.119989195 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.105043559 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.122166406 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.139925709 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.096864568 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.265221849 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.092551615 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.141236147 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.203401633 seconds)
  done (took 2.762608031 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229300253 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106616766 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.326698324 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.394647535 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172732337 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181784667 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.289896825 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181312259 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.206929073 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152135233 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240039461 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143689726 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168140449 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195562495 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15519499 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.225169116 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191734589 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220381053 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161721814 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250257189 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178563311 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181272103 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197049728 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164878519 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122923375 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174736772 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.133232362 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1386645 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192412777 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185522536 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193825946 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162632348 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153859179 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221388232 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25407383 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198848466 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.318425426 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144904929 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.209699924 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.200888007 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293851973 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152406689 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217541241 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169553835 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141302566 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198919015 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17234729 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.200016193 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.143496387 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126957142 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230149281 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192589588 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.204440237 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150393868 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31523066 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16047222 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.161787147 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194322991 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207513988 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209687565 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181881179 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.132008107 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200729574 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198153509 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223098662 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.132642916 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.214137549 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112303963 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187889039 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.214154144 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200760617 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180501627 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.204905006 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147532407 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178224396 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187013495 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167917686 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195002289 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17517561 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.104088287 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164773693 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151461429 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139258695 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.176402896 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135470688 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224248326 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145580022 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.40227535 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250657659 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173063964 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17777047 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179171803 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182091087 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132306626 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.133334984 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160525995 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.177547289 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172049249 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116015317 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17241137 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155190555 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.140075717 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166485632 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.106422989 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172700964 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.16567952 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186398195 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178945502 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.140579681 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179893326 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136055079 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.171697538 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18767254 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229497883 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115681329 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14362733 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210665986 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172158989 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.14713895 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194632504 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.213096817 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.183080067 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149393206 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183646774 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210764029 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155304849 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207922205 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159044997 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144575721 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.143230901 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172698118 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171218045 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.165508069 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140657563 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.169124236 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217014997 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.138484699 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120948368 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189538056 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14118829 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137854913 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124958862 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147807119 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.154529153 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.160603158 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.122996055 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170712767 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173820428 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166624791 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17472295 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157536552 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212182559 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145579145 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.175807331 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161586994 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.103314749 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.228565119 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201129769 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112709377 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240515299 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.188394748 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212603796 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177028496 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141358556 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195414265 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141079216 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.105518478 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178973258 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176306748 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178420339 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.203196288 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23535505 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.188123087 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.167744463 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161476579 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186155413 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.191825134 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174031232 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.161575377 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177491284 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186979909 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.104157504 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.136449425 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.139466262 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125627322 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142390147 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142242978 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202206724 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180874517 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202791827 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1743277 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150595838 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199660714 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.13751146 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179666614 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.191467699 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15002385 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.204963248 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200056508 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182418571 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155095092 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1837404 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.103591753 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13597807 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.147467449 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185670738 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116092628 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14669496 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157661993 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201181045 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191981891 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162386247 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247728462 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187956141 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210753127 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.134059146 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.15084951 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187125588 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171143054 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.198372061 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142916639 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.175379956 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194349987 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157030511 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211919782 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176206211 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183108214 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220858899 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.1698799 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140806375 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162777822 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180125579 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153238538 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179539912 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131929208 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147553258 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168894525 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.151667004 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112918357 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226747436 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127145816 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229492078 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.171970531 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193430186 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136816908 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129936914 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175134709 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157918264 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.129883471 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189039776 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208824695 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160192479 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174655738 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193444098 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144279651 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.338158281 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207782494 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202762583 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150045399 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156624306 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177812425 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175448156 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181485843 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19565999 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159324701 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197452624 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171823188 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.156221332 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119838993 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162416327 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163856775 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.168489877 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146349423 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.142265326 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.155772968 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231369197 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125529448 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173061113 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180431632 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.160791845 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.168210061 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126706529 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248237837 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172945138 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197239627 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.16954082 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.185789119 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218907807 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134629711 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111983005 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.139642304 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197731617 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115493143 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172337644 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.221414096 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215275858 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175473476 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183526025 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15021145 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.107998676 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174646376 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160963915 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240299589 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127684742 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.150594522 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210187868 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.167895202 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142085143 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179036724 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295827704 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157431634 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190720549 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.10375756 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.311802757 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110778627 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143633493 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174722377 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189403156 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.161229287 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.170746741 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177914231 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156892666 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177031581 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149276594 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204950436 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225349424 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213387282 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194126974 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.156568723 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14585895 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208095704 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196589166 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128836199 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.159410908 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178086971 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200371169 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.203213595 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.147010711 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177974538 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17841874 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174294503 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194493786 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146398607 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218863469 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142034034 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17883903 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152987056 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108337719 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172701471 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.222717729 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117578089 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193147903 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172176509 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143800285 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13983658 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138969014 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17337495 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158748019 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.141283753 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201406677 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.136558619 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178236772 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195215387 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113689194 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168921593 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160272563 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117292769 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15646963 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158907432 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147623493 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.157241982 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22567596 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.117560545 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195200007 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212758385 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181860535 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176195176 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130012842 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.677248706 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.142004533 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200307067 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159842804 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208220215 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163129656 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182449863 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176325678 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134937098 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18106182 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164828778 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.238419406 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177944016 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178514895 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143019132 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158808816 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126641062 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145009798 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165940466 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177844219 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152154467 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.123488684 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.174507347 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158646063 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.159557556 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149439785 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203308322 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13323938 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232857571 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199485041 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123715667 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180820331 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224447834 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111323378 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179598491 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216452177 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125615023 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167762854 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.146249331 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.120680742 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194603752 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.134648596 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176789399 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175978442 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176139434 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178725898 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.149794669 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148496118 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155390281 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176250262 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140099581 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.171599815 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171924771 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115911778 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.140891572 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168918859 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177610863 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.171301583 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110811352 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.184588055 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200196871 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.133113854 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117746916 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296202074 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168842388 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238206489 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.141912653 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148072009 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156280695 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171768002 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.169329963 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172501412 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.115605668 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145411112 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.116967852 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.199041214 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.170402765 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173019615 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196376137 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17585045 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218450773 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.159272961 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284722249 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149851122 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167799818 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118467429 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.143397807 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153045996 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117588522 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160646837 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.232973271 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1962571 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.137592907 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.159070983 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140265069 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.106214011 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145036004 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178232606 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17086968 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172110102 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158063315 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104502703 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159338742 seconds)
  done (took 84.717682773 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.152229963 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.144363657 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.155858479 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202346751 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172235192 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.264429875 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212833755 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.235977614 seconds)
  done (took 2.563743698 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.108926658 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.144431566 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.150616537 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.131634882 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.131500415 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.412845532 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.14447584 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.130696547 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.195074026 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.143358464 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.126798027 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.613860424 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.12907549 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.102951352 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.124737106 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.13057707 seconds)
  done (took 3.937868802 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.467374829 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.546199787 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.047290623 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.260134037 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.242229495 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.190109615 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.754283576 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.179464592 seconds)
  done (took 12.713142772 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.135807019 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.149585244 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.358495838 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.224915952 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.169600202 seconds)
  done (took 2.071462195 seconds)
done (took 128.286085614 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.108714433 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.151462388 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.108519694 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.153502365 seconds)
  done (took 1.538973075 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.156314931 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.118696961 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.093867069 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.117142184 seconds)
  done (took 1.515293415 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.537208946 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089838054 seconds)
  done (took 1.686062876 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.135300398 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.154031771 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.157262333 seconds)
  done (took 1.483797164 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.115030587 seconds)
  done (took 1.145604716 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.115763824 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130317143 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.199507363 seconds)
  done (took 1.4799911 seconds)
done (took 9.884022097 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.108951699 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.436985696 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.421387641 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116928743 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.732982977 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.383271333 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.043999894 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164720577 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.215693999 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124336536 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116560624 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.706298298 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.034120564 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.344548572 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.016306057 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.342355213 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705921946 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095905344 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.131837715 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125006905 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.994258 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122746591 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098481284 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123008945 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677741048 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.444880905 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09503826 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.38971056 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122631876 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.105430946 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.409787988 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09657345 seconds)
  done (took 17.073866732 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10497319 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.193106876 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135563308 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.098524933 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.131744315 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097822998 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.135882137 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.138653364 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205908212 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096149831 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146223516 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095301815 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.130763376 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096047058 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.149516901 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122476371 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09836483 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123284286 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.105953237 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126181161 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117424625 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124098569 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099008555 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.125314187 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097006117 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.156941378 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124201251 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.111839918 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.125231028 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.10432915 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127751928 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097278045 seconds)
  done (took 4.98259653 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.147364341 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.203203458 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13926399 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131629243 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.185600941 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126605711 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.217703941 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.16622454 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205849369 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124171393 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120424694 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.124884313 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.14098976 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.126229881 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.149810558 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097240294 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126155965 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096223026 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.133125436 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098319637 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.147052235 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124084365 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101005148 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124263609 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097853113 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.158874729 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097078106 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.139382332 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123868252 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.105549069 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128505441 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097940594 seconds)
  done (took 5.348281046 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.110438567 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.139230144 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.123251176 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.152940381 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.103283722 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.139070451 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.137855469 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.104163711 seconds)
  done (took 2.054544803 seconds)
done (took 30.494666842 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.123796825 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.143981915 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.116574398 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.138310331 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.203689988 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.099665788 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.143445638 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.099606077 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.140658811 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.119714714 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.125401788 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.102443367 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.14626234 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.106658744 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.185981653 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.14173427 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.196192062 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.187503789 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.102281668 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.139725412 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.101753814 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.221693112 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.109808358 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.131690816 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.19732018 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.101660388 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.182286832 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.105296299 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.13540074 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.133994453 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.187218132 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.108728438 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.131442759 seconds)
  done (took 5.643694858 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.207677725 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.213929245 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.102427251 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.130845226 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.206531559 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.10230486 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.208580256 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.130907028 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.103557635 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.130300766 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.101930994 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.20795204 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.219684638 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.229297239 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.243982623 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.215838317 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.206887314 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.213097335 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.20307492 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.22057834 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.202788814 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.130365331 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.219363406 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.217378922 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.10075094 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.131555629 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.242793486 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.216335421 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.240127471 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.1998563 seconds)
  done (took 6.54390988 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.112092612 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.146206924 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.123515424 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.201069275 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.165818626 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.106143378 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.144680805 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.151247004 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.126137053 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.125160233 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.114224843 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.166335717 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.14351645 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.109455387 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.131942917 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.117811407 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.152542412 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.098135384 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.137687359 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.145983478 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.11830096 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.144765876 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.112378834 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.138673097 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.096827768 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136927068 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.130425124 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112699093 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.135304456 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.111409736 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.133088376 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.103196104 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.129789094 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106707835 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.133439999 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.135632698 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.125545859 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.137186866 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.10915571 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.158974705 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.135441965 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.103860628 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.151605326 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.152013471 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.127916067 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.138049322 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.112261799 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.139183093 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.098351464 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.146309559 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.113794654 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.128176339 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.146033754 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.099598409 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.126447637 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110354963 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.12847308 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.10161647 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.140093834 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.103004102 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.154654223 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.105192314 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135781634 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.100828753 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.13511013 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.125342929 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.098928772 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.131416108 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.125221656 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.135319236 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.133110236 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.128229828 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.108240182 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.137405039 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.134311644 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108459957 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.12703445 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107059382 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.135790385 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.104849315 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.140645806 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.102785105 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.131382365 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.116676923 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.147597401 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.13746578 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.108274059 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.139414402 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.130033331 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.101149199 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141427947 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.101090263 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.131362503 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11312732 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.128310163 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.101036451 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.140298505 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.107620475 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.127543095 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.146668894 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.105821992 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.127755083 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.116676526 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.128887487 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.102609163 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.138587026 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.111260143 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.127308163 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.107438774 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.139498966 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.097667873 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.133673564 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.131320125 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09803323 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.144690949 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.109081901 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.13240723 seconds)
  done (took 15.811127416 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.308950633 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.315366284 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.208190565 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.375908577 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.155497808 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.208527962 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.313442663 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.328225415 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.10563922 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.17436972 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.18933263 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.28194756 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.098930613 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.16265495 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.315556142 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.381562837 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.162119608 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.175570476 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.173415285 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.124157218 seconds)
  done (took 5.621847067 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.122284642 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.17542919 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.160695268 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.161646475 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.106787906 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.144088573 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.099266448 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.154242431 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.135376715 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.108220035 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.127973352 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.124157443 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.137184766 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.108946955 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.148857738 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.176545056 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.105868935 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.136121515 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.152796421 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.105485937 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.139326029 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.159734948 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.111307562 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.156864525 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.143489106 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.115643813 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.128051598 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.107001818 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.132536085 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.105839784 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.135356269 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.15016655 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.106450537 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.135002276 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.107897734 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.141943491 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.100627873 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.131359887 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.100230093 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.132775159 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.14525204 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.109488224 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.131755193 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097754744 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.141690082 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.102702777 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.13969393 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.110863823 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.142413343 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.114621788 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.140344089 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.111228514 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.135815135 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.149800569 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.10277727 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.145271438 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.112034651 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.141896023 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.136547575 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.098864269 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.126533221 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.104970684 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.132417701 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.112922579 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.138665528 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.151585111 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.114381525 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.128612265 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.105454036 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.134417079 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.103650425 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.148443848 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.153819342 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.102975913 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.132392405 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.115742479 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.132841039 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.091530657 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.139309103 seconds)
  done (took 11.193816591 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.13112001 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.13433999 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.121106648 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.169912587 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.141053168 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.107236556 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.13362073 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.120179606 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.142395421 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.112311153 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.143440859 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.142360772 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.126965098 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.143986031 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.104167184 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.146742565 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.109910493 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.175058506 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.150053738 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.164691438 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.112164891 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.135588084 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.113922916 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.143048247 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.165407347 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.11216773 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.164159861 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.138558974 seconds)
  done (took 4.88055129 seconds)
done (took 50.739967021 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.187062057 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.357874314 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.144569404 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.138853593 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.145435098 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.167987336 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.140693051 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.140545089 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.862340648 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.140327567 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.141024418 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.139978355 seconds)
done (took 26.770893959 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.427512059 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.63668153 seconds)
    (2/2) benchmarking "String"...
    done (took 1.438294753 seconds)
  done (took 4.137809654 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.134258108 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.137279723 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.380097777 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.134977187 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.155836341 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.154039332 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.13503924 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.143453153 seconds)
  done (took 15.30270459 seconds)
done (took 25.066905329 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.2160921 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.324623 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.387396595 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.159852255 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.142892936 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.139918436 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.14129795 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.165767461 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.141273142 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.141991289 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.539605592 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.401646915 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.156176027 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.525058608 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.146664733 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.17112806 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.139624111 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.385305689 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.146118268 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.183108519 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.128550957 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.132714383 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.192428615 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.151952212 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.142898003 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.145998031 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.158891831 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.138039894 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.328800712 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.151474446 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.184889114 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.141402785 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.160553563 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.141694492 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.147713077 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.144528619 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.3184384 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.146037781 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.137100744 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.144184859 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.327796507 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.153975574 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.139668185 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.159229447 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.14317629 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.16954765 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.132857564 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.248535411 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.159645409 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.163818524 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.202780546 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.51782983 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.138859507 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.14275697 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.165488703 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.35438354 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.152662182 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.190167912 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.164149959 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.141843358 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.158798954 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.157780968 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.209762907 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.146698411 seconds)
  done (took 139.801619308 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.141180176 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.144767514 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.144371308 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.207306319 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.144284936 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.145112181 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.138643829 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.138480407 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.143278358 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.174590896 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.14515926 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.141010251 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.145208044 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.145717462 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.147789925 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.153521173 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.141845241 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.14523643 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.164943482 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.142795612 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.142617037 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.145728287 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.156510756 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.142825932 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.166931429 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.223543476 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.18168178 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.172387715 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.151578869 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.139802907 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.173861006 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.204797904 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.722854279 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.011220235 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.151331805 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.158279561 seconds)
  done (took 78.1085194 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.140947957 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.139258089 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.141770143 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.171910285 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.142721899 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.68534359 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.682188058 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.858854991 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.43640984 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.411529313 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.356640973 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.141021431 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232346134 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.152528309 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.141263422 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.157916456 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.181026479 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.145473288 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.140784161 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.682474242 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.157713685 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.199270649 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.312008614 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.154574102 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.1680113 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.538723566 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.13978018 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.170379904 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.465038365 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.186413178 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.140146343 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.461228056 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.637065986 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.250853004 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.14144075 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.169408379 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.139031681 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.415596309 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.140813641 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.1389483 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.141505622 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.756445608 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.137563401 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.669753813 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.144223599 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.021155433 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.138107839 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.139419367 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.965811645 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.680332228 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.153732912 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.138555823 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.138010651 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.138821087 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.138751391 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.166329979 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.015787942 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.227225803 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.153545789 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.140314566 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.167511029 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.138582045 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.137138849 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.137882853 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.165190405 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.196646024 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.252883159 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.314621431 seconds)
    (69/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.157210496 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.137340328 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.66141964 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238204033 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.255255038 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.13889842 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.138760029 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.138516674 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.137009808 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.244945728 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.137350289 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.524396612 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.3032604 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.155160035 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.320021917 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.237832776 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.138525273 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.490437449 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.14170371 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.139920974 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.827407198 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233262456 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.138716645 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.139193276 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.138552407 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.526866954 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.659310603 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.328565887 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.143831812 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.273357615 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.141760326 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.138200134 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.137347615 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.528431197 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.635892351 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.750072853 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.139836493 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.246449993 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.302477678 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.155681364 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.137495313 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.281334202 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.142870811 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.199038565 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.137029809 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.531588116 seconds)
  done (took 357.909744754 seconds)
done (took 576.883299099 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.882712762 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.839938927 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.964848341 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.861859086 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.830585151 seconds)
  done (took 10.440949405 seconds)
done (took 11.503424956 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.316252165 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.317540069 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.191707129 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.319128837 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.170447626 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.332104789 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.301760584 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.160684107 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.234368822 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.212462846 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.235066751 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.185811348 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.169159645 seconds)
  done (took 17.209042358 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.404513213 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.147402146 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.220945655 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.372362019 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.184551068 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.381970677 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.441354747 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.146822188 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.289159378 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.155398526 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.152236252 seconds)
  done (took 16.960741794 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.433197423 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.147693367 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.227896977 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.376335926 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.187823077 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.399807004 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.434224918 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.147894054 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.289800868 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.15474664 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.153355574 seconds)
  done (took 17.015168596 seconds)
done (took 52.247629669 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.176908816 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.297800791 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.168120912 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.155738479 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.14790332 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.149941142 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.155757343 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.149482408 seconds)
  done (took 10.464464769 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.148801822 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.148098693 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.146014311 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.14773264 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.146746393 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.14722358 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.146550805 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.146914285 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.149002814 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.146710206 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.148129348 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.146705702 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.146681751 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.146273963 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.146693212 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.146419793 seconds)
  done (took 19.418299249 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.151266727 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.146284893 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.147638426 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.146608712 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.146822612 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.146755188 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.14904976 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.147220905 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.147532419 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.148136953 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.146902254 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.147229021 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.148242718 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.148671926 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.148403695 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.148446911 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.146929988 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.148596205 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.152966863 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.147504437 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.148168021 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.14899092 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.148173266 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.146510287 seconds)
  done (took 28.614808425 seconds)
done (took 59.559256647 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.138040694 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.144440559 seconds)
  done (took 5.343671877 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.208412068 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.206639122 seconds)
  done (took 3.480146655 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.151552683 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.149618755 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.148772894 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.149262124 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.147744007 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.147669262 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.149680923 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.148450235 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.148632758 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.147474585 seconds)
  done (took 12.551950744 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.148915338 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.149322511 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.149039283 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.149494956 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.150145725 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.150454957 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.150551328 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.150726598 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.150410122 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.150273095 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.149249197 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.148107093 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.149157089 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.150237793 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.150388413 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.149905162 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.151171214 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.150427581 seconds)
  done (took 21.761913886 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.163488679 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.171900945 seconds)
  done (took 3.398379171 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.290358428 seconds)
    (2/7) benchmarking "second"...
    done (took 1.190083962 seconds)
    (3/7) benchmarking "month"...
    done (took 1.265799518 seconds)
    (4/7) benchmarking "year"...
    done (took 1.255641998 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.192265482 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.170431765 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.191529714 seconds)
  done (took 9.619520062 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.151176715 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.337432804 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.448922661 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.717194775 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.15180694 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.174576096 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.95771049 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.176455255 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.1710987 seconds)
  done (took 13.351082849 seconds)
done (took 70.57052295 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.140079374 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.201218428 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.155535956 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.177148136 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.443737379 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.16601443 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.144310961 seconds)
done (took 15.494602493 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.134406978 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.136616199 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.138435988 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.128689572 seconds)
  done (took 9.604597144 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.0839525 seconds)
    (2/2) benchmarking "read"...
    done (took 1.443999649 seconds)
  done (took 4.593961227 seconds)
done (took 15.265427973 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.151847305 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.151620315 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.152887065 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.152787426 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.151459818 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.1504883 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.152769955 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.152414268 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.151109313 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.1515934 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.152819946 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.153491459 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.152325616 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.152255332 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.153686336 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.152031904 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.152047854 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.152762708 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.153026718 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.152386014 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.151956822 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.15171665 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.153045369 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.153193074 seconds)
  done (took 28.723152185 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.153560973 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.153480382 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.153719101 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.152560935 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.15400803 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.153188763 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.152530184 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.152112488 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.154066399 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.154044911 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.152421844 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.154482573 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.154984193 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.153819007 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.151924424 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.153994696 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.153745375 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.155341428 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.153348973 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.153492464 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.153930136 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.153594751 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.15389089 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.153342281 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.153992512 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.155193724 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.155244651 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.154133161 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.153482973 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.15455365 seconds)
  done (took 35.679700032 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.1616048 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.161845034 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.158046924 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.159762699 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.159005462 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.15843844 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.160053478 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.158982135 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.158571873 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.156981626 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.155975598 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.155007202 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.155779762 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.154141814 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.155314719 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.156318488 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.155211173 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.15396233 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.155502533 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.1558971 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.156226318 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.154829615 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.156728296 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.15637274 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.157491978 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.157544712 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.156036064 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.155215388 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.156804792 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.155448977 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.156818877 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.156016819 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.156956604 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.158399608 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.156421149 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.156194043 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.160493241 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.160395968 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.156593613 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.157974023 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.156710035 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.156670474 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.157911951 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.157877417 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.157239996 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.156310763 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.156225513 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.15824847 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.157108278 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.158514028 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.158566508 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.157980946 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.15678678 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.157852698 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.157974917 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.157175738 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.158148258 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.157372864 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.159141036 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.159386963 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.159241369 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.159086996 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.158067452 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.159077833 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.158963488 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.157637171 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.15775608 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.159834351 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.158116158 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.159878067 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.157749086 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.157332641 seconds)
  done (took 84.415713841 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.159686503 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.158361787 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.158998105 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.158226291 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.159253399 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.159906143 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.160456046 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.15852805 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.159691849 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.159805898 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.159538779 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.161769617 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.160048594 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.158012651 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.160037629 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.159605775 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.159229849 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.158906948 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.160075885 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.159647051 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.159213742 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.160414722 seconds)
  done (took 26.581973248 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.161193038 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.161020553 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.161955361 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.162662014 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.161726923 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.160327553 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.159025529 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.161638639 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.161054237 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.159735608 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.161494314 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.160018294 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.163026936 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.159339675 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.161379494 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.160602467 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.161174539 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.162922481 seconds)
  done (took 21.974729587 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.161651212 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.16074419 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.160553134 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.161191939 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.161223482 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.162429818 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.160882553 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.160676167 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.16121541 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.161373823 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.162699467 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.161801541 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.162104539 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.161375768 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.161823105 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.16284611 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.162237032 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.162768724 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.161880785 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.161833535 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.163058822 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.163488607 seconds)
  done (took 26.634448352 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.161951219 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.163352423 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.162943234 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.163917859 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.161446647 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.163541812 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.163129842 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.162816654 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.164365222 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.16271042 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.161887423 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.163471707 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.164416903 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.162292596 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.162694409 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.16260069 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.162336572 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.163767107 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.162735697 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.16297507 seconds)
  done (took 24.335140925 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.164560555 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.165858424 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.164211951 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.16550073 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.165196118 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.167540624 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.164835351 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.167375188 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.167682464 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.165916373 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.167145545 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.165498579 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.165745129 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.166566542 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.165725179 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.166134539 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.166629288 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.166521665 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.167140519 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.166940827 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.167148199 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.166902414 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.167203542 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.167971731 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.166448346 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.168338795 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.166769382 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.167540738 seconds)
  done (took 33.737762615 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.167160165 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.166103093 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.164768646 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.167193195 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.165186079 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.167269233 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.166627147 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.16682514 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.166732968 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.165024719 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.166578744 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.165449028 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.166653564 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.167104011 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.166595382 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.166005818 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.167199474 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.167132214 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.167262186 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.16595229 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.166772444 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.167523469 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.166177036 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.166734669 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.166940977 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.166994067 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.166647172 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.167969416 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.167022718 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.166364704 seconds)
  done (took 36.077155114 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.226756004 seconds)
    (2/2) benchmarking "in"...
    done (took 1.213014322 seconds)
  done (took 3.518512775 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.16896538 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.167386456 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.167125422 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.16838927 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.167681713 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.167605166 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.168584044 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.16610534 seconds)
  done (took 10.42170886 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.166759469 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.17154634 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.168308872 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.168777293 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.170419841 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.164742558 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.171762737 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.175607453 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.16518042 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.166025993 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.16826836 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.169220906 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.168054812 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.168031329 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.165373065 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.168783849 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.17138635 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.169931539 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.171229166 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.168683208 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.168718707 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.167947312 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.171185105 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.174631845 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.165367647 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.174784012 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.175415254 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.173967087 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.165913557 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.171610829 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.169295002 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.173969816 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.170705557 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.169834774 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.170668831 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.169583207 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.17618092 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.189673592 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.174723751 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.175481652 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.173090868 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.170575746 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.168976849 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.171150927 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.17162786 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.17431177 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.171289606 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.172235701 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.166721841 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.170741419 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.175280836 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.166871366 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.171221595 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.171287983 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.171994722 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.177072851 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.194619061 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.169781059 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.172550974 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.177839662 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.183148711 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.179996767 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.172274584 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.176260698 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.177226818 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.182623817 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.178975108 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.178333691 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.173581555 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.173350381 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.176026485 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.185980892 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.182374797 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.175918572 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.173517748 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.172270675 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.169586114 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.173557182 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.176281917 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.178145942 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.176283457 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.17545302 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.177199036 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.181584377 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.170768289 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.176096305 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.175772796 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.174594025 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.170056913 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.181468524 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.19767462 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.173355371 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.169655219 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.170582366 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.171460258 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.175519288 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.169448677 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.172318381 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.176000447 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.174708816 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.174001956 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.172011573 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.176499305 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.177883993 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.175647971 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.178668804 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.178967136 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.170786402 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.179315496 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.180370597 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.175763837 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.173002252 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.17516891 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.175900962 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.17351503 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.176619789 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.177638951 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.173465761 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.176470601 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.175644673 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.180282282 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.18835332 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.178550635 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.175465488 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.174674538 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.181689586 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.175711434 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.17431213 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.177735106 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.172711881 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.173999682 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.17122782 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.176947185 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.173299516 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.166969492 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.162341261 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.166768977 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.167291808 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.167226133 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.164950094 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.165999786 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.163248656 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.163188284 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.159984311 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.160172447 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.157557994 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.163013111 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.159109508 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.158056678 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.158392674 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.159371137 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.156876888 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.150716058 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.154504387 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.148604973 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.152794411 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.147585307 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.152581197 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.152564823 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.15170816 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.150054796 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.145902533 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.148635121 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.151702523 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.150840638 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.149101581 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.151330704 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.150101999 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.14683583 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.141832486 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.146778078 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.141483315 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.144616197 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.150288674 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.146855249 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.145562213 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.145455102 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.147845562 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.142568816 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.142747457 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.140532902 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.143743632 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.143081967 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.146978171 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.14746522 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.145889081 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.139134567 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.134848715 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.13582871 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.138758549 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.137123134 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.144669733 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.147817763 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.148329365 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.138355167 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.140289131 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.133623291 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.141242892 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.137665735 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.142899392 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.138090055 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.137110015 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.133064347 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.138678832 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.132344305 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.135776708 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.130453822 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.134496729 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.135397802 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.134570815 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.134547116 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.131678112 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.132958676 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.133688039 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.132363885 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.131838882 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.129359524 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.133823885 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.12893278 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.129686413 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.134111262 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.133362096 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.132765362 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.133698693 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.128796814 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.132421679 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.131393512 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.128028142 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.134315578 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.129420472 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.12966823 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.135441629 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.133760735 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.128973477 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.136623887 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.150259795 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.127987126 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.1314291 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.134747549 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.133645401 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.130385682 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.136004692 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.133902508 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.132354596 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.133209519 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.129175943 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.134342013 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.135438234 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.138679938 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.128264091 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.134293222 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.130749937 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.134532458 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.131431743 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.131922354 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.131461219 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.133955926 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.136981842 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.133650561 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.130414652 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.135246397 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.133558956 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.133559137 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.131186709 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.139237293 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.135438322 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.134160897 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.13257228 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.130564764 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.135681717 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.13018132 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.135973714 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.130477188 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.141711542 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.146385504 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.137100694 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.136459113 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.136196322 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.136500832 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.134788334 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.130887529 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.131762688 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.132839105 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.13200062 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.132129621 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.138429098 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.13265051 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.1379735 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.132943814 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.134767942 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.138074419 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.13582241 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.129798495 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.137031909 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.135728654 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.136227708 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.130469105 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.137103049 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.133300261 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.135473806 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.134088801 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.134300534 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.141849337 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.137872544 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.133471309 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.132508786 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.134508514 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.13259989 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.134161452 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.138235238 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.134201293 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.141941566 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.133951836 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.138616947 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.133770441 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.141864428 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.140806144 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.134138316 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.142261437 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.13775547 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.132107825 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.135025545 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.13811843 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.141973589 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.142815192 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.133879317 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.140751415 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.136800072 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.136542603 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.138366161 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.138248116 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.138718293 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.137426265 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.14410959 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.158092116 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.136406685 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.137992903 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.14096304 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.138492366 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.138283522 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.134817557 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.137953897 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.141426544 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.135633765 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.136671819 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.136221003 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.139928309 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.139703916 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.139374586 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.138965559 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.139295474 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.141866795 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.141501957 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.140791049 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.139389244 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.142331408 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.143418225 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.14264632 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.144967817 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.136315035 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.14070061 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.140210351 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.136949927 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.135678815 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.137975163 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.140645312 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.136473107 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.143204804 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.140251502 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.138778588 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.138439734 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.14273185 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.136402897 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.145422582 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.155109537 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.137166441 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.142919757 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.140242805 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.136953257 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.143129706 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.140432164 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.136656594 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.13958639 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.142474179 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.144915779 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.137323782 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.142854938 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.136843866 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.142618728 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.13710847 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.136649084 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.137487212 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.137418584 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.133998974 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.13658572 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.137756336 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.139225445 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.133083804 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.131103669 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.128635628 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.138538522 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.138264964 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.13015252 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.133852258 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.134349405 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.13181737 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.126336747 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.132441302 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.126622522 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.13222195 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.125316717 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.130040519 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.128371525 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.130481541 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.130471516 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.129916953 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.125276305 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.126286807 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.129807055 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.128864685 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.129694826 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.12710332 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.13067174 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.125891029 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.124696698 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.129256727 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.126635722 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.133256342 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.126026872 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.128724031 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.126120011 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.132097644 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.13052423 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.129536522 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.125153835 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.124945398 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.133782621 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.131905748 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.132472365 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.130515616 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.131913726 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.12694434 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.129239578 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.131242251 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.125915801 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.127840164 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.131668767 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.127461188 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.12713342 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.128781653 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.132280263 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.134328491 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.13122312 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.128720384 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.138449268 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.152662391 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.132764696 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.128408825 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.130103518 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.128162532 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.132170566 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.131340175 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.127408384 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.137000863 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.134628719 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.13318109 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.13058815 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.130467449 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.128773467 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.13422889 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.132561803 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.129105486 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.134194704 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.129789084 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.134318629 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.131452608 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.132385046 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.127308153 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.127301233 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.130339075 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.133003504 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.134069117 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.131920552 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.131822066 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.131643712 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.134301965 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.133640673 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.132933701 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.133756769 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.128222616 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.133022326 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.128699562 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.133817873 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.131646102 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.129863778 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.135646707 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.132700456 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.130697595 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.135751262 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.136754033 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.133853528 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.130729518 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.13295015 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.134935968 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.137813837 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.13218537 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.130804656 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.131964452 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.135573183 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.134418613 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.134665601 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.131945442 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.143511808 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.158173372 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.129892562 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.132835675 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.135064246 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.137662084 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.135217389 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.136042361 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.132477085 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.135056189 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.139063495 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.135324475 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.139115901 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.15575064 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.133342539 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.137671221 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.133341782 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.135341477 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.135440251 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.138358408 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.135571285 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.135921849 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.144530436 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.139290714 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.13985071 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.154329137 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.139697657 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.135431349 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.137348836 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.130941927 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.137192862 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.134154772 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.138018248 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.137035215 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.135942818 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.13590507 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.132410124 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.136728233 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.137271779 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.140304761 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.137347037 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.132914516 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.133358532 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.137284944 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.13710011 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.139700054 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.135255567 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.137274707 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.137850248 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.133373493 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.146025317 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.147786304 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.139749652 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.137464326 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.138591678 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.137836448 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.138037669 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.139651189 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.141678612 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.137323727 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.138598663 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.136724185 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.140030579 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.139578111 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.134595723 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.134627581 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.136386158 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.140439611 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.147509144 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.151665293 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.141653947 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.137630247 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.140834425 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.13978541 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.136033294 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.139616724 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.139466148 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.136636326 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.136465703 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.142508601 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.139846373 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.139915252 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.13793388 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.145662135 seconds)
  done (took 683.929525992 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.139801712 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.140296503 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.139438628 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.14064317 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.139421505 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.138964232 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.140513922 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.140244871 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.139240875 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.139856417 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.141112354 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.142980088 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.140625398 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.141230974 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.141148808 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.14045306 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.141182973 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.140684914 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.142408016 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.140170583 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.140597696 seconds)
  done (took 25.006135853 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.141326314 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.140411165 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.141084323 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.141100716 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.140934929 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.141332306 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.140939213 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.141376962 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.142308137 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.14119709 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.142596638 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.140928681 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.141974227 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.141795963 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.141465301 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.141830817 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.141084493 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.142731716 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.142297617 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.141905073 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.143442647 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.141867911 seconds)
  done (took 26.173041974 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.143153351 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.141838623 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.138066959 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.143934034 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.143496518 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.142079574 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.141674518 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.143118972 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.142402549 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.139062423 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.139449604 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.139783008 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.142248481 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.146979382 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.141671001 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.14404915 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.143107221 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.143339983 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.144139334 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.143465049 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.144814043 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.149030948 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.142477822 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.138356063 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.143999791 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.144517615 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.14362417 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.143053348 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.139740344 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.14552827 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.144444458 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.140038676 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.143565328 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.142226436 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.141051212 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.148288552 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.144155263 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.145212445 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.14480744 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.147130865 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.158285051 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.14467924 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.146722983 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.149137008 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.145212414 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.142094477 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.149163315 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.146234253 seconds)
  done (took 55.964413297 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.145799704 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.145448178 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.144074594 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.145155096 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.144939689 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.145156184 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.145765972 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.145629605 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.146932597 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.145549918 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.145292692 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.146337072 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.145445549 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.145339874 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.146198748 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.145716976 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.146626352 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.145398938 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.146280656 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.146280283 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.14576745 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.146599287 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.145850349 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.14641374 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.146057168 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.146081911 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.146305187 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.146600843 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.146038519 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.147052079 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.147465193 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.146770936 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.14627663 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.147713225 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.146513679 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.147387262 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.146766088 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.147753612 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.146349831 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.146610626 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.146380008 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.146862038 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.147848076 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.147909111 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.147158808 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.147362259 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.148151516 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.147411719 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.149525114 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.14812129 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.147284112 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.149559886 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.148712178 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.148633549 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.148346118 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.148409238 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.147465101 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.147642482 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.148890934 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.148509828 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.149551261 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.150642773 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.149069712 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.148597636 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.14782825 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.149984169 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.149205852 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.148485241 seconds)
  done (took 79.062441926 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.149776772 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.149098645 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.148881909 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.149290715 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.149841281 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.149306314 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.150046019 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.149227314 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.150204881 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.150711194 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.149168135 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.149515961 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.149120726 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.151133462 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.150520454 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.149332979 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.15011223 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.149800165 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.150530433 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.150650623 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.150460742 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.151413555 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.150870138 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.150342478 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.15123301 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.149904077 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.150621815 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.149911126 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.151215951 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.149929731 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.151349125 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.14982104 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.152014332 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.15050308 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.150125829 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.151105785 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.150509246 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.150575678 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.150103093 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.152335517 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.152710875 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.151193295 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.152587773 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.151722079 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.152166701 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.151365939 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.151258851 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.151164825 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.152401912 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.150757032 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.15181364 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.151481895 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.152127771 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.151861655 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.151731379 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.152141767 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.152362236 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.151424945 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.151896213 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.150976174 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.15215168 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.152787014 seconds)
  done (took 72.416743876 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.153066569 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.152528615 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.153518309 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.152201319 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.153139591 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.15339828 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.15306141 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.153180293 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.152071372 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.152747624 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.153666335 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.153850613 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.153582268 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.154406444 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.153914432 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.154492824 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.153463301 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.153340187 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.15488954 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.153541494 seconds)
  done (took 24.134847654 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.153882148 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.1533681 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.153057287 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.154801721 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.154600522 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.15288662 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.153598977 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.153466966 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.153795537 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.154229137 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.15537091 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.153866052 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.152909957 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.155024081 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.154222327 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.154316027 seconds)
  done (took 19.531652005 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.153779473 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.154454689 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.153906566 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.155295223 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.154285398 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.154262752 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.156651043 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.155199976 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.154223284 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.155690132 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.154892283 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.15587098 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.155263516 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.156532061 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.155411036 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.15639172 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.155323831 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.155996318 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.155605402 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.15589465 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.156457211 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.15534804 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.156510867 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.156429782 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.156274555 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.157031316 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.156690463 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.156401698 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.156575879 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.156617888 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.155742662 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.156794619 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.155836162 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.155668271 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.157054539 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.156822289 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.156846598 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.156879191 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.156772186 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.156553859 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.156772132 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.156055482 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.156817884 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.156146606 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.157553637 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.156987397 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.156804892 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.156970035 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.157071387 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.157964654 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.157922832 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.157612456 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.157839826 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.158272673 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.158343522 seconds)
  done (took 64.663842954 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.158320791 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.157976153 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.159248031 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.158266248 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.157979886 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.158351642 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.158277628 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.159283691 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.158512084 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.157621423 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.158597274 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.159034498 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.157646894 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.158029618 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.15863949 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.159365715 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.159486728 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.158695637 seconds)
  done (took 21.925193859 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.160375308 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.159270535 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.158869497 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.159071753 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.158767126 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.158480528 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.158777766 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.159487489 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.158365462 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.159150828 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.159783652 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.159809279 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.159678342 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.159182319 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.161062367 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.160072532 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.160114419 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.159668334 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.160099529 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.160315868 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.160550293 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.161073611 seconds)
  done (took 26.584942925 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.154820656 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.154278385 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.154780931 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.16907321 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.167406898 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.154783751 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.155271934 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.155235736 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.176372152 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.196201584 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.191948709 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.167801502 seconds)
  done (took 15.070703418 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.160688022 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.160294071 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.161340265 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.160183876 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.159704919 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.160733155 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.161463025 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.160582187 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.162778616 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.161379359 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.16152738 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.161228038 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.160388425 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.160789728 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.162057149 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.161326822 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.161763291 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.161544005 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.16180616 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.162007899 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.162466007 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.160906502 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.161803876 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.161322961 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.162312347 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.160705011 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.161195951 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.16189631 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.162612257 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.162337236 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.163074512 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.163164604 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.162342677 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.162847363 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.162345967 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.162658413 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.163361213 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.162878958 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.163537708 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.163541876 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.16287509 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.163307619 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.163349187 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.164721641 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.163829359 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.163223698 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.163334322 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.16328345 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.163717734 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.163646997 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.163293843 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.1649781 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.163703071 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.164253703 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.164857163 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.164949919 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.165945338 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.164540875 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.163762172 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.164726065 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.163816138 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.163687068 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.165434014 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.163996622 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.164502762 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.164364219 seconds)
  done (took 77.814570246 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.163841831 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.164993012 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.164711108 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.165187205 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.166443436 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.164539282 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.164697185 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.164356973 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.164940877 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.165357042 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.16423062 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.164505551 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.165533999 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.166203934 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.164600868 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.16511265 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.165294404 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.166152043 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.165525379 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.166231187 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.166278389 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.165502885 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.166146512 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.165731837 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.166183108 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.167636297 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.166826319 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.166740553 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.16693639 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.165686353 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.166359662 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.167069279 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.167215336 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.167610645 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.167557896 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.16727282 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.167924975 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.168243235 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.166703934 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.166366557 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.167749159 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.168033971 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.167918906 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.167609332 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.167248865 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.167391594 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.168541831 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.168698806 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.167141057 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.167381901 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.169027655 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.168104923 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.168178776 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.168104271 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.167962348 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.167967017 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.167949863 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.168665255 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.167176473 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.168324206 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.169247976 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.16842349 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.168183285 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.168774545 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.168578367 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.168544711 seconds)
  done (took 78.090417111 seconds)
done (took 1603.534144628 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.327846248 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.282556742 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.164046228 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.17865564 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.163743776 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.158698693 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.178125912 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.163968064 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.163533274 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.163289566 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.162903248 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.353699536 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.161363316 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.164516783 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.164267432 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.262666977 seconds)
  done (took 24.294937654 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.187495914 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.17669497 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.276488599 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.193119259 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.197611204 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.347556724 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.229064472 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.174244195 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.327807794 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.19527121 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.165172726 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.200463236 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.174873783 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.166674459 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.194728183 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.348603494 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.405434803 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.18020968 seconds)
  done (took 26.223423691 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.576551585 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.186540435 seconds)
  done (took 4.850609296 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.190945275 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.173442723 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.174845964 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.174344433 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.166952738 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.167804838 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.173660041 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.17044746 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.166058085 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.290891384 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.179915663 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.18868816 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.191661005 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.175648117 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.179968457 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.214742107 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.334714839 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.180106844 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.178213184 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.181314809 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.175308337 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.275501476 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.211529152 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.180463755 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.287587281 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.173814089 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.181785142 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.183547835 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.322736823 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.1820778 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.174142651 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.173871808 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.177681038 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.170275591 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.601670267 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.189294291 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.185496582 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.199901953 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.180740533 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.321351376 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.177484644 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.181368901 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.169961347 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.61546565 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.308974224 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.286093935 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.18912105 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.196351807 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.177607118 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.235046398 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.181287965 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.178671538 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.234744221 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.964555829 seconds)
  done (took 76.591325167 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.225083964 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.170809203 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.348070988 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.194418436 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.1711735 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.175462605 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.176728524 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.431178943 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.211513161 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.179749167 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.447581799 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.727674909 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.187588502 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.228079506 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.033567819 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.2489838 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.172496386 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.172091706 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.173728089 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.173484478 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.703217244 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.176844286 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.174896245 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.328948678 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.208983687 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.654986216 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.171771296 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.177376125 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.188202049 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.171541826 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.676924436 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.198147447 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.234292917 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.172892579 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.433714182 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.523205654 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.488269507 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.175550192 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.203358698 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.173148632 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.18358811 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.648633762 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.505317969 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.172494723 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.187742912 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.662202508 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.177932189 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.178144492 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.178253051 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.419489943 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.176871261 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.174371138 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.173689325 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.189016305 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.173115577 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.257307295 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.261773832 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.660766657 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.17774701 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.174962965 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.195075147 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.17551811 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.180714762 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.175012912 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.190788786 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.508810217 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.330585611 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.182563048 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.513557085 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.67793955 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.193691847 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.745634741 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.191822815 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.207561985 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.235718512 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.185606659 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.180318314 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.666455098 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.193901136 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.174293563 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.492907087 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.178714401 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.451960889 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.189653468 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.202692849 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.719541406 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.185529197 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.184505341 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.175929571 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.178430766 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.176577613 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.177525261 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.439628055 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.249262813 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.176129293 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.174587631 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.181652612 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.182279552 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.178060584 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.180143708 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.741900249 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.203386077 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.176684393 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.178683377 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.186495585 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.18195186 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.177475339 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.178592243 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.441063209 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.183074633 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.186945313 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.178532749 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.177994305 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.182314703 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.325555863 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.176504722 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.460812894 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.176577087 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.17876692 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.183541629 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.177718302 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.222034255 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.178080734 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.185785943 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.038074396 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.440457566 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.193745654 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.178181027 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.178086144 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.178726212 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.183149716 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.182315797 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.220886654 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.180273513 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.946831881 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.202310852 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.193243547 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.179066924 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.189630147 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.178547859 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.189380367 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.181909252 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.46566329 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.440697211 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.329505159 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.182063635 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.179359644 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.933634941 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.204610814 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.3575885 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.198867097 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.180761763 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.428564824 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.38803743 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.181102414 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.179699779 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.182090263 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.440174924 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.183585512 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.479028503 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.712399086 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.196012629 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.18495606 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957810794 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.876708916 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.186121857 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.183244174 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.453264896 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.200703439 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.181158635 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.181362873 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.181465877 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.195148073 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.200523769 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.180911407 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.181199457 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.181596926 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.199752293 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.370184758 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.195477523 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.190795459 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.658911186 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.201983441 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.180856169 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.19892193 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.185322358 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.181558346 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.254815181 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.187514188 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.184369517 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.182398191 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.189768406 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.688512951 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.182458442 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.184807583 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.370754747 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.8628953 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.198413354 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.183271893 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.183082186 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.094944929 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.689111032 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.239226204 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.468621378 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.192284366 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.220209165 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.183341615 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.210942515 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.685347899 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.184032393 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.183897726 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.827522957 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.201858167 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.833515513 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.183129179 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.186468391 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.771995776 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.199684016 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.1843064 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.183577655 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.197698422 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.482915007 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.184991611 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.231020978 seconds)
  done (took 462.789796275 seconds)
done (took 595.830491675 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.184086137 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.188360347 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.179569365 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.189793272 seconds)
  done (took 9.843855198 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.198326012 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.190204062 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.195951173 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.189366218 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.197188476 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.190583287 seconds)
  done (took 8.265156272 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.184237452 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.186051341 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.188704522 seconds)
  done (took 7.663273333 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.382658081 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.20579547 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.508209034 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.214555271 seconds)
  done (took 8.416542413 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.195739442 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.196139376 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.195894284 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.196699994 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.200634658 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.200324625 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.198188761 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.197761151 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.201351147 seconds)
  done (took 11.887016387 seconds)
done (took 47.180478702 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.960832371 seconds)
    (2/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.235166311 seconds)
    (3/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.179544842 seconds)
    (4/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.285245791 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.251120846 seconds)
    (6/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.24297963 seconds)
    (7/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.247715582 seconds)
    (8/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.322685503 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.22153281 seconds)
    (10/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.330784669 seconds)
    (11/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.293759473 seconds)
    (12/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.197210635 seconds)
    (13/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.187780917 seconds)
    (14/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.23667744 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.322674335 seconds)
    (16/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.178335703 seconds)
    (17/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.331191504 seconds)
    (18/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.191434435 seconds)
    (19/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.435953709 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.229119823 seconds)
    (21/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.178581361 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.316747487 seconds)
    (23/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.335375175 seconds)
    (24/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.183465311 seconds)
    (25/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.956627524 seconds)
    (26/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.186179205 seconds)
    (27/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.245209457 seconds)
    (28/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.266270656 seconds)
    (29/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.22320095 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.290394434 seconds)
    (31/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.228512011 seconds)
    (32/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.10482694 seconds)
    (33/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.30394781 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.342261789 seconds)
    (35/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.188132199 seconds)
    (36/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.179850123 seconds)
    (37/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.227460555 seconds)
    (38/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.181434685 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.248712183 seconds)
    (40/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.224451791 seconds)
    (41/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.432637944 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.330642279 seconds)
    (43/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.229667005 seconds)
    (44/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.23925427 seconds)
    (45/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.318668372 seconds)
    (46/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.27207305 seconds)
    (47/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.182046477 seconds)
    (48/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.195463271 seconds)
    (49/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.180743434 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.27826122 seconds)
    (51/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.097784731 seconds)
    (52/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.201102989 seconds)
    (53/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.187803747 seconds)
    (54/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.325773934 seconds)
    (55/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.182499976 seconds)
    (56/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.236898405 seconds)
    (57/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.215245454 seconds)
    (58/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.40514659 seconds)
    (59/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.211174238 seconds)
    (60/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.293808384 seconds)
    (61/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.335222826 seconds)
    (62/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.252054692 seconds)
    (63/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.256321291 seconds)
    (64/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.392291846 seconds)
    (65/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.18527245 seconds)
    (66/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.199681679 seconds)
    (67/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.325428933 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.386867889 seconds)
    (69/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.291880428 seconds)
    (70/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.26918123 seconds)
    (71/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.182264321 seconds)
    (72/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.243250733 seconds)
    (73/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.2310645 seconds)
    (74/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.00939034 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.282640337 seconds)
    (76/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.275138553 seconds)
    (77/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.201573055 seconds)
    (78/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.282316539 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.315826716 seconds)
    (80/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.200053033 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.32347149 seconds)
    (82/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.251938235 seconds)
    (83/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.271904446 seconds)
    (84/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.97438328 seconds)
    (85/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.249189452 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.402478901 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.292486392 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.275283669 seconds)
    (89/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.941747837 seconds)
    (90/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.290770962 seconds)
    (91/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.249056413 seconds)
    (92/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.325557128 seconds)
    (93/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.94133218 seconds)
    (94/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.24826237 seconds)
    (95/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.208491534 seconds)
    (96/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.287421832 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.297355523 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.228174721 seconds)
    (99/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.187824749 seconds)
    (100/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.361105585 seconds)
    (101/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.224815032 seconds)
    (102/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.34585958 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.243838494 seconds)
    (104/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.186005831 seconds)
    (105/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.196578836 seconds)
    (106/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.190224484 seconds)
    (107/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.184215305 seconds)
    (108/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.998833205 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.349692512 seconds)
    (110/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.233395725 seconds)
    (111/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.197391673 seconds)
    (112/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.30425046 seconds)
    (113/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.847228423 seconds)
    (114/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.354098941 seconds)
    (115/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.894640814 seconds)
    (116/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.254621031 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.279003148 seconds)
    (118/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.339967621 seconds)
    (119/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.241380654 seconds)
    (120/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.229462451 seconds)
    (121/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.185429773 seconds)
    (122/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.200084336 seconds)
    (123/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.227330135 seconds)
    (124/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.298944823 seconds)
    (125/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.190208086 seconds)
    (126/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.393838126 seconds)
    (127/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.372015698 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.285585586 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.303053871 seconds)
    (130/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.233175238 seconds)
    (131/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.188236641 seconds)
    (132/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.280089879 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.342267442 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.272517745 seconds)
    (135/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.230514044 seconds)
    (136/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.883238267 seconds)
    (137/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.93226324 seconds)
    (138/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.200177948 seconds)
    (139/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.252255364 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.249401985 seconds)
    (141/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.881493446 seconds)
    (142/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.251049991 seconds)
    (143/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.864502394 seconds)
    (144/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.276354122 seconds)
    (145/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.358872772 seconds)
    (146/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.879002582 seconds)
    (147/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.34131891 seconds)
    (148/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.240354076 seconds)
    (149/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.353621896 seconds)
    (150/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.84854867 seconds)
    (151/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.195357736 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.291723656 seconds)
    (153/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.339948563 seconds)
    (154/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.226335497 seconds)
    (155/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.194440382 seconds)
    (156/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.291629711 seconds)
    (157/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.200754197 seconds)
    (158/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.236763914 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.400276345 seconds)
    (160/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.193916917 seconds)
    (161/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.907705867 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.250673891 seconds)
    (163/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.359859255 seconds)
    (164/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.096296953 seconds)
    (165/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.20348382 seconds)
    (166/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.34447229 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.248341779 seconds)
    (168/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.188104138 seconds)
    (169/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.240689496 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.301710354 seconds)
    (171/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.946759554 seconds)
    (172/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.372019916 seconds)
    (173/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.241299981 seconds)
    (174/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.188763426 seconds)
    (175/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.014157912 seconds)
    (176/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.345603968 seconds)
    (177/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.98225658 seconds)
    (178/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.21276297 seconds)
    (179/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.420765977 seconds)
    (180/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.191821663 seconds)
    (181/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.271916987 seconds)
    (182/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.940668235 seconds)
    (183/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.336472975 seconds)
    (184/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.189196968 seconds)
    (185/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.077235623 seconds)
    (186/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.441214347 seconds)
    (187/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.370365745 seconds)
    (188/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.8869954 seconds)
    (189/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.237103745 seconds)
    (190/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.857152509 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.281672713 seconds)
    (192/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.304271526 seconds)
  done (took 309.89038053 seconds)
done (took 310.997297236 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.220695487 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.387385005 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.205725868 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.205809345 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.20702816 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.209049135 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.226201092 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.207210169 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.21590595 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.215660341 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.208682007 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.21517405 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.220572326 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.211889504 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.23989681 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.207085203 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.206759802 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.213958477 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.217937929 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.21949768 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.208657559 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.209086152 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.226020303 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.207641711 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.216782654 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.215333777 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.213693187 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.211092405 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.213565996 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.21656882 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.201920123 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.217835314 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.220377202 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.2157619 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.208103849 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.214149634 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.209457444 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.389379979 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.224672167 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.214394689 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.212955114 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.220435327 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.21315094 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.213950564 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.215956684 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.226591384 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.215953 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.224686696 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.203280625 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.191744537 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.227015214 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.216714043 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.213384075 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.18898556 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.206839826 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.225930069 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.21606852 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.224440687 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.213037663 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.211600449 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.242600462 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.227263672 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.218349289 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.21752261 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.212834537 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.222181085 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.215946799 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.22146395 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.212879328 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.211975155 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.212666194 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.216055919 seconds)
done (took 96.950729474 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.332676353 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.210852229 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.34899956 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.215125584 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.371012594 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.354470342 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.214153414 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.215561897 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.214719698 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.022018926 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.214322777 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.215207965 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.210397919 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.215999362 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.336667317 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.215366946 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.215092797 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.921828865 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.217335856 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.351277701 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.209643557 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.21579098 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.215922659 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.203710349 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.212018867 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.207637167 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.352739353 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.217025938 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.204070152 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.207453257 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.210605616 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.205127313 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.353955502 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.236189601 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.225025825 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.224436801 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.372989681 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.232526332 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.334527556 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.333601955 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.349230589 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.254452992 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.20511651 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.211355735 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.217624063 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.217923267 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.215831018 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.245333516 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.211528539 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.216691308 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.926037626 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.226750545 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.225852972 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.218505939 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.215965222 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.23603933 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.218344498 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.218260361 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.355880666 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.219907165 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.336251462 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.206417259 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.024422223 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.217258972 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.211947928 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.21847726 seconds)
  done (took 101.333155055 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.279483889 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.293877698 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.324025818 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.213184334 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.265183037 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.32684068 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.214049291 seconds)
  done (took 10.040372787 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.220122509 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.218179158 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.261468129 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.262370139 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.217779318 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.370370006 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.218644936 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.224902216 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.218545978 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.265709328 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.22017121 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.21889986 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.227710232 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.214377937 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.261325856 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.225944286 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.328732874 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.214788906 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.2193765 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.365254917 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.22002099 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.22858194 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.266290534 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.226457395 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.219672626 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.221141023 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.982303518 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.218374052 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.220333948 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.219378104 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.22028836 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.268264517 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.221072379 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.216287726 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.221213236 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.331190454 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.220717452 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.221095734 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.220517215 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.217232498 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.221046536 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.219990211 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.220500485 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.220551875 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.221258731 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.239317064 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.220412923 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.220400479 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.221509215 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.221517617 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.267513524 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.222380744 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.222666623 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.221824589 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.272197342 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.231640522 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.222430034 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.223278526 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.221984511 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.221762673 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.367848729 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.264672607 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.222100772 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.26463514 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.224020824 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.22166757 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.223357595 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.222840649 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.309184387 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.22294862 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.265990417 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.22296305 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.397223167 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.241443315 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.224133127 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.221231424 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.220658601 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.222592751 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.215532108 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.223965392 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.222927573 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.221476334 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.224743052 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.22449116 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.222487815 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.375807342 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.326976121 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.223958032 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.231797057 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.226250325 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.224614174 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.273172603 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.225079341 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.222658479 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.270129094 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.3338688 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.273616123 seconds)
  done (took 126.362013762 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.231595383 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.232089658 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.22353596 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.247761488 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.221323137 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.220949311 seconds)
  done (took 8.507952367 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.221095055 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.227741628 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.224278052 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.223886122 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.223842613 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.224903221 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.225278486 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.221310972 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.226900685 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.225671391 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.226805339 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.227362512 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.226368219 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.225476711 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.226057814 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.226395885 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.226550892 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.225709343 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.226198575 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.225487881 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.222375283 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.225943346 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.226184707 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.223671093 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.229322937 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.227089325 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.242629177 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.227407825 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.226295352 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.228160659 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.244784249 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.228231629 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.2239715 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.225875619 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.229604615 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.224059183 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.230924225 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.228566698 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.227667972 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.228436079 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.230123809 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.227861788 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.228084366 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.229311505 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.224809525 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.227743808 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.232993869 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.244380075 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.228749591 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.229995136 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.230204259 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.229622054 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.228009218 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.229902929 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.226465278 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.244489752 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.231476269 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.228363138 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.228786603 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.224282852 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.23116344 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.228363173 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.22522294 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.230491332 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.229311208 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.230356915 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.226387326 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.232043576 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.229713928 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.229559941 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.230457874 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.231288024 seconds)
  done (took 90.572695618 seconds)
done (took 337.935951177 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.009567928 seconds)
  done (took 4.144700778 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.222427417 seconds)
  done (took 3.359291534 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.55336637 seconds)
  done (took 21.69101801 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.242539161 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.328557091 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.224500961 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.228350605 seconds)
  done (took 10.158460277 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.487664952 seconds)
  done (took 3.623022767 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.230767138 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.226377705 seconds)
  done (took 5.595907121 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.366641622 seconds)
  done (took 3.505140047 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.369512047 seconds)
  done (took 3.507685944 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.242010316 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.24106842 seconds)
  done (took 5.626697056 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.213129263 seconds)
  done (took 3.350182054 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 30.625590453 seconds)
  done (took 31.764548356 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.23658066 seconds)
  done (took 3.377001199 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.253834569 seconds)
  done (took 3.391829966 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.649854042 seconds)
  done (took 5.787702729 seconds)
done (took 110.018425858 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.222343633 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.227454492 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.225188543 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.223761366 seconds)
  done (took 10.037148727 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.288370957 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.286403284 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.287249696 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.285455136 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.286008853 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.285473588 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.257721312 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.258561078 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.286453201 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.284689978 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.291803064 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.283851169 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.285469701 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.260445033 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.28611401 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.286176681 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.286645011 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.285148826 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.272536974 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.286684847 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.233898776 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.285671114 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.287060228 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.235444526 seconds)
  done (took 31.813433919 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.746983791 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.300283532 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.384029164 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.281275024 seconds)
  done (took 6.852296292 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.312498047 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.311464582 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.323599818 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.366286127 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.377416932 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.325200993 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.258536909 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.257078344 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.242613913 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.313783797 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.363818324 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.304477058 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.388806894 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.235487309 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.441636706 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.236210679 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.236475877 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.312680756 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.364767021 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.364518238 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.236496669 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.312780804 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.312182798 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.305014275 seconds)
  done (took 32.644473583 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.247329781 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.252974893 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.237673653 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.252852456 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.237582869 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.238128914 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.239327511 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.244272917 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.236827878 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.237160356 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.237131917 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.25105216 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.24221245 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.23772975 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.244556059 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.239893571 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.240173057 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.244551071 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.247558171 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.238669122 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.242746373 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.245764605 seconds)
  done (took 28.479069664 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.227252922 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.226583005 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.577629477 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.48381 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.226652072 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.230998018 seconds)
  done (took 13.116200878 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.298822945 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.450273699 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.233213892 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.567955446 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.654626574 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.23699535 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.2337238 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.472508448 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.770864327 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.750067319 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.293129757 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.30072851 seconds)
  done (took 18.405617674 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.230350489 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.233726075 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.233264687 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.246780704 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.284451524 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.238454955 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.240418311 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.229564585 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.290519933 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.291177703 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.23836789 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.286554302 seconds)
  done (took 20.188439502 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.328941944 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.235004283 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23482275 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313302106 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251231085 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.078765017 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.307563318 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.938508224 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.257857007 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.510922088 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234452023 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.327646507 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.48863459 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236508115 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.240337276 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.211842613 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.467395571 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.691861836 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242053049 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235551203 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288713979 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.238590356 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.243461013 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.440019963 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.084559952 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.235941549 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.497646948 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.23681675 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500083917 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.254404166 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.246064651 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.236054345 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.512220484 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872885682 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356089601 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441221901 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245404525 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.26056938 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.242986931 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.242469394 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.248949661 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.242862109 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.248703728 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238092553 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.238314501 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.2396475 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934808869 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.26323637 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.239751838 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.239536075 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.477487479 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.341137622 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.243185343 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.239052766 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241813781 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239070071 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.243908262 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359730767 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829775496 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23892478 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251788902 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.243718639 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.25417411 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24069937 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856739025 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.248840592 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.244780591 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.244907763 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239851729 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.246521305 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.262474203 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239200955 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.264272211 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241061395 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924684892 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.249647023 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246176638 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.769232734 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251220042 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.24427404 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.471696927 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240045024 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23987305 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.240851037 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.241648128 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907599937 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.253417833 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.22691789 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.281878873 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.945662301 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.457762563 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.265247299 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27065757 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.46284483 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.227530108 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240903873 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.241008597 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247360298 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.261998803 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.931051194 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257678587 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.24842391 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.497755243 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.451136893 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252443878 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.224523422 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.702069801 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264689725 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.26312178 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.252344825 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.445861071 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.803351661 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.261418717 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242662064 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.263752455 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.243573402 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940421502 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251143405 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.253195748 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.247900691 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.502613907 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.00327961 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247751287 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.310567461 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249155727 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.245613739 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.244661056 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249156071 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.244081397 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.435825962 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276289479 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.257987579 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.244791579 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244332339 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.251438462 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249691957 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.250842914 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.466754705 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251243108 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.526137622 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244637441 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245471857 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244966456 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.467284439 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.255837696 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.252936108 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.506380048 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260313756 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.262241443 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.261378786 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.260408803 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.348807573 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.267642917 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.260022959 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.504518156 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.251752285 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.253520949 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.2460655 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.252837802 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254165867 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.254289186 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259167162 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805226815 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253113265 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.250710781 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.134009724 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.262261355 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.314376133 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.254998282 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.446982533 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.251420291 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271062989 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.255473674 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.256934782 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.475972217 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.257042988 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.261324956 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.333753139 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.705656646 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.825681929 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.272589436 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.253231565 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.252336083 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.24838813 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248853729 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248372098 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.249797605 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448162194 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.266738051 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.262051644 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.809329789 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255419375 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.263859892 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.261234427 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.260034965 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.256570495 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249988983 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.26054896 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257187713 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.255370538 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.266089604 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394587889 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.266029496 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.251501597 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.769146213 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.258340704 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.25100492 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.250938885 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283987896 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.264157583 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039342804 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.511356092 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.245502367 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.493197323 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.269806716 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.272835606 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.25090883 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250249186 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257666331 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.285516149 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274377086 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.261016131 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.264695266 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259293018 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.818504284 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952903312 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77408655 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.257586277 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.252547297 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.272923847 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.947708688 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270172125 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253017244 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.478700571 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.950306672 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269382995 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.711210869 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.283614847 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.987265669 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.498076566 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.488112639 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253841661 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.254406334 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.501806924 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.467879994 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287664173 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.253472898 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259062377 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.239704272 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790283687 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.271605664 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.340306271 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949473227 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278334305 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.258265129 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.293616914 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.258193442 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.640817892 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.27087788 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253623592 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.256788947 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.259769316 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047324912 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.256294891 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254423198 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845081674 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.266583075 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.714788535 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273059621 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.458227985 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.269378176 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.25920312 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.254806583 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.264684419 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.512411175 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.497778236 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262032417 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.266901383 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772835257 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.129582107 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.263155794 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255955538 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960496969 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262363805 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546447812 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.26303161 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.260332069 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265041118 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.256841235 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25660074 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.256272177 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.25924813 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255902154 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.727051832 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.271119596 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261985141 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.262797073 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261542162 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.509678126 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.272528582 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.817040884 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.490872392 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.256881912 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284165407 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.262203536 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263460055 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.249828127 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.257987847 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.257865887 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305146501 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.480214606 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.268440931 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.250877301 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.329717203 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.485268495 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.258327361 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.270558539 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493473032 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.264194512 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.279138405 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969927781 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296693189 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.263700729 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264792701 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.262879784 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.297904221 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.327277464 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.461784647 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.275696242 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.269216303 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.647767986 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285109362 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267132682 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.274570264 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355864125 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263395773 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.266922397 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.039860387 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821348466 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.963447479 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.828106395 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.510613452 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.26766864 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26772284 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261166767 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422551705 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.260056892 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.538738896 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260529231 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.273604424 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288278576 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268000576 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273784263 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.475572937 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.53674341 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.261935744 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261028993 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267791855 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.261853246 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.270678501 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.471346047 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735123828 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.804562533 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268058894 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.266906995 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.964677187 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.554756582 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261876231 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.261957451 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262095697 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.26170541 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.287583884 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.273970128 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263169776 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411017571 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.506101713 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910232337 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.288997598 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.291769625 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.779631185 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264054549 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.520783988 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.274724169 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.466499475 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.832099605 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.94319307 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.531692453 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.333588936 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.465576515 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.268559425 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425554439 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.26386059 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.266862469 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.265320326 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264308284 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.263139392 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.273332478 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.830253174 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.533232647 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.268750324 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.275676191 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298455093 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.273367867 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.484649933 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938630442 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.491661799 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.274197662 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.268623034 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.263870314 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.830762352 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.515862064 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271880018 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.270858164 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494377065 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.272046103 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.290019303 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.955072485 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.266564925 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.795546325 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.272824052 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287322748 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274474729 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.94518883 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.837728232 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.28241785 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.732540885 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.272528157 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269404014 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546720659 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.273672759 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.277224782 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.548320135 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.271319949 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.277863219 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.475578688 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.834850721 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.016614816 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.292262145 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290263082 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.274711515 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268890981 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274856819 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269070364 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.270363563 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.672380022 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.287712035 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268477668 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.280758423 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.270051064 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2845655 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.273845104 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268075656 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.275740065 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.258636799 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.263055272 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.284277519 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39343338 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811142105 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295233599 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.946009642 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.593121075 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.523223131 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.280356707 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.260929816 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.275949397 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270104684 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268746111 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270278587 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.267844528 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.81063941 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.289165112 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.283775229 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.274548013 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.27088873 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.479610531 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.270478888 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.496861507 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28919137 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.29078765 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.25653587 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270084386 seconds)
  done (took 916.598785106 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.2956376 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.270005983 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.278167244 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.32934538 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.270845866 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.366224374 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.333105973 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.272001778 seconds)
  done (took 19.591383745 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.271954547 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.279036322 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.272842808 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.277440667 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.271849108 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.721260965 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.289873478 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.278592042 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.284495507 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.273267753 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.278201829 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.920440982 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.296624818 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.267644213 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.273187017 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.280860121 seconds)
  done (took 30.714671115 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.140983431 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.369070747 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.046660754 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.283130251 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.28196014 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.271885576 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.467167274 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.282123519 seconds)
  done (took 25.320509116 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.277328917 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.277100557 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.27811209 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.277903613 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.276095458 seconds)
  done (took 7.564113799 seconds)
done (took 1162.46383936 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.277214817 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.277227658 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.277479882 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.278812594 seconds)
  done (took 6.288796306 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.260212927 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.259614855 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.259282992 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.27100165 seconds)
  done (took 9.228481649 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.929025993 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.877092358 seconds)
  done (took 4.984150492 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.7402436 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.748077368 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.745786448 seconds)
  done (took 6.411693186 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.55813045 seconds)
  done (took 2.736234335 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.149157816 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.251533363 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.918690674 seconds)
  done (took 7.49929102 seconds)
done (took 38.326498188 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.270159647 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.516814794 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.424808159 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.268926996 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.430469231 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.424838074 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.005836147 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.281912702 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.270001766 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.278218192 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.26968875 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.431192692 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.990885545 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.517004369 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.990452664 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.51457115 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.430460911 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.282408261 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.268162553 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.284623448 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.020819464 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.277795062 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.268577844 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.269390534 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.435233155 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.413998494 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.281547871 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.515986599 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.272519566 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.273725143 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.437572655 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.271245469 seconds)
  done (took 79.070973778 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.270852501 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.269087197 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.277411277 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.270361699 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.270651956 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.28151717 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.270373396 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.269469161 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.270727559 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.290544425 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.270795105 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.269958808 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.271170753 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.278530677 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.270834402 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.271156067 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.287966035 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.272137441 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.27143651 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.287614953 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.274445689 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.281269071 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.270202663 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.280600707 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.274227061 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.301467621 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.27101232 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.27256662 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.272385076 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.272464301 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.290063487 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.272300826 seconds)
  done (took 74.008866384 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.272584415 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.272579732 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.274774604 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.278949859 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.273740298 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.287567667 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.274098614 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.271577805 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.274762659 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.273090406 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.27625486 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.272292422 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.293148232 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.27249539 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.293440586 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.273726274 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.286858309 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.273404139 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.272829906 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.285094854 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.274754007 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.272441872 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.273884081 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.272745893 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.288781888 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.274999812 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.273426093 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.289994417 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.293309504 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.274237595 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.280062512 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.272822429 seconds)
  done (took 74.079329692 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.558211058 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.285110632 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.288100413 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.279446574 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.288544621 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.284500624 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.280446402 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.560846024 seconds)
  done (took 14.009072589 seconds)
done (took 242.347645614 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.290921855 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.769772823 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.321549383 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.280313144 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.303839681 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.305694396 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.500951086 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.321831702 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.500140724 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.305734375 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.300503008 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.281393248 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.051085727 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.436558764 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.083773112 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.196311319 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.133287104 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.280934252 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.826291746 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.560852048 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.309434525 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.277499265 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.077943366 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.159609801 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.284884206 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.359473529 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.377819942 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.504475711 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.436862982 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.358896959 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.782847945 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.281262942 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.29028087 seconds)
  done (took 60.737552247 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.282709308 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.384982593 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.287061455 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.28768014 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.388781851 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.28765934 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.28238443 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.287243702 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.287394628 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.288164041 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.289515517 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.28970325 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.28935826 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.316602207 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.392086329 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.281052537 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.282382096 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.384466983 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.282663735 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.281702633 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.315773273 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.288543089 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.290946447 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.316488985 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.28889222 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.289517374 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.384838891 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.28990457 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.291552554 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.383811455 seconds)
  done (took 40.48232997 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.290050452 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.874118477 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.00104663 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.295336229 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.286099952 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.28935761 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.557366674 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.297812807 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.289688834 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.289428073 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.759116006 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.29799179 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.320170155 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.019448972 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.289018319 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.290857671 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.292331979 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.286928502 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.883193919 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.298759648 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.578764324 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.296784635 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.559432907 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.301381331 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.30753808 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.287890835 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.291998916 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.090709109 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.306939541 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.757614442 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.023706187 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.559898873 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.032921933 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.027346289 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.026022532 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.298623215 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.293291561 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.76193769 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.291230227 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.287434646 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.560288177 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.292608974 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.006837482 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.982248327 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.305902595 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.291647261 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.111711586 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.776868559 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.52024269 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.298983274 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.039361895 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.290940339 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.295569838 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.290416578 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.517997026 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.296923701 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.290102377 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.108542587 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.311300242 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.562135184 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.297918351 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.290487182 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.884645297 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.290474385 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.877702963 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.292097388 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.297319845 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.308936536 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.011705142 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.293643533 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.99384678 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.308217824 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.294493297 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.758551175 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.879816103 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.173310574 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.292720453 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.881483974 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.051467892 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.577319563 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.298794894 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.069968032 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.581281913 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.298282966 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.296972915 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.296839657 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.296146881 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.36927246 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.558402577 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.934633668 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.986822134 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.1323893 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.585372389 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.303368689 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.292849244 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.113195553 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.313754387 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.295523369 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.012802812 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.987566987 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.313656558 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.298293158 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.988556217 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.31307878 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.569044106 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.302091751 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.031196671 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.295847255 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.371145912 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.298065178 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.29876 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.314160842 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.567099594 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.301680786 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.296881534 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.972987792 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.790160171 seconds)
  done (took 182.33778145 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.28827993 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.30150989 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.297480478 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.28700354 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.286277833 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.29374142 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.287604019 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.287829572 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.292251729 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.288064569 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.288474576 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.296146756 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.293579144 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.288766654 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.287620365 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.287599249 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.288868985 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.29346341 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.289215525 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.28852553 seconds)
  done (took 43.008734974 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.299724857 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.832828158 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.801885519 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.305328801 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.299214239 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.294648697 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.347254979 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.302787571 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.299185251 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.582753147 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.463206871 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.305256819 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.299290164 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.298985172 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.800001856 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.294789547 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.583480297 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.840036233 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.304409853 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.835623464 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.294934257 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.301149495 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.292770321 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.835712808 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.591991063 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.566743087 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.355489668 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.83726796 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.30612738 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.299479815 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.835359686 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.306983068 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.295202506 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.83450465 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.322872102 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.31449006 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.301516986 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.350964894 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.352134659 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.585910426 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.845307996 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.57964254 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.316311944 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.468996065 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.302358054 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.289771509 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.845899799 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.323654745 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.291409159 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.303000358 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.30711788 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.810721794 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.319509587 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.810499626 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.32347389 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.30222967 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.839629975 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.815809734 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.826370163 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.464638477 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.301887331 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.570440051 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.308057101 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.847359652 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.32520415 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.303000087 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.302900082 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.461726203 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.862337778 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.575460158 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.593771107 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.594103379 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.308552608 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.359920844 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.320003978 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.589173091 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.363455387 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.688116661 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.594411726 seconds)
  done (took 118.428798836 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.565953121 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.414037891 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.696684578 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.892823925 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.303769148 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.450111281 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.409310253 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.548320521 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.306192162 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.376409453 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.927229564 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.420473377 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.028108128 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.384442412 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.400105748 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.439862488 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.679863894 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.270062048 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.97988576 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.909530934 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.304338049 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.403863208 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.820440472 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.512519888 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.299455136 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.88223307 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.249627059 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.951488314 seconds)
  done (took 51.028790651 seconds)
done (took 497.208462901 seconds)
SAVING RESULT...
DONE!
